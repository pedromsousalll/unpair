{"dependencies":[{"name":"./CalendarDate.main.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":32,"index":32},"end":{"line":1,"column":65,"index":65}}],"key":"kRTVnbPz4lHgmKo+PMraS9Nf3nU=","exportNames":["*"],"imports":1}},{"name":"./GregorianCalendar.main.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":32,"index":99},"end":{"line":2,"column":70,"index":137}}],"key":"D40zsRMl5pqq6NJWs/0elaUJLwE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var $625ad1e1f4c43bc1$exports = require(_dependencyMap[0], \"./CalendarDate.main.js\");\n  var $af14c9812fdceb33$exports = require(_dependencyMap[1], \"./GregorianCalendar.main.js\");\n  function $parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n      get: v,\n      set: s,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  $parcel$export(module.exports, \"IndianCalendar\", () => $5f1dfa5c67609fe6$export$39f31c639fa15726);\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */ // Portions of the code in this file are based on code from ICU.\n  // Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\n  // Starts in 78 AD,\n  const $5f1dfa5c67609fe6$var$INDIAN_ERA_START = 78;\n  // The Indian year starts 80 days later than the Gregorian year.\n  const $5f1dfa5c67609fe6$var$INDIAN_YEAR_START = 80;\n  class $5f1dfa5c67609fe6$export$39f31c639fa15726 extends (0, $af14c9812fdceb33$exports.GregorianCalendar) {\n    fromJulianDay(jd) {\n      // Gregorian date for Julian day\n      let date = super.fromJulianDay(jd);\n      // Year in Saka era\n      let indianYear = date.year - $5f1dfa5c67609fe6$var$INDIAN_ERA_START;\n      // Day number in Gregorian year (starting from 0)\n      let yDay = jd - (0, $af14c9812fdceb33$exports.gregorianToJulianDay)(date.era, date.year, 1, 1);\n      let leapMonth;\n      if (yDay < $5f1dfa5c67609fe6$var$INDIAN_YEAR_START) {\n        //  Day is at the end of the preceding Saka year\n        indianYear--;\n        // Days in leapMonth this year, previous Gregorian year\n        leapMonth = (0, $af14c9812fdceb33$exports.isLeapYear)(date.year - 1) ? 31 : 30;\n        yDay += leapMonth + 155 + 90 + 10;\n      } else {\n        // Days in leapMonth this year\n        leapMonth = (0, $af14c9812fdceb33$exports.isLeapYear)(date.year) ? 31 : 30;\n        yDay -= $5f1dfa5c67609fe6$var$INDIAN_YEAR_START;\n      }\n      let indianMonth;\n      let indianDay;\n      if (yDay < leapMonth) {\n        indianMonth = 1;\n        indianDay = yDay + 1;\n      } else {\n        let mDay = yDay - leapMonth;\n        if (mDay < 155) {\n          indianMonth = Math.floor(mDay / 31) + 2;\n          indianDay = mDay % 31 + 1;\n        } else {\n          mDay -= 155;\n          indianMonth = Math.floor(mDay / 30) + 7;\n          indianDay = mDay % 30 + 1;\n        }\n      }\n      return new (0, $625ad1e1f4c43bc1$exports.CalendarDate)(this, indianYear, indianMonth, indianDay);\n    }\n    toJulianDay(date) {\n      let extendedYear = date.year + $5f1dfa5c67609fe6$var$INDIAN_ERA_START;\n      let [era, year] = (0, $af14c9812fdceb33$exports.fromExtendedYear)(extendedYear);\n      let leapMonth;\n      let jd;\n      if ((0, $af14c9812fdceb33$exports.isLeapYear)(year)) {\n        leapMonth = 31;\n        jd = (0, $af14c9812fdceb33$exports.gregorianToJulianDay)(era, year, 3, 21);\n      } else {\n        leapMonth = 30;\n        jd = (0, $af14c9812fdceb33$exports.gregorianToJulianDay)(era, year, 3, 22);\n      }\n      if (date.month === 1) return jd + date.day - 1;\n      jd += leapMonth + Math.min(date.month - 2, 5) * 31;\n      if (date.month >= 8) jd += (date.month - 7) * 30;\n      jd += date.day - 1;\n      return jd;\n    }\n    getDaysInMonth(date) {\n      if (date.month === 1 && (0, $af14c9812fdceb33$exports.isLeapYear)(date.year + $5f1dfa5c67609fe6$var$INDIAN_ERA_START)) return 31;\n      if (date.month >= 2 && date.month <= 6) return 31;\n      return 30;\n    }\n    getYearsInEra() {\n      // 9999-12-31 gregorian is 9920-10-10 indian.\n      // Round down to 9919 for the last full year.\n      return 9919;\n    }\n    getEras() {\n      return ['saka'];\n    }\n    balanceDate() {}\n    constructor(...args) {\n      super(...args), this.identifier = 'indian';\n    }\n  }\n});","lineCount":104,"map":[[2,2,1,0],[2,6,1,4,"$625ad1e1f4c43bc1$exports"],[2,31,1,29],[2,34,1,32,"require"],[2,41,1,39],[2,42,1,39,"_dependencyMap"],[2,56,1,39],[2,85,1,64],[2,86,1,65],[3,2,2,0],[3,6,2,4,"$af14c9812fdceb33$exports"],[3,31,2,29],[3,34,2,32,"require"],[3,41,2,39],[3,42,2,39,"_dependencyMap"],[3,56,2,39],[3,90,2,69],[3,91,2,70],[4,2,5,0],[4,11,5,9,"$parcel$export"],[4,25,5,23,"$parcel$export"],[4,26,5,24,"e"],[4,27,5,25],[4,29,5,27,"n"],[4,30,5,28],[4,32,5,30,"v"],[4,33,5,31],[4,35,5,33,"s"],[4,36,5,34],[4,38,5,36],[5,4,6,2,"Object"],[5,10,6,8],[5,11,6,9,"defineProperty"],[5,25,6,23],[5,26,6,24,"e"],[5,27,6,25],[5,29,6,27,"n"],[5,30,6,28],[5,32,6,30],[6,6,6,31,"get"],[6,9,6,34],[6,11,6,36,"v"],[6,12,6,37],[7,6,6,39,"set"],[7,9,6,42],[7,11,6,44,"s"],[7,12,6,45],[8,6,6,47,"enumerable"],[8,16,6,57],[8,18,6,59],[8,22,6,63],[9,6,6,65,"configurable"],[9,18,6,77],[9,20,6,79],[10,4,6,83],[10,5,6,84],[10,6,6,85],[11,2,7,0],[12,2,9,0,"$parcel$export"],[12,16,9,14],[12,17,9,15,"module"],[12,23,9,21],[12,24,9,22,"exports"],[12,31,9,29],[12,33,9,31],[12,49,9,47],[12,51,9,49],[12,57,9,55,"$5f1dfa5c67609fe6$export$39f31c639fa15726"],[12,98,9,96],[12,99,9,97],[13,2,10,0],[14,0,11,0],[15,0,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[23,5,10,0],[23,6,20,4],[24,2,21,0],[26,2,24,0],[27,2,25,0],[27,8,25,6,"$5f1dfa5c67609fe6$var$INDIAN_ERA_START"],[27,46,25,44],[27,49,25,47],[27,51,25,49],[28,2,26,0],[29,2,27,0],[29,8,27,6,"$5f1dfa5c67609fe6$var$INDIAN_YEAR_START"],[29,47,27,45],[29,50,27,48],[29,52,27,50],[30,2,28,0],[30,8,28,6,"$5f1dfa5c67609fe6$export$39f31c639fa15726"],[30,49,28,47],[30,59,28,57],[30,60,28,58],[30,62,28,60,"$af14c9812fdceb33$exports"],[30,87,28,85],[30,88,28,86,"GregorianCalendar"],[30,105,28,103],[30,107,28,105],[31,4,29,4,"fromJulianDay"],[31,17,29,17,"fromJulianDay"],[31,18,29,18,"jd"],[31,20,29,20],[31,22,29,22],[32,6,30,8],[33,6,31,8],[33,10,31,12,"date"],[33,14,31,16],[33,17,31,19],[33,22,31,24],[33,23,31,25,"fromJulianDay"],[33,36,31,38],[33,37,31,39,"jd"],[33,39,31,41],[33,40,31,42],[34,6,32,8],[35,6,33,8],[35,10,33,12,"indianYear"],[35,20,33,22],[35,23,33,25,"date"],[35,27,33,29],[35,28,33,30,"year"],[35,32,33,34],[35,35,33,37,"$5f1dfa5c67609fe6$var$INDIAN_ERA_START"],[35,73,33,75],[36,6,34,8],[37,6,35,8],[37,10,35,12,"yDay"],[37,14,35,16],[37,17,35,19,"jd"],[37,19,35,21],[37,22,35,24],[37,23,35,25],[37,24,35,26],[37,26,35,28,"$af14c9812fdceb33$exports"],[37,51,35,53],[37,52,35,54,"gregorianToJulianDay"],[37,72,35,74],[37,74,35,76,"date"],[37,78,35,80],[37,79,35,81,"era"],[37,82,35,84],[37,84,35,86,"date"],[37,88,35,90],[37,89,35,91,"year"],[37,93,35,95],[37,95,35,97],[37,96,35,98],[37,98,35,100],[37,99,35,101],[37,100,35,102],[38,6,36,8],[38,10,36,12,"leapMonth"],[38,19,36,21],[39,6,37,8],[39,10,37,12,"yDay"],[39,14,37,16],[39,17,37,19,"$5f1dfa5c67609fe6$var$INDIAN_YEAR_START"],[39,56,37,58],[39,58,37,60],[40,8,38,12],[41,8,39,12,"indianYear"],[41,18,39,22],[41,20,39,24],[42,8,40,12],[43,8,41,12,"leapMonth"],[43,17,41,21],[43,20,41,24],[43,21,41,25],[43,22,41,26],[43,24,41,28,"$af14c9812fdceb33$exports"],[43,49,41,53],[43,50,41,54,"isLeapYear"],[43,60,41,64],[43,62,41,66,"date"],[43,66,41,70],[43,67,41,71,"year"],[43,71,41,75],[43,74,41,78],[43,75,41,79],[43,76,41,80],[43,79,41,83],[43,81,41,85],[43,84,41,88],[43,86,41,90],[44,8,42,12,"yDay"],[44,12,42,16],[44,16,42,20,"leapMonth"],[44,25,42,29],[44,28,42,32],[44,31,42,35],[44,34,42,38],[44,36,42,40],[44,39,42,43],[44,41,42,45],[45,6,43,8],[45,7,43,9],[45,13,43,15],[46,8,44,12],[47,8,45,12,"leapMonth"],[47,17,45,21],[47,20,45,24],[47,21,45,25],[47,22,45,26],[47,24,45,28,"$af14c9812fdceb33$exports"],[47,49,45,53],[47,50,45,54,"isLeapYear"],[47,60,45,64],[47,62,45,66,"date"],[47,66,45,70],[47,67,45,71,"year"],[47,71,45,75],[47,72,45,76],[47,75,45,79],[47,77,45,81],[47,80,45,84],[47,82,45,86],[48,8,46,12,"yDay"],[48,12,46,16],[48,16,46,20,"$5f1dfa5c67609fe6$var$INDIAN_YEAR_START"],[48,55,46,59],[49,6,47,8],[50,6,48,8],[50,10,48,12,"indianMonth"],[50,21,48,23],[51,6,49,8],[51,10,49,12,"indianDay"],[51,19,49,21],[52,6,50,8],[52,10,50,12,"yDay"],[52,14,50,16],[52,17,50,19,"leapMonth"],[52,26,50,28],[52,28,50,30],[53,8,51,12,"indianMonth"],[53,19,51,23],[53,22,51,26],[53,23,51,27],[54,8,52,12,"indianDay"],[54,17,52,21],[54,20,52,24,"yDay"],[54,24,52,28],[54,27,52,31],[54,28,52,32],[55,6,53,8],[55,7,53,9],[55,13,53,15],[56,8,54,12],[56,12,54,16,"mDay"],[56,16,54,20],[56,19,54,23,"yDay"],[56,23,54,27],[56,26,54,30,"leapMonth"],[56,35,54,39],[57,8,55,12],[57,12,55,16,"mDay"],[57,16,55,20],[57,19,55,23],[57,22,55,26],[57,24,55,28],[58,10,56,16,"indianMonth"],[58,21,56,27],[58,24,56,30,"Math"],[58,28,56,34],[58,29,56,35,"floor"],[58,34,56,40],[58,35,56,41,"mDay"],[58,39,56,45],[58,42,56,48],[58,44,56,50],[58,45,56,51],[58,48,56,54],[58,49,56,55],[59,10,57,16,"indianDay"],[59,19,57,25],[59,22,57,28,"mDay"],[59,26,57,32],[59,29,57,35],[59,31,57,37],[59,34,57,40],[59,35,57,41],[60,8,58,12],[60,9,58,13],[60,15,58,19],[61,10,59,16,"mDay"],[61,14,59,20],[61,18,59,24],[61,21,59,27],[62,10,60,16,"indianMonth"],[62,21,60,27],[62,24,60,30,"Math"],[62,28,60,34],[62,29,60,35,"floor"],[62,34,60,40],[62,35,60,41,"mDay"],[62,39,60,45],[62,42,60,48],[62,44,60,50],[62,45,60,51],[62,48,60,54],[62,49,60,55],[63,10,61,16,"indianDay"],[63,19,61,25],[63,22,61,28,"mDay"],[63,26,61,32],[63,29,61,35],[63,31,61,37],[63,34,61,40],[63,35,61,41],[64,8,62,12],[65,6,63,8],[66,6,64,8],[66,13,64,15],[66,18,64,20],[66,19,64,21],[66,21,64,23,"$625ad1e1f4c43bc1$exports"],[66,46,64,48],[66,47,64,49,"CalendarDate"],[66,59,64,61],[66,61,64,63],[66,65,64,67],[66,67,64,69,"indianYear"],[66,77,64,79],[66,79,64,81,"indianMonth"],[66,90,64,92],[66,92,64,94,"indianDay"],[66,101,64,103],[66,102,64,104],[67,4,65,4],[68,4,66,4,"toJulianDay"],[68,15,66,15,"toJulianDay"],[68,16,66,16,"date"],[68,20,66,20],[68,22,66,22],[69,6,67,8],[69,10,67,12,"extendedYear"],[69,22,67,24],[69,25,67,27,"date"],[69,29,67,31],[69,30,67,32,"year"],[69,34,67,36],[69,37,67,39,"$5f1dfa5c67609fe6$var$INDIAN_ERA_START"],[69,75,67,77],[70,6,68,8],[70,10,68,12],[70,11,68,13,"era"],[70,14,68,16],[70,16,68,18,"year"],[70,20,68,22],[70,21,68,23],[70,24,68,26],[70,25,68,27],[70,26,68,28],[70,28,68,30,"$af14c9812fdceb33$exports"],[70,53,68,55],[70,54,68,56,"fromExtendedYear"],[70,70,68,72],[70,72,68,74,"extendedYear"],[70,84,68,86],[70,85,68,87],[71,6,69,8],[71,10,69,12,"leapMonth"],[71,19,69,21],[72,6,70,8],[72,10,70,12,"jd"],[72,12,70,14],[73,6,71,8],[73,10,71,12],[73,11,71,13],[73,12,71,14],[73,14,71,16,"$af14c9812fdceb33$exports"],[73,39,71,41],[73,40,71,42,"isLeapYear"],[73,50,71,52],[73,52,71,54,"year"],[73,56,71,58],[73,57,71,59],[73,59,71,61],[74,8,72,12,"leapMonth"],[74,17,72,21],[74,20,72,24],[74,22,72,26],[75,8,73,12,"jd"],[75,10,73,14],[75,13,73,17],[75,14,73,18],[75,15,73,19],[75,17,73,21,"$af14c9812fdceb33$exports"],[75,42,73,46],[75,43,73,47,"gregorianToJulianDay"],[75,63,73,67],[75,65,73,69,"era"],[75,68,73,72],[75,70,73,74,"year"],[75,74,73,78],[75,76,73,80],[75,77,73,81],[75,79,73,83],[75,81,73,85],[75,82,73,86],[76,6,74,8],[76,7,74,9],[76,13,74,15],[77,8,75,12,"leapMonth"],[77,17,75,21],[77,20,75,24],[77,22,75,26],[78,8,76,12,"jd"],[78,10,76,14],[78,13,76,17],[78,14,76,18],[78,15,76,19],[78,17,76,21,"$af14c9812fdceb33$exports"],[78,42,76,46],[78,43,76,47,"gregorianToJulianDay"],[78,63,76,67],[78,65,76,69,"era"],[78,68,76,72],[78,70,76,74,"year"],[78,74,76,78],[78,76,76,80],[78,77,76,81],[78,79,76,83],[78,81,76,85],[78,82,76,86],[79,6,77,8],[80,6,78,8],[80,10,78,12,"date"],[80,14,78,16],[80,15,78,17,"month"],[80,20,78,22],[80,25,78,27],[80,26,78,28],[80,28,78,30],[80,35,78,37,"jd"],[80,37,78,39],[80,40,78,42,"date"],[80,44,78,46],[80,45,78,47,"day"],[80,48,78,50],[80,51,78,53],[80,52,78,54],[81,6,79,8,"jd"],[81,8,79,10],[81,12,79,14,"leapMonth"],[81,21,79,23],[81,24,79,26,"Math"],[81,28,79,30],[81,29,79,31,"min"],[81,32,79,34],[81,33,79,35,"date"],[81,37,79,39],[81,38,79,40,"month"],[81,43,79,45],[81,46,79,48],[81,47,79,49],[81,49,79,51],[81,50,79,52],[81,51,79,53],[81,54,79,56],[81,56,79,58],[82,6,80,8],[82,10,80,12,"date"],[82,14,80,16],[82,15,80,17,"month"],[82,20,80,22],[82,24,80,26],[82,25,80,27],[82,27,80,29,"jd"],[82,29,80,31],[82,33,80,35],[82,34,80,36,"date"],[82,38,80,40],[82,39,80,41,"month"],[82,44,80,46],[82,47,80,49],[82,48,80,50],[82,52,80,54],[82,54,80,56],[83,6,81,8,"jd"],[83,8,81,10],[83,12,81,14,"date"],[83,16,81,18],[83,17,81,19,"day"],[83,20,81,22],[83,23,81,25],[83,24,81,26],[84,6,82,8],[84,13,82,15,"jd"],[84,15,82,17],[85,4,83,4],[86,4,84,4,"getDaysInMonth"],[86,18,84,18,"getDaysInMonth"],[86,19,84,19,"date"],[86,23,84,23],[86,25,84,25],[87,6,85,8],[87,10,85,12,"date"],[87,14,85,16],[87,15,85,17,"month"],[87,20,85,22],[87,25,85,27],[87,26,85,28],[87,30,85,32],[87,31,85,33],[87,32,85,34],[87,34,85,36,"$af14c9812fdceb33$exports"],[87,59,85,61],[87,60,85,62,"isLeapYear"],[87,70,85,72],[87,72,85,74,"date"],[87,76,85,78],[87,77,85,79,"year"],[87,81,85,83],[87,84,85,86,"$5f1dfa5c67609fe6$var$INDIAN_ERA_START"],[87,122,85,124],[87,123,85,125],[87,125,85,127],[87,132,85,134],[87,134,85,136],[88,6,86,8],[88,10,86,12,"date"],[88,14,86,16],[88,15,86,17,"month"],[88,20,86,22],[88,24,86,26],[88,25,86,27],[88,29,86,31,"date"],[88,33,86,35],[88,34,86,36,"month"],[88,39,86,41],[88,43,86,45],[88,44,86,46],[88,46,86,48],[88,53,86,55],[88,55,86,57],[89,6,87,8],[89,13,87,15],[89,15,87,17],[90,4,88,4],[91,4,89,4,"getYearsInEra"],[91,17,89,17,"getYearsInEra"],[91,18,89,17],[91,20,89,20],[92,6,90,8],[93,6,91,8],[94,6,92,8],[94,13,92,15],[94,17,92,19],[95,4,93,4],[96,4,94,4,"getEras"],[96,11,94,11,"getEras"],[96,12,94,11],[96,14,94,14],[97,6,95,8],[97,13,95,15],[97,14,96,12],[97,20,96,18],[97,21,97,9],[98,4,98,4],[99,4,99,4,"balanceDate"],[99,15,99,15,"balanceDate"],[99,16,99,15],[99,18,99,18],[99,19,99,19],[100,4,100,4,"constructor"],[100,15,100,15,"constructor"],[100,16,100,16],[100,19,100,19,"args"],[100,23,100,23],[100,25,100,24],[101,6,101,8],[101,11,101,13],[101,12,101,14],[101,15,101,17,"args"],[101,19,101,21],[101,20,101,22],[101,22,101,24],[101,26,101,28],[101,27,101,29,"identifier"],[101,37,101,39],[101,40,101,42],[101,48,101,50],[102,4,102,4],[103,2,103,0],[104,0,103,1],[104,3]],"functionMap":{"names":["<global>","$parcel$export","$parcel$export$argument_2","$5f1dfa5c67609fe6$export$39f31c639fa15726","$5f1dfa5c67609fe6$export$39f31c639fa15726#fromJulianDay","$5f1dfa5c67609fe6$export$39f31c639fa15726#toJulianDay","$5f1dfa5c67609fe6$export$39f31c639fa15726#getDaysInMonth","$5f1dfa5c67609fe6$export$39f31c639fa15726#getYearsInEra","$5f1dfa5c67609fe6$export$39f31c639fa15726#getEras","$5f1dfa5c67609fe6$export$39f31c639fa15726#balanceDate","$5f1dfa5c67609fe6$export$39f31c639fa15726#constructor"],"mappings":"AAA;ACI;CDE;iDEE,+CF;AGmB;ICC;KDoC;IEC;KFiB;IGC;KHI;IIC;KJI;IKC;KLI;IMC,gBN;IOC;KPE;CHC"},"hasCjsExports":false},"type":"js/module"}]}