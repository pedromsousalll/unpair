{"dependencies":[{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":53,"index":102}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./ProviderUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":144},"end":{"line":4,"column":73,"index":217}}],"key":"3McbOTBpufzGiY7DyBTqBkGjrFQ=","exportNames":["*"],"imports":1}},{"name":"../AuthRequest","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":218},"end":{"line":5,"column":45,"index":263}}],"key":"gMV5usom2+XLLnyk+wx/3jVUVOw=","exportNames":["*"],"imports":1}},{"name":"../AuthRequest.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":264},"end":{"line":6,"column":61,"index":325}}],"key":"oJAxeM97ELbPsokkvBL6RHT6FvM=","exportNames":["*"],"imports":1}},{"name":"../AuthRequestHooks","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":326},"end":{"line":7,"column":81,"index":407}}],"key":"OChfWKVO1k4smmk4GZz/98WaM/U=","exportNames":["*"],"imports":1}},{"name":"../AuthSession","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":408},"end":{"line":8,"column":49,"index":457}}],"key":"NEiIEpzTpy3gL+QP2mEyQz2DX/A=","exportNames":["*"],"imports":1}},{"name":"../PKCE","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":458},"end":{"line":9,"column":49,"index":507}}],"key":"chClTscode2727RE9rl0bncshz0=","exportNames":["*"],"imports":1}},{"name":"../TokenRequest","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":508},"end":{"line":10,"column":53,"index":561}}],"key":"LRHZhTF+zvS77EpZyNeADoCmWXg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"discovery\", {\n    enumerable: true,\n    get: function () {\n      return discovery;\n    }\n  });\n  exports.useIdTokenAuthRequest = useIdTokenAuthRequest;\n  exports.useAuthRequest = useAuthRequest;\n  var _expoApplication = require(_dependencyMap[0], \"expo-application\");\n  var Application = _interopNamespace(_expoApplication);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _ProviderUtils = require(_dependencyMap[3], \"./ProviderUtils\");\n  var _AuthRequest = require(_dependencyMap[4], \"../AuthRequest\");\n  var _AuthRequestTypes = require(_dependencyMap[5], \"../AuthRequest.types\");\n  var _AuthRequestHooks = require(_dependencyMap[6], \"../AuthRequestHooks\");\n  var _AuthSession = require(_dependencyMap[7], \"../AuthSession\");\n  var _PKCE = require(_dependencyMap[8], \"../PKCE\");\n  var _TokenRequest = require(_dependencyMap[9], \"../TokenRequest\");\n  const settings = {\n    windowFeatures: {\n      width: 515,\n      height: 680\n    },\n    minimumScopes: ['openid', 'https://www.googleapis.com/auth/userinfo.profile', 'https://www.googleapis.com/auth/userinfo.email']\n  };\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke',\n    userInfoEndpoint: 'https://openidconnect.googleapis.com/v1/userinfo'\n  };\n  // @needsAudit\n  /**\n   * Extends [`AuthRequest`](#authrequest) and accepts [`GoogleAuthRequestConfig`](#googleauthrequestconfig) in the constructor.\n   */\n  class GoogleAuthRequest extends _AuthRequest.AuthRequest {\n    constructor({\n      language,\n      loginHint,\n      selectAccount,\n      extraParams = {},\n      clientSecret,\n      ...config\n    }) {\n      const inputParams = {\n        ...extraParams\n      };\n      if (language) inputParams.hl = language;\n      if (loginHint) inputParams.login_hint = loginHint;\n      if (selectAccount) inputParams.prompt = _AuthRequestTypes.Prompt.SelectAccount;\n      // Apply the default scopes\n      const scopes = (0, _ProviderUtils.applyRequiredScopes)(config.scopes, settings.minimumScopes);\n      const isImplicit = config.responseType === _AuthRequestTypes.ResponseType.Token || config.responseType === _AuthRequestTypes.ResponseType.IdToken;\n      if (isImplicit) {\n        // PKCE must be disabled in implicit mode.\n        config.usePKCE = false;\n      }\n      let inputClientSecret;\n      //  Google will throw if you attempt to use the client secret\n      if (config.responseType && config.responseType !== _AuthRequestTypes.ResponseType.Code) {\n        // TODO: maybe warn that you shouldn't store the client secret on the client\n        inputClientSecret = clientSecret;\n      }\n      super({\n        ...config,\n        clientSecret: inputClientSecret,\n        scopes,\n        extraParams: inputParams\n      });\n    }\n    /**\n     * Load and return a valid auth request based on the input config.\n     */\n    async getAuthRequestConfigAsync() {\n      const {\n        extraParams = {},\n        ...config\n      } = await super.getAuthRequestConfigAsync();\n      if (config.responseType === _AuthRequestTypes.ResponseType.IdToken && !extraParams.nonce && !this.nonce) {\n        if (!this.nonce) {\n          this.nonce = await (0, _PKCE.generateHexStringAsync)(16);\n        }\n        extraParams.nonce = this.nonce;\n      }\n      return {\n        ...config,\n        extraParams\n      };\n    }\n  }\n  /**\n   * Load an authorization request with an ID Token for authentication with Firebase.\n   *\n   * Returns a loaded request, a response, and a prompt method.\n   * When the prompt method completes then the response will be fulfilled.\n   *\n   * The id token can be retrieved with `response.params.id_token`.\n   *\n   * - [Get Started](https://docs.expo.dev/guides/authentication/#google)\n   *\n   * @param config\n   * @param redirectUriOptions\n   */\n  function useIdTokenAuthRequest(config, redirectUriOptions = {}) {\n    const isWebAuth = Platform.default.OS === 'web';\n    return useAuthRequest({\n      ...config,\n      responseType:\n      // If the client secret is provided then code can be used\n      !config.clientSecret &&\n      // When web auth is used, we can request the `id_token` directly without exchanging a code.\n      isWebAuth ? _AuthRequestTypes.ResponseType.IdToken : undefined\n    }, {\n      ...redirectUriOptions\n    });\n  }\n  /**\n   * Load an authorization request.\n   * Returns a loaded request, a response, and a prompt method.\n   * When the prompt method completes, then the response will be fulfilled.\n   *\n   * - [Get Started](https://docs.expo.dev/guides/authentication/#google)\n   *\n   * @param config\n   * @param redirectUriOptions\n   */\n  function useAuthRequest(config = {}, redirectUriOptions = {}) {\n    const clientId = (0, _react.useMemo)(() => {\n      const propertyName = Platform.default.select({\n        ios: 'iosClientId',\n        android: 'androidClientId',\n        default: 'webClientId'\n      });\n      const clientId = config[propertyName] ?? config.clientId;\n      (0, _ProviderUtils.invariantClientId)(propertyName, clientId, 'Google');\n      return clientId;\n    }, [config.iosClientId, config.androidClientId, config.webClientId, config.clientId]);\n    const responseType = (0, _react.useMemo)(() => {\n      // Allow overrides.\n      if (typeof config.responseType !== 'undefined') {\n        return config.responseType;\n      }\n      // You can only use `response_token=code` on installed apps (iOS, Android without proxy).\n      // Installed apps can auto exchange without a client secret and get the token and id-token (Firebase).\n      const isInstalledApp = Platform.default.OS !== 'web';\n      // If the user provided the client secret (they shouldn't!) then use code exchange by default.\n      if (config.clientSecret || isInstalledApp) {\n        return _AuthRequestTypes.ResponseType.Code;\n      }\n      // This seems the most pragmatic option since it can result in a full authentication on web and proxy platforms as expected.\n      return _AuthRequestTypes.ResponseType.Token;\n    }, [config.responseType, config.clientSecret]);\n    const redirectUri = (0, _react.useMemo)(() => {\n      if (typeof config.redirectUri !== 'undefined') {\n        return config.redirectUri;\n      }\n      return (0, _AuthSession.makeRedirectUri)({\n        native: `${Application.applicationId}:/oauthredirect`,\n        ...redirectUriOptions\n        // native: `com.googleusercontent.apps.${guid}:/oauthredirect`,\n      });\n    }, [config.redirectUri, redirectUriOptions]);\n    const extraParams = (0, _react.useMemo)(() => {\n      const output = config.extraParams ? {\n        ...config.extraParams\n      } : {};\n      if (config.language) {\n        output.hl = output.language;\n      }\n      if (config.loginHint) {\n        output.login_hint = output.loginHint;\n      }\n      if (config.selectAccount) {\n        output.prompt = _AuthRequestTypes.Prompt.SelectAccount;\n      }\n      return output;\n    }, [config.extraParams, config.language, config.loginHint, config.selectAccount]);\n    const request = (0, _AuthRequestHooks.useLoadedAuthRequest)({\n      ...config,\n      responseType,\n      extraParams,\n      clientId,\n      redirectUri\n    }, discovery, GoogleAuthRequest);\n    const [result, promptAsync] = (0, _AuthRequestHooks.useAuthRequestResult)(request, discovery, {\n      windowFeatures: settings.windowFeatures\n    });\n    const [fullResult, setFullResult] = (0, _react.useState)(null);\n    const shouldAutoExchangeCode = (0, _react.useMemo)(() => {\n      // allow overrides\n      if (typeof config.shouldAutoExchangeCode !== 'undefined') {\n        return config.shouldAutoExchangeCode;\n      }\n      // has a code to exchange and doesn't have an authentication yet.\n      return result?.type === 'success' && result.params.code && !result.authentication;\n    }, [config.shouldAutoExchangeCode, result?.type]);\n    (0, _react.useEffect)(() => {\n      let isMounted = true;\n      if (shouldAutoExchangeCode && result?.type === 'success') {\n        const exchangeRequest = new _TokenRequest.AccessTokenRequest({\n          clientId,\n          clientSecret: config.clientSecret,\n          redirectUri,\n          scopes: config.scopes,\n          code: result.params.code,\n          extraParams: {\n            code_verifier: request?.codeVerifier || ''\n          }\n        });\n        exchangeRequest.performAsync(discovery).then(authentication => {\n          if (isMounted) {\n            setFullResult({\n              ...result,\n              params: {\n                id_token: authentication?.idToken || '',\n                access_token: authentication.accessToken,\n                ...result.params\n              },\n              authentication\n            });\n          }\n        });\n      } else {\n        setFullResult(result);\n      }\n      return () => {\n        isMounted = false;\n      };\n    }, [clientId, redirectUri, shouldAutoExchangeCode, config.clientSecret, config.scopes?.join(','), request?.codeVerifier, result]);\n    return [request, fullResult, promptAsync];\n  }\n});","lineCount":260,"map":[[27,2,19,0,"Object"],[27,8,19,0],[27,9,19,0,"defineProperty"],[27,23,19,0],[27,24,19,0,"exports"],[27,31,19,0],[28,4,19,0,"enumerable"],[28,14,19,0],[29,4,19,0,"get"],[29,7,19,0],[29,18,19,0,"get"],[29,19,19,0],[30,6,19,0],[30,13,19,0,"discovery"],[30,22,19,0],[31,4,19,0],[32,2,19,0],[33,2,91,0,"exports"],[33,9,91,0],[33,10,91,0,"useIdTokenAuthRequest"],[33,31,91,0],[33,34,91,0,"useIdTokenAuthRequest"],[33,55,91,0],[34,2,114,0,"exports"],[34,9,114,0],[34,10,114,0,"useAuthRequest"],[34,24,114,0],[34,27,114,0,"useAuthRequest"],[34,41,114,0],[35,2,1,0],[35,6,1,0,"_expoApplication"],[35,22,1,0],[35,25,1,0,"require"],[35,32,1,0],[35,33,1,0,"_dependencyMap"],[35,47,1,0],[36,2,1,0],[36,6,1,0,"Application"],[36,17,1,0],[36,20,1,0,"_interopNamespace"],[36,37,1,0],[36,38,1,0,"_expoApplication"],[36,54,1,0],[37,2,2,0],[37,6,2,0,"_react"],[37,12,2,0],[37,15,2,0,"require"],[37,22,2,0],[37,23,2,0,"_dependencyMap"],[37,37,2,0],[38,2,2,53],[38,6,2,53,"_reactNativeWebDistExportsPlatform"],[38,40,2,53],[38,43,2,53,"require"],[38,50,2,53],[38,51,2,53,"_dependencyMap"],[38,65,2,53],[39,2,2,53],[39,6,2,53,"Platform"],[39,14,2,53],[39,17,2,53,"_interopDefault"],[39,32,2,53],[39,33,2,53,"_reactNativeWebDistExportsPlatform"],[39,67,2,53],[40,2,4,0],[40,6,4,0,"_ProviderUtils"],[40,20,4,0],[40,23,4,0,"require"],[40,30,4,0],[40,31,4,0,"_dependencyMap"],[40,45,4,0],[41,2,5,0],[41,6,5,0,"_AuthRequest"],[41,18,5,0],[41,21,5,0,"require"],[41,28,5,0],[41,29,5,0,"_dependencyMap"],[41,43,5,0],[42,2,6,0],[42,6,6,0,"_AuthRequestTypes"],[42,23,6,0],[42,26,6,0,"require"],[42,33,6,0],[42,34,6,0,"_dependencyMap"],[42,48,6,0],[43,2,7,0],[43,6,7,0,"_AuthRequestHooks"],[43,23,7,0],[43,26,7,0,"require"],[43,33,7,0],[43,34,7,0,"_dependencyMap"],[43,48,7,0],[44,2,8,0],[44,6,8,0,"_AuthSession"],[44,18,8,0],[44,21,8,0,"require"],[44,28,8,0],[44,29,8,0,"_dependencyMap"],[44,43,8,0],[45,2,9,0],[45,6,9,0,"_PKCE"],[45,11,9,0],[45,14,9,0,"require"],[45,21,9,0],[45,22,9,0,"_dependencyMap"],[45,36,9,0],[46,2,10,0],[46,6,10,0,"_TokenRequest"],[46,19,10,0],[46,22,10,0,"require"],[46,29,10,0],[46,30,10,0,"_dependencyMap"],[46,44,10,0],[47,2,11,0],[47,8,11,6,"settings"],[47,16,11,14],[47,19,11,17],[48,4,12,4,"windowFeatures"],[48,18,12,18],[48,20,12,20],[49,6,12,22,"width"],[49,11,12,27],[49,13,12,29],[49,16,12,32],[50,6,12,34,"height"],[50,12,12,40],[50,14,12,42],[51,4,12,46],[51,5,12,47],[52,4,13,4,"minimumScopes"],[52,17,13,17],[52,19,13,19],[52,20,14,8],[52,28,14,16],[52,30,15,8],[52,80,15,58],[52,82,16,8],[52,130,16,56],[53,2,18,0],[53,3,18,1],[54,2,19,7],[54,8,19,13,"discovery"],[54,17,19,22],[54,20,19,25],[55,4,20,4,"authorizationEndpoint"],[55,25,20,25],[55,27,20,27],[55,73,20,73],[56,4,21,4,"tokenEndpoint"],[56,17,21,17],[56,19,21,19],[56,56,21,56],[57,4,22,4,"revocationEndpoint"],[57,22,22,22],[57,24,22,24],[57,62,22,62],[58,4,23,4,"userInfoEndpoint"],[58,20,23,20],[58,22,23,22],[59,2,24,0],[59,3,24,1],[60,2,25,0],[61,2,26,0],[62,0,27,0],[63,0,28,0],[64,2,29,0],[64,8,29,6,"GoogleAuthRequest"],[64,25,29,23],[64,34,29,32,"AuthRequest"],[64,46,29,43],[64,47,29,43,"AuthRequest"],[64,58,29,43],[64,59,29,44],[65,4,31,4,"constructor"],[65,15,31,15,"constructor"],[65,16,31,16],[66,6,31,18,"language"],[66,14,31,26],[67,6,31,28,"loginHint"],[67,15,31,37],[68,6,31,39,"selectAccount"],[68,19,31,52],[69,6,31,54,"extraParams"],[69,17,31,65],[69,20,31,68],[69,21,31,69],[69,22,31,70],[70,6,31,72,"clientSecret"],[70,18,31,84],[71,6,31,86],[71,9,31,89,"config"],[72,4,31,96],[72,5,31,97],[72,7,31,99],[73,6,32,8],[73,12,32,14,"inputParams"],[73,23,32,25],[73,26,32,28],[74,8,33,12],[74,11,33,15,"extraParams"],[75,6,34,8],[75,7,34,9],[76,6,35,8],[76,10,35,12,"language"],[76,18,35,20],[76,20,36,12,"inputParams"],[76,31,36,23],[76,32,36,24,"hl"],[76,34,36,26],[76,37,36,29,"language"],[76,45,36,37],[77,6,37,8],[77,10,37,12,"loginHint"],[77,19,37,21],[77,21,38,12,"inputParams"],[77,32,38,23],[77,33,38,24,"login_hint"],[77,43,38,34],[77,46,38,37,"loginHint"],[77,55,38,46],[78,6,39,8],[78,10,39,12,"selectAccount"],[78,23,39,25],[78,25,40,12,"inputParams"],[78,36,40,23],[78,37,40,24,"prompt"],[78,43,40,30],[78,46,40,33,"Prompt"],[78,63,40,39],[78,64,40,39,"Prompt"],[78,70,40,39],[78,71,40,40,"SelectAccount"],[78,84,40,53],[79,6,41,8],[80,6,42,8],[80,12,42,14,"scopes"],[80,18,42,20],[80,21,42,23],[80,25,42,23,"applyRequiredScopes"],[80,39,42,42],[80,40,42,42,"applyRequiredScopes"],[80,59,42,42],[80,61,42,43,"config"],[80,67,42,49],[80,68,42,50,"scopes"],[80,74,42,56],[80,76,42,58,"settings"],[80,84,42,66],[80,85,42,67,"minimumScopes"],[80,98,42,80],[80,99,42,81],[81,6,43,8],[81,12,43,14,"isImplicit"],[81,22,43,24],[81,25,43,27,"config"],[81,31,43,33],[81,32,43,34,"responseType"],[81,44,43,46],[81,49,43,51,"ResponseType"],[81,66,43,63],[81,67,43,63,"ResponseType"],[81,79,43,63],[81,80,43,64,"Token"],[81,85,43,69],[81,89,43,73,"config"],[81,95,43,79],[81,96,43,80,"responseType"],[81,108,43,92],[81,113,43,97,"ResponseType"],[81,130,43,109],[81,131,43,109,"ResponseType"],[81,143,43,109],[81,144,43,110,"IdToken"],[81,151,43,117],[82,6,44,8],[82,10,44,12,"isImplicit"],[82,20,44,22],[82,22,44,24],[83,8,45,12],[84,8,46,12,"config"],[84,14,46,18],[84,15,46,19,"usePKCE"],[84,22,46,26],[84,25,46,29],[84,30,46,34],[85,6,47,8],[86,6,48,8],[86,10,48,12,"inputClientSecret"],[86,27,48,29],[87,6,49,8],[88,6,50,8],[88,10,50,12,"config"],[88,16,50,18],[88,17,50,19,"responseType"],[88,29,50,31],[88,33,50,35,"config"],[88,39,50,41],[88,40,50,42,"responseType"],[88,52,50,54],[88,57,50,59,"ResponseType"],[88,74,50,71],[88,75,50,71,"ResponseType"],[88,87,50,71],[88,88,50,72,"Code"],[88,92,50,76],[88,94,50,78],[89,8,51,12],[90,8,52,12,"inputClientSecret"],[90,25,52,29],[90,28,52,32,"clientSecret"],[90,40,52,44],[91,6,53,8],[92,6,54,8],[92,11,54,13],[92,12,54,14],[93,8,55,12],[93,11,55,15,"config"],[93,17,55,21],[94,8,56,12,"clientSecret"],[94,20,56,24],[94,22,56,26,"inputClientSecret"],[94,39,56,43],[95,8,57,12,"scopes"],[95,14,57,18],[96,8,58,12,"extraParams"],[96,19,58,23],[96,21,58,25,"inputParams"],[97,6,59,8],[97,7,59,9],[97,8,59,10],[98,4,60,4],[99,4,61,4],[100,0,62,0],[101,0,63,0],[102,4,64,4],[102,10,64,10,"getAuthRequestConfigAsync"],[102,35,64,35,"getAuthRequestConfigAsync"],[102,36,64,35],[102,38,64,38],[103,6,65,8],[103,12,65,14],[104,8,65,16,"extraParams"],[104,19,65,27],[104,22,65,30],[104,23,65,31],[104,24,65,32],[105,8,65,34],[105,11,65,37,"config"],[106,6,65,44],[106,7,65,45],[106,10,65,48],[106,16,65,54],[106,21,65,59],[106,22,65,60,"getAuthRequestConfigAsync"],[106,47,65,85],[106,48,65,86],[106,49,65,87],[107,6,66,8],[107,10,66,12,"config"],[107,16,66,18],[107,17,66,19,"responseType"],[107,29,66,31],[107,34,66,36,"ResponseType"],[107,51,66,48],[107,52,66,48,"ResponseType"],[107,64,66,48],[107,65,66,49,"IdToken"],[107,72,66,56],[107,76,66,60],[107,77,66,61,"extraParams"],[107,88,66,72],[107,89,66,73,"nonce"],[107,94,66,78],[107,98,66,82],[107,99,66,83],[107,103,66,87],[107,104,66,88,"nonce"],[107,109,66,93],[107,111,66,95],[108,8,67,12],[108,12,67,16],[108,13,67,17],[108,17,67,21],[108,18,67,22,"nonce"],[108,23,67,27],[108,25,67,29],[109,10,68,16],[109,14,68,20],[109,15,68,21,"nonce"],[109,20,68,26],[109,23,68,29],[109,29,68,35],[109,33,68,35,"generateHexStringAsync"],[109,38,68,57],[109,39,68,57,"generateHexStringAsync"],[109,61,68,57],[109,63,68,58],[109,65,68,60],[109,66,68,61],[110,8,69,12],[111,8,70,12,"extraParams"],[111,19,70,23],[111,20,70,24,"nonce"],[111,25,70,29],[111,28,70,32],[111,32,70,36],[111,33,70,37,"nonce"],[111,38,70,42],[112,6,71,8],[113,6,72,8],[113,13,72,15],[114,8,73,12],[114,11,73,15,"config"],[114,17,73,21],[115,8,74,12,"extraParams"],[116,6,75,8],[116,7,75,9],[117,4,76,4],[118,2,77,0],[119,2,78,0],[120,0,79,0],[121,0,80,0],[122,0,81,0],[123,0,82,0],[124,0,83,0],[125,0,84,0],[126,0,85,0],[127,0,86,0],[128,0,87,0],[129,0,88,0],[130,0,89,0],[131,0,90,0],[132,2,91,7],[132,11,91,16,"useIdTokenAuthRequest"],[132,32,91,37,"useIdTokenAuthRequest"],[132,33,91,38,"config"],[132,39,91,44],[132,41,91,46,"redirectUriOptions"],[132,59,91,64],[132,62,91,67],[132,63,91,68],[132,64,91,69],[132,66,91,71],[133,4,92,4],[133,10,92,10,"isWebAuth"],[133,19,92,19],[133,22,92,22,"Platform"],[133,30,92,30],[133,31,92,30,"default"],[133,38,92,30],[133,39,92,31,"OS"],[133,41,92,33],[133,46,92,38],[133,51,92,43],[134,4,93,4],[134,11,93,11,"useAuthRequest"],[134,25,93,25],[134,26,93,26],[135,6,94,8],[135,9,94,11,"config"],[135,15,94,17],[136,6,95,8,"responseType"],[136,18,95,20],[137,6,96,8],[138,6,97,8],[138,7,97,9,"config"],[138,13,97,15],[138,14,97,16,"clientSecret"],[138,26,97,28],[139,6,98,12],[140,6,99,12,"isWebAuth"],[140,15,99,21],[140,18,100,14,"ResponseType"],[140,35,100,26],[140,36,100,26,"ResponseType"],[140,48,100,26],[140,49,100,27,"IdToken"],[140,56,100,34],[140,59,101,14,"undefined"],[141,4,102,4],[141,5,102,5],[141,7,102,7],[142,6,102,9],[142,9,102,12,"redirectUriOptions"],[143,4,102,31],[143,5,102,32],[143,6,102,33],[144,2,103,0],[145,2,104,0],[146,0,105,0],[147,0,106,0],[148,0,107,0],[149,0,108,0],[150,0,109,0],[151,0,110,0],[152,0,111,0],[153,0,112,0],[154,0,113,0],[155,2,114,7],[155,11,114,16,"useAuthRequest"],[155,25,114,30,"useAuthRequest"],[155,26,114,31,"config"],[155,32,114,37],[155,35,114,40],[155,36,114,41],[155,37,114,42],[155,39,114,44,"redirectUriOptions"],[155,57,114,62],[155,60,114,65],[155,61,114,66],[155,62,114,67],[155,64,114,69],[156,4,115,4],[156,10,115,10,"clientId"],[156,18,115,18],[156,21,115,21],[156,25,115,21,"useMemo"],[156,31,115,28],[156,32,115,28,"useMemo"],[156,39,115,28],[156,41,115,29],[156,47,115,35],[157,6,116,8],[157,12,116,14,"propertyName"],[157,24,116,26],[157,27,116,29,"Platform"],[157,35,116,37],[157,36,116,37,"default"],[157,43,116,37],[157,44,116,38,"select"],[157,50,116,44],[157,51,116,45],[158,8,117,12,"ios"],[158,11,117,15],[158,13,117,17],[158,26,117,30],[159,8,118,12,"android"],[159,15,118,19],[159,17,118,21],[159,34,118,38],[160,8,119,12,"default"],[160,15,119,19],[160,17,119,21],[161,6,120,8],[161,7,120,9],[161,8,120,10],[162,6,121,8],[162,12,121,14,"clientId"],[162,20,121,22],[162,23,121,25,"config"],[162,29,121,31],[162,30,121,32,"propertyName"],[162,42,121,44],[162,43,121,45],[162,47,121,49,"config"],[162,53,121,55],[162,54,121,56,"clientId"],[162,62,121,64],[163,6,122,8],[163,10,122,8,"invariantClientId"],[163,24,122,25],[163,25,122,25,"invariantClientId"],[163,42,122,25],[163,44,122,26,"propertyName"],[163,56,122,38],[163,58,122,40,"clientId"],[163,66,122,48],[163,68,122,50],[163,76,122,58],[163,77,122,59],[164,6,123,8],[164,13,123,15,"clientId"],[164,21,123,23],[165,4,124,4],[165,5,124,5],[165,7,124,7],[165,8,124,8,"config"],[165,14,124,14],[165,15,124,15,"iosClientId"],[165,26,124,26],[165,28,124,28,"config"],[165,34,124,34],[165,35,124,35,"androidClientId"],[165,50,124,50],[165,52,124,52,"config"],[165,58,124,58],[165,59,124,59,"webClientId"],[165,70,124,70],[165,72,124,72,"config"],[165,78,124,78],[165,79,124,79,"clientId"],[165,87,124,87],[165,88,124,88],[165,89,124,89],[166,4,125,4],[166,10,125,10,"responseType"],[166,22,125,22],[166,25,125,25],[166,29,125,25,"useMemo"],[166,35,125,32],[166,36,125,32,"useMemo"],[166,43,125,32],[166,45,125,33],[166,51,125,39],[167,6,126,8],[168,6,127,8],[168,10,127,12],[168,17,127,19,"config"],[168,23,127,25],[168,24,127,26,"responseType"],[168,36,127,38],[168,41,127,43],[168,52,127,54],[168,54,127,56],[169,8,128,12],[169,15,128,19,"config"],[169,21,128,25],[169,22,128,26,"responseType"],[169,34,128,38],[170,6,129,8],[171,6,130,8],[172,6,131,8],[173,6,132,8],[173,12,132,14,"isInstalledApp"],[173,26,132,28],[173,29,132,31,"Platform"],[173,37,132,39],[173,38,132,39,"default"],[173,45,132,39],[173,46,132,40,"OS"],[173,48,132,42],[173,53,132,47],[173,58,132,52],[174,6,133,8],[175,6,134,8],[175,10,134,12,"config"],[175,16,134,18],[175,17,134,19,"clientSecret"],[175,29,134,31],[175,33,134,35,"isInstalledApp"],[175,47,134,49],[175,49,134,51],[176,8,135,12],[176,15,135,19,"ResponseType"],[176,32,135,31],[176,33,135,31,"ResponseType"],[176,45,135,31],[176,46,135,32,"Code"],[176,50,135,36],[177,6,136,8],[178,6,137,8],[179,6,138,8],[179,13,138,15,"ResponseType"],[179,30,138,27],[179,31,138,27,"ResponseType"],[179,43,138,27],[179,44,138,28,"Token"],[179,49,138,33],[180,4,139,4],[180,5,139,5],[180,7,139,7],[180,8,139,8,"config"],[180,14,139,14],[180,15,139,15,"responseType"],[180,27,139,27],[180,29,139,29,"config"],[180,35,139,35],[180,36,139,36,"clientSecret"],[180,48,139,48],[180,49,139,49],[180,50,139,50],[181,4,140,4],[181,10,140,10,"redirectUri"],[181,21,140,21],[181,24,140,24],[181,28,140,24,"useMemo"],[181,34,140,31],[181,35,140,31,"useMemo"],[181,42,140,31],[181,44,140,32],[181,50,140,38],[182,6,141,8],[182,10,141,12],[182,17,141,19,"config"],[182,23,141,25],[182,24,141,26,"redirectUri"],[182,35,141,37],[182,40,141,42],[182,51,141,53],[182,53,141,55],[183,8,142,12],[183,15,142,19,"config"],[183,21,142,25],[183,22,142,26,"redirectUri"],[183,33,142,37],[184,6,143,8],[185,6,144,8],[185,13,144,15],[185,17,144,15,"makeRedirectUri"],[185,29,144,30],[185,30,144,30,"makeRedirectUri"],[185,45,144,30],[185,47,144,31],[186,8,145,12,"native"],[186,14,145,18],[186,16,145,20],[186,19,145,23,"Application"],[186,30,145,34],[186,31,145,35,"applicationId"],[186,44,145,48],[186,61,145,65],[187,8,146,12],[187,11,146,15,"redirectUriOptions"],[188,8,147,12],[189,6,148,8],[189,7,148,9],[189,8,148,10],[190,4,149,4],[190,5,149,5],[190,7,149,7],[190,8,149,8,"config"],[190,14,149,14],[190,15,149,15,"redirectUri"],[190,26,149,26],[190,28,149,28,"redirectUriOptions"],[190,46,149,46],[190,47,149,47],[190,48,149,48],[191,4,150,4],[191,10,150,10,"extraParams"],[191,21,150,21],[191,24,150,24],[191,28,150,24,"useMemo"],[191,34,150,31],[191,35,150,31,"useMemo"],[191,42,150,31],[191,44,150,32],[191,50,150,38],[192,6,151,8],[192,12,151,14,"output"],[192,18,151,20],[192,21,151,23,"config"],[192,27,151,29],[192,28,151,30,"extraParams"],[192,39,151,41],[192,42,151,44],[193,8,151,46],[193,11,151,49,"config"],[193,17,151,55],[193,18,151,56,"extraParams"],[194,6,151,68],[194,7,151,69],[194,10,151,72],[194,11,151,73],[194,12,151,74],[195,6,152,8],[195,10,152,12,"config"],[195,16,152,18],[195,17,152,19,"language"],[195,25,152,27],[195,27,152,29],[196,8,153,12,"output"],[196,14,153,18],[196,15,153,19,"hl"],[196,17,153,21],[196,20,153,24,"output"],[196,26,153,30],[196,27,153,31,"language"],[196,35,153,39],[197,6,154,8],[198,6,155,8],[198,10,155,12,"config"],[198,16,155,18],[198,17,155,19,"loginHint"],[198,26,155,28],[198,28,155,30],[199,8,156,12,"output"],[199,14,156,18],[199,15,156,19,"login_hint"],[199,25,156,29],[199,28,156,32,"output"],[199,34,156,38],[199,35,156,39,"loginHint"],[199,44,156,48],[200,6,157,8],[201,6,158,8],[201,10,158,12,"config"],[201,16,158,18],[201,17,158,19,"selectAccount"],[201,30,158,32],[201,32,158,34],[202,8,159,12,"output"],[202,14,159,18],[202,15,159,19,"prompt"],[202,21,159,25],[202,24,159,28,"Prompt"],[202,41,159,34],[202,42,159,34,"Prompt"],[202,48,159,34],[202,49,159,35,"SelectAccount"],[202,62,159,48],[203,6,160,8],[204,6,161,8],[204,13,161,15,"output"],[204,19,161,21],[205,4,162,4],[205,5,162,5],[205,7,162,7],[205,8,162,8,"config"],[205,14,162,14],[205,15,162,15,"extraParams"],[205,26,162,26],[205,28,162,28,"config"],[205,34,162,34],[205,35,162,35,"language"],[205,43,162,43],[205,45,162,45,"config"],[205,51,162,51],[205,52,162,52,"loginHint"],[205,61,162,61],[205,63,162,63,"config"],[205,69,162,69],[205,70,162,70,"selectAccount"],[205,83,162,83],[205,84,162,84],[205,85,162,85],[206,4,163,4],[206,10,163,10,"request"],[206,17,163,17],[206,20,163,20],[206,24,163,20,"useLoadedAuthRequest"],[206,41,163,40],[206,42,163,40,"useLoadedAuthRequest"],[206,62,163,40],[206,64,163,41],[207,6,164,8],[207,9,164,11,"config"],[207,15,164,17],[208,6,165,8,"responseType"],[208,18,165,20],[209,6,166,8,"extraParams"],[209,17,166,19],[210,6,167,8,"clientId"],[210,14,167,16],[211,6,168,8,"redirectUri"],[212,4,169,4],[212,5,169,5],[212,7,169,7,"discovery"],[212,16,169,16],[212,18,169,18,"GoogleAuthRequest"],[212,35,169,35],[212,36,169,36],[213,4,170,4],[213,10,170,10],[213,11,170,11,"result"],[213,17,170,17],[213,19,170,19,"promptAsync"],[213,30,170,30],[213,31,170,31],[213,34,170,34],[213,38,170,34,"useAuthRequestResult"],[213,55,170,54],[213,56,170,54,"useAuthRequestResult"],[213,76,170,54],[213,78,170,55,"request"],[213,85,170,62],[213,87,170,64,"discovery"],[213,96,170,73],[213,98,170,75],[214,6,171,8,"windowFeatures"],[214,20,171,22],[214,22,171,24,"settings"],[214,30,171,32],[214,31,171,33,"windowFeatures"],[215,4,172,4],[215,5,172,5],[215,6,172,6],[216,4,173,4],[216,10,173,10],[216,11,173,11,"fullResult"],[216,21,173,21],[216,23,173,23,"setFullResult"],[216,36,173,36],[216,37,173,37],[216,40,173,40],[216,44,173,40,"useState"],[216,50,173,48],[216,51,173,48,"useState"],[216,59,173,48],[216,61,173,49],[216,65,173,53],[216,66,173,54],[217,4,174,4],[217,10,174,10,"shouldAutoExchangeCode"],[217,32,174,32],[217,35,174,35],[217,39,174,35,"useMemo"],[217,45,174,42],[217,46,174,42,"useMemo"],[217,53,174,42],[217,55,174,43],[217,61,174,49],[218,6,175,8],[219,6,176,8],[219,10,176,12],[219,17,176,19,"config"],[219,23,176,25],[219,24,176,26,"shouldAutoExchangeCode"],[219,46,176,48],[219,51,176,53],[219,62,176,64],[219,64,176,66],[220,8,177,12],[220,15,177,19,"config"],[220,21,177,25],[220,22,177,26,"shouldAutoExchangeCode"],[220,44,177,48],[221,6,178,8],[222,6,179,8],[223,6,180,8],[223,13,180,15,"result"],[223,19,180,21],[223,21,180,23,"type"],[223,25,180,27],[223,30,180,32],[223,39,180,41],[223,43,180,45,"result"],[223,49,180,51],[223,50,180,52,"params"],[223,56,180,58],[223,57,180,59,"code"],[223,61,180,63],[223,65,180,67],[223,66,180,68,"result"],[223,72,180,74],[223,73,180,75,"authentication"],[223,87,180,89],[224,4,181,4],[224,5,181,5],[224,7,181,7],[224,8,181,8,"config"],[224,14,181,14],[224,15,181,15,"shouldAutoExchangeCode"],[224,37,181,37],[224,39,181,39,"result"],[224,45,181,45],[224,47,181,47,"type"],[224,51,181,51],[224,52,181,52],[224,53,181,53],[225,4,182,4],[225,8,182,4,"useEffect"],[225,14,182,13],[225,15,182,13,"useEffect"],[225,24,182,13],[225,26,182,14],[225,32,182,20],[226,6,183,8],[226,10,183,12,"isMounted"],[226,19,183,21],[226,22,183,24],[226,26,183,28],[227,6,184,8],[227,10,184,12,"shouldAutoExchangeCode"],[227,32,184,34],[227,36,184,38,"result"],[227,42,184,44],[227,44,184,46,"type"],[227,48,184,50],[227,53,184,55],[227,62,184,64],[227,64,184,66],[228,8,185,12],[228,14,185,18,"exchangeRequest"],[228,29,185,33],[228,32,185,36],[228,36,185,40,"AccessTokenRequest"],[228,49,185,58],[228,50,185,58,"AccessTokenRequest"],[228,68,185,58],[228,69,185,59],[229,10,186,16,"clientId"],[229,18,186,24],[230,10,187,16,"clientSecret"],[230,22,187,28],[230,24,187,30,"config"],[230,30,187,36],[230,31,187,37,"clientSecret"],[230,43,187,49],[231,10,188,16,"redirectUri"],[231,21,188,27],[232,10,189,16,"scopes"],[232,16,189,22],[232,18,189,24,"config"],[232,24,189,30],[232,25,189,31,"scopes"],[232,31,189,37],[233,10,190,16,"code"],[233,14,190,20],[233,16,190,22,"result"],[233,22,190,28],[233,23,190,29,"params"],[233,29,190,35],[233,30,190,36,"code"],[233,34,190,40],[234,10,191,16,"extraParams"],[234,21,191,27],[234,23,191,29],[235,12,192,20,"code_verifier"],[235,25,192,33],[235,27,192,35,"request"],[235,34,192,42],[235,36,192,44,"codeVerifier"],[235,48,192,56],[235,52,192,60],[236,10,193,16],[237,8,194,12],[237,9,194,13],[237,10,194,14],[238,8,195,12,"exchangeRequest"],[238,23,195,27],[238,24,195,28,"performAsync"],[238,36,195,40],[238,37,195,41,"discovery"],[238,46,195,50],[238,47,195,51],[238,48,195,52,"then"],[238,52,195,56],[238,53,195,58,"authentication"],[238,67,195,72],[238,71,195,77],[239,10,196,16],[239,14,196,20,"isMounted"],[239,23,196,29],[239,25,196,31],[240,12,197,20,"setFullResult"],[240,25,197,33],[240,26,197,34],[241,14,198,24],[241,17,198,27,"result"],[241,23,198,33],[242,14,199,24,"params"],[242,20,199,30],[242,22,199,32],[243,16,200,28,"id_token"],[243,24,200,36],[243,26,200,38,"authentication"],[243,40,200,52],[243,42,200,54,"idToken"],[243,49,200,61],[243,53,200,65],[243,55,200,67],[244,16,201,28,"access_token"],[244,28,201,40],[244,30,201,42,"authentication"],[244,44,201,56],[244,45,201,57,"accessToken"],[244,56,201,68],[245,16,202,28],[245,19,202,31,"result"],[245,25,202,37],[245,26,202,38,"params"],[246,14,203,24],[246,15,203,25],[247,14,204,24,"authentication"],[248,12,205,20],[248,13,205,21],[248,14,205,22],[249,10,206,16],[250,8,207,12],[250,9,207,13],[250,10,207,14],[251,6,208,8],[251,7,208,9],[251,13,209,13],[252,8,210,12,"setFullResult"],[252,21,210,25],[252,22,210,26,"result"],[252,28,210,32],[252,29,210,33],[253,6,211,8],[254,6,212,8],[254,13,212,15],[254,19,212,21],[255,8,213,12,"isMounted"],[255,17,213,21],[255,20,213,24],[255,25,213,29],[256,6,214,8],[256,7,214,9],[257,4,215,4],[257,5,215,5],[257,7,215,7],[257,8,216,8,"clientId"],[257,16,216,16],[257,18,217,8,"redirectUri"],[257,29,217,19],[257,31,218,8,"shouldAutoExchangeCode"],[257,53,218,30],[257,55,219,8,"config"],[257,61,219,14],[257,62,219,15,"clientSecret"],[257,74,219,27],[257,76,220,8,"config"],[257,82,220,14],[257,83,220,15,"scopes"],[257,89,220,21],[257,91,220,23,"join"],[257,95,220,27],[257,96,220,28],[257,99,220,31],[257,100,220,32],[257,102,221,8,"request"],[257,109,221,15],[257,111,221,17,"codeVerifier"],[257,123,221,29],[257,125,222,8,"result"],[257,131,222,14],[257,132,223,5],[257,133,223,6],[258,4,224,4],[258,11,224,11],[258,12,224,12,"request"],[258,19,224,19],[258,21,224,21,"fullResult"],[258,31,224,31],[258,33,224,33,"promptAsync"],[258,44,224,44],[258,45,224,45],[259,2,225,0],[260,0,225,1],[260,3]],"functionMap":{"names":["<global>","GoogleAuthRequest","GoogleAuthRequest#constructor","GoogleAuthRequest#getAuthRequestConfigAsync","useIdTokenAuthRequest","useAuthRequest","useMemo$argument_0","useEffect$argument_0","exchangeRequest.performAsync.then$argument_0","<anonymous>"],"mappings":"AAA;AC4B;ICE;KD6B;IEI;KFY;CDC;OIc;CJY;OKW;6BCC;KDS;iCCC;KDc;gCCC;KDS;gCCC;KDY;2CCY;KDO;cEC;yDCa;aDY;eEK;SFE;KFC;CLU"},"hasCjsExports":false},"type":"js/module"}]}