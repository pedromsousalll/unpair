{"dependencies":[{"name":"@firebase/component","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"Us9erpYucP7UHYJWKKSJ2tNZDvI=","exportNames":["*"],"imports":1}},{"name":"@firebase/logger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":91,"index":160}}],"key":"ORGtDHPxrSEUSLP9WZfOMGsHx5g=","exportNames":["*"],"imports":1}},{"name":"@firebase/util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":161},"end":{"line":3,"column":211,"index":372}}],"key":"BkBYK9w6fHruAfQL7S4qWsYds2s=","exportNames":["*"],"imports":1}},{"name":"idb","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":421},"end":{"line":5,"column":29,"index":450}}],"key":"ZdmQBrZzT62w6Zx/DDxYP061LXc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"FirebaseError\", {\n    enumerable: true,\n    get: function () {\n      return _firebaseUtil.FirebaseError;\n    }\n  });\n  Object.defineProperty(exports, \"SDK_VERSION\", {\n    enumerable: true,\n    get: function () {\n      return SDK_VERSION;\n    }\n  });\n  Object.defineProperty(exports, \"_DEFAULT_ENTRY_NAME\", {\n    enumerable: true,\n    get: function () {\n      return DEFAULT_ENTRY_NAME;\n    }\n  });\n  Object.defineProperty(exports, \"_addComponent\", {\n    enumerable: true,\n    get: function () {\n      return _addComponent;\n    }\n  });\n  Object.defineProperty(exports, \"_addOrOverwriteComponent\", {\n    enumerable: true,\n    get: function () {\n      return _addOrOverwriteComponent;\n    }\n  });\n  Object.defineProperty(exports, \"_apps\", {\n    enumerable: true,\n    get: function () {\n      return _apps;\n    }\n  });\n  Object.defineProperty(exports, \"_clearComponents\", {\n    enumerable: true,\n    get: function () {\n      return _clearComponents;\n    }\n  });\n  Object.defineProperty(exports, \"_components\", {\n    enumerable: true,\n    get: function () {\n      return _components;\n    }\n  });\n  Object.defineProperty(exports, \"_getProvider\", {\n    enumerable: true,\n    get: function () {\n      return _getProvider;\n    }\n  });\n  Object.defineProperty(exports, \"_isFirebaseApp\", {\n    enumerable: true,\n    get: function () {\n      return _isFirebaseApp;\n    }\n  });\n  Object.defineProperty(exports, \"_isFirebaseServerApp\", {\n    enumerable: true,\n    get: function () {\n      return _isFirebaseServerApp;\n    }\n  });\n  Object.defineProperty(exports, \"_isFirebaseServerAppSettings\", {\n    enumerable: true,\n    get: function () {\n      return _isFirebaseServerAppSettings;\n    }\n  });\n  Object.defineProperty(exports, \"_registerComponent\", {\n    enumerable: true,\n    get: function () {\n      return _registerComponent;\n    }\n  });\n  Object.defineProperty(exports, \"_removeServiceInstance\", {\n    enumerable: true,\n    get: function () {\n      return _removeServiceInstance;\n    }\n  });\n  Object.defineProperty(exports, \"_serverApps\", {\n    enumerable: true,\n    get: function () {\n      return _serverApps;\n    }\n  });\n  Object.defineProperty(exports, \"deleteApp\", {\n    enumerable: true,\n    get: function () {\n      return deleteApp;\n    }\n  });\n  Object.defineProperty(exports, \"getApp\", {\n    enumerable: true,\n    get: function () {\n      return getApp;\n    }\n  });\n  Object.defineProperty(exports, \"getApps\", {\n    enumerable: true,\n    get: function () {\n      return getApps;\n    }\n  });\n  Object.defineProperty(exports, \"initializeApp\", {\n    enumerable: true,\n    get: function () {\n      return initializeApp;\n    }\n  });\n  Object.defineProperty(exports, \"initializeServerApp\", {\n    enumerable: true,\n    get: function () {\n      return initializeServerApp;\n    }\n  });\n  Object.defineProperty(exports, \"onLog\", {\n    enumerable: true,\n    get: function () {\n      return onLog;\n    }\n  });\n  Object.defineProperty(exports, \"registerVersion\", {\n    enumerable: true,\n    get: function () {\n      return registerVersion;\n    }\n  });\n  Object.defineProperty(exports, \"setLogLevel\", {\n    enumerable: true,\n    get: function () {\n      return setLogLevel;\n    }\n  });\n  var _firebaseComponent = require(_dependencyMap[0], \"@firebase/component\");\n  var _firebaseLogger = require(_dependencyMap[1], \"@firebase/logger\");\n  var _firebaseUtil = require(_dependencyMap[2], \"@firebase/util\");\n  var _idb = require(_dependencyMap[3], \"idb\");\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  class PlatformLoggerServiceImpl {\n    constructor(container) {\n      this.container = container;\n    }\n    // In initial implementation, this will be called by installations on\n    // auth token refresh, and installations will send this string.\n    getPlatformInfoString() {\n      const providers = this.container.getProviders();\n      // Loop through providers and get library/version pairs from any that are\n      // version components.\n      return providers.map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate();\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      }).filter(logString => logString).join(' ');\n    }\n  }\n  /**\n   *\n   * @param provider check if this provider provides a VersionService\n   *\n   * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n   * provides VersionService. The provider is not necessarily a 'app-version'\n   * provider.\n   */\n  function isVersionServiceProvider(provider) {\n    const component = provider.getComponent();\n    return component?.type === \"VERSION\" /* ComponentType.VERSION */;\n  }\n  const name$q = \"@firebase/app\";\n  const version$1 = \"0.14.4\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const logger = new _firebaseLogger.Logger('@firebase/app');\n  const name$p = \"@firebase/app-compat\";\n  const name$o = \"@firebase/analytics-compat\";\n  const name$n = \"@firebase/analytics\";\n  const name$m = \"@firebase/app-check-compat\";\n  const name$l = \"@firebase/app-check\";\n  const name$k = \"@firebase/auth\";\n  const name$j = \"@firebase/auth-compat\";\n  const name$i = \"@firebase/database\";\n  const name$h = \"@firebase/data-connect\";\n  const name$g = \"@firebase/database-compat\";\n  const name$f = \"@firebase/functions\";\n  const name$e = \"@firebase/functions-compat\";\n  const name$d = \"@firebase/installations\";\n  const name$c = \"@firebase/installations-compat\";\n  const name$b = \"@firebase/messaging\";\n  const name$a = \"@firebase/messaging-compat\";\n  const name$9 = \"@firebase/performance\";\n  const name$8 = \"@firebase/performance-compat\";\n  const name$7 = \"@firebase/remote-config\";\n  const name$6 = \"@firebase/remote-config-compat\";\n  const name$5 = \"@firebase/storage\";\n  const name$4 = \"@firebase/storage-compat\";\n  const name$3 = \"@firebase/firestore\";\n  const name$2 = \"@firebase/ai\";\n  const name$1 = \"@firebase/firestore-compat\";\n  const name = \"firebase\";\n  const version = \"12.4.0\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The default app name\n   *\n   * @internal\n   */\n  const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n  const PLATFORM_LOG_STRING = {\n    [name$q]: 'fire-core',\n    [name$p]: 'fire-core-compat',\n    [name$n]: 'fire-analytics',\n    [name$o]: 'fire-analytics-compat',\n    [name$l]: 'fire-app-check',\n    [name$m]: 'fire-app-check-compat',\n    [name$k]: 'fire-auth',\n    [name$j]: 'fire-auth-compat',\n    [name$i]: 'fire-rtdb',\n    [name$h]: 'fire-data-connect',\n    [name$g]: 'fire-rtdb-compat',\n    [name$f]: 'fire-fn',\n    [name$e]: 'fire-fn-compat',\n    [name$d]: 'fire-iid',\n    [name$c]: 'fire-iid-compat',\n    [name$b]: 'fire-fcm',\n    [name$a]: 'fire-fcm-compat',\n    [name$9]: 'fire-perf',\n    [name$8]: 'fire-perf-compat',\n    [name$7]: 'fire-rc',\n    [name$6]: 'fire-rc-compat',\n    [name$5]: 'fire-gcs',\n    [name$4]: 'fire-gcs-compat',\n    [name$3]: 'fire-fst',\n    [name$1]: 'fire-fst-compat',\n    [name$2]: 'fire-vertex',\n    'fire-js': 'fire-js',\n    // Platform identifier for JS SDK.\n    [name]: 'fire-js-all'\n  };\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * @internal\n   */\n  const _apps = new Map();\n  /**\n   * @internal\n   */\n  const _serverApps = new Map();\n  /**\n   * Registered components.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const _components = new Map();\n  /**\n   * @param component - the component being added to this app's container\n   *\n   * @internal\n   */\n  function _addComponent(app, component) {\n    try {\n      app.container.addComponent(component);\n    } catch (e) {\n      logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n    }\n  }\n  /**\n   *\n   * @internal\n   */\n  function _addOrOverwriteComponent(app, component) {\n    app.container.addOrOverwriteComponent(component);\n  }\n  /**\n   *\n   * @param component - the component to register\n   * @returns whether or not the component is registered successfully\n   *\n   * @internal\n   */\n  function _registerComponent(component) {\n    const componentName = component.name;\n    if (_components.has(componentName)) {\n      logger.debug(`There were multiple attempts to register component ${componentName}.`);\n      return false;\n    }\n    _components.set(componentName, component);\n    // add the component to existing app instances\n    for (const app of _apps.values()) {\n      _addComponent(app, component);\n    }\n    for (const serverApp of _serverApps.values()) {\n      _addComponent(serverApp, component);\n    }\n    return true;\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   *\n   * @returns the provider for the service with the matching name\n   *\n   * @internal\n   */\n  function _getProvider(app, name) {\n    const heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n      optional: true\n    });\n    if (heartbeatController) {\n      void heartbeatController.triggerHeartbeat();\n    }\n    return app.container.getProvider(name);\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n   *\n   * @internal\n   */\n  function _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\n    _getProvider(app, name).clearInstance(instanceIdentifier);\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provide object is of type FirebaseApp.\n   *\n   * @internal\n   */\n  function _isFirebaseApp(obj) {\n    return obj.options !== undefined;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerAppSettings(obj) {\n    if (_isFirebaseApp(obj)) {\n      return false;\n    }\n    return 'authIdToken' in obj || 'appCheckToken' in obj || 'releaseOnDeref' in obj || 'automaticDataCollectionEnabled' in obj;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerApp(obj) {\n    if (obj === null || obj === undefined) {\n      return false;\n    }\n    return obj.settings !== undefined;\n  }\n  /**\n   * Test only\n   *\n   * @internal\n   */\n  function _clearComponents() {\n    _components.clear();\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const ERRORS = {\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" + 'call initializeApp() first',\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.',\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\n  };\n  const ERROR_FACTORY = new _firebaseUtil.ErrorFactory('app', 'Firebase', ERRORS);\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  class FirebaseAppImpl {\n    constructor(options, config, container) {\n      this._isDeleted = false;\n      this._options = Object.assign({}, options);\n      this._config = Object.assign({}, config);\n      this._name = config.name;\n      this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n      this._container = container;\n      this.container.addComponent(new _firebaseComponent.Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    }\n    get automaticDataCollectionEnabled() {\n      this.checkDestroyed();\n      return this._automaticDataCollectionEnabled;\n    }\n    set automaticDataCollectionEnabled(val) {\n      this.checkDestroyed();\n      this._automaticDataCollectionEnabled = val;\n    }\n    get name() {\n      this.checkDestroyed();\n      return this._name;\n    }\n    get options() {\n      this.checkDestroyed();\n      return this._options;\n    }\n    get config() {\n      this.checkDestroyed();\n      return this._config;\n    }\n    get container() {\n      return this._container;\n    }\n    get isDeleted() {\n      return this._isDeleted;\n    }\n    set isDeleted(val) {\n      this._isDeleted = val;\n    }\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, {\n          appName: this._name\n        });\n      }\n    }\n  }\n\n  /**\n   * @license\n   * Copyright 2023 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  // Parse the token and check to see if the `exp` claim is in the future.\n  // Reports an error to the console if the token or claim could not be parsed, or if `exp` is in\n  // the past.\n  function validateTokenTTL(base64Token, tokenName) {\n    const secondPart = (0, _firebaseUtil.base64Decode)(base64Token.split('.')[1]);\n    if (secondPart === null) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: second part could not be parsed.`);\n      return;\n    }\n    const expClaim = JSON.parse(secondPart).exp;\n    if (expClaim === undefined) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: expiration claim could not be parsed`);\n      return;\n    }\n    const exp = JSON.parse(secondPart).exp * 1000;\n    const now = new Date().getTime();\n    const diff = exp - now;\n    if (diff <= 0) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: the token has expired.`);\n    }\n  }\n  class FirebaseServerAppImpl extends FirebaseAppImpl {\n    constructor(options, serverConfig, name, container) {\n      // Build configuration parameters for the FirebaseAppImpl base class.\n      const automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined ? serverConfig.automaticDataCollectionEnabled : true;\n      // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n      const config = {\n        name,\n        automaticDataCollectionEnabled\n      };\n      if (options.apiKey !== undefined) {\n        // Construct the parent FirebaseAppImp object.\n        super(options, config, container);\n      } else {\n        const appImpl = options;\n        super(appImpl.options, config, container);\n      }\n      // Now construct the data for the FirebaseServerAppImpl.\n      this._serverConfig = Object.assign({\n        automaticDataCollectionEnabled\n      }, serverConfig);\n      // Ensure that the current time is within the `authIdtoken` window of validity.\n      if (this._serverConfig.authIdToken) {\n        validateTokenTTL(this._serverConfig.authIdToken, 'authIdToken');\n      }\n      // Ensure that the current time is within the `appCheckToken` window of validity.\n      if (this._serverConfig.appCheckToken) {\n        validateTokenTTL(this._serverConfig.appCheckToken, 'appCheckToken');\n      }\n      this._finalizationRegistry = null;\n      if (typeof FinalizationRegistry !== 'undefined') {\n        this._finalizationRegistry = new FinalizationRegistry(() => {\n          this.automaticCleanup();\n        });\n      }\n      this._refCount = 0;\n      this.incRefCount(this._serverConfig.releaseOnDeref);\n      // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n      // will never trigger.\n      this._serverConfig.releaseOnDeref = undefined;\n      serverConfig.releaseOnDeref = undefined;\n      registerVersion(name$q, version$1, 'serverapp');\n    }\n    toJSON() {\n      return undefined;\n    }\n    get refCount() {\n      return this._refCount;\n    }\n    // Increment the reference count of this server app. If an object is provided, register it\n    // with the finalization registry.\n    incRefCount(obj) {\n      if (this.isDeleted) {\n        return;\n      }\n      this._refCount++;\n      if (obj !== undefined && this._finalizationRegistry !== null) {\n        this._finalizationRegistry.register(obj, this);\n      }\n    }\n    // Decrement the reference count.\n    decRefCount() {\n      if (this.isDeleted) {\n        return 0;\n      }\n      return --this._refCount;\n    }\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\n    // handles this is in deleteApp(...).\n    automaticCleanup() {\n      void deleteApp(this);\n    }\n    get settings() {\n      this.checkDestroyed();\n      return this._serverConfig;\n    }\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\n      }\n    }\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The current SDK version.\n   *\n   * @public\n   */\n  const SDK_VERSION = version;\n  function initializeApp(_options, rawConfig = {}) {\n    let options = _options;\n    if (typeof rawConfig !== 'object') {\n      const name = rawConfig;\n      rawConfig = {\n        name\n      };\n    }\n    const config = Object.assign({\n      name: DEFAULT_ENTRY_NAME,\n      automaticDataCollectionEnabled: true\n    }, rawConfig);\n    const name = config.name;\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\n        appName: String(name)\n      });\n    }\n    options || (options = (0, _firebaseUtil.getDefaultAppConfig)());\n    if (!options) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    const existingApp = _apps.get(name);\n    if (existingApp) {\n      // return the existing app if options and config deep equal the ones in the existing app.\n      if ((0, _firebaseUtil.deepEqual)(options, existingApp.options) && (0, _firebaseUtil.deepEqual)(config, existingApp.config)) {\n        return existingApp;\n      } else {\n        throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, {\n          appName: name\n        });\n      }\n    }\n    const container = new _firebaseComponent.ComponentContainer(name);\n    for (const component of _components.values()) {\n      container.addComponent(component);\n    }\n    const newApp = new FirebaseAppImpl(options, config, container);\n    _apps.set(name, newApp);\n    return newApp;\n  }\n  function initializeServerApp(_options, _serverAppConfig = {}) {\n    if ((0, _firebaseUtil.isBrowser)() && !(0, _firebaseUtil.isWebWorker)()) {\n      // FirebaseServerApp isn't designed to be run in browsers.\n      throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\n    }\n    let firebaseOptions;\n    let serverAppSettings = _serverAppConfig || {};\n    if (_options) {\n      if (_isFirebaseApp(_options)) {\n        firebaseOptions = _options.options;\n      } else if (_isFirebaseServerAppSettings(_options)) {\n        serverAppSettings = _options;\n      } else {\n        firebaseOptions = _options;\n      }\n    }\n    if (serverAppSettings.automaticDataCollectionEnabled === undefined) {\n      serverAppSettings.automaticDataCollectionEnabled = true;\n    }\n    firebaseOptions || (firebaseOptions = (0, _firebaseUtil.getDefaultAppConfig)());\n    if (!firebaseOptions) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    // Build an app name based on a hash of the configuration options.\n    const nameObj = Object.assign({}, serverAppSettings, firebaseOptions);\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n    if (nameObj.releaseOnDeref !== undefined) {\n      delete nameObj.releaseOnDeref;\n    }\n    const hashCode = s => {\n      return [...s].reduce((hash, c) => Math.imul(31, hash) + c.charCodeAt(0) | 0, 0);\n    };\n    if (serverAppSettings.releaseOnDeref !== undefined) {\n      if (typeof FinalizationRegistry === 'undefined') {\n        throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\n      }\n    }\n    const nameString = '' + hashCode(JSON.stringify(nameObj));\n    const existingApp = _serverApps.get(nameString);\n    if (existingApp) {\n      existingApp.incRefCount(serverAppSettings.releaseOnDeref);\n      return existingApp;\n    }\n    const container = new _firebaseComponent.ComponentContainer(nameString);\n    for (const component of _components.values()) {\n      container.addComponent(component);\n    }\n    const newApp = new FirebaseServerAppImpl(firebaseOptions, serverAppSettings, nameString, container);\n    _serverApps.set(nameString, newApp);\n    return newApp;\n  }\n  /**\n   * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n   *\n   * When called with no arguments, the default app is returned. When an app name\n   * is provided, the app corresponding to that name is returned.\n   *\n   * An exception is thrown if the app being retrieved has not yet been\n   * initialized.\n   *\n   * @example\n   * ```javascript\n   * // Return the default app\n   * const app = getApp();\n   * ```\n   *\n   * @example\n   * ```javascript\n   * // Return a named app\n   * const otherApp = getApp(\"otherApp\");\n   * ```\n   *\n   * @param name - Optional name of the app to return. If no name is\n   *   provided, the default is `\"[DEFAULT]\"`.\n   *\n   * @returns The app corresponding to the provided app name.\n   *   If no app name is provided, the default app is returned.\n   *\n   * @public\n   */\n  function getApp(name = DEFAULT_ENTRY_NAME) {\n    const app = _apps.get(name);\n    if (!app && name === DEFAULT_ENTRY_NAME && (0, _firebaseUtil.getDefaultAppConfig)()) {\n      return initializeApp();\n    }\n    if (!app) {\n      throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, {\n        appName: name\n      });\n    }\n    return app;\n  }\n  /**\n   * A (read-only) array of all initialized apps.\n   * @public\n   */\n  function getApps() {\n    return Array.from(_apps.values());\n  }\n  /**\n   * Renders this app unusable and frees the resources of all associated\n   * services.\n   *\n   * @example\n   * ```javascript\n   * deleteApp(app)\n   *   .then(function() {\n   *     console.log(\"App deleted successfully\");\n   *   })\n   *   .catch(function(error) {\n   *     console.log(\"Error deleting app:\", error);\n   *   });\n   * ```\n   *\n   * @public\n   */\n  async function deleteApp(app) {\n    let cleanupProviders = false;\n    const name = app.name;\n    if (_apps.has(name)) {\n      cleanupProviders = true;\n      _apps.delete(name);\n    } else if (_serverApps.has(name)) {\n      const firebaseServerApp = app;\n      if (firebaseServerApp.decRefCount() <= 0) {\n        _serverApps.delete(name);\n        cleanupProviders = true;\n      }\n    }\n    if (cleanupProviders) {\n      await Promise.all(app.container.getProviders().map(provider => provider.delete()));\n      app.isDeleted = true;\n    }\n  }\n  /**\n   * Registers a library's name and version for platform logging purposes.\n   * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n   * @param version - Current version of that library.\n   * @param variant - Bundle variant, e.g., node, rn, etc.\n   *\n   * @public\n   */\n  function registerVersion(libraryKeyOrName, version, variant) {\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n    if (variant) {\n      library += `-${variant}`;\n    }\n    const libraryMismatch = library.match(/\\s|\\//);\n    const versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n      const warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n      if (libraryMismatch) {\n        warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      if (libraryMismatch && versionMismatch) {\n        warning.push('and');\n      }\n      if (versionMismatch) {\n        warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      logger.warn(warning.join(' '));\n      return;\n    }\n    _registerComponent(new _firebaseComponent.Component(`${library}-version`, () => ({\n      library,\n      version\n    }), \"VERSION\" /* ComponentType.VERSION */));\n  }\n  /**\n   * Sets log handler for all Firebase SDKs.\n   * @param logCallback - An optional custom log handler that executes user code whenever\n   * the Firebase SDK makes a logging call.\n   *\n   * @public\n   */\n  function onLog(logCallback, options) {\n    if (logCallback !== null && typeof logCallback !== 'function') {\n      throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\n    }\n    (0, _firebaseLogger.setUserLogHandler)(logCallback, options);\n  }\n  /**\n   * Sets log level for all Firebase SDKs.\n   *\n   * All of the log types above the current log level are captured (i.e. if\n   * you set the log level to `info`, errors are logged, but `debug` and\n   * `verbose` logs are not).\n   *\n   * @public\n   */\n  function setLogLevel(logLevel) {\n    (0, _firebaseLogger.setLogLevel)(logLevel);\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const DB_NAME = 'firebase-heartbeat-database';\n  const DB_VERSION = 1;\n  const STORE_NAME = 'firebase-heartbeat-store';\n  let dbPromise = null;\n  function getDbPromise() {\n    if (!dbPromise) {\n      dbPromise = (0, _idb.openDB)(DB_NAME, DB_VERSION, {\n        upgrade: (db, oldVersion) => {\n          // We don't use 'break' in this switch statement, the fall-through\n          // behavior is what we want, because if there are multiple versions between\n          // the old version and the current version, we want ALL the migrations\n          // that correspond to those versions to run, not only the last one.\n          // eslint-disable-next-line default-case\n          switch (oldVersion) {\n            case 0:\n              try {\n                db.createObjectStore(STORE_NAME);\n              } catch (e) {\n                // Safari/iOS browsers throw occasional exceptions on\n                // db.createObjectStore() that may be a bug. Avoid blocking\n                // the rest of the app functionality.\n                console.warn(e);\n              }\n          }\n        }\n      }).catch(e => {\n        throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\n          originalErrorMessage: e.message\n        });\n      });\n    }\n    return dbPromise;\n  }\n  async function readHeartbeatsFromIndexedDB(app) {\n    try {\n      const db = await getDbPromise();\n      const tx = db.transaction(STORE_NAME);\n      const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n      // We already have the value but tx.done can throw,\n      // so we need to await it here to catch errors\n      await tx.done;\n      return result;\n    } catch (e) {\n      if (e instanceof _firebaseUtil.FirebaseError) {\n        logger.warn(e.message);\n      } else {\n        const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\n          originalErrorMessage: e?.message\n        });\n        logger.warn(idbGetError.message);\n      }\n    }\n  }\n  async function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\n    try {\n      const db = await getDbPromise();\n      const tx = db.transaction(STORE_NAME, 'readwrite');\n      const objectStore = tx.objectStore(STORE_NAME);\n      await objectStore.put(heartbeatObject, computeKey(app));\n      await tx.done;\n    } catch (e) {\n      if (e instanceof _firebaseUtil.FirebaseError) {\n        logger.warn(e.message);\n      } else {\n        const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\n          originalErrorMessage: e?.message\n        });\n        logger.warn(idbGetError.message);\n      }\n    }\n  }\n  function computeKey(app) {\n    return `${app.name}!${app.options.appId}`;\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const MAX_HEADER_BYTES = 1024;\n  const MAX_NUM_STORED_HEARTBEATS = 30;\n  class HeartbeatServiceImpl {\n    constructor(container) {\n      this.container = container;\n      /**\n       * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n       * the header string.\n       * Stores one record per date. This will be consolidated into the standard\n       * format of one record per user agent string before being sent as a header.\n       * Populated from indexedDB when the controller is instantiated and should\n       * be kept in sync with indexedDB.\n       * Leave public for easier testing.\n       */\n      this._heartbeatsCache = null;\n      const app = this.container.getProvider('app').getImmediate();\n      this._storage = new HeartbeatStorageImpl(app);\n      this._heartbeatsCachePromise = this._storage.read().then(result => {\n        this._heartbeatsCache = result;\n        return result;\n      });\n    }\n    /**\n     * Called to report a heartbeat. The function will generate\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n     * to IndexedDB.\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\n     * already logged, subsequent calls to this function in the same day will be ignored.\n     */\n    async triggerHeartbeat() {\n      try {\n        const platformLogger = this.container.getProvider('platform-logger').getImmediate();\n        // This is the \"Firebase user agent\" string from the platform logger\n        // service, not the browser user agent.\n        const agent = platformLogger.getPlatformInfoString();\n        const date = getUTCDateString();\n        if (this._heartbeatsCache?.heartbeats == null) {\n          this._heartbeatsCache = await this._heartbeatsCachePromise;\n          // If we failed to construct a heartbeats cache, then return immediately.\n          if (this._heartbeatsCache?.heartbeats == null) {\n            return;\n          }\n        }\n        // Do not store a heartbeat if one is already stored for this day\n        // or if a header has already been sent today.\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n          return;\n        } else {\n          // There is no entry for this date. Create one.\n          this._heartbeatsCache.heartbeats.push({\n            date,\n            agent\n          });\n          // If the number of stored heartbeats exceeds the maximum number of stored heartbeats, remove the heartbeat with the earliest date.\n          // Since this is executed each time a heartbeat is pushed, the limit can only be exceeded by one, so only one needs to be removed.\n          if (this._heartbeatsCache.heartbeats.length > MAX_NUM_STORED_HEARTBEATS) {\n            const earliestHeartbeatIdx = getEarliestHeartbeatIdx(this._heartbeatsCache.heartbeats);\n            this._heartbeatsCache.heartbeats.splice(earliestHeartbeatIdx, 1);\n          }\n        }\n        return this._storage.overwrite(this._heartbeatsCache);\n      } catch (e) {\n        logger.warn(e);\n      }\n    }\n    /**\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n     * It also clears all heartbeats from memory as well as in IndexedDB.\n     *\n     * NOTE: Consuming product SDKs should not send the header if this method\n     * returns an empty string.\n     */\n    async getHeartbeatsHeader() {\n      try {\n        if (this._heartbeatsCache === null) {\n          await this._heartbeatsCachePromise;\n        }\n        // If it's still null or the array is empty, there is no data to send.\n        if (this._heartbeatsCache?.heartbeats == null || this._heartbeatsCache.heartbeats.length === 0) {\n          return '';\n        }\n        const date = getUTCDateString();\n        // Extract as many heartbeats from the cache as will fit under the size limit.\n        const {\n          heartbeatsToSend,\n          unsentEntries\n        } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\n        const headerString = (0, _firebaseUtil.base64urlEncodeWithoutPadding)(JSON.stringify({\n          version: 2,\n          heartbeats: heartbeatsToSend\n        }));\n        // Store last sent date to prevent another being logged/sent for the same day.\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\n        if (unsentEntries.length > 0) {\n          // Store any unsent entries if they exist.\n          this._heartbeatsCache.heartbeats = unsentEntries;\n          // This seems more likely than emptying the array (below) to lead to some odd state\n          // since the cache isn't empty and this will be called again on the next request,\n          // and is probably safest if we await it.\n          await this._storage.overwrite(this._heartbeatsCache);\n        } else {\n          this._heartbeatsCache.heartbeats = [];\n          // Do not wait for this, to reduce latency.\n          void this._storage.overwrite(this._heartbeatsCache);\n        }\n        return headerString;\n      } catch (e) {\n        logger.warn(e);\n        return '';\n      }\n    }\n  }\n  function getUTCDateString() {\n    const today = new Date();\n    // Returns date format 'YYYY-MM-DD'\n    return today.toISOString().substring(0, 10);\n  }\n  function extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\n    // Heartbeats grouped by user agent in the standard format to be sent in\n    // the header.\n    const heartbeatsToSend = [];\n    // Single date format heartbeats that are not sent.\n    let unsentEntries = heartbeatsCache.slice();\n    for (const singleDateHeartbeat of heartbeatsCache) {\n      // Look for an existing entry with the same user agent.\n      const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n      if (!heartbeatEntry) {\n        // If no entry for this user agent exists, create one.\n        heartbeatsToSend.push({\n          agent: singleDateHeartbeat.agent,\n          dates: [singleDateHeartbeat.date]\n        });\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          // If the header would exceed max size, remove the added heartbeat\n          // entry and stop adding to the header.\n          heartbeatsToSend.pop();\n          break;\n        }\n      } else {\n        heartbeatEntry.dates.push(singleDateHeartbeat.date);\n        // If the header would exceed max size, remove the added date\n        // and stop adding to the header.\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          heartbeatEntry.dates.pop();\n          break;\n        }\n      }\n      // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n      // quota and the loop breaks early.)\n      unsentEntries = unsentEntries.slice(1);\n    }\n    return {\n      heartbeatsToSend,\n      unsentEntries\n    };\n  }\n  class HeartbeatStorageImpl {\n    constructor(app) {\n      this.app = app;\n      this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n    }\n    async runIndexedDBEnvironmentCheck() {\n      if (!(0, _firebaseUtil.isIndexedDBAvailable)()) {\n        return false;\n      } else {\n        return (0, _firebaseUtil.validateIndexedDBOpenable)().then(() => true).catch(() => false);\n      }\n    }\n    /**\n     * Read all heartbeats.\n     */\n    async read() {\n      const canUseIndexedDB = await this._canUseIndexedDBPromise;\n      if (!canUseIndexedDB) {\n        return {\n          heartbeats: []\n        };\n      } else {\n        const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n        if (idbHeartbeatObject?.heartbeats) {\n          return idbHeartbeatObject;\n        } else {\n          return {\n            heartbeats: []\n          };\n        }\n      }\n    }\n    // overwrite the storage with the provided heartbeats\n    async overwrite(heartbeatsObject) {\n      const canUseIndexedDB = await this._canUseIndexedDBPromise;\n      if (!canUseIndexedDB) {\n        return;\n      } else {\n        const existingHeartbeatsObject = await this.read();\n        return writeHeartbeatsToIndexedDB(this.app, {\n          lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n          heartbeats: heartbeatsObject.heartbeats\n        });\n      }\n    }\n    // add heartbeats\n    async add(heartbeatsObject) {\n      const canUseIndexedDB = await this._canUseIndexedDBPromise;\n      if (!canUseIndexedDB) {\n        return;\n      } else {\n        const existingHeartbeatsObject = await this.read();\n        return writeHeartbeatsToIndexedDB(this.app, {\n          lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n          heartbeats: [...existingHeartbeatsObject.heartbeats, ...heartbeatsObject.heartbeats]\n        });\n      }\n    }\n  }\n  /**\n   * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n   * in a platform logging header JSON object, stringified, and converted\n   * to base 64.\n   */\n  function countBytes(heartbeatsCache) {\n    // base64 has a restricted set of characters, all of which should be 1 byte.\n    return (0, _firebaseUtil.base64urlEncodeWithoutPadding)(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({\n      version: 2,\n      heartbeats: heartbeatsCache\n    })).length;\n  }\n  /**\n   * Returns the index of the heartbeat with the earliest date.\n   * If the heartbeats array is empty, -1 is returned.\n   */\n  function getEarliestHeartbeatIdx(heartbeats) {\n    if (heartbeats.length === 0) {\n      return -1;\n    }\n    let earliestHeartbeatIdx = 0;\n    let earliestHeartbeatDate = heartbeats[0].date;\n    for (let i = 1; i < heartbeats.length; i++) {\n      if (heartbeats[i].date < earliestHeartbeatDate) {\n        earliestHeartbeatDate = heartbeats[i].date;\n        earliestHeartbeatIdx = i;\n      }\n    }\n    return earliestHeartbeatIdx;\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  function registerCoreComponents(variant) {\n    _registerComponent(new _firebaseComponent.Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    _registerComponent(new _firebaseComponent.Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    // Register `app` package.\n    registerVersion(name$q, version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm, cjs, etc during the compilation\n    registerVersion(name$q, version$1, 'esm2020');\n    // Register platform SDK identifier (no version).\n    registerVersion('fire-js', '');\n  }\n\n  /**\n   * Firebase App\n   *\n   * @remarks This package coordinates the communication between the different Firebase components\n   * @packageDocumentation\n   */\n  registerCoreComponents('');\n});","lineCount":1324,"map":[[7,2,4,0,"Object"],[7,8,4,0],[7,9,4,0,"defineProperty"],[7,23,4,0],[7,24,4,0,"exports"],[7,31,4,0],[8,4,4,0,"enumerable"],[8,14,4,0],[9,4,4,0,"get"],[9,7,4,0],[9,18,4,0,"get"],[9,19,4,0],[10,6,4,0],[10,13,4,0,"_firebaseUtil"],[10,26,4,0],[10,27,4,0,"FirebaseError"],[10,40,4,0],[11,4,4,0],[12,2,4,0],[13,2,1236,0,"Object"],[13,8,1236,0],[13,9,1236,0,"defineProperty"],[13,23,1236,0],[13,24,1236,0,"exports"],[13,31,1236,0],[14,4,1236,0,"enumerable"],[14,14,1236,0],[15,4,1236,0,"get"],[15,7,1236,0],[15,18,1236,0,"get"],[15,19,1236,0],[16,6,1236,0],[16,13,1236,9,"SDK_VERSION"],[16,24,1236,20],[17,4,1236,20],[18,2,1236,20],[19,2,1236,0,"Object"],[19,8,1236,0],[19,9,1236,0,"defineProperty"],[19,23,1236,0],[19,24,1236,0,"exports"],[19,31,1236,0],[20,4,1236,0,"enumerable"],[20,14,1236,0],[21,4,1236,0,"get"],[21,7,1236,0],[21,18,1236,0,"get"],[21,19,1236,0],[22,6,1236,0],[22,13,1236,22,"DEFAULT_ENTRY_NAME"],[22,31,1236,40],[23,4,1236,40],[24,2,1236,40],[25,2,1236,0,"Object"],[25,8,1236,0],[25,9,1236,0,"defineProperty"],[25,23,1236,0],[25,24,1236,0,"exports"],[25,31,1236,0],[26,4,1236,0,"enumerable"],[26,14,1236,0],[27,4,1236,0,"get"],[27,7,1236,0],[27,18,1236,0,"get"],[27,19,1236,0],[28,6,1236,0],[28,13,1236,65,"_addComponent"],[28,26,1236,78],[29,4,1236,78],[30,2,1236,78],[31,2,1236,0,"Object"],[31,8,1236,0],[31,9,1236,0,"defineProperty"],[31,23,1236,0],[31,24,1236,0,"exports"],[31,31,1236,0],[32,4,1236,0,"enumerable"],[32,14,1236,0],[33,4,1236,0,"get"],[33,7,1236,0],[33,18,1236,0,"get"],[33,19,1236,0],[34,6,1236,0],[34,13,1236,80,"_addOrOverwriteComponent"],[34,37,1236,104],[35,4,1236,104],[36,2,1236,104],[37,2,1236,0,"Object"],[37,8,1236,0],[37,9,1236,0,"defineProperty"],[37,23,1236,0],[37,24,1236,0,"exports"],[37,31,1236,0],[38,4,1236,0,"enumerable"],[38,14,1236,0],[39,4,1236,0,"get"],[39,7,1236,0],[39,18,1236,0,"get"],[39,19,1236,0],[40,6,1236,0],[40,13,1236,106,"_apps"],[40,18,1236,111],[41,4,1236,111],[42,2,1236,111],[43,2,1236,0,"Object"],[43,8,1236,0],[43,9,1236,0,"defineProperty"],[43,23,1236,0],[43,24,1236,0,"exports"],[43,31,1236,0],[44,4,1236,0,"enumerable"],[44,14,1236,0],[45,4,1236,0,"get"],[45,7,1236,0],[45,18,1236,0,"get"],[45,19,1236,0],[46,6,1236,0],[46,13,1236,113,"_clearComponents"],[46,29,1236,129],[47,4,1236,129],[48,2,1236,129],[49,2,1236,0,"Object"],[49,8,1236,0],[49,9,1236,0,"defineProperty"],[49,23,1236,0],[49,24,1236,0,"exports"],[49,31,1236,0],[50,4,1236,0,"enumerable"],[50,14,1236,0],[51,4,1236,0,"get"],[51,7,1236,0],[51,18,1236,0,"get"],[51,19,1236,0],[52,6,1236,0],[52,13,1236,131,"_components"],[52,24,1236,142],[53,4,1236,142],[54,2,1236,142],[55,2,1236,0,"Object"],[55,8,1236,0],[55,9,1236,0,"defineProperty"],[55,23,1236,0],[55,24,1236,0,"exports"],[55,31,1236,0],[56,4,1236,0,"enumerable"],[56,14,1236,0],[57,4,1236,0,"get"],[57,7,1236,0],[57,18,1236,0,"get"],[57,19,1236,0],[58,6,1236,0],[58,13,1236,144,"_getProvider"],[58,25,1236,156],[59,4,1236,156],[60,2,1236,156],[61,2,1236,0,"Object"],[61,8,1236,0],[61,9,1236,0,"defineProperty"],[61,23,1236,0],[61,24,1236,0,"exports"],[61,31,1236,0],[62,4,1236,0,"enumerable"],[62,14,1236,0],[63,4,1236,0,"get"],[63,7,1236,0],[63,18,1236,0,"get"],[63,19,1236,0],[64,6,1236,0],[64,13,1236,158,"_isFirebaseApp"],[64,27,1236,172],[65,4,1236,172],[66,2,1236,172],[67,2,1236,0,"Object"],[67,8,1236,0],[67,9,1236,0,"defineProperty"],[67,23,1236,0],[67,24,1236,0,"exports"],[67,31,1236,0],[68,4,1236,0,"enumerable"],[68,14,1236,0],[69,4,1236,0,"get"],[69,7,1236,0],[69,18,1236,0,"get"],[69,19,1236,0],[70,6,1236,0],[70,13,1236,174,"_isFirebaseServerApp"],[70,33,1236,194],[71,4,1236,194],[72,2,1236,194],[73,2,1236,0,"Object"],[73,8,1236,0],[73,9,1236,0,"defineProperty"],[73,23,1236,0],[73,24,1236,0,"exports"],[73,31,1236,0],[74,4,1236,0,"enumerable"],[74,14,1236,0],[75,4,1236,0,"get"],[75,7,1236,0],[75,18,1236,0,"get"],[75,19,1236,0],[76,6,1236,0],[76,13,1236,196,"_isFirebaseServerAppSettings"],[76,41,1236,224],[77,4,1236,224],[78,2,1236,224],[79,2,1236,0,"Object"],[79,8,1236,0],[79,9,1236,0,"defineProperty"],[79,23,1236,0],[79,24,1236,0,"exports"],[79,31,1236,0],[80,4,1236,0,"enumerable"],[80,14,1236,0],[81,4,1236,0,"get"],[81,7,1236,0],[81,18,1236,0,"get"],[81,19,1236,0],[82,6,1236,0],[82,13,1236,226,"_registerComponent"],[82,31,1236,244],[83,4,1236,244],[84,2,1236,244],[85,2,1236,0,"Object"],[85,8,1236,0],[85,9,1236,0,"defineProperty"],[85,23,1236,0],[85,24,1236,0,"exports"],[85,31,1236,0],[86,4,1236,0,"enumerable"],[86,14,1236,0],[87,4,1236,0,"get"],[87,7,1236,0],[87,18,1236,0,"get"],[87,19,1236,0],[88,6,1236,0],[88,13,1236,246,"_removeServiceInstance"],[88,35,1236,268],[89,4,1236,268],[90,2,1236,268],[91,2,1236,0,"Object"],[91,8,1236,0],[91,9,1236,0,"defineProperty"],[91,23,1236,0],[91,24,1236,0,"exports"],[91,31,1236,0],[92,4,1236,0,"enumerable"],[92,14,1236,0],[93,4,1236,0,"get"],[93,7,1236,0],[93,18,1236,0,"get"],[93,19,1236,0],[94,6,1236,0],[94,13,1236,270,"_serverApps"],[94,24,1236,281],[95,4,1236,281],[96,2,1236,281],[97,2,1236,0,"Object"],[97,8,1236,0],[97,9,1236,0,"defineProperty"],[97,23,1236,0],[97,24,1236,0,"exports"],[97,31,1236,0],[98,4,1236,0,"enumerable"],[98,14,1236,0],[99,4,1236,0,"get"],[99,7,1236,0],[99,18,1236,0,"get"],[99,19,1236,0],[100,6,1236,0],[100,13,1236,283,"deleteApp"],[100,22,1236,292],[101,4,1236,292],[102,2,1236,292],[103,2,1236,0,"Object"],[103,8,1236,0],[103,9,1236,0,"defineProperty"],[103,23,1236,0],[103,24,1236,0,"exports"],[103,31,1236,0],[104,4,1236,0,"enumerable"],[104,14,1236,0],[105,4,1236,0,"get"],[105,7,1236,0],[105,18,1236,0,"get"],[105,19,1236,0],[106,6,1236,0],[106,13,1236,294,"getApp"],[106,19,1236,300],[107,4,1236,300],[108,2,1236,300],[109,2,1236,0,"Object"],[109,8,1236,0],[109,9,1236,0,"defineProperty"],[109,23,1236,0],[109,24,1236,0,"exports"],[109,31,1236,0],[110,4,1236,0,"enumerable"],[110,14,1236,0],[111,4,1236,0,"get"],[111,7,1236,0],[111,18,1236,0,"get"],[111,19,1236,0],[112,6,1236,0],[112,13,1236,302,"getApps"],[112,20,1236,309],[113,4,1236,309],[114,2,1236,309],[115,2,1236,0,"Object"],[115,8,1236,0],[115,9,1236,0,"defineProperty"],[115,23,1236,0],[115,24,1236,0,"exports"],[115,31,1236,0],[116,4,1236,0,"enumerable"],[116,14,1236,0],[117,4,1236,0,"get"],[117,7,1236,0],[117,18,1236,0,"get"],[117,19,1236,0],[118,6,1236,0],[118,13,1236,311,"initializeApp"],[118,26,1236,324],[119,4,1236,324],[120,2,1236,324],[121,2,1236,0,"Object"],[121,8,1236,0],[121,9,1236,0,"defineProperty"],[121,23,1236,0],[121,24,1236,0,"exports"],[121,31,1236,0],[122,4,1236,0,"enumerable"],[122,14,1236,0],[123,4,1236,0,"get"],[123,7,1236,0],[123,18,1236,0,"get"],[123,19,1236,0],[124,6,1236,0],[124,13,1236,326,"initializeServerApp"],[124,32,1236,345],[125,4,1236,345],[126,2,1236,345],[127,2,1236,0,"Object"],[127,8,1236,0],[127,9,1236,0,"defineProperty"],[127,23,1236,0],[127,24,1236,0,"exports"],[127,31,1236,0],[128,4,1236,0,"enumerable"],[128,14,1236,0],[129,4,1236,0,"get"],[129,7,1236,0],[129,18,1236,0,"get"],[129,19,1236,0],[130,6,1236,0],[130,13,1236,347,"onLog"],[130,18,1236,352],[131,4,1236,352],[132,2,1236,352],[133,2,1236,0,"Object"],[133,8,1236,0],[133,9,1236,0,"defineProperty"],[133,23,1236,0],[133,24,1236,0,"exports"],[133,31,1236,0],[134,4,1236,0,"enumerable"],[134,14,1236,0],[135,4,1236,0,"get"],[135,7,1236,0],[135,18,1236,0,"get"],[135,19,1236,0],[136,6,1236,0],[136,13,1236,354,"registerVersion"],[136,28,1236,369],[137,4,1236,369],[138,2,1236,369],[139,2,1236,0,"Object"],[139,8,1236,0],[139,9,1236,0,"defineProperty"],[139,23,1236,0],[139,24,1236,0,"exports"],[139,31,1236,0],[140,4,1236,0,"enumerable"],[140,14,1236,0],[141,4,1236,0,"get"],[141,7,1236,0],[141,18,1236,0,"get"],[141,19,1236,0],[142,6,1236,0],[142,13,1236,371,"setLogLevel"],[142,24,1236,382],[143,4,1236,382],[144,2,1236,382],[145,2,1,0],[145,6,1,0,"_firebaseComponent"],[145,24,1,0],[145,27,1,0,"require"],[145,34,1,0],[145,35,1,0,"_dependencyMap"],[145,49,1,0],[146,2,2,0],[146,6,2,0,"_firebaseLogger"],[146,21,2,0],[146,24,2,0,"require"],[146,31,2,0],[146,32,2,0,"_dependencyMap"],[146,46,2,0],[147,2,3,0],[147,6,3,0,"_firebaseUtil"],[147,19,3,0],[147,22,3,0,"require"],[147,29,3,0],[147,30,3,0,"_dependencyMap"],[147,44,3,0],[148,2,5,0],[148,6,5,0,"_idb"],[148,10,5,0],[148,13,5,0,"require"],[148,20,5,0],[148,21,5,0,"_dependencyMap"],[148,35,5,0],[149,2,7,0],[150,0,8,0],[151,0,9,0],[152,0,10,0],[153,0,11,0],[154,0,12,0],[155,0,13,0],[156,0,14,0],[157,0,15,0],[158,0,16,0],[159,0,17,0],[160,0,18,0],[161,0,19,0],[162,0,20,0],[163,0,21,0],[164,0,22,0],[165,2,23,0],[165,8,23,6,"PlatformLoggerServiceImpl"],[165,33,23,31],[165,34,23,32],[166,4,24,4,"constructor"],[166,15,24,15,"constructor"],[166,16,24,16,"container"],[166,25,24,25],[166,27,24,27],[167,6,25,8],[167,10,25,12],[167,11,25,13,"container"],[167,20,25,22],[167,23,25,25,"container"],[167,32,25,34],[168,4,26,4],[169,4,27,4],[170,4,28,4],[171,4,29,4,"getPlatformInfoString"],[171,25,29,25,"getPlatformInfoString"],[171,26,29,25],[171,28,29,28],[172,6,30,8],[172,12,30,14,"providers"],[172,21,30,23],[172,24,30,26],[172,28,30,30],[172,29,30,31,"container"],[172,38,30,40],[172,39,30,41,"getProviders"],[172,51,30,53],[172,52,30,54],[172,53,30,55],[173,6,31,8],[174,6,32,8],[175,6,33,8],[175,13,33,15,"providers"],[175,22,33,24],[175,23,34,13,"map"],[175,26,34,16],[175,27,34,17,"provider"],[175,35,34,25],[175,39,34,29],[176,8,35,12],[176,12,35,16,"isVersionServiceProvider"],[176,36,35,40],[176,37,35,41,"provider"],[176,45,35,49],[176,46,35,50],[176,48,35,52],[177,10,36,16],[177,16,36,22,"service"],[177,23,36,29],[177,26,36,32,"provider"],[177,34,36,40],[177,35,36,41,"getImmediate"],[177,47,36,53],[177,48,36,54],[177,49,36,55],[178,10,37,16],[178,17,37,23],[178,20,37,26,"service"],[178,27,37,33],[178,28,37,34,"library"],[178,35,37,41],[178,39,37,45,"service"],[178,46,37,52],[178,47,37,53,"version"],[178,54,37,60],[178,56,37,62],[179,8,38,12],[179,9,38,13],[179,15,39,17],[180,10,40,16],[180,17,40,23],[180,21,40,27],[181,8,41,12],[182,6,42,8],[182,7,42,9],[182,8,42,10],[182,9,43,13,"filter"],[182,15,43,19],[182,16,43,20,"logString"],[182,25,43,29],[182,29,43,33,"logString"],[182,38,43,42],[182,39,43,43],[182,40,44,13,"join"],[182,44,44,17],[182,45,44,18],[182,48,44,21],[182,49,44,22],[183,4,45,4],[184,2,46,0],[185,2,47,0],[186,0,48,0],[187,0,49,0],[188,0,50,0],[189,0,51,0],[190,0,52,0],[191,0,53,0],[192,0,54,0],[193,2,55,0],[193,11,55,9,"isVersionServiceProvider"],[193,35,55,33,"isVersionServiceProvider"],[193,36,55,34,"provider"],[193,44,55,42],[193,46,55,44],[194,4,56,4],[194,10,56,10,"component"],[194,19,56,19],[194,22,56,22,"provider"],[194,30,56,30],[194,31,56,31,"getComponent"],[194,43,56,43],[194,44,56,44],[194,45,56,45],[195,4,57,4],[195,11,57,11,"component"],[195,20,57,20],[195,22,57,22,"type"],[195,26,57,26],[195,31,57,31],[195,40,57,40],[195,41,57,41],[196,2,58,0],[197,2,60,0],[197,8,60,6,"name$q"],[197,14,60,12],[197,17,60,15],[197,32,60,30],[198,2,61,0],[198,8,61,6,"version$1"],[198,17,61,15],[198,20,61,18],[198,28,61,26],[200,2,63,0],[201,0,64,0],[202,0,65,0],[203,0,66,0],[204,0,67,0],[205,0,68,0],[206,0,69,0],[207,0,70,0],[208,0,71,0],[209,0,72,0],[210,0,73,0],[211,0,74,0],[212,0,75,0],[213,0,76,0],[214,0,77,0],[215,0,78,0],[216,2,79,0],[216,8,79,6,"logger"],[216,14,79,12],[216,17,79,15],[216,21,79,19,"Logger"],[216,36,79,25],[216,37,79,25,"Logger"],[216,43,79,25],[216,44,79,26],[216,59,79,41],[216,60,79,42],[217,2,81,0],[217,8,81,6,"name$p"],[217,14,81,12],[217,17,81,15],[217,39,81,37],[218,2,83,0],[218,8,83,6,"name$o"],[218,14,83,12],[218,17,83,15],[218,45,83,43],[219,2,85,0],[219,8,85,6,"name$n"],[219,14,85,12],[219,17,85,15],[219,38,85,36],[220,2,87,0],[220,8,87,6,"name$m"],[220,14,87,12],[220,17,87,15],[220,45,87,43],[221,2,89,0],[221,8,89,6,"name$l"],[221,14,89,12],[221,17,89,15],[221,38,89,36],[222,2,91,0],[222,8,91,6,"name$k"],[222,14,91,12],[222,17,91,15],[222,33,91,31],[223,2,93,0],[223,8,93,6,"name$j"],[223,14,93,12],[223,17,93,15],[223,40,93,38],[224,2,95,0],[224,8,95,6,"name$i"],[224,14,95,12],[224,17,95,15],[224,37,95,35],[225,2,97,0],[225,8,97,6,"name$h"],[225,14,97,12],[225,17,97,15],[225,41,97,39],[226,2,99,0],[226,8,99,6,"name$g"],[226,14,99,12],[226,17,99,15],[226,44,99,42],[227,2,101,0],[227,8,101,6,"name$f"],[227,14,101,12],[227,17,101,15],[227,38,101,36],[228,2,103,0],[228,8,103,6,"name$e"],[228,14,103,12],[228,17,103,15],[228,45,103,43],[229,2,105,0],[229,8,105,6,"name$d"],[229,14,105,12],[229,17,105,15],[229,42,105,40],[230,2,107,0],[230,8,107,6,"name$c"],[230,14,107,12],[230,17,107,15],[230,49,107,47],[231,2,109,0],[231,8,109,6,"name$b"],[231,14,109,12],[231,17,109,15],[231,38,109,36],[232,2,111,0],[232,8,111,6,"name$a"],[232,14,111,12],[232,17,111,15],[232,45,111,43],[233,2,113,0],[233,8,113,6,"name$9"],[233,14,113,12],[233,17,113,15],[233,40,113,38],[234,2,115,0],[234,8,115,6,"name$8"],[234,14,115,12],[234,17,115,15],[234,47,115,45],[235,2,117,0],[235,8,117,6,"name$7"],[235,14,117,12],[235,17,117,15],[235,42,117,40],[236,2,119,0],[236,8,119,6,"name$6"],[236,14,119,12],[236,17,119,15],[236,49,119,47],[237,2,121,0],[237,8,121,6,"name$5"],[237,14,121,12],[237,17,121,15],[237,36,121,34],[238,2,123,0],[238,8,123,6,"name$4"],[238,14,123,12],[238,17,123,15],[238,43,123,41],[239,2,125,0],[239,8,125,6,"name$3"],[239,14,125,12],[239,17,125,15],[239,38,125,36],[240,2,127,0],[240,8,127,6,"name$2"],[240,14,127,12],[240,17,127,15],[240,31,127,29],[241,2,129,0],[241,8,129,6,"name$1"],[241,14,129,12],[241,17,129,15],[241,45,129,43],[242,2,131,0],[242,8,131,6,"name"],[242,12,131,10],[242,15,131,13],[242,25,131,23],[243,2,132,0],[243,8,132,6,"version"],[243,15,132,13],[243,18,132,16],[243,26,132,24],[245,2,134,0],[246,0,135,0],[247,0,136,0],[248,0,137,0],[249,0,138,0],[250,0,139,0],[251,0,140,0],[252,0,141,0],[253,0,142,0],[254,0,143,0],[255,0,144,0],[256,0,145,0],[257,0,146,0],[258,0,147,0],[259,0,148,0],[260,0,149,0],[261,2,150,0],[262,0,151,0],[263,0,152,0],[264,0,153,0],[265,0,154,0],[266,2,155,0],[266,8,155,6,"DEFAULT_ENTRY_NAME"],[266,26,155,24],[266,29,155,27],[266,40,155,38],[267,2,156,0],[267,8,156,6,"PLATFORM_LOG_STRING"],[267,27,156,25],[267,30,156,28],[268,4,157,4],[268,5,157,5,"name$q"],[268,11,157,11],[268,14,157,14],[268,25,157,25],[269,4,158,4],[269,5,158,5,"name$p"],[269,11,158,11],[269,14,158,14],[269,32,158,32],[270,4,159,4],[270,5,159,5,"name$n"],[270,11,159,11],[270,14,159,14],[270,30,159,30],[271,4,160,4],[271,5,160,5,"name$o"],[271,11,160,11],[271,14,160,14],[271,37,160,37],[272,4,161,4],[272,5,161,5,"name$l"],[272,11,161,11],[272,14,161,14],[272,30,161,30],[273,4,162,4],[273,5,162,5,"name$m"],[273,11,162,11],[273,14,162,14],[273,37,162,37],[274,4,163,4],[274,5,163,5,"name$k"],[274,11,163,11],[274,14,163,14],[274,25,163,25],[275,4,164,4],[275,5,164,5,"name$j"],[275,11,164,11],[275,14,164,14],[275,32,164,32],[276,4,165,4],[276,5,165,5,"name$i"],[276,11,165,11],[276,14,165,14],[276,25,165,25],[277,4,166,4],[277,5,166,5,"name$h"],[277,11,166,11],[277,14,166,14],[277,33,166,33],[278,4,167,4],[278,5,167,5,"name$g"],[278,11,167,11],[278,14,167,14],[278,32,167,32],[279,4,168,4],[279,5,168,5,"name$f"],[279,11,168,11],[279,14,168,14],[279,23,168,23],[280,4,169,4],[280,5,169,5,"name$e"],[280,11,169,11],[280,14,169,14],[280,30,169,30],[281,4,170,4],[281,5,170,5,"name$d"],[281,11,170,11],[281,14,170,14],[281,24,170,24],[282,4,171,4],[282,5,171,5,"name$c"],[282,11,171,11],[282,14,171,14],[282,31,171,31],[283,4,172,4],[283,5,172,5,"name$b"],[283,11,172,11],[283,14,172,14],[283,24,172,24],[284,4,173,4],[284,5,173,5,"name$a"],[284,11,173,11],[284,14,173,14],[284,31,173,31],[285,4,174,4],[285,5,174,5,"name$9"],[285,11,174,11],[285,14,174,14],[285,25,174,25],[286,4,175,4],[286,5,175,5,"name$8"],[286,11,175,11],[286,14,175,14],[286,32,175,32],[287,4,176,4],[287,5,176,5,"name$7"],[287,11,176,11],[287,14,176,14],[287,23,176,23],[288,4,177,4],[288,5,177,5,"name$6"],[288,11,177,11],[288,14,177,14],[288,30,177,30],[289,4,178,4],[289,5,178,5,"name$5"],[289,11,178,11],[289,14,178,14],[289,24,178,24],[290,4,179,4],[290,5,179,5,"name$4"],[290,11,179,11],[290,14,179,14],[290,31,179,31],[291,4,180,4],[291,5,180,5,"name$3"],[291,11,180,11],[291,14,180,14],[291,24,180,24],[292,4,181,4],[292,5,181,5,"name$1"],[292,11,181,11],[292,14,181,14],[292,31,181,31],[293,4,182,4],[293,5,182,5,"name$2"],[293,11,182,11],[293,14,182,14],[293,27,182,27],[294,4,183,4],[294,13,183,13],[294,15,183,15],[294,24,183,24],[295,4,183,26],[296,4,184,4],[296,5,184,5,"name"],[296,9,184,9],[296,12,184,12],[297,2,185,0],[297,3,185,1],[299,2,187,0],[300,0,188,0],[301,0,189,0],[302,0,190,0],[303,0,191,0],[304,0,192,0],[305,0,193,0],[306,0,194,0],[307,0,195,0],[308,0,196,0],[309,0,197,0],[310,0,198,0],[311,0,199,0],[312,0,200,0],[313,0,201,0],[314,0,202,0],[315,2,203,0],[316,0,204,0],[317,0,205,0],[318,2,206,0],[318,8,206,6,"_apps"],[318,13,206,11],[318,16,206,14],[318,20,206,18,"Map"],[318,23,206,21],[318,24,206,22],[318,25,206,23],[319,2,207,0],[320,0,208,0],[321,0,209,0],[322,2,210,0],[322,8,210,6,"_serverApps"],[322,19,210,17],[322,22,210,20],[322,26,210,24,"Map"],[322,29,210,27],[322,30,210,28],[322,31,210,29],[323,2,211,0],[324,0,212,0],[325,0,213,0],[326,0,214,0],[327,0,215,0],[328,2,216,0],[329,2,217,0],[329,8,217,6,"_components"],[329,19,217,17],[329,22,217,20],[329,26,217,24,"Map"],[329,29,217,27],[329,30,217,28],[329,31,217,29],[330,2,218,0],[331,0,219,0],[332,0,220,0],[333,0,221,0],[334,0,222,0],[335,2,223,0],[335,11,223,9,"_addComponent"],[335,24,223,22,"_addComponent"],[335,25,223,23,"app"],[335,28,223,26],[335,30,223,28,"component"],[335,39,223,37],[335,41,223,39],[336,4,224,4],[336,8,224,8],[337,6,225,8,"app"],[337,9,225,11],[337,10,225,12,"container"],[337,19,225,21],[337,20,225,22,"addComponent"],[337,32,225,34],[337,33,225,35,"component"],[337,42,225,44],[337,43,225,45],[338,4,226,4],[338,5,226,5],[338,6,227,4],[338,13,227,11,"e"],[338,14,227,12],[338,16,227,14],[339,6,228,8,"logger"],[339,12,228,14],[339,13,228,15,"debug"],[339,18,228,20],[339,19,228,21],[339,32,228,34,"component"],[339,41,228,43],[339,42,228,44,"name"],[339,46,228,48],[339,86,228,88,"app"],[339,89,228,91],[339,90,228,92,"name"],[339,94,228,96],[339,96,228,98],[339,98,228,100,"e"],[339,99,228,101],[339,100,228,102],[340,4,229,4],[341,2,230,0],[342,2,231,0],[343,0,232,0],[344,0,233,0],[345,0,234,0],[346,2,235,0],[346,11,235,9,"_addOrOverwriteComponent"],[346,35,235,33,"_addOrOverwriteComponent"],[346,36,235,34,"app"],[346,39,235,37],[346,41,235,39,"component"],[346,50,235,48],[346,52,235,50],[347,4,236,4,"app"],[347,7,236,7],[347,8,236,8,"container"],[347,17,236,17],[347,18,236,18,"addOrOverwriteComponent"],[347,41,236,41],[347,42,236,42,"component"],[347,51,236,51],[347,52,236,52],[348,2,237,0],[349,2,238,0],[350,0,239,0],[351,0,240,0],[352,0,241,0],[353,0,242,0],[354,0,243,0],[355,0,244,0],[356,2,245,0],[356,11,245,9,"_registerComponent"],[356,29,245,27,"_registerComponent"],[356,30,245,28,"component"],[356,39,245,37],[356,41,245,39],[357,4,246,4],[357,10,246,10,"componentName"],[357,23,246,23],[357,26,246,26,"component"],[357,35,246,35],[357,36,246,36,"name"],[357,40,246,40],[358,4,247,4],[358,8,247,8,"_components"],[358,19,247,19],[358,20,247,20,"has"],[358,23,247,23],[358,24,247,24,"componentName"],[358,37,247,37],[358,38,247,38],[358,40,247,40],[359,6,248,8,"logger"],[359,12,248,14],[359,13,248,15,"debug"],[359,18,248,20],[359,19,248,21],[359,73,248,75,"componentName"],[359,86,248,88],[359,89,248,91],[359,90,248,92],[360,6,249,8],[360,13,249,15],[360,18,249,20],[361,4,250,4],[362,4,251,4,"_components"],[362,15,251,15],[362,16,251,16,"set"],[362,19,251,19],[362,20,251,20,"componentName"],[362,33,251,33],[362,35,251,35,"component"],[362,44,251,44],[362,45,251,45],[363,4,252,4],[364,4,253,4],[364,9,253,9],[364,15,253,15,"app"],[364,18,253,18],[364,22,253,22,"_apps"],[364,27,253,27],[364,28,253,28,"values"],[364,34,253,34],[364,35,253,35],[364,36,253,36],[364,38,253,38],[365,6,254,8,"_addComponent"],[365,19,254,21],[365,20,254,22,"app"],[365,23,254,25],[365,25,254,27,"component"],[365,34,254,36],[365,35,254,37],[366,4,255,4],[367,4,256,4],[367,9,256,9],[367,15,256,15,"serverApp"],[367,24,256,24],[367,28,256,28,"_serverApps"],[367,39,256,39],[367,40,256,40,"values"],[367,46,256,46],[367,47,256,47],[367,48,256,48],[367,50,256,50],[368,6,257,8,"_addComponent"],[368,19,257,21],[368,20,257,22,"serverApp"],[368,29,257,31],[368,31,257,33,"component"],[368,40,257,42],[368,41,257,43],[369,4,258,4],[370,4,259,4],[370,11,259,11],[370,15,259,15],[371,2,260,0],[372,2,261,0],[373,0,262,0],[374,0,263,0],[375,0,264,0],[376,0,265,0],[377,0,266,0],[378,0,267,0],[379,0,268,0],[380,0,269,0],[381,2,270,0],[381,11,270,9,"_getProvider"],[381,23,270,21,"_getProvider"],[381,24,270,22,"app"],[381,27,270,25],[381,29,270,27,"name"],[381,33,270,31],[381,35,270,33],[382,4,271,4],[382,10,271,10,"heartbeatController"],[382,29,271,29],[382,32,271,32,"app"],[382,35,271,35],[382,36,271,36,"container"],[382,45,271,45],[382,46,272,9,"getProvider"],[382,57,272,20],[382,58,272,21],[382,69,272,32],[382,70,272,33],[382,71,273,9,"getImmediate"],[382,83,273,21],[382,84,273,22],[383,6,273,24,"optional"],[383,14,273,32],[383,16,273,34],[384,4,273,39],[384,5,273,40],[384,6,273,41],[385,4,274,4],[385,8,274,8,"heartbeatController"],[385,27,274,27],[385,29,274,29],[386,6,275,8],[386,11,275,13,"heartbeatController"],[386,30,275,32],[386,31,275,33,"triggerHeartbeat"],[386,47,275,49],[386,48,275,50],[386,49,275,51],[387,4,276,4],[388,4,277,4],[388,11,277,11,"app"],[388,14,277,14],[388,15,277,15,"container"],[388,24,277,24],[388,25,277,25,"getProvider"],[388,36,277,36],[388,37,277,37,"name"],[388,41,277,41],[388,42,277,42],[389,2,278,0],[390,2,279,0],[391,0,280,0],[392,0,281,0],[393,0,282,0],[394,0,283,0],[395,0,284,0],[396,0,285,0],[397,0,286,0],[398,2,287,0],[398,11,287,9,"_removeServiceInstance"],[398,33,287,31,"_removeServiceInstance"],[398,34,287,32,"app"],[398,37,287,35],[398,39,287,37,"name"],[398,43,287,41],[398,45,287,43,"instanceIdentifier"],[398,63,287,61],[398,66,287,64,"DEFAULT_ENTRY_NAME"],[398,84,287,82],[398,86,287,84],[399,4,288,4,"_getProvider"],[399,16,288,16],[399,17,288,17,"app"],[399,20,288,20],[399,22,288,22,"name"],[399,26,288,26],[399,27,288,27],[399,28,288,28,"clearInstance"],[399,41,288,41],[399,42,288,42,"instanceIdentifier"],[399,60,288,60],[399,61,288,61],[400,2,289,0],[401,2,290,0],[402,0,291,0],[403,0,292,0],[404,0,293,0],[405,0,294,0],[406,0,295,0],[407,0,296,0],[408,0,297,0],[409,2,298,0],[409,11,298,9,"_isFirebaseApp"],[409,25,298,23,"_isFirebaseApp"],[409,26,298,24,"obj"],[409,29,298,27],[409,31,298,29],[410,4,299,4],[410,11,299,11,"obj"],[410,14,299,14],[410,15,299,15,"options"],[410,22,299,22],[410,27,299,27,"undefined"],[410,36,299,36],[411,2,300,0],[412,2,301,0],[413,0,302,0],[414,0,303,0],[415,0,304,0],[416,0,305,0],[417,0,306,0],[418,0,307,0],[419,0,308,0],[420,2,309,0],[420,11,309,9,"_isFirebaseServerAppSettings"],[420,39,309,37,"_isFirebaseServerAppSettings"],[420,40,309,38,"obj"],[420,43,309,41],[420,45,309,43],[421,4,310,4],[421,8,310,8,"_isFirebaseApp"],[421,22,310,22],[421,23,310,23,"obj"],[421,26,310,26],[421,27,310,27],[421,29,310,29],[422,6,311,8],[422,13,311,15],[422,18,311,20],[423,4,312,4],[424,4,313,4],[424,11,313,12],[424,24,313,25],[424,28,313,29,"obj"],[424,31,313,32],[424,35,314,8],[424,50,314,23],[424,54,314,27,"obj"],[424,57,314,30],[424,61,315,8],[424,77,315,24],[424,81,315,28,"obj"],[424,84,315,31],[424,88,316,8],[424,120,316,40],[424,124,316,44,"obj"],[424,127,316,47],[425,2,317,0],[426,2,318,0],[427,0,319,0],[428,0,320,0],[429,0,321,0],[430,0,322,0],[431,0,323,0],[432,0,324,0],[433,0,325,0],[434,2,326,0],[434,11,326,9,"_isFirebaseServerApp"],[434,31,326,29,"_isFirebaseServerApp"],[434,32,326,30,"obj"],[434,35,326,33],[434,37,326,35],[435,4,327,4],[435,8,327,8,"obj"],[435,11,327,11],[435,16,327,16],[435,20,327,20],[435,24,327,24,"obj"],[435,27,327,27],[435,32,327,32,"undefined"],[435,41,327,41],[435,43,327,43],[436,6,328,8],[436,13,328,15],[436,18,328,20],[437,4,329,4],[438,4,330,4],[438,11,330,11,"obj"],[438,14,330,14],[438,15,330,15,"settings"],[438,23,330,23],[438,28,330,28,"undefined"],[438,37,330,37],[439,2,331,0],[440,2,332,0],[441,0,333,0],[442,0,334,0],[443,0,335,0],[444,0,336,0],[445,2,337,0],[445,11,337,9,"_clearComponents"],[445,27,337,25,"_clearComponents"],[445,28,337,25],[445,30,337,28],[446,4,338,4,"_components"],[446,15,338,15],[446,16,338,16,"clear"],[446,21,338,21],[446,22,338,22],[446,23,338,23],[447,2,339,0],[449,2,341,0],[450,0,342,0],[451,0,343,0],[452,0,344,0],[453,0,345,0],[454,0,346,0],[455,0,347,0],[456,0,348,0],[457,0,349,0],[458,0,350,0],[459,0,351,0],[460,0,352,0],[461,0,353,0],[462,0,354,0],[463,0,355,0],[464,0,356,0],[465,2,357,0],[465,8,357,6,"ERRORS"],[465,14,357,12],[465,17,357,15],[466,4,358,4],[466,5,358,5],[466,13,358,13],[466,14,358,14],[466,38,358,38],[466,88,358,88],[466,91,359,8],[466,119,359,36],[467,4,360,4],[467,5,360,5],[467,19,360,19],[467,20,360,20],[467,50,360,50],[467,82,360,82],[468,4,361,4],[468,5,361,5],[468,20,361,20],[468,21,361,21],[468,52,361,52],[468,133,361,133],[469,4,362,4],[469,5,362,5],[469,18,362,18],[469,19,362,19],[469,48,362,48],[469,97,362,97],[470,4,363,4],[470,5,363,5],[470,25,363,25],[470,26,363,26],[470,62,363,62],[470,100,363,100],[471,4,364,4],[471,5,364,5],[471,17,364,17],[471,18,364,18],[471,46,364,46],[471,119,364,119],[472,4,365,4],[472,5,365,5],[472,27,365,27],[472,28,365,28],[472,66,365,66],[472,120,365,120],[472,123,366,8],[472,147,366,32],[473,4,367,4],[473,5,367,5],[473,27,367,27],[473,28,367,28],[473,66,367,66],[473,121,367,121],[474,4,368,4],[474,5,368,5],[474,15,368,15],[474,16,368,16],[474,42,368,42],[474,121,368,121],[475,4,369,4],[475,5,369,5],[475,14,369,14],[475,15,369,15],[475,40,369,40],[475,124,369,124],[476,4,370,4],[476,5,370,5],[476,14,370,14],[476,15,370,15],[476,42,370,42],[476,124,370,124],[477,4,371,4],[477,5,371,5],[477,17,371,17],[477,18,371,18],[477,46,371,46],[477,131,371,131],[478,4,372,4],[478,5,372,5],[478,42,372,42],[478,43,372,43],[478,96,372,96],[478,201,372,201],[479,4,373,4],[479,5,373,5],[479,37,373,37],[479,38,373,38],[479,86,373,86],[480,2,374,0],[480,3,374,1],[481,2,375,0],[481,8,375,6,"ERROR_FACTORY"],[481,21,375,19],[481,24,375,22],[481,28,375,26,"ErrorFactory"],[481,41,375,38],[481,42,375,38,"ErrorFactory"],[481,54,375,38],[481,55,375,39],[481,60,375,44],[481,62,375,46],[481,72,375,56],[481,74,375,58,"ERRORS"],[481,80,375,64],[481,81,375,65],[483,2,377,0],[484,0,378,0],[485,0,379,0],[486,0,380,0],[487,0,381,0],[488,0,382,0],[489,0,383,0],[490,0,384,0],[491,0,385,0],[492,0,386,0],[493,0,387,0],[494,0,388,0],[495,0,389,0],[496,0,390,0],[497,0,391,0],[498,0,392,0],[499,2,393,0],[499,8,393,6,"FirebaseAppImpl"],[499,23,393,21],[499,24,393,22],[500,4,394,4,"constructor"],[500,15,394,15,"constructor"],[500,16,394,16,"options"],[500,23,394,23],[500,25,394,25,"config"],[500,31,394,31],[500,33,394,33,"container"],[500,42,394,42],[500,44,394,44],[501,6,395,8],[501,10,395,12],[501,11,395,13,"_isDeleted"],[501,21,395,23],[501,24,395,26],[501,29,395,31],[502,6,396,8],[502,10,396,12],[502,11,396,13,"_options"],[502,19,396,21],[502,22,396,21,"Object"],[502,28,396,21],[502,29,396,21,"assign"],[502,35,396,21],[502,40,396,29,"options"],[502,47,396,36],[502,48,396,38],[503,6,397,8],[503,10,397,12],[503,11,397,13,"_config"],[503,18,397,20],[503,21,397,20,"Object"],[503,27,397,20],[503,28,397,20,"assign"],[503,34,397,20],[503,39,397,28,"config"],[503,45,397,34],[503,46,397,36],[504,6,398,8],[504,10,398,12],[504,11,398,13,"_name"],[504,16,398,18],[504,19,398,21,"config"],[504,25,398,27],[504,26,398,28,"name"],[504,30,398,32],[505,6,399,8],[505,10,399,12],[505,11,399,13,"_automaticDataCollectionEnabled"],[505,42,399,44],[505,45,400,12,"config"],[505,51,400,18],[505,52,400,19,"automaticDataCollectionEnabled"],[505,82,400,49],[506,6,401,8],[506,10,401,12],[506,11,401,13,"_container"],[506,21,401,23],[506,24,401,26,"container"],[506,33,401,35],[507,6,402,8],[507,10,402,12],[507,11,402,13,"container"],[507,20,402,22],[507,21,402,23,"addComponent"],[507,33,402,35],[507,34,402,36],[507,38,402,40,"Component"],[507,56,402,49],[507,57,402,49,"Component"],[507,66,402,49],[507,67,402,50],[507,72,402,55],[507,74,402,57],[507,80,402,63],[507,84,402,67],[507,86,402,69],[507,94,402,77],[507,95,402,78],[507,121,402,104],[507,122,402,105],[507,123,402,106],[508,4,403,4],[509,4,404,4],[509,8,404,8,"automaticDataCollectionEnabled"],[509,38,404,38,"automaticDataCollectionEnabled"],[509,39,404,38],[509,41,404,41],[510,6,405,8],[510,10,405,12],[510,11,405,13,"checkDestroyed"],[510,25,405,27],[510,26,405,28],[510,27,405,29],[511,6,406,8],[511,13,406,15],[511,17,406,19],[511,18,406,20,"_automaticDataCollectionEnabled"],[511,49,406,51],[512,4,407,4],[513,4,408,4],[513,8,408,8,"automaticDataCollectionEnabled"],[513,38,408,38,"automaticDataCollectionEnabled"],[513,39,408,39,"val"],[513,42,408,42],[513,44,408,44],[514,6,409,8],[514,10,409,12],[514,11,409,13,"checkDestroyed"],[514,25,409,27],[514,26,409,28],[514,27,409,29],[515,6,410,8],[515,10,410,12],[515,11,410,13,"_automaticDataCollectionEnabled"],[515,42,410,44],[515,45,410,47,"val"],[515,48,410,50],[516,4,411,4],[517,4,412,4],[517,8,412,8,"name"],[517,12,412,12,"name"],[517,13,412,12],[517,15,412,15],[518,6,413,8],[518,10,413,12],[518,11,413,13,"checkDestroyed"],[518,25,413,27],[518,26,413,28],[518,27,413,29],[519,6,414,8],[519,13,414,15],[519,17,414,19],[519,18,414,20,"_name"],[519,23,414,25],[520,4,415,4],[521,4,416,4],[521,8,416,8,"options"],[521,15,416,15,"options"],[521,16,416,15],[521,18,416,18],[522,6,417,8],[522,10,417,12],[522,11,417,13,"checkDestroyed"],[522,25,417,27],[522,26,417,28],[522,27,417,29],[523,6,418,8],[523,13,418,15],[523,17,418,19],[523,18,418,20,"_options"],[523,26,418,28],[524,4,419,4],[525,4,420,4],[525,8,420,8,"config"],[525,14,420,14,"config"],[525,15,420,14],[525,17,420,17],[526,6,421,8],[526,10,421,12],[526,11,421,13,"checkDestroyed"],[526,25,421,27],[526,26,421,28],[526,27,421,29],[527,6,422,8],[527,13,422,15],[527,17,422,19],[527,18,422,20,"_config"],[527,25,422,27],[528,4,423,4],[529,4,424,4],[529,8,424,8,"container"],[529,17,424,17,"container"],[529,18,424,17],[529,20,424,20],[530,6,425,8],[530,13,425,15],[530,17,425,19],[530,18,425,20,"_container"],[530,28,425,30],[531,4,426,4],[532,4,427,4],[532,8,427,8,"isDeleted"],[532,17,427,17,"isDeleted"],[532,18,427,17],[532,20,427,20],[533,6,428,8],[533,13,428,15],[533,17,428,19],[533,18,428,20,"_isDeleted"],[533,28,428,30],[534,4,429,4],[535,4,430,4],[535,8,430,8,"isDeleted"],[535,17,430,17,"isDeleted"],[535,18,430,18,"val"],[535,21,430,21],[535,23,430,23],[536,6,431,8],[536,10,431,12],[536,11,431,13,"_isDeleted"],[536,21,431,23],[536,24,431,26,"val"],[536,27,431,29],[537,4,432,4],[538,4,433,4],[539,0,434,0],[540,0,435,0],[541,0,436,0],[542,4,437,4,"checkDestroyed"],[542,18,437,18,"checkDestroyed"],[542,19,437,18],[542,21,437,21],[543,6,438,8],[543,10,438,12],[543,14,438,16],[543,15,438,17,"isDeleted"],[543,24,438,26],[543,26,438,28],[544,8,439,12],[544,14,439,18,"ERROR_FACTORY"],[544,27,439,31],[544,28,439,32,"create"],[544,34,439,38],[544,35,439,39],[544,48,439,52],[544,49,439,53],[544,77,439,81],[545,10,439,83,"appName"],[545,17,439,90],[545,19,439,92],[545,23,439,96],[545,24,439,97,"_name"],[546,8,439,103],[546,9,439,104],[546,10,439,105],[547,6,440,8],[548,4,441,4],[549,2,442,0],[551,2,444,0],[552,0,445,0],[553,0,446,0],[554,0,447,0],[555,0,448,0],[556,0,449,0],[557,0,450,0],[558,0,451,0],[559,0,452,0],[560,0,453,0],[561,0,454,0],[562,0,455,0],[563,0,456,0],[564,0,457,0],[565,0,458,0],[566,0,459,0],[567,2,460,0],[568,2,461,0],[569,2,462,0],[570,2,463,0],[570,11,463,9,"validateTokenTTL"],[570,27,463,25,"validateTokenTTL"],[570,28,463,26,"base64Token"],[570,39,463,37],[570,41,463,39,"tokenName"],[570,50,463,48],[570,52,463,50],[571,4,464,4],[571,10,464,10,"secondPart"],[571,20,464,20],[571,23,464,23],[571,27,464,23,"base64Decode"],[571,40,464,35],[571,41,464,35,"base64Decode"],[571,53,464,35],[571,55,464,36,"base64Token"],[571,66,464,47],[571,67,464,48,"split"],[571,72,464,53],[571,73,464,54],[571,76,464,57],[571,77,464,58],[571,78,464,59],[571,79,464,60],[571,80,464,61],[571,81,464,62],[572,4,465,4],[572,8,465,8,"secondPart"],[572,18,465,18],[572,23,465,23],[572,27,465,27],[572,29,465,29],[573,6,466,8,"console"],[573,13,466,15],[573,14,466,16,"error"],[573,19,466,21],[573,20,466,22],[573,41,466,43,"tokenName"],[573,50,466,52],[573,97,466,99],[573,98,466,100],[574,6,467,8],[575,4,468,4],[576,4,469,4],[576,10,469,10,"expClaim"],[576,18,469,18],[576,21,469,21,"JSON"],[576,25,469,25],[576,26,469,26,"parse"],[576,31,469,31],[576,32,469,32,"secondPart"],[576,42,469,42],[576,43,469,43],[576,44,469,44,"exp"],[576,47,469,47],[577,4,470,4],[577,8,470,8,"expClaim"],[577,16,470,16],[577,21,470,21,"undefined"],[577,30,470,30],[577,32,470,32],[578,6,471,8,"console"],[578,13,471,15],[578,14,471,16,"error"],[578,19,471,21],[578,20,471,22],[578,41,471,43,"tokenName"],[578,50,471,52],[578,101,471,103],[578,102,471,104],[579,6,472,8],[580,4,473,4],[581,4,474,4],[581,10,474,10,"exp"],[581,13,474,13],[581,16,474,16,"JSON"],[581,20,474,20],[581,21,474,21,"parse"],[581,26,474,26],[581,27,474,27,"secondPart"],[581,37,474,37],[581,38,474,38],[581,39,474,39,"exp"],[581,42,474,42],[581,45,474,45],[581,49,474,49],[582,4,475,4],[582,10,475,10,"now"],[582,13,475,13],[582,16,475,16],[582,20,475,20,"Date"],[582,24,475,24],[582,25,475,25],[582,26,475,26],[582,27,475,27,"getTime"],[582,34,475,34],[582,35,475,35],[582,36,475,36],[583,4,476,4],[583,10,476,10,"diff"],[583,14,476,14],[583,17,476,17,"exp"],[583,20,476,20],[583,23,476,23,"now"],[583,26,476,26],[584,4,477,4],[584,8,477,8,"diff"],[584,12,477,12],[584,16,477,16],[584,17,477,17],[584,19,477,19],[585,6,478,8,"console"],[585,13,478,15],[585,14,478,16,"error"],[585,19,478,21],[585,20,478,22],[585,41,478,43,"tokenName"],[585,50,478,52],[585,87,478,89],[585,88,478,90],[586,4,479,4],[587,2,480,0],[588,2,481,0],[588,8,481,6,"FirebaseServerAppImpl"],[588,29,481,27],[588,38,481,36,"FirebaseAppImpl"],[588,53,481,51],[588,54,481,52],[589,4,482,4,"constructor"],[589,15,482,15,"constructor"],[589,16,482,16,"options"],[589,23,482,23],[589,25,482,25,"serverConfig"],[589,37,482,37],[589,39,482,39,"name"],[589,43,482,43],[589,45,482,45,"container"],[589,54,482,54],[589,56,482,56],[590,6,483,8],[591,6,484,8],[591,12,484,14,"automaticDataCollectionEnabled"],[591,42,484,44],[591,45,484,47,"serverConfig"],[591,57,484,59],[591,58,484,60,"automaticDataCollectionEnabled"],[591,88,484,90],[591,93,484,95,"undefined"],[591,102,484,104],[591,105,485,14,"serverConfig"],[591,117,485,26],[591,118,485,27,"automaticDataCollectionEnabled"],[591,148,485,57],[591,151,486,14],[591,155,486,18],[592,6,487,8],[593,6,488,8],[593,12,488,14,"config"],[593,18,488,20],[593,21,488,23],[594,8,489,12,"name"],[594,12,489,16],[595,8,490,12,"automaticDataCollectionEnabled"],[596,6,491,8],[596,7,491,9],[597,6,492,8],[597,10,492,12,"options"],[597,17,492,19],[597,18,492,20,"apiKey"],[597,24,492,26],[597,29,492,31,"undefined"],[597,38,492,40],[597,40,492,42],[598,8,493,12],[599,8,494,12],[599,13,494,17],[599,14,494,18,"options"],[599,21,494,25],[599,23,494,27,"config"],[599,29,494,33],[599,31,494,35,"container"],[599,40,494,44],[599,41,494,45],[600,6,495,8],[600,7,495,9],[600,13,496,13],[601,8,497,12],[601,14,497,18,"appImpl"],[601,21,497,25],[601,24,497,28,"options"],[601,31,497,35],[602,8,498,12],[602,13,498,17],[602,14,498,18,"appImpl"],[602,21,498,25],[602,22,498,26,"options"],[602,29,498,33],[602,31,498,35,"config"],[602,37,498,41],[602,39,498,43,"container"],[602,48,498,52],[602,49,498,53],[603,6,499,8],[604,6,500,8],[605,6,501,8],[605,10,501,12],[605,11,501,13,"_serverConfig"],[605,24,501,26],[605,27,501,26,"Object"],[605,33,501,26],[605,34,501,26,"assign"],[605,40,501,26],[606,8,502,12,"automaticDataCollectionEnabled"],[607,6,502,42],[607,9,503,15,"serverConfig"],[607,21,503,27],[607,22,504,9],[608,6,505,8],[609,6,506,8],[609,10,506,12],[609,14,506,16],[609,15,506,17,"_serverConfig"],[609,28,506,30],[609,29,506,31,"authIdToken"],[609,40,506,42],[609,42,506,44],[610,8,507,12,"validateTokenTTL"],[610,24,507,28],[610,25,507,29],[610,29,507,33],[610,30,507,34,"_serverConfig"],[610,43,507,47],[610,44,507,48,"authIdToken"],[610,55,507,59],[610,57,507,61],[610,70,507,74],[610,71,507,75],[611,6,508,8],[612,6,509,8],[613,6,510,8],[613,10,510,12],[613,14,510,16],[613,15,510,17,"_serverConfig"],[613,28,510,30],[613,29,510,31,"appCheckToken"],[613,42,510,44],[613,44,510,46],[614,8,511,12,"validateTokenTTL"],[614,24,511,28],[614,25,511,29],[614,29,511,33],[614,30,511,34,"_serverConfig"],[614,43,511,47],[614,44,511,48,"appCheckToken"],[614,57,511,61],[614,59,511,63],[614,74,511,78],[614,75,511,79],[615,6,512,8],[616,6,513,8],[616,10,513,12],[616,11,513,13,"_finalizationRegistry"],[616,32,513,34],[616,35,513,37],[616,39,513,41],[617,6,514,8],[617,10,514,12],[617,17,514,19,"FinalizationRegistry"],[617,37,514,39],[617,42,514,44],[617,53,514,55],[617,55,514,57],[618,8,515,12],[618,12,515,16],[618,13,515,17,"_finalizationRegistry"],[618,34,515,38],[618,37,515,41],[618,41,515,45,"FinalizationRegistry"],[618,61,515,65],[618,62,515,66],[618,68,515,72],[619,10,516,16],[619,14,516,20],[619,15,516,21,"automaticCleanup"],[619,31,516,37],[619,32,516,38],[619,33,516,39],[620,8,517,12],[620,9,517,13],[620,10,517,14],[621,6,518,8],[622,6,519,8],[622,10,519,12],[622,11,519,13,"_refCount"],[622,20,519,22],[622,23,519,25],[622,24,519,26],[623,6,520,8],[623,10,520,12],[623,11,520,13,"incRefCount"],[623,22,520,24],[623,23,520,25],[623,27,520,29],[623,28,520,30,"_serverConfig"],[623,41,520,43],[623,42,520,44,"releaseOnDeref"],[623,56,520,58],[623,57,520,59],[624,6,521,8],[625,6,522,8],[626,6,523,8],[626,10,523,12],[626,11,523,13,"_serverConfig"],[626,24,523,26],[626,25,523,27,"releaseOnDeref"],[626,39,523,41],[626,42,523,44,"undefined"],[626,51,523,53],[627,6,524,8,"serverConfig"],[627,18,524,20],[627,19,524,21,"releaseOnDeref"],[627,33,524,35],[627,36,524,38,"undefined"],[627,45,524,47],[628,6,525,8,"registerVersion"],[628,21,525,23],[628,22,525,24,"name$q"],[628,28,525,30],[628,30,525,32,"version$1"],[628,39,525,41],[628,41,525,43],[628,52,525,54],[628,53,525,55],[629,4,526,4],[630,4,527,4,"toJSON"],[630,10,527,10,"toJSON"],[630,11,527,10],[630,13,527,13],[631,6,528,8],[631,13,528,15,"undefined"],[631,22,528,24],[632,4,529,4],[633,4,530,4],[633,8,530,8,"refCount"],[633,16,530,16,"refCount"],[633,17,530,16],[633,19,530,19],[634,6,531,8],[634,13,531,15],[634,17,531,19],[634,18,531,20,"_refCount"],[634,27,531,29],[635,4,532,4],[636,4,533,4],[637,4,534,4],[638,4,535,4,"incRefCount"],[638,15,535,15,"incRefCount"],[638,16,535,16,"obj"],[638,19,535,19],[638,21,535,21],[639,6,536,8],[639,10,536,12],[639,14,536,16],[639,15,536,17,"isDeleted"],[639,24,536,26],[639,26,536,28],[640,8,537,12],[641,6,538,8],[642,6,539,8],[642,10,539,12],[642,11,539,13,"_refCount"],[642,20,539,22],[642,22,539,24],[643,6,540,8],[643,10,540,12,"obj"],[643,13,540,15],[643,18,540,20,"undefined"],[643,27,540,29],[643,31,540,33],[643,35,540,37],[643,36,540,38,"_finalizationRegistry"],[643,57,540,59],[643,62,540,64],[643,66,540,68],[643,68,540,70],[644,8,541,12],[644,12,541,16],[644,13,541,17,"_finalizationRegistry"],[644,34,541,38],[644,35,541,39,"register"],[644,43,541,47],[644,44,541,48,"obj"],[644,47,541,51],[644,49,541,53],[644,53,541,57],[644,54,541,58],[645,6,542,8],[646,4,543,4],[647,4,544,4],[648,4,545,4,"decRefCount"],[648,15,545,15,"decRefCount"],[648,16,545,15],[648,18,545,18],[649,6,546,8],[649,10,546,12],[649,14,546,16],[649,15,546,17,"isDeleted"],[649,24,546,26],[649,26,546,28],[650,8,547,12],[650,15,547,19],[650,16,547,20],[651,6,548,8],[652,6,549,8],[652,13,549,15],[652,15,549,17],[652,19,549,21],[652,20,549,22,"_refCount"],[652,29,549,31],[653,4,550,4],[654,4,551,4],[655,4,552,4],[656,4,553,4],[657,4,554,4,"automaticCleanup"],[657,20,554,20,"automaticCleanup"],[657,21,554,20],[657,23,554,23],[658,6,555,8],[658,11,555,13,"deleteApp"],[658,20,555,22],[658,21,555,23],[658,25,555,27],[658,26,555,28],[659,4,556,4],[660,4,557,4],[660,8,557,8,"settings"],[660,16,557,16,"settings"],[660,17,557,16],[660,19,557,19],[661,6,558,8],[661,10,558,12],[661,11,558,13,"checkDestroyed"],[661,25,558,27],[661,26,558,28],[661,27,558,29],[662,6,559,8],[662,13,559,15],[662,17,559,19],[662,18,559,20,"_serverConfig"],[662,31,559,33],[663,4,560,4],[664,4,561,4],[665,0,562,0],[666,0,563,0],[667,0,564,0],[668,4,565,4,"checkDestroyed"],[668,18,565,18,"checkDestroyed"],[668,19,565,18],[668,21,565,21],[669,6,566,8],[669,10,566,12],[669,14,566,16],[669,15,566,17,"isDeleted"],[669,24,566,26],[669,26,566,28],[670,8,567,12],[670,14,567,18,"ERROR_FACTORY"],[670,27,567,31],[670,28,567,32,"create"],[670,34,567,38],[670,35,567,39],[670,55,567,59],[670,56,567,60],[670,89,567,93],[670,90,567,94],[671,6,568,8],[672,4,569,4],[673,2,570,0],[675,2,572,0],[676,0,573,0],[677,0,574,0],[678,0,575,0],[679,0,576,0],[680,0,577,0],[681,0,578,0],[682,0,579,0],[683,0,580,0],[684,0,581,0],[685,0,582,0],[686,0,583,0],[687,0,584,0],[688,0,585,0],[689,0,586,0],[690,0,587,0],[691,2,588,0],[692,0,589,0],[693,0,590,0],[694,0,591,0],[695,0,592,0],[696,2,593,0],[696,8,593,6,"SDK_VERSION"],[696,19,593,17],[696,22,593,20,"version"],[696,29,593,27],[697,2,594,0],[697,11,594,9,"initializeApp"],[697,24,594,22,"initializeApp"],[697,25,594,23,"_options"],[697,33,594,31],[697,35,594,33,"rawConfig"],[697,44,594,42],[697,47,594,45],[697,48,594,46],[697,49,594,47],[697,51,594,49],[698,4,595,4],[698,8,595,8,"options"],[698,15,595,15],[698,18,595,18,"_options"],[698,26,595,26],[699,4,596,4],[699,8,596,8],[699,15,596,15,"rawConfig"],[699,24,596,24],[699,29,596,29],[699,37,596,37],[699,39,596,39],[700,6,597,8],[700,12,597,14,"name"],[700,16,597,18],[700,19,597,21,"rawConfig"],[700,28,597,30],[701,6,598,8,"rawConfig"],[701,15,598,17],[701,18,598,20],[702,8,598,22,"name"],[703,6,598,27],[703,7,598,28],[704,4,599,4],[705,4,600,4],[705,10,600,10,"config"],[705,16,600,16],[705,19,600,16,"Object"],[705,25,600,16],[705,26,600,16,"assign"],[705,32,600,16],[706,6,601,8,"name"],[706,10,601,12],[706,12,601,14,"DEFAULT_ENTRY_NAME"],[706,30,601,32],[707,6,602,8,"automaticDataCollectionEnabled"],[707,36,602,38],[707,38,602,40],[708,4,602,44],[708,7,603,11,"rawConfig"],[708,16,603,20],[708,17,604,5],[709,4,605,4],[709,10,605,10,"name"],[709,14,605,14],[709,17,605,17,"config"],[709,23,605,23],[709,24,605,24,"name"],[709,28,605,28],[710,4,606,4],[710,8,606,8],[710,15,606,15,"name"],[710,19,606,19],[710,24,606,24],[710,32,606,32],[710,36,606,36],[710,37,606,37,"name"],[710,41,606,41],[710,43,606,43],[711,6,607,8],[711,12,607,14,"ERROR_FACTORY"],[711,25,607,27],[711,26,607,28,"create"],[711,32,607,34],[711,33,607,35],[711,47,607,49],[711,48,607,50],[711,77,607,79],[712,8,608,12,"appName"],[712,15,608,19],[712,17,608,21,"String"],[712,23,608,27],[712,24,608,28,"name"],[712,28,608,32],[713,6,609,8],[713,7,609,9],[713,8,609,10],[714,4,610,4],[715,4,611,4,"options"],[715,11,611,11],[715,16,611,16,"options"],[715,23,611,23],[715,26,611,26],[715,30,611,26,"getDefaultAppConfig"],[715,43,611,45],[715,44,611,45,"getDefaultAppConfig"],[715,63,611,45],[715,65,611,46],[715,66,611,47],[715,67,611,48],[716,4,612,4],[716,8,612,8],[716,9,612,9,"options"],[716,16,612,16],[716,18,612,18],[717,6,613,8],[717,12,613,14,"ERROR_FACTORY"],[717,25,613,27],[717,26,613,28,"create"],[717,32,613,34],[717,33,613,35],[717,45,613,47],[717,46,613,48],[717,71,613,73],[717,72,613,74],[718,4,614,4],[719,4,615,4],[719,10,615,10,"existingApp"],[719,21,615,21],[719,24,615,24,"_apps"],[719,29,615,29],[719,30,615,30,"get"],[719,33,615,33],[719,34,615,34,"name"],[719,38,615,38],[719,39,615,39],[720,4,616,4],[720,8,616,8,"existingApp"],[720,19,616,19],[720,21,616,21],[721,6,617,8],[722,6,618,8],[722,10,618,12],[722,14,618,12,"deepEqual"],[722,27,618,21],[722,28,618,21,"deepEqual"],[722,37,618,21],[722,39,618,22,"options"],[722,46,618,29],[722,48,618,31,"existingApp"],[722,59,618,42],[722,60,618,43,"options"],[722,67,618,50],[722,68,618,51],[722,72,619,12],[722,76,619,12,"deepEqual"],[722,89,619,21],[722,90,619,21,"deepEqual"],[722,99,619,21],[722,101,619,22,"config"],[722,107,619,28],[722,109,619,30,"existingApp"],[722,120,619,41],[722,121,619,42,"config"],[722,127,619,48],[722,128,619,49],[722,130,619,51],[723,8,620,12],[723,15,620,19,"existingApp"],[723,26,620,30],[724,6,621,8],[724,7,621,9],[724,13,622,13],[725,8,623,12],[725,14,623,18,"ERROR_FACTORY"],[725,27,623,31],[725,28,623,32,"create"],[725,34,623,38],[725,35,623,39],[725,50,623,54],[725,51,623,55],[725,81,623,85],[726,10,623,87,"appName"],[726,17,623,94],[726,19,623,96,"name"],[727,8,623,101],[727,9,623,102],[727,10,623,103],[728,6,624,8],[729,4,625,4],[730,4,626,4],[730,10,626,10,"container"],[730,19,626,19],[730,22,626,22],[730,26,626,26,"ComponentContainer"],[730,44,626,44],[730,45,626,44,"ComponentContainer"],[730,63,626,44],[730,64,626,45,"name"],[730,68,626,49],[730,69,626,50],[731,4,627,4],[731,9,627,9],[731,15,627,15,"component"],[731,24,627,24],[731,28,627,28,"_components"],[731,39,627,39],[731,40,627,40,"values"],[731,46,627,46],[731,47,627,47],[731,48,627,48],[731,50,627,50],[732,6,628,8,"container"],[732,15,628,17],[732,16,628,18,"addComponent"],[732,28,628,30],[732,29,628,31,"component"],[732,38,628,40],[732,39,628,41],[733,4,629,4],[734,4,630,4],[734,10,630,10,"newApp"],[734,16,630,16],[734,19,630,19],[734,23,630,23,"FirebaseAppImpl"],[734,38,630,38],[734,39,630,39,"options"],[734,46,630,46],[734,48,630,48,"config"],[734,54,630,54],[734,56,630,56,"container"],[734,65,630,65],[734,66,630,66],[735,4,631,4,"_apps"],[735,9,631,9],[735,10,631,10,"set"],[735,13,631,13],[735,14,631,14,"name"],[735,18,631,18],[735,20,631,20,"newApp"],[735,26,631,26],[735,27,631,27],[736,4,632,4],[736,11,632,11,"newApp"],[736,17,632,17],[737,2,633,0],[738,2,634,0],[738,11,634,9,"initializeServerApp"],[738,30,634,28,"initializeServerApp"],[738,31,634,29,"_options"],[738,39,634,37],[738,41,634,39,"_serverAppConfig"],[738,57,634,55],[738,60,634,58],[738,61,634,59],[738,62,634,60],[738,64,634,62],[739,4,635,4],[739,8,635,8],[739,12,635,8,"isBrowser"],[739,25,635,17],[739,26,635,17,"isBrowser"],[739,35,635,17],[739,37,635,18],[739,38,635,19],[739,42,635,23],[739,43,635,24],[739,47,635,24,"isWebWorker"],[739,60,635,35],[739,61,635,35,"isWebWorker"],[739,72,635,35],[739,74,635,36],[739,75,635,37],[739,77,635,39],[740,6,636,8],[741,6,637,8],[741,12,637,14,"ERROR_FACTORY"],[741,25,637,27],[741,26,637,28,"create"],[741,32,637,34],[741,33,637,35],[741,65,637,67],[741,66,637,68],[741,111,637,113],[741,112,637,114],[742,4,638,4],[743,4,639,4],[743,8,639,8,"firebaseOptions"],[743,23,639,23],[744,4,640,4],[744,8,640,8,"serverAppSettings"],[744,25,640,25],[744,28,640,28,"_serverAppConfig"],[744,44,640,44],[744,48,640,48],[744,49,640,49],[744,50,640,50],[745,4,641,4],[745,8,641,8,"_options"],[745,16,641,16],[745,18,641,18],[746,6,642,8],[746,10,642,12,"_isFirebaseApp"],[746,24,642,26],[746,25,642,27,"_options"],[746,33,642,35],[746,34,642,36],[746,36,642,38],[747,8,643,12,"firebaseOptions"],[747,23,643,27],[747,26,643,30,"_options"],[747,34,643,38],[747,35,643,39,"options"],[747,42,643,46],[748,6,644,8],[748,7,644,9],[748,13,645,13],[748,17,645,17,"_isFirebaseServerAppSettings"],[748,45,645,45],[748,46,645,46,"_options"],[748,54,645,54],[748,55,645,55],[748,57,645,57],[749,8,646,12,"serverAppSettings"],[749,25,646,29],[749,28,646,32,"_options"],[749,36,646,40],[750,6,647,8],[750,7,647,9],[750,13,648,13],[751,8,649,12,"firebaseOptions"],[751,23,649,27],[751,26,649,30,"_options"],[751,34,649,38],[752,6,650,8],[753,4,651,4],[754,4,652,4],[754,8,652,8,"serverAppSettings"],[754,25,652,25],[754,26,652,26,"automaticDataCollectionEnabled"],[754,56,652,56],[754,61,652,61,"undefined"],[754,70,652,70],[754,72,652,72],[755,6,653,8,"serverAppSettings"],[755,23,653,25],[755,24,653,26,"automaticDataCollectionEnabled"],[755,54,653,56],[755,57,653,59],[755,61,653,63],[756,4,654,4],[757,4,655,4,"firebaseOptions"],[757,19,655,19],[757,24,655,24,"firebaseOptions"],[757,39,655,39],[757,42,655,42],[757,46,655,42,"getDefaultAppConfig"],[757,59,655,61],[757,60,655,61,"getDefaultAppConfig"],[757,79,655,61],[757,81,655,62],[757,82,655,63],[757,83,655,64],[758,4,656,4],[758,8,656,8],[758,9,656,9,"firebaseOptions"],[758,24,656,24],[758,26,656,26],[759,6,657,8],[759,12,657,14,"ERROR_FACTORY"],[759,25,657,27],[759,26,657,28,"create"],[759,32,657,34],[759,33,657,35],[759,45,657,47],[759,46,657,48],[759,71,657,73],[759,72,657,74],[760,4,658,4],[761,4,659,4],[762,4,660,4],[762,10,660,10,"nameObj"],[762,17,660,17],[762,20,660,17,"Object"],[762,26,660,17],[762,27,660,17,"assign"],[762,33,660,17],[762,38,661,11,"serverAppSettings"],[762,55,661,28],[762,57,662,11,"firebaseOptions"],[762,72,662,26],[762,73,663,5],[763,4,664,4],[764,4,665,4],[765,4,666,4],[765,8,666,8,"nameObj"],[765,15,666,15],[765,16,666,16,"releaseOnDeref"],[765,30,666,30],[765,35,666,35,"undefined"],[765,44,666,44],[765,46,666,46],[766,6,667,8],[766,13,667,15,"nameObj"],[766,20,667,22],[766,21,667,23,"releaseOnDeref"],[766,35,667,37],[767,4,668,4],[768,4,669,4],[768,10,669,10,"hashCode"],[768,18,669,18],[768,21,669,22,"s"],[768,22,669,23],[768,26,669,28],[769,6,670,8],[769,13,670,15],[769,14,670,16],[769,17,670,19,"s"],[769,18,670,20],[769,19,670,21],[769,20,670,22,"reduce"],[769,26,670,28],[769,27,670,29],[769,28,670,30,"hash"],[769,32,670,34],[769,34,670,36,"c"],[769,35,670,37],[769,40,670,43,"Math"],[769,44,670,47],[769,45,670,48,"imul"],[769,49,670,52],[769,50,670,53],[769,52,670,55],[769,54,670,57,"hash"],[769,58,670,61],[769,59,670,62],[769,62,670,65,"c"],[769,63,670,66],[769,64,670,67,"charCodeAt"],[769,74,670,77],[769,75,670,78],[769,76,670,79],[769,77,670,80],[769,80,670,84],[769,81,670,85],[769,83,670,87],[769,84,670,88],[769,85,670,89],[770,4,671,4],[770,5,671,5],[771,4,672,4],[771,8,672,8,"serverAppSettings"],[771,25,672,25],[771,26,672,26,"releaseOnDeref"],[771,40,672,40],[771,45,672,45,"undefined"],[771,54,672,54],[771,56,672,56],[772,6,673,8],[772,10,673,12],[772,17,673,19,"FinalizationRegistry"],[772,37,673,39],[772,42,673,44],[772,53,673,55],[772,55,673,57],[773,8,674,12],[773,14,674,18,"ERROR_FACTORY"],[773,27,674,31],[773,28,674,32,"create"],[773,34,674,38],[773,35,674,39],[773,72,674,76],[773,73,674,77],[773,125,674,129],[773,126,674,130],[773,127,674,131],[773,128,674,132],[774,6,675,8],[775,4,676,4],[776,4,677,4],[776,10,677,10,"nameString"],[776,20,677,20],[776,23,677,23],[776,25,677,25],[776,28,677,28,"hashCode"],[776,36,677,36],[776,37,677,37,"JSON"],[776,41,677,41],[776,42,677,42,"stringify"],[776,51,677,51],[776,52,677,52,"nameObj"],[776,59,677,59],[776,60,677,60],[776,61,677,61],[777,4,678,4],[777,10,678,10,"existingApp"],[777,21,678,21],[777,24,678,24,"_serverApps"],[777,35,678,35],[777,36,678,36,"get"],[777,39,678,39],[777,40,678,40,"nameString"],[777,50,678,50],[777,51,678,51],[778,4,679,4],[778,8,679,8,"existingApp"],[778,19,679,19],[778,21,679,21],[779,6,680,8,"existingApp"],[779,17,680,19],[779,18,680,20,"incRefCount"],[779,29,680,31],[779,30,680,32,"serverAppSettings"],[779,47,680,49],[779,48,680,50,"releaseOnDeref"],[779,62,680,64],[779,63,680,65],[780,6,681,8],[780,13,681,15,"existingApp"],[780,24,681,26],[781,4,682,4],[782,4,683,4],[782,10,683,10,"container"],[782,19,683,19],[782,22,683,22],[782,26,683,26,"ComponentContainer"],[782,44,683,44],[782,45,683,44,"ComponentContainer"],[782,63,683,44],[782,64,683,45,"nameString"],[782,74,683,55],[782,75,683,56],[783,4,684,4],[783,9,684,9],[783,15,684,15,"component"],[783,24,684,24],[783,28,684,28,"_components"],[783,39,684,39],[783,40,684,40,"values"],[783,46,684,46],[783,47,684,47],[783,48,684,48],[783,50,684,50],[784,6,685,8,"container"],[784,15,685,17],[784,16,685,18,"addComponent"],[784,28,685,30],[784,29,685,31,"component"],[784,38,685,40],[784,39,685,41],[785,4,686,4],[786,4,687,4],[786,10,687,10,"newApp"],[786,16,687,16],[786,19,687,19],[786,23,687,23,"FirebaseServerAppImpl"],[786,44,687,44],[786,45,687,45,"firebaseOptions"],[786,60,687,60],[786,62,687,62,"serverAppSettings"],[786,79,687,79],[786,81,687,81,"nameString"],[786,91,687,91],[786,93,687,93,"container"],[786,102,687,102],[786,103,687,103],[787,4,688,4,"_serverApps"],[787,15,688,15],[787,16,688,16,"set"],[787,19,688,19],[787,20,688,20,"nameString"],[787,30,688,30],[787,32,688,32,"newApp"],[787,38,688,38],[787,39,688,39],[788,4,689,4],[788,11,689,11,"newApp"],[788,17,689,17],[789,2,690,0],[790,2,691,0],[791,0,692,0],[792,0,693,0],[793,0,694,0],[794,0,695,0],[795,0,696,0],[796,0,697,0],[797,0,698,0],[798,0,699,0],[799,0,700,0],[800,0,701,0],[801,0,702,0],[802,0,703,0],[803,0,704,0],[804,0,705,0],[805,0,706,0],[806,0,707,0],[807,0,708,0],[808,0,709,0],[809,0,710,0],[810,0,711,0],[811,0,712,0],[812,0,713,0],[813,0,714,0],[814,0,715,0],[815,0,716,0],[816,0,717,0],[817,0,718,0],[818,0,719,0],[819,2,720,0],[819,11,720,9,"getApp"],[819,17,720,15,"getApp"],[819,18,720,16,"name"],[819,22,720,20],[819,25,720,23,"DEFAULT_ENTRY_NAME"],[819,43,720,41],[819,45,720,43],[820,4,721,4],[820,10,721,10,"app"],[820,13,721,13],[820,16,721,16,"_apps"],[820,21,721,21],[820,22,721,22,"get"],[820,25,721,25],[820,26,721,26,"name"],[820,30,721,30],[820,31,721,31],[821,4,722,4],[821,8,722,8],[821,9,722,9,"app"],[821,12,722,12],[821,16,722,16,"name"],[821,20,722,20],[821,25,722,25,"DEFAULT_ENTRY_NAME"],[821,43,722,43],[821,47,722,47],[821,51,722,47,"getDefaultAppConfig"],[821,64,722,66],[821,65,722,66,"getDefaultAppConfig"],[821,84,722,66],[821,86,722,67],[821,87,722,68],[821,89,722,70],[822,6,723,8],[822,13,723,15,"initializeApp"],[822,26,723,28],[822,27,723,29],[822,28,723,30],[823,4,724,4],[824,4,725,4],[824,8,725,8],[824,9,725,9,"app"],[824,12,725,12],[824,14,725,14],[825,6,726,8],[825,12,726,14,"ERROR_FACTORY"],[825,25,726,27],[825,26,726,28,"create"],[825,32,726,34],[825,33,726,35],[825,41,726,43],[825,42,726,44],[825,65,726,67],[826,8,726,69,"appName"],[826,15,726,76],[826,17,726,78,"name"],[827,6,726,83],[827,7,726,84],[827,8,726,85],[828,4,727,4],[829,4,728,4],[829,11,728,11,"app"],[829,14,728,14],[830,2,729,0],[831,2,730,0],[832,0,731,0],[833,0,732,0],[834,0,733,0],[835,2,734,0],[835,11,734,9,"getApps"],[835,18,734,16,"getApps"],[835,19,734,16],[835,21,734,19],[836,4,735,4],[836,11,735,11,"Array"],[836,16,735,16],[836,17,735,17,"from"],[836,21,735,21],[836,22,735,22,"_apps"],[836,27,735,27],[836,28,735,28,"values"],[836,34,735,34],[836,35,735,35],[836,36,735,36],[836,37,735,37],[837,2,736,0],[838,2,737,0],[839,0,738,0],[840,0,739,0],[841,0,740,0],[842,0,741,0],[843,0,742,0],[844,0,743,0],[845,0,744,0],[846,0,745,0],[847,0,746,0],[848,0,747,0],[849,0,748,0],[850,0,749,0],[851,0,750,0],[852,0,751,0],[853,0,752,0],[854,0,753,0],[855,2,754,0],[855,17,754,15,"deleteApp"],[855,26,754,24,"deleteApp"],[855,27,754,25,"app"],[855,30,754,28],[855,32,754,30],[856,4,755,4],[856,8,755,8,"cleanupProviders"],[856,24,755,24],[856,27,755,27],[856,32,755,32],[857,4,756,4],[857,10,756,10,"name"],[857,14,756,14],[857,17,756,17,"app"],[857,20,756,20],[857,21,756,21,"name"],[857,25,756,25],[858,4,757,4],[858,8,757,8,"_apps"],[858,13,757,13],[858,14,757,14,"has"],[858,17,757,17],[858,18,757,18,"name"],[858,22,757,22],[858,23,757,23],[858,25,757,25],[859,6,758,8,"cleanupProviders"],[859,22,758,24],[859,25,758,27],[859,29,758,31],[860,6,759,8,"_apps"],[860,11,759,13],[860,12,759,14,"delete"],[860,18,759,20],[860,19,759,21,"name"],[860,23,759,25],[860,24,759,26],[861,4,760,4],[861,5,760,5],[861,11,761,9],[861,15,761,13,"_serverApps"],[861,26,761,24],[861,27,761,25,"has"],[861,30,761,28],[861,31,761,29,"name"],[861,35,761,33],[861,36,761,34],[861,38,761,36],[862,6,762,8],[862,12,762,14,"firebaseServerApp"],[862,29,762,31],[862,32,762,34,"app"],[862,35,762,37],[863,6,763,8],[863,10,763,12,"firebaseServerApp"],[863,27,763,29],[863,28,763,30,"decRefCount"],[863,39,763,41],[863,40,763,42],[863,41,763,43],[863,45,763,47],[863,46,763,48],[863,48,763,50],[864,8,764,12,"_serverApps"],[864,19,764,23],[864,20,764,24,"delete"],[864,26,764,30],[864,27,764,31,"name"],[864,31,764,35],[864,32,764,36],[865,8,765,12,"cleanupProviders"],[865,24,765,28],[865,27,765,31],[865,31,765,35],[866,6,766,8],[867,4,767,4],[868,4,768,4],[868,8,768,8,"cleanupProviders"],[868,24,768,24],[868,26,768,26],[869,6,769,8],[869,12,769,14,"Promise"],[869,19,769,21],[869,20,769,22,"all"],[869,23,769,25],[869,24,769,26,"app"],[869,27,769,29],[869,28,769,30,"container"],[869,37,769,39],[869,38,770,13,"getProviders"],[869,50,770,25],[869,51,770,26],[869,52,770,27],[869,53,771,13,"map"],[869,56,771,16],[869,57,771,17,"provider"],[869,65,771,25],[869,69,771,29,"provider"],[869,77,771,37],[869,78,771,38,"delete"],[869,84,771,44],[869,85,771,45],[869,86,771,46],[869,87,771,47],[869,88,771,48],[870,6,772,8,"app"],[870,9,772,11],[870,10,772,12,"isDeleted"],[870,19,772,21],[870,22,772,24],[870,26,772,28],[871,4,773,4],[872,2,774,0],[873,2,775,0],[874,0,776,0],[875,0,777,0],[876,0,778,0],[877,0,779,0],[878,0,780,0],[879,0,781,0],[880,0,782,0],[881,2,783,0],[881,11,783,9,"registerVersion"],[881,26,783,24,"registerVersion"],[881,27,783,25,"libraryKeyOrName"],[881,43,783,41],[881,45,783,43,"version"],[881,52,783,50],[881,54,783,52,"variant"],[881,61,783,59],[881,63,783,61],[882,4,784,4],[883,4,785,4],[884,4,786,4],[884,8,786,8,"library"],[884,15,786,15],[884,18,786,18,"PLATFORM_LOG_STRING"],[884,37,786,37],[884,38,786,38,"libraryKeyOrName"],[884,54,786,54],[884,55,786,55],[884,59,786,59,"libraryKeyOrName"],[884,75,786,75],[885,4,787,4],[885,8,787,8,"variant"],[885,15,787,15],[885,17,787,17],[886,6,788,8,"library"],[886,13,788,15],[886,17,788,19],[886,21,788,23,"variant"],[886,28,788,30],[886,30,788,32],[887,4,789,4],[888,4,790,4],[888,10,790,10,"libraryMismatch"],[888,25,790,25],[888,28,790,28,"library"],[888,35,790,35],[888,36,790,36,"match"],[888,41,790,41],[888,42,790,42],[888,49,790,49],[888,50,790,50],[889,4,791,4],[889,10,791,10,"versionMismatch"],[889,25,791,25],[889,28,791,28,"version"],[889,35,791,35],[889,36,791,36,"match"],[889,41,791,41],[889,42,791,42],[889,49,791,49],[889,50,791,50],[890,4,792,4],[890,8,792,8,"libraryMismatch"],[890,23,792,23],[890,27,792,27,"versionMismatch"],[890,42,792,42],[890,44,792,44],[891,6,793,8],[891,12,793,14,"warning"],[891,19,793,21],[891,22,793,24],[891,23,794,12],[891,54,794,43,"library"],[891,61,794,50],[891,80,794,69,"version"],[891,87,794,76],[891,91,794,80],[891,92,795,9],[892,6,796,8],[892,10,796,12,"libraryMismatch"],[892,25,796,27],[892,27,796,29],[893,8,797,12,"warning"],[893,15,797,19],[893,16,797,20,"push"],[893,20,797,24],[893,21,797,25],[893,38,797,42,"library"],[893,45,797,49],[893,96,797,100],[893,97,797,101],[894,6,798,8],[895,6,799,8],[895,10,799,12,"libraryMismatch"],[895,25,799,27],[895,29,799,31,"versionMismatch"],[895,44,799,46],[895,46,799,48],[896,8,800,12,"warning"],[896,15,800,19],[896,16,800,20,"push"],[896,20,800,24],[896,21,800,25],[896,26,800,30],[896,27,800,31],[897,6,801,8],[898,6,802,8],[898,10,802,12,"versionMismatch"],[898,25,802,27],[898,27,802,29],[899,8,803,12,"warning"],[899,15,803,19],[899,16,803,20,"push"],[899,20,803,24],[899,21,803,25],[899,38,803,42,"version"],[899,45,803,49],[899,96,803,100],[899,97,803,101],[900,6,804,8],[901,6,805,8,"logger"],[901,12,805,14],[901,13,805,15,"warn"],[901,17,805,19],[901,18,805,20,"warning"],[901,25,805,27],[901,26,805,28,"join"],[901,30,805,32],[901,31,805,33],[901,34,805,36],[901,35,805,37],[901,36,805,38],[902,6,806,8],[903,4,807,4],[904,4,808,4,"_registerComponent"],[904,22,808,22],[904,23,808,23],[904,27,808,27,"Component"],[904,45,808,36],[904,46,808,36,"Component"],[904,55,808,36],[904,56,808,37],[904,59,808,40,"library"],[904,66,808,47],[904,76,808,57],[904,78,808,59],[904,85,808,66],[905,6,808,68,"library"],[905,13,808,75],[906,6,808,77,"version"],[907,4,808,85],[907,5,808,86],[907,6,808,87],[907,8,808,89],[907,17,808,98],[907,18,808,99],[907,45,808,126],[907,46,808,127],[907,47,808,128],[908,2,809,0],[909,2,810,0],[910,0,811,0],[911,0,812,0],[912,0,813,0],[913,0,814,0],[914,0,815,0],[915,0,816,0],[916,2,817,0],[916,11,817,9,"onLog"],[916,16,817,14,"onLog"],[916,17,817,15,"logCallback"],[916,28,817,26],[916,30,817,28,"options"],[916,37,817,35],[916,39,817,37],[917,4,818,4],[917,8,818,8,"logCallback"],[917,19,818,19],[917,24,818,24],[917,28,818,28],[917,32,818,32],[917,39,818,39,"logCallback"],[917,50,818,50],[917,55,818,55],[917,65,818,65],[917,67,818,67],[918,6,819,8],[918,12,819,14,"ERROR_FACTORY"],[918,25,819,27],[918,26,819,28,"create"],[918,32,819,34],[918,33,819,35],[918,55,819,57],[918,56,819,58],[918,91,819,93],[918,92,819,94],[919,4,820,4],[920,4,821,4],[920,8,821,4,"setUserLogHandler"],[920,23,821,21],[920,24,821,21,"setUserLogHandler"],[920,41,821,21],[920,43,821,22,"logCallback"],[920,54,821,33],[920,56,821,35,"options"],[920,63,821,42],[920,64,821,43],[921,2,822,0],[922,2,823,0],[923,0,824,0],[924,0,825,0],[925,0,826,0],[926,0,827,0],[927,0,828,0],[928,0,829,0],[929,0,830,0],[930,0,831,0],[931,2,832,0],[931,11,832,9,"setLogLevel"],[931,22,832,20,"setLogLevel"],[931,23,832,21,"logLevel"],[931,31,832,29],[931,33,832,31],[932,4,833,4],[932,8,833,4,"setLogLevel$1"],[932,23,833,17],[932,24,833,17,"setLogLevel"],[932,35,833,17],[932,37,833,18,"logLevel"],[932,45,833,26],[932,46,833,27],[933,2,834,0],[935,2,836,0],[936,0,837,0],[937,0,838,0],[938,0,839,0],[939,0,840,0],[940,0,841,0],[941,0,842,0],[942,0,843,0],[943,0,844,0],[944,0,845,0],[945,0,846,0],[946,0,847,0],[947,0,848,0],[948,0,849,0],[949,0,850,0],[950,0,851,0],[951,2,852,0],[951,8,852,6,"DB_NAME"],[951,15,852,13],[951,18,852,16],[951,47,852,45],[952,2,853,0],[952,8,853,6,"DB_VERSION"],[952,18,853,16],[952,21,853,19],[952,22,853,20],[953,2,854,0],[953,8,854,6,"STORE_NAME"],[953,18,854,16],[953,21,854,19],[953,47,854,45],[954,2,855,0],[954,6,855,4,"dbPromise"],[954,15,855,13],[954,18,855,16],[954,22,855,20],[955,2,856,0],[955,11,856,9,"getDbPromise"],[955,23,856,21,"getDbPromise"],[955,24,856,21],[955,26,856,24],[956,4,857,4],[956,8,857,8],[956,9,857,9,"dbPromise"],[956,18,857,18],[956,20,857,20],[957,6,858,8,"dbPromise"],[957,15,858,17],[957,18,858,20],[957,22,858,20,"openDB"],[957,26,858,26],[957,27,858,26,"openDB"],[957,33,858,26],[957,35,858,27,"DB_NAME"],[957,42,858,34],[957,44,858,36,"DB_VERSION"],[957,54,858,46],[957,56,858,48],[958,8,859,12,"upgrade"],[958,15,859,19],[958,17,859,21,"upgrade"],[958,18,859,22,"db"],[958,20,859,24],[958,22,859,26,"oldVersion"],[958,32,859,36],[958,37,859,41],[959,10,860,16],[960,10,861,16],[961,10,862,16],[962,10,863,16],[963,10,864,16],[964,10,865,16],[964,18,865,24,"oldVersion"],[964,28,865,34],[965,12,866,20],[965,17,866,25],[965,18,866,26],[966,14,867,24],[966,18,867,28],[967,16,868,28,"db"],[967,18,868,30],[967,19,868,31,"createObjectStore"],[967,36,868,48],[967,37,868,49,"STORE_NAME"],[967,47,868,59],[967,48,868,60],[968,14,869,24],[968,15,869,25],[968,16,870,24],[968,23,870,31,"e"],[968,24,870,32],[968,26,870,34],[969,16,871,28],[970,16,872,28],[971,16,873,28],[972,16,874,28,"console"],[972,23,874,35],[972,24,874,36,"warn"],[972,28,874,40],[972,29,874,41,"e"],[972,30,874,42],[972,31,874,43],[973,14,875,24],[974,10,876,16],[975,8,877,12],[976,6,878,8],[976,7,878,9],[976,8,878,10],[976,9,878,11,"catch"],[976,14,878,16],[976,15,878,17,"e"],[976,16,878,18],[976,20,878,22],[977,8,879,12],[977,14,879,18,"ERROR_FACTORY"],[977,27,879,31],[977,28,879,32,"create"],[977,34,879,38],[977,35,879,39],[977,45,879,49],[977,46,879,50],[977,71,879,75],[978,10,880,16,"originalErrorMessage"],[978,30,880,36],[978,32,880,38,"e"],[978,33,880,39],[978,34,880,40,"message"],[979,8,881,12],[979,9,881,13],[979,10,881,14],[980,6,882,8],[980,7,882,9],[980,8,882,10],[981,4,883,4],[982,4,884,4],[982,11,884,11,"dbPromise"],[982,20,884,20],[983,2,885,0],[984,2,886,0],[984,17,886,15,"readHeartbeatsFromIndexedDB"],[984,44,886,42,"readHeartbeatsFromIndexedDB"],[984,45,886,43,"app"],[984,48,886,46],[984,50,886,48],[985,4,887,4],[985,8,887,8],[986,6,888,8],[986,12,888,14,"db"],[986,14,888,16],[986,17,888,19],[986,23,888,25,"getDbPromise"],[986,35,888,37],[986,36,888,38],[986,37,888,39],[987,6,889,8],[987,12,889,14,"tx"],[987,14,889,16],[987,17,889,19,"db"],[987,19,889,21],[987,20,889,22,"transaction"],[987,31,889,33],[987,32,889,34,"STORE_NAME"],[987,42,889,44],[987,43,889,45],[988,6,890,8],[988,12,890,14,"result"],[988,18,890,20],[988,21,890,23],[988,27,890,29,"tx"],[988,29,890,31],[988,30,890,32,"objectStore"],[988,41,890,43],[988,42,890,44,"STORE_NAME"],[988,52,890,54],[988,53,890,55],[988,54,890,56,"get"],[988,57,890,59],[988,58,890,60,"computeKey"],[988,68,890,70],[988,69,890,71,"app"],[988,72,890,74],[988,73,890,75],[988,74,890,76],[989,6,891,8],[990,6,892,8],[991,6,893,8],[991,12,893,14,"tx"],[991,14,893,16],[991,15,893,17,"done"],[991,19,893,21],[992,6,894,8],[992,13,894,15,"result"],[992,19,894,21],[993,4,895,4],[993,5,895,5],[993,6,896,4],[993,13,896,11,"e"],[993,14,896,12],[993,16,896,14],[994,6,897,8],[994,10,897,12,"e"],[994,11,897,13],[994,23,897,25,"FirebaseError"],[994,36,897,38],[994,37,897,38,"FirebaseError"],[994,50,897,38],[994,52,897,40],[995,8,898,12,"logger"],[995,14,898,18],[995,15,898,19,"warn"],[995,19,898,23],[995,20,898,24,"e"],[995,21,898,25],[995,22,898,26,"message"],[995,29,898,33],[995,30,898,34],[996,6,899,8],[996,7,899,9],[996,13,900,13],[997,8,901,12],[997,14,901,18,"idbGetError"],[997,25,901,29],[997,28,901,32,"ERROR_FACTORY"],[997,41,901,45],[997,42,901,46,"create"],[997,48,901,52],[997,49,901,53],[997,58,901,62],[997,59,901,63],[997,83,901,87],[998,10,902,16,"originalErrorMessage"],[998,30,902,36],[998,32,902,38,"e"],[998,33,902,39],[998,35,902,41,"message"],[999,8,903,12],[999,9,903,13],[999,10,903,14],[1000,8,904,12,"logger"],[1000,14,904,18],[1000,15,904,19,"warn"],[1000,19,904,23],[1000,20,904,24,"idbGetError"],[1000,31,904,35],[1000,32,904,36,"message"],[1000,39,904,43],[1000,40,904,44],[1001,6,905,8],[1002,4,906,4],[1003,2,907,0],[1004,2,908,0],[1004,17,908,15,"writeHeartbeatsToIndexedDB"],[1004,43,908,41,"writeHeartbeatsToIndexedDB"],[1004,44,908,42,"app"],[1004,47,908,45],[1004,49,908,47,"heartbeatObject"],[1004,64,908,62],[1004,66,908,64],[1005,4,909,4],[1005,8,909,8],[1006,6,910,8],[1006,12,910,14,"db"],[1006,14,910,16],[1006,17,910,19],[1006,23,910,25,"getDbPromise"],[1006,35,910,37],[1006,36,910,38],[1006,37,910,39],[1007,6,911,8],[1007,12,911,14,"tx"],[1007,14,911,16],[1007,17,911,19,"db"],[1007,19,911,21],[1007,20,911,22,"transaction"],[1007,31,911,33],[1007,32,911,34,"STORE_NAME"],[1007,42,911,44],[1007,44,911,46],[1007,55,911,57],[1007,56,911,58],[1008,6,912,8],[1008,12,912,14,"objectStore"],[1008,23,912,25],[1008,26,912,28,"tx"],[1008,28,912,30],[1008,29,912,31,"objectStore"],[1008,40,912,42],[1008,41,912,43,"STORE_NAME"],[1008,51,912,53],[1008,52,912,54],[1009,6,913,8],[1009,12,913,14,"objectStore"],[1009,23,913,25],[1009,24,913,26,"put"],[1009,27,913,29],[1009,28,913,30,"heartbeatObject"],[1009,43,913,45],[1009,45,913,47,"computeKey"],[1009,55,913,57],[1009,56,913,58,"app"],[1009,59,913,61],[1009,60,913,62],[1009,61,913,63],[1010,6,914,8],[1010,12,914,14,"tx"],[1010,14,914,16],[1010,15,914,17,"done"],[1010,19,914,21],[1011,4,915,4],[1011,5,915,5],[1011,6,916,4],[1011,13,916,11,"e"],[1011,14,916,12],[1011,16,916,14],[1012,6,917,8],[1012,10,917,12,"e"],[1012,11,917,13],[1012,23,917,25,"FirebaseError"],[1012,36,917,38],[1012,37,917,38,"FirebaseError"],[1012,50,917,38],[1012,52,917,40],[1013,8,918,12,"logger"],[1013,14,918,18],[1013,15,918,19,"warn"],[1013,19,918,23],[1013,20,918,24,"e"],[1013,21,918,25],[1013,22,918,26,"message"],[1013,29,918,33],[1013,30,918,34],[1014,6,919,8],[1014,7,919,9],[1014,13,920,13],[1015,8,921,12],[1015,14,921,18,"idbGetError"],[1015,25,921,29],[1015,28,921,32,"ERROR_FACTORY"],[1015,41,921,45],[1015,42,921,46,"create"],[1015,48,921,52],[1015,49,921,53],[1015,58,921,62],[1015,59,921,63],[1015,85,921,89],[1016,10,922,16,"originalErrorMessage"],[1016,30,922,36],[1016,32,922,38,"e"],[1016,33,922,39],[1016,35,922,41,"message"],[1017,8,923,12],[1017,9,923,13],[1017,10,923,14],[1018,8,924,12,"logger"],[1018,14,924,18],[1018,15,924,19,"warn"],[1018,19,924,23],[1018,20,924,24,"idbGetError"],[1018,31,924,35],[1018,32,924,36,"message"],[1018,39,924,43],[1018,40,924,44],[1019,6,925,8],[1020,4,926,4],[1021,2,927,0],[1022,2,928,0],[1022,11,928,9,"computeKey"],[1022,21,928,19,"computeKey"],[1022,22,928,20,"app"],[1022,25,928,23],[1022,27,928,25],[1023,4,929,4],[1023,11,929,11],[1023,14,929,14,"app"],[1023,17,929,17],[1023,18,929,18,"name"],[1023,22,929,22],[1023,26,929,26,"app"],[1023,29,929,29],[1023,30,929,30,"options"],[1023,37,929,37],[1023,38,929,38,"appId"],[1023,43,929,43],[1023,45,929,45],[1024,2,930,0],[1026,2,932,0],[1027,0,933,0],[1028,0,934,0],[1029,0,935,0],[1030,0,936,0],[1031,0,937,0],[1032,0,938,0],[1033,0,939,0],[1034,0,940,0],[1035,0,941,0],[1036,0,942,0],[1037,0,943,0],[1038,0,944,0],[1039,0,945,0],[1040,0,946,0],[1041,0,947,0],[1042,2,948,0],[1042,8,948,6,"MAX_HEADER_BYTES"],[1042,24,948,22],[1042,27,948,25],[1042,31,948,29],[1043,2,949,0],[1043,8,949,6,"MAX_NUM_STORED_HEARTBEATS"],[1043,33,949,31],[1043,36,949,34],[1043,38,949,36],[1044,2,950,0],[1044,8,950,6,"HeartbeatServiceImpl"],[1044,28,950,26],[1044,29,950,27],[1045,4,951,4,"constructor"],[1045,15,951,15,"constructor"],[1045,16,951,16,"container"],[1045,25,951,25],[1045,27,951,27],[1046,6,952,8],[1046,10,952,12],[1046,11,952,13,"container"],[1046,20,952,22],[1046,23,952,25,"container"],[1046,32,952,34],[1047,6,953,8],[1048,0,954,0],[1049,0,955,0],[1050,0,956,0],[1051,0,957,0],[1052,0,958,0],[1053,0,959,0],[1054,0,960,0],[1055,0,961,0],[1056,6,962,8],[1056,10,962,12],[1056,11,962,13,"_heartbeatsCache"],[1056,27,962,29],[1056,30,962,32],[1056,34,962,36],[1057,6,963,8],[1057,12,963,14,"app"],[1057,15,963,17],[1057,18,963,20],[1057,22,963,24],[1057,23,963,25,"container"],[1057,32,963,34],[1057,33,963,35,"getProvider"],[1057,44,963,46],[1057,45,963,47],[1057,50,963,52],[1057,51,963,53],[1057,52,963,54,"getImmediate"],[1057,64,963,66],[1057,65,963,67],[1057,66,963,68],[1058,6,964,8],[1058,10,964,12],[1058,11,964,13,"_storage"],[1058,19,964,21],[1058,22,964,24],[1058,26,964,28,"HeartbeatStorageImpl"],[1058,46,964,48],[1058,47,964,49,"app"],[1058,50,964,52],[1058,51,964,53],[1059,6,965,8],[1059,10,965,12],[1059,11,965,13,"_heartbeatsCachePromise"],[1059,34,965,36],[1059,37,965,39],[1059,41,965,43],[1059,42,965,44,"_storage"],[1059,50,965,52],[1059,51,965,53,"read"],[1059,55,965,57],[1059,56,965,58],[1059,57,965,59],[1059,58,965,60,"then"],[1059,62,965,64],[1059,63,965,65,"result"],[1059,69,965,71],[1059,73,965,75],[1060,8,966,12],[1060,12,966,16],[1060,13,966,17,"_heartbeatsCache"],[1060,29,966,33],[1060,32,966,36,"result"],[1060,38,966,42],[1061,8,967,12],[1061,15,967,19,"result"],[1061,21,967,25],[1062,6,968,8],[1062,7,968,9],[1062,8,968,10],[1063,4,969,4],[1064,4,970,4],[1065,0,971,0],[1066,0,972,0],[1067,0,973,0],[1068,0,974,0],[1069,0,975,0],[1070,0,976,0],[1071,4,977,4],[1071,10,977,10,"triggerHeartbeat"],[1071,26,977,26,"triggerHeartbeat"],[1071,27,977,26],[1071,29,977,29],[1072,6,978,8],[1072,10,978,12],[1073,8,979,12],[1073,14,979,18,"platformLogger"],[1073,28,979,32],[1073,31,979,35],[1073,35,979,39],[1073,36,979,40,"container"],[1073,45,979,49],[1073,46,980,17,"getProvider"],[1073,57,980,28],[1073,58,980,29],[1073,75,980,46],[1073,76,980,47],[1073,77,981,17,"getImmediate"],[1073,89,981,29],[1073,90,981,30],[1073,91,981,31],[1074,8,982,12],[1075,8,983,12],[1076,8,984,12],[1076,14,984,18,"agent"],[1076,19,984,23],[1076,22,984,26,"platformLogger"],[1076,36,984,40],[1076,37,984,41,"getPlatformInfoString"],[1076,58,984,62],[1076,59,984,63],[1076,60,984,64],[1077,8,985,12],[1077,14,985,18,"date"],[1077,18,985,22],[1077,21,985,25,"getUTCDateString"],[1077,37,985,41],[1077,38,985,42],[1077,39,985,43],[1078,8,986,12],[1078,12,986,16],[1078,16,986,20],[1078,17,986,21,"_heartbeatsCache"],[1078,33,986,37],[1078,35,986,39,"heartbeats"],[1078,45,986,49],[1078,49,986,53],[1078,53,986,57],[1078,55,986,59],[1079,10,987,16],[1079,14,987,20],[1079,15,987,21,"_heartbeatsCache"],[1079,31,987,37],[1079,34,987,40],[1079,40,987,46],[1079,44,987,50],[1079,45,987,51,"_heartbeatsCachePromise"],[1079,68,987,74],[1080,10,988,16],[1081,10,989,16],[1081,14,989,20],[1081,18,989,24],[1081,19,989,25,"_heartbeatsCache"],[1081,35,989,41],[1081,37,989,43,"heartbeats"],[1081,47,989,53],[1081,51,989,57],[1081,55,989,61],[1081,57,989,63],[1082,12,990,20],[1083,10,991,16],[1084,8,992,12],[1085,8,993,12],[1086,8,994,12],[1087,8,995,12],[1087,12,995,16],[1087,16,995,20],[1087,17,995,21,"_heartbeatsCache"],[1087,33,995,37],[1087,34,995,38,"lastSentHeartbeatDate"],[1087,55,995,59],[1087,60,995,64,"date"],[1087,64,995,68],[1087,68,996,16],[1087,72,996,20],[1087,73,996,21,"_heartbeatsCache"],[1087,89,996,37],[1087,90,996,38,"heartbeats"],[1087,100,996,48],[1087,101,996,49,"some"],[1087,105,996,53],[1087,106,996,54,"singleDateHeartbeat"],[1087,125,996,73],[1087,129,996,77,"singleDateHeartbeat"],[1087,148,996,96],[1087,149,996,97,"date"],[1087,153,996,101],[1087,158,996,106,"date"],[1087,162,996,110],[1087,163,996,111],[1087,165,996,113],[1088,10,997,16],[1089,8,998,12],[1089,9,998,13],[1089,15,999,17],[1090,10,1000,16],[1091,10,1001,16],[1091,14,1001,20],[1091,15,1001,21,"_heartbeatsCache"],[1091,31,1001,37],[1091,32,1001,38,"heartbeats"],[1091,42,1001,48],[1091,43,1001,49,"push"],[1091,47,1001,53],[1091,48,1001,54],[1092,12,1001,56,"date"],[1092,16,1001,60],[1093,12,1001,62,"agent"],[1094,10,1001,68],[1094,11,1001,69],[1094,12,1001,70],[1095,10,1002,16],[1096,10,1003,16],[1097,10,1004,16],[1097,14,1004,20],[1097,18,1004,24],[1097,19,1004,25,"_heartbeatsCache"],[1097,35,1004,41],[1097,36,1004,42,"heartbeats"],[1097,46,1004,52],[1097,47,1004,53,"length"],[1097,53,1004,59],[1097,56,1004,62,"MAX_NUM_STORED_HEARTBEATS"],[1097,81,1004,87],[1097,83,1004,89],[1098,12,1005,20],[1098,18,1005,26,"earliestHeartbeatIdx"],[1098,38,1005,46],[1098,41,1005,49,"getEarliestHeartbeatIdx"],[1098,64,1005,72],[1098,65,1005,73],[1098,69,1005,77],[1098,70,1005,78,"_heartbeatsCache"],[1098,86,1005,94],[1098,87,1005,95,"heartbeats"],[1098,97,1005,105],[1098,98,1005,106],[1099,12,1006,20],[1099,16,1006,24],[1099,17,1006,25,"_heartbeatsCache"],[1099,33,1006,41],[1099,34,1006,42,"heartbeats"],[1099,44,1006,52],[1099,45,1006,53,"splice"],[1099,51,1006,59],[1099,52,1006,60,"earliestHeartbeatIdx"],[1099,72,1006,80],[1099,74,1006,82],[1099,75,1006,83],[1099,76,1006,84],[1100,10,1007,16],[1101,8,1008,12],[1102,8,1009,12],[1102,15,1009,19],[1102,19,1009,23],[1102,20,1009,24,"_storage"],[1102,28,1009,32],[1102,29,1009,33,"overwrite"],[1102,38,1009,42],[1102,39,1009,43],[1102,43,1009,47],[1102,44,1009,48,"_heartbeatsCache"],[1102,60,1009,64],[1102,61,1009,65],[1103,6,1010,8],[1103,7,1010,9],[1103,8,1011,8],[1103,15,1011,15,"e"],[1103,16,1011,16],[1103,18,1011,18],[1104,8,1012,12,"logger"],[1104,14,1012,18],[1104,15,1012,19,"warn"],[1104,19,1012,23],[1104,20,1012,24,"e"],[1104,21,1012,25],[1104,22,1012,26],[1105,6,1013,8],[1106,4,1014,4],[1107,4,1015,4],[1108,0,1016,0],[1109,0,1017,0],[1110,0,1018,0],[1111,0,1019,0],[1112,0,1020,0],[1113,0,1021,0],[1114,4,1022,4],[1114,10,1022,10,"getHeartbeatsHeader"],[1114,29,1022,29,"getHeartbeatsHeader"],[1114,30,1022,29],[1114,32,1022,32],[1115,6,1023,8],[1115,10,1023,12],[1116,8,1024,12],[1116,12,1024,16],[1116,16,1024,20],[1116,17,1024,21,"_heartbeatsCache"],[1116,33,1024,37],[1116,38,1024,42],[1116,42,1024,46],[1116,44,1024,48],[1117,10,1025,16],[1117,16,1025,22],[1117,20,1025,26],[1117,21,1025,27,"_heartbeatsCachePromise"],[1117,44,1025,50],[1118,8,1026,12],[1119,8,1027,12],[1120,8,1028,12],[1120,12,1028,16],[1120,16,1028,20],[1120,17,1028,21,"_heartbeatsCache"],[1120,33,1028,37],[1120,35,1028,39,"heartbeats"],[1120,45,1028,49],[1120,49,1028,53],[1120,53,1028,57],[1120,57,1029,16],[1120,61,1029,20],[1120,62,1029,21,"_heartbeatsCache"],[1120,78,1029,37],[1120,79,1029,38,"heartbeats"],[1120,89,1029,48],[1120,90,1029,49,"length"],[1120,96,1029,55],[1120,101,1029,60],[1120,102,1029,61],[1120,104,1029,63],[1121,10,1030,16],[1121,17,1030,23],[1121,19,1030,25],[1122,8,1031,12],[1123,8,1032,12],[1123,14,1032,18,"date"],[1123,18,1032,22],[1123,21,1032,25,"getUTCDateString"],[1123,37,1032,41],[1123,38,1032,42],[1123,39,1032,43],[1124,8,1033,12],[1125,8,1034,12],[1125,14,1034,18],[1126,10,1034,20,"heartbeatsToSend"],[1126,26,1034,36],[1127,10,1034,38,"unsentEntries"],[1128,8,1034,52],[1128,9,1034,53],[1128,12,1034,56,"extractHeartbeatsForHeader"],[1128,38,1034,82],[1128,39,1034,83],[1128,43,1034,87],[1128,44,1034,88,"_heartbeatsCache"],[1128,60,1034,104],[1128,61,1034,105,"heartbeats"],[1128,71,1034,115],[1128,72,1034,116],[1129,8,1035,12],[1129,14,1035,18,"headerString"],[1129,26,1035,30],[1129,29,1035,33],[1129,33,1035,33,"base64urlEncodeWithoutPadding"],[1129,46,1035,62],[1129,47,1035,62,"base64urlEncodeWithoutPadding"],[1129,76,1035,62],[1129,78,1035,63,"JSON"],[1129,82,1035,67],[1129,83,1035,68,"stringify"],[1129,92,1035,77],[1129,93,1035,78],[1130,10,1035,80,"version"],[1130,17,1035,87],[1130,19,1035,89],[1130,20,1035,90],[1131,10,1035,92,"heartbeats"],[1131,20,1035,102],[1131,22,1035,104,"heartbeatsToSend"],[1132,8,1035,121],[1132,9,1035,122],[1132,10,1035,123],[1132,11,1035,124],[1133,8,1036,12],[1134,8,1037,12],[1134,12,1037,16],[1134,13,1037,17,"_heartbeatsCache"],[1134,29,1037,33],[1134,30,1037,34,"lastSentHeartbeatDate"],[1134,51,1037,55],[1134,54,1037,58,"date"],[1134,58,1037,62],[1135,8,1038,12],[1135,12,1038,16,"unsentEntries"],[1135,25,1038,29],[1135,26,1038,30,"length"],[1135,32,1038,36],[1135,35,1038,39],[1135,36,1038,40],[1135,38,1038,42],[1136,10,1039,16],[1137,10,1040,16],[1137,14,1040,20],[1137,15,1040,21,"_heartbeatsCache"],[1137,31,1040,37],[1137,32,1040,38,"heartbeats"],[1137,42,1040,48],[1137,45,1040,51,"unsentEntries"],[1137,58,1040,64],[1138,10,1041,16],[1139,10,1042,16],[1140,10,1043,16],[1141,10,1044,16],[1141,16,1044,22],[1141,20,1044,26],[1141,21,1044,27,"_storage"],[1141,29,1044,35],[1141,30,1044,36,"overwrite"],[1141,39,1044,45],[1141,40,1044,46],[1141,44,1044,50],[1141,45,1044,51,"_heartbeatsCache"],[1141,61,1044,67],[1141,62,1044,68],[1142,8,1045,12],[1142,9,1045,13],[1142,15,1046,17],[1143,10,1047,16],[1143,14,1047,20],[1143,15,1047,21,"_heartbeatsCache"],[1143,31,1047,37],[1143,32,1047,38,"heartbeats"],[1143,42,1047,48],[1143,45,1047,51],[1143,47,1047,53],[1144,10,1048,16],[1145,10,1049,16],[1145,15,1049,21],[1145,19,1049,25],[1145,20,1049,26,"_storage"],[1145,28,1049,34],[1145,29,1049,35,"overwrite"],[1145,38,1049,44],[1145,39,1049,45],[1145,43,1049,49],[1145,44,1049,50,"_heartbeatsCache"],[1145,60,1049,66],[1145,61,1049,67],[1146,8,1050,12],[1147,8,1051,12],[1147,15,1051,19,"headerString"],[1147,27,1051,31],[1148,6,1052,8],[1148,7,1052,9],[1148,8,1053,8],[1148,15,1053,15,"e"],[1148,16,1053,16],[1148,18,1053,18],[1149,8,1054,12,"logger"],[1149,14,1054,18],[1149,15,1054,19,"warn"],[1149,19,1054,23],[1149,20,1054,24,"e"],[1149,21,1054,25],[1149,22,1054,26],[1150,8,1055,12],[1150,15,1055,19],[1150,17,1055,21],[1151,6,1056,8],[1152,4,1057,4],[1153,2,1058,0],[1154,2,1059,0],[1154,11,1059,9,"getUTCDateString"],[1154,27,1059,25,"getUTCDateString"],[1154,28,1059,25],[1154,30,1059,28],[1155,4,1060,4],[1155,10,1060,10,"today"],[1155,15,1060,15],[1155,18,1060,18],[1155,22,1060,22,"Date"],[1155,26,1060,26],[1155,27,1060,27],[1155,28,1060,28],[1156,4,1061,4],[1157,4,1062,4],[1157,11,1062,11,"today"],[1157,16,1062,16],[1157,17,1062,17,"toISOString"],[1157,28,1062,28],[1157,29,1062,29],[1157,30,1062,30],[1157,31,1062,31,"substring"],[1157,40,1062,40],[1157,41,1062,41],[1157,42,1062,42],[1157,44,1062,44],[1157,46,1062,46],[1157,47,1062,47],[1158,2,1063,0],[1159,2,1064,0],[1159,11,1064,9,"extractHeartbeatsForHeader"],[1159,37,1064,35,"extractHeartbeatsForHeader"],[1159,38,1064,36,"heartbeatsCache"],[1159,53,1064,51],[1159,55,1064,53,"maxSize"],[1159,62,1064,60],[1159,65,1064,63,"MAX_HEADER_BYTES"],[1159,81,1064,79],[1159,83,1064,81],[1160,4,1065,4],[1161,4,1066,4],[1162,4,1067,4],[1162,10,1067,10,"heartbeatsToSend"],[1162,26,1067,26],[1162,29,1067,29],[1162,31,1067,31],[1163,4,1068,4],[1164,4,1069,4],[1164,8,1069,8,"unsentEntries"],[1164,21,1069,21],[1164,24,1069,24,"heartbeatsCache"],[1164,39,1069,39],[1164,40,1069,40,"slice"],[1164,45,1069,45],[1164,46,1069,46],[1164,47,1069,47],[1165,4,1070,4],[1165,9,1070,9],[1165,15,1070,15,"singleDateHeartbeat"],[1165,34,1070,34],[1165,38,1070,38,"heartbeatsCache"],[1165,53,1070,53],[1165,55,1070,55],[1166,6,1071,8],[1167,6,1072,8],[1167,12,1072,14,"heartbeatEntry"],[1167,26,1072,28],[1167,29,1072,31,"heartbeatsToSend"],[1167,45,1072,47],[1167,46,1072,48,"find"],[1167,50,1072,52],[1167,51,1072,53,"hb"],[1167,53,1072,55],[1167,57,1072,59,"hb"],[1167,59,1072,61],[1167,60,1072,62,"agent"],[1167,65,1072,67],[1167,70,1072,72,"singleDateHeartbeat"],[1167,89,1072,91],[1167,90,1072,92,"agent"],[1167,95,1072,97],[1167,96,1072,98],[1168,6,1073,8],[1168,10,1073,12],[1168,11,1073,13,"heartbeatEntry"],[1168,25,1073,27],[1168,27,1073,29],[1169,8,1074,12],[1170,8,1075,12,"heartbeatsToSend"],[1170,24,1075,28],[1170,25,1075,29,"push"],[1170,29,1075,33],[1170,30,1075,34],[1171,10,1076,16,"agent"],[1171,15,1076,21],[1171,17,1076,23,"singleDateHeartbeat"],[1171,36,1076,42],[1171,37,1076,43,"agent"],[1171,42,1076,48],[1172,10,1077,16,"dates"],[1172,15,1077,21],[1172,17,1077,23],[1172,18,1077,24,"singleDateHeartbeat"],[1172,37,1077,43],[1172,38,1077,44,"date"],[1172,42,1077,48],[1173,8,1078,12],[1173,9,1078,13],[1173,10,1078,14],[1174,8,1079,12],[1174,12,1079,16,"countBytes"],[1174,22,1079,26],[1174,23,1079,27,"heartbeatsToSend"],[1174,39,1079,43],[1174,40,1079,44],[1174,43,1079,47,"maxSize"],[1174,50,1079,54],[1174,52,1079,56],[1175,10,1080,16],[1176,10,1081,16],[1177,10,1082,16,"heartbeatsToSend"],[1177,26,1082,32],[1177,27,1082,33,"pop"],[1177,30,1082,36],[1177,31,1082,37],[1177,32,1082,38],[1178,10,1083,16],[1179,8,1084,12],[1180,6,1085,8],[1180,7,1085,9],[1180,13,1086,13],[1181,8,1087,12,"heartbeatEntry"],[1181,22,1087,26],[1181,23,1087,27,"dates"],[1181,28,1087,32],[1181,29,1087,33,"push"],[1181,33,1087,37],[1181,34,1087,38,"singleDateHeartbeat"],[1181,53,1087,57],[1181,54,1087,58,"date"],[1181,58,1087,62],[1181,59,1087,63],[1182,8,1088,12],[1183,8,1089,12],[1184,8,1090,12],[1184,12,1090,16,"countBytes"],[1184,22,1090,26],[1184,23,1090,27,"heartbeatsToSend"],[1184,39,1090,43],[1184,40,1090,44],[1184,43,1090,47,"maxSize"],[1184,50,1090,54],[1184,52,1090,56],[1185,10,1091,16,"heartbeatEntry"],[1185,24,1091,30],[1185,25,1091,31,"dates"],[1185,30,1091,36],[1185,31,1091,37,"pop"],[1185,34,1091,40],[1185,35,1091,41],[1185,36,1091,42],[1186,10,1092,16],[1187,8,1093,12],[1188,6,1094,8],[1189,6,1095,8],[1190,6,1096,8],[1191,6,1097,8,"unsentEntries"],[1191,19,1097,21],[1191,22,1097,24,"unsentEntries"],[1191,35,1097,37],[1191,36,1097,38,"slice"],[1191,41,1097,43],[1191,42,1097,44],[1191,43,1097,45],[1191,44,1097,46],[1192,4,1098,4],[1193,4,1099,4],[1193,11,1099,11],[1194,6,1100,8,"heartbeatsToSend"],[1194,22,1100,24],[1195,6,1101,8,"unsentEntries"],[1196,4,1102,4],[1196,5,1102,5],[1197,2,1103,0],[1198,2,1104,0],[1198,8,1104,6,"HeartbeatStorageImpl"],[1198,28,1104,26],[1198,29,1104,27],[1199,4,1105,4,"constructor"],[1199,15,1105,15,"constructor"],[1199,16,1105,16,"app"],[1199,19,1105,19],[1199,21,1105,21],[1200,6,1106,8],[1200,10,1106,12],[1200,11,1106,13,"app"],[1200,14,1106,16],[1200,17,1106,19,"app"],[1200,20,1106,22],[1201,6,1107,8],[1201,10,1107,12],[1201,11,1107,13,"_canUseIndexedDBPromise"],[1201,34,1107,36],[1201,37,1107,39],[1201,41,1107,43],[1201,42,1107,44,"runIndexedDBEnvironmentCheck"],[1201,70,1107,72],[1201,71,1107,73],[1201,72,1107,74],[1202,4,1108,4],[1203,4,1109,4],[1203,10,1109,10,"runIndexedDBEnvironmentCheck"],[1203,38,1109,38,"runIndexedDBEnvironmentCheck"],[1203,39,1109,38],[1203,41,1109,41],[1204,6,1110,8],[1204,10,1110,12],[1204,11,1110,13],[1204,15,1110,13,"isIndexedDBAvailable"],[1204,28,1110,33],[1204,29,1110,33,"isIndexedDBAvailable"],[1204,49,1110,33],[1204,51,1110,34],[1204,52,1110,35],[1204,54,1110,37],[1205,8,1111,12],[1205,15,1111,19],[1205,20,1111,24],[1206,6,1112,8],[1206,7,1112,9],[1206,13,1113,13],[1207,8,1114,12],[1207,15,1114,19],[1207,19,1114,19,"validateIndexedDBOpenable"],[1207,32,1114,44],[1207,33,1114,44,"validateIndexedDBOpenable"],[1207,58,1114,44],[1207,60,1114,45],[1207,61,1114,46],[1207,62,1115,17,"then"],[1207,66,1115,21],[1207,67,1115,22],[1207,73,1115,28],[1207,77,1115,32],[1207,78,1115,33],[1207,79,1116,17,"catch"],[1207,84,1116,22],[1207,85,1116,23],[1207,91,1116,29],[1207,96,1116,34],[1207,97,1116,35],[1208,6,1117,8],[1209,4,1118,4],[1210,4,1119,4],[1211,0,1120,0],[1212,0,1121,0],[1213,4,1122,4],[1213,10,1122,10,"read"],[1213,14,1122,14,"read"],[1213,15,1122,14],[1213,17,1122,17],[1214,6,1123,8],[1214,12,1123,14,"canUseIndexedDB"],[1214,27,1123,29],[1214,30,1123,32],[1214,36,1123,38],[1214,40,1123,42],[1214,41,1123,43,"_canUseIndexedDBPromise"],[1214,64,1123,66],[1215,6,1124,8],[1215,10,1124,12],[1215,11,1124,13,"canUseIndexedDB"],[1215,26,1124,28],[1215,28,1124,30],[1216,8,1125,12],[1216,15,1125,19],[1217,10,1125,21,"heartbeats"],[1217,20,1125,31],[1217,22,1125,33],[1218,8,1125,36],[1218,9,1125,37],[1219,6,1126,8],[1219,7,1126,9],[1219,13,1127,13],[1220,8,1128,12],[1220,14,1128,18,"idbHeartbeatObject"],[1220,32,1128,36],[1220,35,1128,39],[1220,41,1128,45,"readHeartbeatsFromIndexedDB"],[1220,68,1128,72],[1220,69,1128,73],[1220,73,1128,77],[1220,74,1128,78,"app"],[1220,77,1128,81],[1220,78,1128,82],[1221,8,1129,12],[1221,12,1129,16,"idbHeartbeatObject"],[1221,30,1129,34],[1221,32,1129,36,"heartbeats"],[1221,42,1129,46],[1221,44,1129,48],[1222,10,1130,16],[1222,17,1130,23,"idbHeartbeatObject"],[1222,35,1130,41],[1223,8,1131,12],[1223,9,1131,13],[1223,15,1132,17],[1224,10,1133,16],[1224,17,1133,23],[1225,12,1133,25,"heartbeats"],[1225,22,1133,35],[1225,24,1133,37],[1226,10,1133,40],[1226,11,1133,41],[1227,8,1134,12],[1228,6,1135,8],[1229,4,1136,4],[1230,4,1137,4],[1231,4,1138,4],[1231,10,1138,10,"overwrite"],[1231,19,1138,19,"overwrite"],[1231,20,1138,20,"heartbeatsObject"],[1231,36,1138,36],[1231,38,1138,38],[1232,6,1139,8],[1232,12,1139,14,"canUseIndexedDB"],[1232,27,1139,29],[1232,30,1139,32],[1232,36,1139,38],[1232,40,1139,42],[1232,41,1139,43,"_canUseIndexedDBPromise"],[1232,64,1139,66],[1233,6,1140,8],[1233,10,1140,12],[1233,11,1140,13,"canUseIndexedDB"],[1233,26,1140,28],[1233,28,1140,30],[1234,8,1141,12],[1235,6,1142,8],[1235,7,1142,9],[1235,13,1143,13],[1236,8,1144,12],[1236,14,1144,18,"existingHeartbeatsObject"],[1236,38,1144,42],[1236,41,1144,45],[1236,47,1144,51],[1236,51,1144,55],[1236,52,1144,56,"read"],[1236,56,1144,60],[1236,57,1144,61],[1236,58,1144,62],[1237,8,1145,12],[1237,15,1145,19,"writeHeartbeatsToIndexedDB"],[1237,41,1145,45],[1237,42,1145,46],[1237,46,1145,50],[1237,47,1145,51,"app"],[1237,50,1145,54],[1237,52,1145,56],[1238,10,1146,16,"lastSentHeartbeatDate"],[1238,31,1146,37],[1238,33,1146,39,"heartbeatsObject"],[1238,49,1146,55],[1238,50,1146,56,"lastSentHeartbeatDate"],[1238,71,1146,77],[1238,75,1147,20,"existingHeartbeatsObject"],[1238,99,1147,44],[1238,100,1147,45,"lastSentHeartbeatDate"],[1238,121,1147,66],[1239,10,1148,16,"heartbeats"],[1239,20,1148,26],[1239,22,1148,28,"heartbeatsObject"],[1239,38,1148,44],[1239,39,1148,45,"heartbeats"],[1240,8,1149,12],[1240,9,1149,13],[1240,10,1149,14],[1241,6,1150,8],[1242,4,1151,4],[1243,4,1152,4],[1244,4,1153,4],[1244,10,1153,10,"add"],[1244,13,1153,13,"add"],[1244,14,1153,14,"heartbeatsObject"],[1244,30,1153,30],[1244,32,1153,32],[1245,6,1154,8],[1245,12,1154,14,"canUseIndexedDB"],[1245,27,1154,29],[1245,30,1154,32],[1245,36,1154,38],[1245,40,1154,42],[1245,41,1154,43,"_canUseIndexedDBPromise"],[1245,64,1154,66],[1246,6,1155,8],[1246,10,1155,12],[1246,11,1155,13,"canUseIndexedDB"],[1246,26,1155,28],[1246,28,1155,30],[1247,8,1156,12],[1248,6,1157,8],[1248,7,1157,9],[1248,13,1158,13],[1249,8,1159,12],[1249,14,1159,18,"existingHeartbeatsObject"],[1249,38,1159,42],[1249,41,1159,45],[1249,47,1159,51],[1249,51,1159,55],[1249,52,1159,56,"read"],[1249,56,1159,60],[1249,57,1159,61],[1249,58,1159,62],[1250,8,1160,12],[1250,15,1160,19,"writeHeartbeatsToIndexedDB"],[1250,41,1160,45],[1250,42,1160,46],[1250,46,1160,50],[1250,47,1160,51,"app"],[1250,50,1160,54],[1250,52,1160,56],[1251,10,1161,16,"lastSentHeartbeatDate"],[1251,31,1161,37],[1251,33,1161,39,"heartbeatsObject"],[1251,49,1161,55],[1251,50,1161,56,"lastSentHeartbeatDate"],[1251,71,1161,77],[1251,75,1162,20,"existingHeartbeatsObject"],[1251,99,1162,44],[1251,100,1162,45,"lastSentHeartbeatDate"],[1251,121,1162,66],[1252,10,1163,16,"heartbeats"],[1252,20,1163,26],[1252,22,1163,28],[1252,23,1164,20],[1252,26,1164,23,"existingHeartbeatsObject"],[1252,50,1164,47],[1252,51,1164,48,"heartbeats"],[1252,61,1164,58],[1252,63,1165,20],[1252,66,1165,23,"heartbeatsObject"],[1252,82,1165,39],[1252,83,1165,40,"heartbeats"],[1252,93,1165,50],[1253,8,1167,12],[1253,9,1167,13],[1253,10,1167,14],[1254,6,1168,8],[1255,4,1169,4],[1256,2,1170,0],[1257,2,1171,0],[1258,0,1172,0],[1259,0,1173,0],[1260,0,1174,0],[1261,0,1175,0],[1262,2,1176,0],[1262,11,1176,9,"countBytes"],[1262,21,1176,19,"countBytes"],[1262,22,1176,20,"heartbeatsCache"],[1262,37,1176,35],[1262,39,1176,37],[1263,4,1177,4],[1264,4,1178,4],[1264,11,1178,11],[1264,15,1178,11,"base64urlEncodeWithoutPadding"],[1264,28,1178,40],[1264,29,1178,40,"base64urlEncodeWithoutPadding"],[1264,58,1178,40],[1265,4,1179,4],[1266,4,1180,4,"JSON"],[1266,8,1180,8],[1266,9,1180,9,"stringify"],[1266,18,1180,18],[1266,19,1180,19],[1267,6,1180,21,"version"],[1267,13,1180,28],[1267,15,1180,30],[1267,16,1180,31],[1268,6,1180,33,"heartbeats"],[1268,16,1180,43],[1268,18,1180,45,"heartbeatsCache"],[1269,4,1180,61],[1269,5,1180,62],[1269,6,1180,63],[1269,7,1180,64],[1269,8,1180,65,"length"],[1269,14,1180,71],[1270,2,1181,0],[1271,2,1182,0],[1272,0,1183,0],[1273,0,1184,0],[1274,0,1185,0],[1275,2,1186,0],[1275,11,1186,9,"getEarliestHeartbeatIdx"],[1275,34,1186,32,"getEarliestHeartbeatIdx"],[1275,35,1186,33,"heartbeats"],[1275,45,1186,43],[1275,47,1186,45],[1276,4,1187,4],[1276,8,1187,8,"heartbeats"],[1276,18,1187,18],[1276,19,1187,19,"length"],[1276,25,1187,25],[1276,30,1187,30],[1276,31,1187,31],[1276,33,1187,33],[1277,6,1188,8],[1277,13,1188,15],[1277,14,1188,16],[1277,15,1188,17],[1278,4,1189,4],[1279,4,1190,4],[1279,8,1190,8,"earliestHeartbeatIdx"],[1279,28,1190,28],[1279,31,1190,31],[1279,32,1190,32],[1280,4,1191,4],[1280,8,1191,8,"earliestHeartbeatDate"],[1280,29,1191,29],[1280,32,1191,32,"heartbeats"],[1280,42,1191,42],[1280,43,1191,43],[1280,44,1191,44],[1280,45,1191,45],[1280,46,1191,46,"date"],[1280,50,1191,50],[1281,4,1192,4],[1281,9,1192,9],[1281,13,1192,13,"i"],[1281,14,1192,14],[1281,17,1192,17],[1281,18,1192,18],[1281,20,1192,20,"i"],[1281,21,1192,21],[1281,24,1192,24,"heartbeats"],[1281,34,1192,34],[1281,35,1192,35,"length"],[1281,41,1192,41],[1281,43,1192,43,"i"],[1281,44,1192,44],[1281,46,1192,46],[1281,48,1192,48],[1282,6,1193,8],[1282,10,1193,12,"heartbeats"],[1282,20,1193,22],[1282,21,1193,23,"i"],[1282,22,1193,24],[1282,23,1193,25],[1282,24,1193,26,"date"],[1282,28,1193,30],[1282,31,1193,33,"earliestHeartbeatDate"],[1282,52,1193,54],[1282,54,1193,56],[1283,8,1194,12,"earliestHeartbeatDate"],[1283,29,1194,33],[1283,32,1194,36,"heartbeats"],[1283,42,1194,46],[1283,43,1194,47,"i"],[1283,44,1194,48],[1283,45,1194,49],[1283,46,1194,50,"date"],[1283,50,1194,54],[1284,8,1195,12,"earliestHeartbeatIdx"],[1284,28,1195,32],[1284,31,1195,35,"i"],[1284,32,1195,36],[1285,6,1196,8],[1286,4,1197,4],[1287,4,1198,4],[1287,11,1198,11,"earliestHeartbeatIdx"],[1287,31,1198,31],[1288,2,1199,0],[1290,2,1201,0],[1291,0,1202,0],[1292,0,1203,0],[1293,0,1204,0],[1294,0,1205,0],[1295,0,1206,0],[1296,0,1207,0],[1297,0,1208,0],[1298,0,1209,0],[1299,0,1210,0],[1300,0,1211,0],[1301,0,1212,0],[1302,0,1213,0],[1303,0,1214,0],[1304,0,1215,0],[1305,0,1216,0],[1306,2,1217,0],[1306,11,1217,9,"registerCoreComponents"],[1306,33,1217,31,"registerCoreComponents"],[1306,34,1217,32,"variant"],[1306,41,1217,39],[1306,43,1217,41],[1307,4,1218,4,"_registerComponent"],[1307,22,1218,22],[1307,23,1218,23],[1307,27,1218,27,"Component"],[1307,45,1218,36],[1307,46,1218,36,"Component"],[1307,55,1218,36],[1307,56,1218,37],[1307,73,1218,54],[1307,75,1218,56,"container"],[1307,84,1218,65],[1307,88,1218,69],[1307,92,1218,73,"PlatformLoggerServiceImpl"],[1307,117,1218,98],[1307,118,1218,99,"container"],[1307,127,1218,108],[1307,128,1218,109],[1307,130,1218,111],[1307,139,1218,120],[1307,140,1218,121],[1307,167,1218,148],[1307,168,1218,149],[1307,169,1218,150],[1308,4,1219,4,"_registerComponent"],[1308,22,1219,22],[1308,23,1219,23],[1308,27,1219,27,"Component"],[1308,45,1219,36],[1308,46,1219,36,"Component"],[1308,55,1219,36],[1308,56,1219,37],[1308,67,1219,48],[1308,69,1219,50,"container"],[1308,78,1219,59],[1308,82,1219,63],[1308,86,1219,67,"HeartbeatServiceImpl"],[1308,106,1219,87],[1308,107,1219,88,"container"],[1308,116,1219,97],[1308,117,1219,98],[1308,119,1219,100],[1308,128,1219,109],[1308,129,1219,110],[1308,156,1219,137],[1308,157,1219,138],[1308,158,1219,139],[1309,4,1220,4],[1310,4,1221,4,"registerVersion"],[1310,19,1221,19],[1310,20,1221,20,"name$q"],[1310,26,1221,26],[1310,28,1221,28,"version$1"],[1310,37,1221,37],[1310,39,1221,39,"variant"],[1310,46,1221,46],[1310,47,1221,47],[1311,4,1222,4],[1312,4,1223,4,"registerVersion"],[1312,19,1223,19],[1312,20,1223,20,"name$q"],[1312,26,1223,26],[1312,28,1223,28,"version$1"],[1312,37,1223,37],[1312,39,1223,39],[1312,48,1223,48],[1312,49,1223,49],[1313,4,1224,4],[1314,4,1225,4,"registerVersion"],[1314,19,1225,19],[1314,20,1225,20],[1314,29,1225,29],[1314,31,1225,31],[1314,33,1225,33],[1314,34,1225,34],[1315,2,1226,0],[1317,2,1228,0],[1318,0,1229,0],[1319,0,1230,0],[1320,0,1231,0],[1321,0,1232,0],[1322,0,1233,0],[1323,2,1234,0,"registerCoreComponents"],[1323,24,1234,22],[1323,25,1234,23],[1323,27,1234,25],[1323,28,1234,26],[1324,0,1234,27],[1324,3]],"functionMap":{"names":["<global>","PlatformLoggerServiceImpl","PlatformLoggerServiceImpl#constructor","PlatformLoggerServiceImpl#getPlatformInfoString","providers.map$argument_0","providers.map.filter$argument_0","isVersionServiceProvider","_addComponent","_addOrOverwriteComponent","_registerComponent","_getProvider","_removeServiceInstance","_isFirebaseApp","_isFirebaseServerAppSettings","_isFirebaseServerApp","_clearComponents","FirebaseAppImpl","FirebaseAppImpl#constructor","Component$argument_1","FirebaseAppImpl#get__automaticDataCollectionEnabled","FirebaseAppImpl#set__automaticDataCollectionEnabled","FirebaseAppImpl#get__name","FirebaseAppImpl#get__options","FirebaseAppImpl#get__config","FirebaseAppImpl#get__container","FirebaseAppImpl#get__isDeleted","FirebaseAppImpl#set__isDeleted","FirebaseAppImpl#checkDestroyed","validateTokenTTL","FirebaseServerAppImpl","FirebaseServerAppImpl#constructor","FinalizationRegistry$argument_0","FirebaseServerAppImpl#toJSON","FirebaseServerAppImpl#get__refCount","FirebaseServerAppImpl#incRefCount","FirebaseServerAppImpl#decRefCount","FirebaseServerAppImpl#automaticCleanup","FirebaseServerAppImpl#get__settings","FirebaseServerAppImpl#checkDestroyed","initializeApp","initializeServerApp","hashCode","reduce$argument_0","getApp","getApps","deleteApp","app.container.getProviders.map$argument_0","registerVersion","onLog","setLogLevel","getDbPromise","openDB$argument_2.upgrade","openDB._catch$argument_0","readHeartbeatsFromIndexedDB","writeHeartbeatsToIndexedDB","computeKey","HeartbeatServiceImpl","HeartbeatServiceImpl#constructor","_storage.read.then$argument_0","HeartbeatServiceImpl#triggerHeartbeat","_heartbeatsCache.heartbeats.some$argument_0","HeartbeatServiceImpl#getHeartbeatsHeader","getUTCDateString","extractHeartbeatsForHeader","heartbeatsToSend.find$argument_0","HeartbeatStorageImpl","HeartbeatStorageImpl#constructor","HeartbeatStorageImpl#runIndexedDBEnvironmentCheck","validateIndexedDBOpenable.then$argument_0","validateIndexedDBOpenable.then._catch$argument_0","HeartbeatStorageImpl#read","HeartbeatStorageImpl#overwrite","HeartbeatStorageImpl#add","countBytes","getEarliestHeartbeatIdx","registerCoreComponents"],"mappings":"AAA;ACsB;ICC;KDE;IEG;iBCK;SDQ;oBEC,sBF;KFE;CDC;AMS;CNG;AOqK;CPO;AQK;CRE;ASQ;CTe;AUU;CVQ;AWS;CXE;AYS;CZE;AaS;CbQ;AcS;CdK;AeM;CfE;AgBsD;ICC;yDCQ,UD;KDC;IGC;KHG;IIC;KJG;IKC;KLG;IMC;KNG;IOC;KPG;IQC;KRE;ISC;KTE;IUC;KVE;IWK;KXI;ChBC;A4BqB;C5BiB;A6BC;ICC;kECiC;aDE;KDS;IGC;KHE;IIC;KJE;IKG;KLQ;IME;KNK;IOI;KPE;IQC;KRG;ISK;KTI;C7BC;AuCwB;CvCuC;AwCC;qBCmC;6BCC,wDD;KDC;CxCmB;A2C8B;C3CS;A4CK;C5CE;A6CkB;iBCiB,6BD;C7CG;A+CS;2D7ByB,4B6B;C/CC;AgDQ;ChDK;AiDU;CjDE;AkDsB;qBCG;aDkB;iBEC;SFI;ClDG;AqDC;CrDqB;AsDC;CtDmB;AuDC;CvDE;AwDoB;ICC;iECc;SDG;KDC;IGQ;sDCmB,wDD;KHkB;IKQ;KLmC;CxDC;A8DC;C9DI;A+DC;qDCQ,4CD;C/D+B;AiEC;ICC;KDG;IEC;sBCM,UD;uBEC,WF;KFE;IKI;KLc;IME;KNa;IOE;KPgB;CjEC;AyEM;CzEK;A0EK;C1Ea;A2EkB;wDzDC,qDyD;kDzDC,gDyD;C3EO"},"hasCjsExports":false},"type":"js/module"}]}