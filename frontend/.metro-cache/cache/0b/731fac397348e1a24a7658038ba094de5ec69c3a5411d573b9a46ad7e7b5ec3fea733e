{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"./types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":39},"end":{"line":2,"column":146,"index":185}}],"key":"iV91Bk2eI9buML90FP6cK2SM5h0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.hoistSelectors = hoistSelectors;\n  exports.isStructurallySame = isStructurallySame;\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _types = require(_dependencyMap[1], \"./types\");\n  function cloneDeep(obj) {\n    if (Array.isArray(obj)) {\n      // @ts-expect-error meh\n      return (0, _tslib.__spreadArray)([], obj.map(cloneDeep), true);\n    }\n    if (obj !== null && typeof obj === 'object') {\n      // @ts-expect-error meh\n      return Object.keys(obj).reduce(function (cloned, k) {\n        // @ts-expect-error meh\n        cloned[k] = cloneDeep(obj[k]);\n        return cloned;\n      }, {});\n    }\n    return obj;\n  }\n  function hoistPluralOrSelectElement(ast, el, positionToInject) {\n    // pull this out of the ast and move it to the top\n    var cloned = cloneDeep(el);\n    var options = cloned.options;\n    cloned.options = Object.keys(options).reduce(function (all, k) {\n      var newValue = hoistSelectors((0, _tslib.__spreadArray)((0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], ast.slice(0, positionToInject), true), options[k].value, true), ast.slice(positionToInject + 1), true));\n      all[k] = {\n        value: newValue\n      };\n      return all;\n    }, {});\n    return cloned;\n  }\n  function isPluralOrSelectElement(el) {\n    return (0, _types.isPluralElement)(el) || (0, _types.isSelectElement)(el);\n  }\n  function findPluralOrSelectElement(ast) {\n    return !!ast.find(function (el) {\n      if (isPluralOrSelectElement(el)) {\n        return true;\n      }\n      if ((0, _types.isTagElement)(el)) {\n        return findPluralOrSelectElement(el.children);\n      }\n      return false;\n    });\n  }\n  /**\n   * Hoist all selectors to the beginning of the AST & flatten the\n   * resulting options. E.g:\n   * \"I have {count, plural, one{a dog} other{many dogs}}\"\n   * becomes \"{count, plural, one{I have a dog} other{I have many dogs}}\".\n   * If there are multiple selectors, the order of which one is hoisted 1st\n   * is non-deterministic.\n   * The goal is to provide as many full sentences as possible since fragmented\n   * sentences are not translator-friendly\n   * @param ast AST\n   */\n  function hoistSelectors(ast) {\n    for (var i = 0; i < ast.length; i++) {\n      var el = ast[i];\n      if (isPluralOrSelectElement(el)) {\n        return [hoistPluralOrSelectElement(ast, el, i)];\n      }\n      if ((0, _types.isTagElement)(el) && findPluralOrSelectElement([el])) {\n        throw new Error('Cannot hoist plural/select within a tag element. Please put the tag element inside each plural/select option');\n      }\n    }\n    return ast;\n  }\n  /**\n   * Collect all variables in an AST to Record<string, TYPE>\n   * @param ast AST to collect variables from\n   * @param vars Record of variable name to variable type\n   */\n  function collectVariables(ast, vars) {\n    if (vars === void 0) {\n      vars = new Map();\n    }\n    ast.forEach(function (el) {\n      if ((0, _types.isArgumentElement)(el) || (0, _types.isDateElement)(el) || (0, _types.isTimeElement)(el) || (0, _types.isNumberElement)(el)) {\n        if (el.value in vars && vars.get(el.value) !== el.type) {\n          throw new Error(\"Variable \".concat(el.value, \" has conflicting types\"));\n        }\n        vars.set(el.value, el.type);\n      }\n      if ((0, _types.isPluralElement)(el) || (0, _types.isSelectElement)(el)) {\n        vars.set(el.value, el.type);\n        Object.keys(el.options).forEach(function (k) {\n          collectVariables(el.options[k].value, vars);\n        });\n      }\n      if ((0, _types.isTagElement)(el)) {\n        vars.set(el.value, el.type);\n        collectVariables(el.children, vars);\n      }\n    });\n  }\n  /**\n   * Check if 2 ASTs are structurally the same. This primarily means that\n   * they have the same variables with the same type\n   * @param a\n   * @param b\n   * @returns\n   */\n  function isStructurallySame(a, b) {\n    var aVars = new Map();\n    var bVars = new Map();\n    collectVariables(a, aVars);\n    collectVariables(b, bVars);\n    if (aVars.size !== bVars.size) {\n      return {\n        success: false,\n        error: new Error(\"Different number of variables: [\".concat(Array.from(aVars.keys()).join(', '), \"] vs [\").concat(Array.from(bVars.keys()).join(', '), \"]\"))\n      };\n    }\n    return Array.from(aVars.entries()).reduce(function (result, _a) {\n      var key = _a[0],\n        type = _a[1];\n      if (!result.success) {\n        return result;\n      }\n      var bType = bVars.get(key);\n      if (bType == null) {\n        return {\n          success: false,\n          error: new Error(\"Missing variable \".concat(key, \" in message\"))\n        };\n      }\n      if (bType !== type) {\n        return {\n          success: false,\n          error: new Error(\"Variable \".concat(key, \" has conflicting types: \").concat(_types.TYPE[type], \" vs \").concat(_types.TYPE[bType]))\n        };\n      }\n      return result;\n    }, {\n      success: true\n    });\n  }\n});","lineCount":146,"map":[[7,2,56,0,"exports"],[7,9,56,0],[7,10,56,0,"hoistSelectors"],[7,24,56,0],[7,27,56,0,"hoistSelectors"],[7,41,56,0],[8,2,104,0,"exports"],[8,9,104,0],[8,10,104,0,"isStructurallySame"],[8,28,104,0],[8,31,104,0,"isStructurallySame"],[8,49,104,0],[9,2,1,0],[9,6,1,0,"_tslib"],[9,12,1,0],[9,15,1,0,"require"],[9,22,1,0],[9,23,1,0,"_dependencyMap"],[9,37,1,0],[10,2,2,0],[10,6,2,0,"_types"],[10,12,2,0],[10,15,2,0,"require"],[10,22,2,0],[10,23,2,0,"_dependencyMap"],[10,37,2,0],[11,2,3,0],[11,11,3,9,"cloneDeep"],[11,20,3,18,"cloneDeep"],[11,21,3,19,"obj"],[11,24,3,22],[11,26,3,24],[12,4,4,4],[12,8,4,8,"Array"],[12,13,4,13],[12,14,4,14,"isArray"],[12,21,4,21],[12,22,4,22,"obj"],[12,25,4,25],[12,26,4,26],[12,28,4,28],[13,6,5,8],[14,6,6,8],[14,13,6,15],[14,17,6,15,"__spreadArray"],[14,23,6,28],[14,24,6,28,"__spreadArray"],[14,37,6,28],[14,39,6,29],[14,41,6,31],[14,43,6,33,"obj"],[14,46,6,36],[14,47,6,37,"map"],[14,50,6,40],[14,51,6,41,"cloneDeep"],[14,60,6,50],[14,61,6,51],[14,63,6,53],[14,67,6,57],[14,68,6,58],[15,4,7,4],[16,4,8,4],[16,8,8,8,"obj"],[16,11,8,11],[16,16,8,16],[16,20,8,20],[16,24,8,24],[16,31,8,31,"obj"],[16,34,8,34],[16,39,8,39],[16,47,8,47],[16,49,8,49],[17,6,9,8],[18,6,10,8],[18,13,10,15,"Object"],[18,19,10,21],[18,20,10,22,"keys"],[18,24,10,26],[18,25,10,27,"obj"],[18,28,10,30],[18,29,10,31],[18,30,10,32,"reduce"],[18,36,10,38],[18,37,10,39],[18,47,10,49,"cloned"],[18,53,10,55],[18,55,10,57,"k"],[18,56,10,58],[18,58,10,60],[19,8,11,12],[20,8,12,12,"cloned"],[20,14,12,18],[20,15,12,19,"k"],[20,16,12,20],[20,17,12,21],[20,20,12,24,"cloneDeep"],[20,29,12,33],[20,30,12,34,"obj"],[20,33,12,37],[20,34,12,38,"k"],[20,35,12,39],[20,36,12,40],[20,37,12,41],[21,8,13,12],[21,15,13,19,"cloned"],[21,21,13,25],[22,6,14,8],[22,7,14,9],[22,9,14,11],[22,10,14,12],[22,11,14,13],[22,12,14,14],[23,4,15,4],[24,4,16,4],[24,11,16,11,"obj"],[24,14,16,14],[25,2,17,0],[26,2,18,0],[26,11,18,9,"hoistPluralOrSelectElement"],[26,37,18,35,"hoistPluralOrSelectElement"],[26,38,18,36,"ast"],[26,41,18,39],[26,43,18,41,"el"],[26,45,18,43],[26,47,18,45,"positionToInject"],[26,63,18,61],[26,65,18,63],[27,4,19,4],[28,4,20,4],[28,8,20,8,"cloned"],[28,14,20,14],[28,17,20,17,"cloneDeep"],[28,26,20,26],[28,27,20,27,"el"],[28,29,20,29],[28,30,20,30],[29,4,21,4],[29,8,21,8,"options"],[29,15,21,15],[29,18,21,18,"cloned"],[29,24,21,24],[29,25,21,25,"options"],[29,32,21,32],[30,4,22,4,"cloned"],[30,10,22,10],[30,11,22,11,"options"],[30,18,22,18],[30,21,22,21,"Object"],[30,27,22,27],[30,28,22,28,"keys"],[30,32,22,32],[30,33,22,33,"options"],[30,40,22,40],[30,41,22,41],[30,42,22,42,"reduce"],[30,48,22,48],[30,49,22,49],[30,59,22,59,"all"],[30,62,22,62],[30,64,22,64,"k"],[30,65,22,65],[30,67,22,67],[31,6,23,8],[31,10,23,12,"newValue"],[31,18,23,20],[31,21,23,23,"hoistSelectors"],[31,35,23,37],[31,36,23,38],[31,40,23,38,"__spreadArray"],[31,46,23,51],[31,47,23,51,"__spreadArray"],[31,60,23,51],[31,62,23,52],[31,66,23,52,"__spreadArray"],[31,72,23,65],[31,73,23,65,"__spreadArray"],[31,86,23,65],[31,88,23,66],[31,92,23,66,"__spreadArray"],[31,98,23,79],[31,99,23,79,"__spreadArray"],[31,112,23,79],[31,114,23,80],[31,116,23,82],[31,118,23,84,"ast"],[31,121,23,87],[31,122,23,88,"slice"],[31,127,23,93],[31,128,23,94],[31,129,23,95],[31,131,23,97,"positionToInject"],[31,147,23,113],[31,148,23,114],[31,150,23,116],[31,154,23,120],[31,155,23,121],[31,157,23,123,"options"],[31,164,23,130],[31,165,23,131,"k"],[31,166,23,132],[31,167,23,133],[31,168,23,134,"value"],[31,173,23,139],[31,175,23,141],[31,179,23,145],[31,180,23,146],[31,182,23,148,"ast"],[31,185,23,151],[31,186,23,152,"slice"],[31,191,23,157],[31,192,23,158,"positionToInject"],[31,208,23,174],[31,211,23,177],[31,212,23,178],[31,213,23,179],[31,215,23,181],[31,219,23,185],[31,220,23,186],[31,221,23,187],[32,6,24,8,"all"],[32,9,24,11],[32,10,24,12,"k"],[32,11,24,13],[32,12,24,14],[32,15,24,17],[33,8,25,12,"value"],[33,13,25,17],[33,15,25,19,"newValue"],[34,6,26,8],[34,7,26,9],[35,6,27,8],[35,13,27,15,"all"],[35,16,27,18],[36,4,28,4],[36,5,28,5],[36,7,28,7],[36,8,28,8],[36,9,28,9],[36,10,28,10],[37,4,29,4],[37,11,29,11,"cloned"],[37,17,29,17],[38,2,30,0],[39,2,31,0],[39,11,31,9,"isPluralOrSelectElement"],[39,34,31,32,"isPluralOrSelectElement"],[39,35,31,33,"el"],[39,37,31,35],[39,39,31,37],[40,4,32,4],[40,11,32,11],[40,15,32,11,"isPluralElement"],[40,21,32,26],[40,22,32,26,"isPluralElement"],[40,37,32,26],[40,39,32,27,"el"],[40,41,32,29],[40,42,32,30],[40,46,32,34],[40,50,32,34,"isSelectElement"],[40,56,32,49],[40,57,32,49,"isSelectElement"],[40,72,32,49],[40,74,32,50,"el"],[40,76,32,52],[40,77,32,53],[41,2,33,0],[42,2,34,0],[42,11,34,9,"findPluralOrSelectElement"],[42,36,34,34,"findPluralOrSelectElement"],[42,37,34,35,"ast"],[42,40,34,38],[42,42,34,40],[43,4,35,4],[43,11,35,11],[43,12,35,12],[43,13,35,13,"ast"],[43,16,35,16],[43,17,35,17,"find"],[43,21,35,21],[43,22,35,22],[43,32,35,32,"el"],[43,34,35,34],[43,36,35,36],[44,6,36,8],[44,10,36,12,"isPluralOrSelectElement"],[44,33,36,35],[44,34,36,36,"el"],[44,36,36,38],[44,37,36,39],[44,39,36,41],[45,8,37,12],[45,15,37,19],[45,19,37,23],[46,6,38,8],[47,6,39,8],[47,10,39,12],[47,14,39,12,"isTagElement"],[47,20,39,24],[47,21,39,24,"isTagElement"],[47,33,39,24],[47,35,39,25,"el"],[47,37,39,27],[47,38,39,28],[47,40,39,30],[48,8,40,12],[48,15,40,19,"findPluralOrSelectElement"],[48,40,40,44],[48,41,40,45,"el"],[48,43,40,47],[48,44,40,48,"children"],[48,52,40,56],[48,53,40,57],[49,6,41,8],[50,6,42,8],[50,13,42,15],[50,18,42,20],[51,4,43,4],[51,5,43,5],[51,6,43,6],[52,2,44,0],[53,2,45,0],[54,0,46,0],[55,0,47,0],[56,0,48,0],[57,0,49,0],[58,0,50,0],[59,0,51,0],[60,0,52,0],[61,0,53,0],[62,0,54,0],[63,0,55,0],[64,2,56,7],[64,11,56,16,"hoistSelectors"],[64,25,56,30,"hoistSelectors"],[64,26,56,31,"ast"],[64,29,56,34],[64,31,56,36],[65,4,57,4],[65,9,57,9],[65,13,57,13,"i"],[65,14,57,14],[65,17,57,17],[65,18,57,18],[65,20,57,20,"i"],[65,21,57,21],[65,24,57,24,"ast"],[65,27,57,27],[65,28,57,28,"length"],[65,34,57,34],[65,36,57,36,"i"],[65,37,57,37],[65,39,57,39],[65,41,57,41],[66,6,58,8],[66,10,58,12,"el"],[66,12,58,14],[66,15,58,17,"ast"],[66,18,58,20],[66,19,58,21,"i"],[66,20,58,22],[66,21,58,23],[67,6,59,8],[67,10,59,12,"isPluralOrSelectElement"],[67,33,59,35],[67,34,59,36,"el"],[67,36,59,38],[67,37,59,39],[67,39,59,41],[68,8,60,12],[68,15,60,19],[68,16,60,20,"hoistPluralOrSelectElement"],[68,42,60,46],[68,43,60,47,"ast"],[68,46,60,50],[68,48,60,52,"el"],[68,50,60,54],[68,52,60,56,"i"],[68,53,60,57],[68,54,60,58],[68,55,60,59],[69,6,61,8],[70,6,62,8],[70,10,62,12],[70,14,62,12,"isTagElement"],[70,20,62,24],[70,21,62,24,"isTagElement"],[70,33,62,24],[70,35,62,25,"el"],[70,37,62,27],[70,38,62,28],[70,42,62,32,"findPluralOrSelectElement"],[70,67,62,57],[70,68,62,58],[70,69,62,59,"el"],[70,71,62,61],[70,72,62,62],[70,73,62,63],[70,75,62,65],[71,8,63,12],[71,14,63,18],[71,18,63,22,"Error"],[71,23,63,27],[71,24,63,28],[71,134,63,138],[71,135,63,139],[72,6,64,8],[73,4,65,4],[74,4,66,4],[74,11,66,11,"ast"],[74,14,66,14],[75,2,67,0],[76,2,68,0],[77,0,69,0],[78,0,70,0],[79,0,71,0],[80,0,72,0],[81,2,73,0],[81,11,73,9,"collectVariables"],[81,27,73,25,"collectVariables"],[81,28,73,26,"ast"],[81,31,73,29],[81,33,73,31,"vars"],[81,37,73,35],[81,39,73,37],[82,4,74,4],[82,8,74,8,"vars"],[82,12,74,12],[82,17,74,17],[82,22,74,22],[82,23,74,23],[82,25,74,25],[83,6,74,27,"vars"],[83,10,74,31],[83,13,74,34],[83,17,74,38,"Map"],[83,20,74,41],[83,21,74,42],[83,22,74,43],[84,4,74,45],[85,4,75,4,"ast"],[85,7,75,7],[85,8,75,8,"forEach"],[85,15,75,15],[85,16,75,16],[85,26,75,26,"el"],[85,28,75,28],[85,30,75,30],[86,6,76,8],[86,10,76,12],[86,14,76,12,"isArgumentElement"],[86,20,76,29],[86,21,76,29,"isArgumentElement"],[86,38,76,29],[86,40,76,30,"el"],[86,42,76,32],[86,43,76,33],[86,47,77,12],[86,51,77,12,"isDateElement"],[86,57,77,25],[86,58,77,25,"isDateElement"],[86,71,77,25],[86,73,77,26,"el"],[86,75,77,28],[86,76,77,29],[86,80,78,12],[86,84,78,12,"isTimeElement"],[86,90,78,25],[86,91,78,25,"isTimeElement"],[86,104,78,25],[86,106,78,26,"el"],[86,108,78,28],[86,109,78,29],[86,113,79,12],[86,117,79,12,"isNumberElement"],[86,123,79,27],[86,124,79,27,"isNumberElement"],[86,139,79,27],[86,141,79,28,"el"],[86,143,79,30],[86,144,79,31],[86,146,79,33],[87,8,80,12],[87,12,80,16,"el"],[87,14,80,18],[87,15,80,19,"value"],[87,20,80,24],[87,24,80,28,"vars"],[87,28,80,32],[87,32,80,36,"vars"],[87,36,80,40],[87,37,80,41,"get"],[87,40,80,44],[87,41,80,45,"el"],[87,43,80,47],[87,44,80,48,"value"],[87,49,80,53],[87,50,80,54],[87,55,80,59,"el"],[87,57,80,61],[87,58,80,62,"type"],[87,62,80,66],[87,64,80,68],[88,10,81,16],[88,16,81,22],[88,20,81,26,"Error"],[88,25,81,31],[88,26,81,32],[88,37,81,43],[88,38,81,44,"concat"],[88,44,81,50],[88,45,81,51,"el"],[88,47,81,53],[88,48,81,54,"value"],[88,53,81,59],[88,55,81,61],[88,79,81,85],[88,80,81,86],[88,81,81,87],[89,8,82,12],[90,8,83,12,"vars"],[90,12,83,16],[90,13,83,17,"set"],[90,16,83,20],[90,17,83,21,"el"],[90,19,83,23],[90,20,83,24,"value"],[90,25,83,29],[90,27,83,31,"el"],[90,29,83,33],[90,30,83,34,"type"],[90,34,83,38],[90,35,83,39],[91,6,84,8],[92,6,85,8],[92,10,85,12],[92,14,85,12,"isPluralElement"],[92,20,85,27],[92,21,85,27,"isPluralElement"],[92,36,85,27],[92,38,85,28,"el"],[92,40,85,30],[92,41,85,31],[92,45,85,35],[92,49,85,35,"isSelectElement"],[92,55,85,50],[92,56,85,50,"isSelectElement"],[92,71,85,50],[92,73,85,51,"el"],[92,75,85,53],[92,76,85,54],[92,78,85,56],[93,8,86,12,"vars"],[93,12,86,16],[93,13,86,17,"set"],[93,16,86,20],[93,17,86,21,"el"],[93,19,86,23],[93,20,86,24,"value"],[93,25,86,29],[93,27,86,31,"el"],[93,29,86,33],[93,30,86,34,"type"],[93,34,86,38],[93,35,86,39],[94,8,87,12,"Object"],[94,14,87,18],[94,15,87,19,"keys"],[94,19,87,23],[94,20,87,24,"el"],[94,22,87,26],[94,23,87,27,"options"],[94,30,87,34],[94,31,87,35],[94,32,87,36,"forEach"],[94,39,87,43],[94,40,87,44],[94,50,87,54,"k"],[94,51,87,55],[94,53,87,57],[95,10,88,16,"collectVariables"],[95,26,88,32],[95,27,88,33,"el"],[95,29,88,35],[95,30,88,36,"options"],[95,37,88,43],[95,38,88,44,"k"],[95,39,88,45],[95,40,88,46],[95,41,88,47,"value"],[95,46,88,52],[95,48,88,54,"vars"],[95,52,88,58],[95,53,88,59],[96,8,89,12],[96,9,89,13],[96,10,89,14],[97,6,90,8],[98,6,91,8],[98,10,91,12],[98,14,91,12,"isTagElement"],[98,20,91,24],[98,21,91,24,"isTagElement"],[98,33,91,24],[98,35,91,25,"el"],[98,37,91,27],[98,38,91,28],[98,40,91,30],[99,8,92,12,"vars"],[99,12,92,16],[99,13,92,17,"set"],[99,16,92,20],[99,17,92,21,"el"],[99,19,92,23],[99,20,92,24,"value"],[99,25,92,29],[99,27,92,31,"el"],[99,29,92,33],[99,30,92,34,"type"],[99,34,92,38],[99,35,92,39],[100,8,93,12,"collectVariables"],[100,24,93,28],[100,25,93,29,"el"],[100,27,93,31],[100,28,93,32,"children"],[100,36,93,40],[100,38,93,42,"vars"],[100,42,93,46],[100,43,93,47],[101,6,94,8],[102,4,95,4],[102,5,95,5],[102,6,95,6],[103,2,96,0],[104,2,97,0],[105,0,98,0],[106,0,99,0],[107,0,100,0],[108,0,101,0],[109,0,102,0],[110,0,103,0],[111,2,104,7],[111,11,104,16,"isStructurallySame"],[111,29,104,34,"isStructurallySame"],[111,30,104,35,"a"],[111,31,104,36],[111,33,104,38,"b"],[111,34,104,39],[111,36,104,41],[112,4,105,4],[112,8,105,8,"aVars"],[112,13,105,13],[112,16,105,16],[112,20,105,20,"Map"],[112,23,105,23],[112,24,105,24],[112,25,105,25],[113,4,106,4],[113,8,106,8,"bVars"],[113,13,106,13],[113,16,106,16],[113,20,106,20,"Map"],[113,23,106,23],[113,24,106,24],[113,25,106,25],[114,4,107,4,"collectVariables"],[114,20,107,20],[114,21,107,21,"a"],[114,22,107,22],[114,24,107,24,"aVars"],[114,29,107,29],[114,30,107,30],[115,4,108,4,"collectVariables"],[115,20,108,20],[115,21,108,21,"b"],[115,22,108,22],[115,24,108,24,"bVars"],[115,29,108,29],[115,30,108,30],[116,4,109,4],[116,8,109,8,"aVars"],[116,13,109,13],[116,14,109,14,"size"],[116,18,109,18],[116,23,109,23,"bVars"],[116,28,109,28],[116,29,109,29,"size"],[116,33,109,33],[116,35,109,35],[117,6,110,8],[117,13,110,15],[118,8,111,12,"success"],[118,15,111,19],[118,17,111,21],[118,22,111,26],[119,8,112,12,"error"],[119,13,112,17],[119,15,112,19],[119,19,112,23,"Error"],[119,24,112,28],[119,25,112,29],[119,59,112,63],[119,60,112,64,"concat"],[119,66,112,70],[119,67,112,71,"Array"],[119,72,112,76],[119,73,112,77,"from"],[119,77,112,81],[119,78,112,82,"aVars"],[119,83,112,87],[119,84,112,88,"keys"],[119,88,112,92],[119,89,112,93],[119,90,112,94],[119,91,112,95],[119,92,112,96,"join"],[119,96,112,100],[119,97,112,101],[119,101,112,105],[119,102,112,106],[119,104,112,108],[119,112,112,116],[119,113,112,117],[119,114,112,118,"concat"],[119,120,112,124],[119,121,112,125,"Array"],[119,126,112,130],[119,127,112,131,"from"],[119,131,112,135],[119,132,112,136,"bVars"],[119,137,112,141],[119,138,112,142,"keys"],[119,142,112,146],[119,143,112,147],[119,144,112,148],[119,145,112,149],[119,146,112,150,"join"],[119,150,112,154],[119,151,112,155],[119,155,112,159],[119,156,112,160],[119,158,112,162],[119,161,112,165],[119,162,112,166],[120,6,113,8],[120,7,113,9],[121,4,114,4],[122,4,115,4],[122,11,115,11,"Array"],[122,16,115,16],[122,17,115,17,"from"],[122,21,115,21],[122,22,115,22,"aVars"],[122,27,115,27],[122,28,115,28,"entries"],[122,35,115,35],[122,36,115,36],[122,37,115,37],[122,38,115,38],[122,39,115,39,"reduce"],[122,45,115,45],[122,46,115,46],[122,56,115,56,"result"],[122,62,115,62],[122,64,115,64,"_a"],[122,66,115,66],[122,68,115,68],[123,6,116,8],[123,10,116,12,"key"],[123,13,116,15],[123,16,116,18,"_a"],[123,18,116,20],[123,19,116,21],[123,20,116,22],[123,21,116,23],[124,8,116,25,"type"],[124,12,116,29],[124,15,116,32,"_a"],[124,17,116,34],[124,18,116,35],[124,19,116,36],[124,20,116,37],[125,6,117,8],[125,10,117,12],[125,11,117,13,"result"],[125,17,117,19],[125,18,117,20,"success"],[125,25,117,27],[125,27,117,29],[126,8,118,12],[126,15,118,19,"result"],[126,21,118,25],[127,6,119,8],[128,6,120,8],[128,10,120,12,"bType"],[128,15,120,17],[128,18,120,20,"bVars"],[128,23,120,25],[128,24,120,26,"get"],[128,27,120,29],[128,28,120,30,"key"],[128,31,120,33],[128,32,120,34],[129,6,121,8],[129,10,121,12,"bType"],[129,15,121,17],[129,19,121,21],[129,23,121,25],[129,25,121,27],[130,8,122,12],[130,15,122,19],[131,10,123,16,"success"],[131,17,123,23],[131,19,123,25],[131,24,123,30],[132,10,124,16,"error"],[132,15,124,21],[132,17,124,23],[132,21,124,27,"Error"],[132,26,124,32],[132,27,124,33],[132,46,124,52],[132,47,124,53,"concat"],[132,53,124,59],[132,54,124,60,"key"],[132,57,124,63],[132,59,124,65],[132,72,124,78],[132,73,124,79],[133,8,125,12],[133,9,125,13],[134,6,126,8],[135,6,127,8],[135,10,127,12,"bType"],[135,15,127,17],[135,20,127,22,"type"],[135,24,127,26],[135,26,127,28],[136,8,128,12],[136,15,128,19],[137,10,129,16,"success"],[137,17,129,23],[137,19,129,25],[137,24,129,30],[138,10,130,16,"error"],[138,15,130,21],[138,17,130,23],[138,21,130,27,"Error"],[138,26,130,32],[138,27,130,33],[138,38,130,44],[138,39,130,45,"concat"],[138,45,130,51],[138,46,130,52,"key"],[138,49,130,55],[138,51,130,57],[138,77,130,83],[138,78,130,84],[138,79,130,85,"concat"],[138,85,130,91],[138,86,130,92,"TYPE"],[138,92,130,96],[138,93,130,96,"TYPE"],[138,97,130,96],[138,98,130,97,"type"],[138,102,130,101],[138,103,130,102],[138,105,130,104],[138,111,130,110],[138,112,130,111],[138,113,130,112,"concat"],[138,119,130,118],[138,120,130,119,"TYPE"],[138,126,130,123],[138,127,130,123,"TYPE"],[138,131,130,123],[138,132,130,124,"bType"],[138,137,130,129],[138,138,130,130],[138,139,130,131],[139,8,131,12],[139,9,131,13],[140,6,132,8],[141,6,133,8],[141,13,133,15,"result"],[141,19,133,21],[142,4,134,4],[142,5,134,5],[142,7,134,7],[143,6,134,9,"success"],[143,13,134,16],[143,15,134,18],[144,4,134,23],[144,5,134,24],[144,6,134,25],[145,2,135,0],[146,0,135,1],[146,3]],"functionMap":{"names":["<global>","cloneDeep","Object.keys.reduce$argument_0","hoistPluralOrSelectElement","isPluralOrSelectElement","findPluralOrSelectElement","ast.find$argument_0","hoistSelectors","collectVariables","ast.forEach$argument_0","Object.keys.forEach$argument_0","isStructurallySame","Array.from.reduce$argument_0"],"mappings":"AAA;ACE;uCCO;SDI;CDG;AGC;iDDI;KCM;CHE;AIC;CJE;AKC;sBCC;KDQ;CLC;OOY;CPW;AQM;gBCE;4CCY;aDE;KDM;CRC;OWQ;8CCW;KDmB;CXC"},"hasCjsExports":false},"type":"js/module"}]}