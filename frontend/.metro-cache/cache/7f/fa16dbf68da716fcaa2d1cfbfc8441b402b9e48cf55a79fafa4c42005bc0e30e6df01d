{"dependencies":[{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.checkAndPush = checkAndPush;\n  var _utils = require(_dependencyMap[0], \"../utils\");\n  function checkAndPush(item, ret, keyToCheck) {\n    var _item$meta;\n    function getIndexes(array, str) {\n      return array.map((item, index) => item === str ? index : -1).filter(i => i !== -1);\n    }\n    function createNestedObject(arr) {\n      let obj = {};\n      arr.reduce((acc, curr) => {\n        return acc[curr] = {};\n      }, obj);\n      return obj;\n    }\n    function setNestedObjectValue(obj, keyPath, value) {\n      // If the key path is empty, return the value\n      if (keyPath.length === 0) return value;\n\n      // Otherwise, set the value at the current key path and recurse\n      const key = keyPath[0];\n      obj[key] = obj[key] || {};\n      obj[key] = setNestedObjectValue(obj[key], keyPath.slice(1), value);\n      return obj;\n    }\n    // keyToCheck = \"baseStyle\" | \"variants\" | \"sizes\"\n    if ((_item$meta = item.meta) !== null && _item$meta !== void 0 && _item$meta.path.includes(keyToCheck)) {\n      // if (!item.meta.path.includes('state')) {\n      //   if (!ret.ids) {\n      //     ret.ids = [];\n      //   }\n      //   ret.ids.push(item.meta.cssId);\n      //   ret.props = item?.meta?.props;\n      // } else\n      if (!item.meta.path.includes('state') && !item.meta.path.includes('colorMode') && !item.meta.path.includes('theme')) {\n        var _item$meta2;\n        if (!ret.ids) {\n          ret.ids = [];\n        }\n        ret.ids.push(item.meta.cssId);\n        ret.props = item === null || item === void 0 || (_item$meta2 = item.meta) === null || _item$meta2 === void 0 ? void 0 : _item$meta2.props;\n\n        // ret.default.push(item.meta.cssId);\n      } else if (item.meta.path.includes('state') || item.meta.path.includes('colorMode') || item.meta.path.includes('theme')) {\n        var _item$meta3;\n        const allStates = getIndexes(item.meta.path, 'state');\n        const allColorModes = getIndexes(item.meta.path, 'colorMode');\n        const allThemes = getIndexes(item.meta.path, 'theme');\n\n        // const allStatesAndColorMode = [...allStates, ...allColorModes];\n\n        const mergeAllStateKey = [];\n        allStates.forEach(statePath => {\n          const state = item.meta.path[statePath + 1];\n          mergeAllStateKey.push('state');\n          mergeAllStateKey.push(state);\n        });\n        allColorModes.forEach(colorModePath => {\n          const colorMode = item.meta.path[colorModePath + 1];\n          mergeAllStateKey.push('colorMode');\n          mergeAllStateKey.push(colorMode);\n        });\n        allThemes.forEach(themePath => {\n          const theme = item.meta.path[themePath + 1];\n          mergeAllStateKey.push('theme');\n          mergeAllStateKey.push(theme);\n        });\n        const stateObject = createNestedObject(mergeAllStateKey);\n        setNestedObjectValue(stateObject, mergeAllStateKey, {\n          ids: [item.meta.cssId],\n          props: item === null || item === void 0 || (_item$meta3 = item.meta) === null || _item$meta3 === void 0 ? void 0 : _item$meta3.props\n        });\n        (0, _utils.deepMergeArray)(ret, stateObject);\n      }\n    }\n  }\n});","lineCount":82,"map":[[7,2,2,0,"exports"],[7,9,2,0],[7,10,2,0,"checkAndPush"],[7,22,2,0],[7,25,2,0,"checkAndPush"],[7,37,2,0],[8,2,1,0],[8,6,1,0,"_utils"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,7],[9,11,2,16,"checkAndPush"],[9,23,2,28,"checkAndPush"],[9,24,2,29,"item"],[9,28,2,33],[9,30,2,35,"ret"],[9,33,2,38],[9,35,2,40,"keyToCheck"],[9,45,2,50],[9,47,2,52],[10,4,3,2],[10,8,3,6,"_item$meta"],[10,18,3,16],[11,4,4,2],[11,13,4,11,"getIndexes"],[11,23,4,21,"getIndexes"],[11,24,4,22,"array"],[11,29,4,27],[11,31,4,29,"str"],[11,34,4,32],[11,36,4,34],[12,6,5,4],[12,13,5,11,"array"],[12,18,5,16],[12,19,5,17,"map"],[12,22,5,20],[12,23,5,21],[12,24,5,22,"item"],[12,28,5,26],[12,30,5,28,"index"],[12,35,5,33],[12,40,5,38,"item"],[12,44,5,42],[12,49,5,47,"str"],[12,52,5,50],[12,55,5,53,"index"],[12,60,5,58],[12,63,5,61],[12,64,5,62],[12,65,5,63],[12,66,5,64],[12,67,5,65,"filter"],[12,73,5,71],[12,74,5,72,"i"],[12,75,5,73],[12,79,5,77,"i"],[12,80,5,78],[12,85,5,83],[12,86,5,84],[12,87,5,85],[12,88,5,86],[13,4,6,2],[14,4,7,2],[14,13,7,11,"createNestedObject"],[14,31,7,29,"createNestedObject"],[14,32,7,30,"arr"],[14,35,7,33],[14,37,7,35],[15,6,8,4],[15,10,8,8,"obj"],[15,13,8,11],[15,16,8,14],[15,17,8,15],[15,18,8,16],[16,6,9,4,"arr"],[16,9,9,7],[16,10,9,8,"reduce"],[16,16,9,14],[16,17,9,15],[16,18,9,16,"acc"],[16,21,9,19],[16,23,9,21,"curr"],[16,27,9,25],[16,32,9,30],[17,8,10,6],[17,15,10,13,"acc"],[17,18,10,16],[17,19,10,17,"curr"],[17,23,10,21],[17,24,10,22],[17,27,10,25],[17,28,10,26],[17,29,10,27],[18,6,11,4],[18,7,11,5],[18,9,11,7,"obj"],[18,12,11,10],[18,13,11,11],[19,6,12,4],[19,13,12,11,"obj"],[19,16,12,14],[20,4,13,2],[21,4,14,2],[21,13,14,11,"setNestedObjectValue"],[21,33,14,31,"setNestedObjectValue"],[21,34,14,32,"obj"],[21,37,14,35],[21,39,14,37,"keyPath"],[21,46,14,44],[21,48,14,46,"value"],[21,53,14,51],[21,55,14,53],[22,6,15,4],[23,6,16,4],[23,10,16,8,"keyPath"],[23,17,16,15],[23,18,16,16,"length"],[23,24,16,22],[23,29,16,27],[23,30,16,28],[23,32,16,30],[23,39,16,37,"value"],[23,44,16,42],[25,6,18,4],[26,6,19,4],[26,12,19,10,"key"],[26,15,19,13],[26,18,19,16,"keyPath"],[26,25,19,23],[26,26,19,24],[26,27,19,25],[26,28,19,26],[27,6,20,4,"obj"],[27,9,20,7],[27,10,20,8,"key"],[27,13,20,11],[27,14,20,12],[27,17,20,15,"obj"],[27,20,20,18],[27,21,20,19,"key"],[27,24,20,22],[27,25,20,23],[27,29,20,27],[27,30,20,28],[27,31,20,29],[28,6,21,4,"obj"],[28,9,21,7],[28,10,21,8,"key"],[28,13,21,11],[28,14,21,12],[28,17,21,15,"setNestedObjectValue"],[28,37,21,35],[28,38,21,36,"obj"],[28,41,21,39],[28,42,21,40,"key"],[28,45,21,43],[28,46,21,44],[28,48,21,46,"keyPath"],[28,55,21,53],[28,56,21,54,"slice"],[28,61,21,59],[28,62,21,60],[28,63,21,61],[28,64,21,62],[28,66,21,64,"value"],[28,71,21,69],[28,72,21,70],[29,6,22,4],[29,13,22,11,"obj"],[29,16,22,14],[30,4,23,2],[31,4,24,2],[32,4,25,2],[32,8,25,6],[32,9,25,7,"_item$meta"],[32,19,25,17],[32,22,25,20,"item"],[32,26,25,24],[32,27,25,25,"meta"],[32,31,25,29],[32,37,25,35],[32,41,25,39],[32,45,25,43,"_item$meta"],[32,55,25,53],[32,60,25,58],[32,65,25,63],[32,66,25,64],[32,70,25,68,"_item$meta"],[32,80,25,78],[32,81,25,79,"path"],[32,85,25,83],[32,86,25,84,"includes"],[32,94,25,92],[32,95,25,93,"keyToCheck"],[32,105,25,103],[32,106,25,104],[32,108,25,106],[33,6,26,4],[34,6,27,4],[35,6,28,4],[36,6,29,4],[37,6,30,4],[38,6,31,4],[39,6,32,4],[40,6,33,4],[40,10,33,8],[40,11,33,9,"item"],[40,15,33,13],[40,16,33,14,"meta"],[40,20,33,18],[40,21,33,19,"path"],[40,25,33,23],[40,26,33,24,"includes"],[40,34,33,32],[40,35,33,33],[40,42,33,40],[40,43,33,41],[40,47,33,45],[40,48,33,46,"item"],[40,52,33,50],[40,53,33,51,"meta"],[40,57,33,55],[40,58,33,56,"path"],[40,62,33,60],[40,63,33,61,"includes"],[40,71,33,69],[40,72,33,70],[40,83,33,81],[40,84,33,82],[40,88,33,86],[40,89,33,87,"item"],[40,93,33,91],[40,94,33,92,"meta"],[40,98,33,96],[40,99,33,97,"path"],[40,103,33,101],[40,104,33,102,"includes"],[40,112,33,110],[40,113,33,111],[40,120,33,118],[40,121,33,119],[40,123,33,121],[41,8,34,6],[41,12,34,10,"_item$meta2"],[41,23,34,21],[42,8,35,6],[42,12,35,10],[42,13,35,11,"ret"],[42,16,35,14],[42,17,35,15,"ids"],[42,20,35,18],[42,22,35,20],[43,10,36,8,"ret"],[43,13,36,11],[43,14,36,12,"ids"],[43,17,36,15],[43,20,36,18],[43,22,36,20],[44,8,37,6],[45,8,38,6,"ret"],[45,11,38,9],[45,12,38,10,"ids"],[45,15,38,13],[45,16,38,14,"push"],[45,20,38,18],[45,21,38,19,"item"],[45,25,38,23],[45,26,38,24,"meta"],[45,30,38,28],[45,31,38,29,"cssId"],[45,36,38,34],[45,37,38,35],[46,8,39,6,"ret"],[46,11,39,9],[46,12,39,10,"props"],[46,17,39,15],[46,20,39,18,"item"],[46,24,39,22],[46,29,39,27],[46,33,39,31],[46,37,39,35,"item"],[46,41,39,39],[46,46,39,44],[46,51,39,49],[46,52,39,50],[46,56,39,54],[46,57,39,55,"_item$meta2"],[46,68,39,66],[46,71,39,69,"item"],[46,75,39,73],[46,76,39,74,"meta"],[46,80,39,78],[46,86,39,84],[46,90,39,88],[46,94,39,92,"_item$meta2"],[46,105,39,103],[46,110,39,108],[46,115,39,113],[46,116,39,114],[46,119,39,117],[46,124,39,122],[46,125,39,123],[46,128,39,126,"_item$meta2"],[46,139,39,137],[46,140,39,138,"props"],[46,145,39,143],[48,8,41,6],[49,6,42,4],[49,7,42,5],[49,13,42,11],[49,17,42,15,"item"],[49,21,42,19],[49,22,42,20,"meta"],[49,26,42,24],[49,27,42,25,"path"],[49,31,42,29],[49,32,42,30,"includes"],[49,40,42,38],[49,41,42,39],[49,48,42,46],[49,49,42,47],[49,53,42,51,"item"],[49,57,42,55],[49,58,42,56,"meta"],[49,62,42,60],[49,63,42,61,"path"],[49,67,42,65],[49,68,42,66,"includes"],[49,76,42,74],[49,77,42,75],[49,88,42,86],[49,89,42,87],[49,93,42,91,"item"],[49,97,42,95],[49,98,42,96,"meta"],[49,102,42,100],[49,103,42,101,"path"],[49,107,42,105],[49,108,42,106,"includes"],[49,116,42,114],[49,117,42,115],[49,124,42,122],[49,125,42,123],[49,127,42,125],[50,8,43,6],[50,12,43,10,"_item$meta3"],[50,23,43,21],[51,8,44,6],[51,14,44,12,"allStates"],[51,23,44,21],[51,26,44,24,"getIndexes"],[51,36,44,34],[51,37,44,35,"item"],[51,41,44,39],[51,42,44,40,"meta"],[51,46,44,44],[51,47,44,45,"path"],[51,51,44,49],[51,53,44,51],[51,60,44,58],[51,61,44,59],[52,8,45,6],[52,14,45,12,"allColorModes"],[52,27,45,25],[52,30,45,28,"getIndexes"],[52,40,45,38],[52,41,45,39,"item"],[52,45,45,43],[52,46,45,44,"meta"],[52,50,45,48],[52,51,45,49,"path"],[52,55,45,53],[52,57,45,55],[52,68,45,66],[52,69,45,67],[53,8,46,6],[53,14,46,12,"allThemes"],[53,23,46,21],[53,26,46,24,"getIndexes"],[53,36,46,34],[53,37,46,35,"item"],[53,41,46,39],[53,42,46,40,"meta"],[53,46,46,44],[53,47,46,45,"path"],[53,51,46,49],[53,53,46,51],[53,60,46,58],[53,61,46,59],[55,8,48,6],[57,8,50,6],[57,14,50,12,"mergeAllStateKey"],[57,30,50,28],[57,33,50,31],[57,35,50,33],[58,8,51,6,"allStates"],[58,17,51,15],[58,18,51,16,"forEach"],[58,25,51,23],[58,26,51,24,"statePath"],[58,35,51,33],[58,39,51,37],[59,10,52,8],[59,16,52,14,"state"],[59,21,52,19],[59,24,52,22,"item"],[59,28,52,26],[59,29,52,27,"meta"],[59,33,52,31],[59,34,52,32,"path"],[59,38,52,36],[59,39,52,37,"statePath"],[59,48,52,46],[59,51,52,49],[59,52,52,50],[59,53,52,51],[60,10,53,8,"mergeAllStateKey"],[60,26,53,24],[60,27,53,25,"push"],[60,31,53,29],[60,32,53,30],[60,39,53,37],[60,40,53,38],[61,10,54,8,"mergeAllStateKey"],[61,26,54,24],[61,27,54,25,"push"],[61,31,54,29],[61,32,54,30,"state"],[61,37,54,35],[61,38,54,36],[62,8,55,6],[62,9,55,7],[62,10,55,8],[63,8,56,6,"allColorModes"],[63,21,56,19],[63,22,56,20,"forEach"],[63,29,56,27],[63,30,56,28,"colorModePath"],[63,43,56,41],[63,47,56,45],[64,10,57,8],[64,16,57,14,"colorMode"],[64,25,57,23],[64,28,57,26,"item"],[64,32,57,30],[64,33,57,31,"meta"],[64,37,57,35],[64,38,57,36,"path"],[64,42,57,40],[64,43,57,41,"colorModePath"],[64,56,57,54],[64,59,57,57],[64,60,57,58],[64,61,57,59],[65,10,58,8,"mergeAllStateKey"],[65,26,58,24],[65,27,58,25,"push"],[65,31,58,29],[65,32,58,30],[65,43,58,41],[65,44,58,42],[66,10,59,8,"mergeAllStateKey"],[66,26,59,24],[66,27,59,25,"push"],[66,31,59,29],[66,32,59,30,"colorMode"],[66,41,59,39],[66,42,59,40],[67,8,60,6],[67,9,60,7],[67,10,60,8],[68,8,61,6,"allThemes"],[68,17,61,15],[68,18,61,16,"forEach"],[68,25,61,23],[68,26,61,24,"themePath"],[68,35,61,33],[68,39,61,37],[69,10,62,8],[69,16,62,14,"theme"],[69,21,62,19],[69,24,62,22,"item"],[69,28,62,26],[69,29,62,27,"meta"],[69,33,62,31],[69,34,62,32,"path"],[69,38,62,36],[69,39,62,37,"themePath"],[69,48,62,46],[69,51,62,49],[69,52,62,50],[69,53,62,51],[70,10,63,8,"mergeAllStateKey"],[70,26,63,24],[70,27,63,25,"push"],[70,31,63,29],[70,32,63,30],[70,39,63,37],[70,40,63,38],[71,10,64,8,"mergeAllStateKey"],[71,26,64,24],[71,27,64,25,"push"],[71,31,64,29],[71,32,64,30,"theme"],[71,37,64,35],[71,38,64,36],[72,8,65,6],[72,9,65,7],[72,10,65,8],[73,8,66,6],[73,14,66,12,"stateObject"],[73,25,66,23],[73,28,66,26,"createNestedObject"],[73,46,66,44],[73,47,66,45,"mergeAllStateKey"],[73,63,66,61],[73,64,66,62],[74,8,67,6,"setNestedObjectValue"],[74,28,67,26],[74,29,67,27,"stateObject"],[74,40,67,38],[74,42,67,40,"mergeAllStateKey"],[74,58,67,56],[74,60,67,58],[75,10,68,8,"ids"],[75,13,68,11],[75,15,68,13],[75,16,68,14,"item"],[75,20,68,18],[75,21,68,19,"meta"],[75,25,68,23],[75,26,68,24,"cssId"],[75,31,68,29],[75,32,68,30],[76,10,69,8,"props"],[76,15,69,13],[76,17,69,15,"item"],[76,21,69,19],[76,26,69,24],[76,30,69,28],[76,34,69,32,"item"],[76,38,69,36],[76,43,69,41],[76,48,69,46],[76,49,69,47],[76,53,69,51],[76,54,69,52,"_item$meta3"],[76,65,69,63],[76,68,69,66,"item"],[76,72,69,70],[76,73,69,71,"meta"],[76,77,69,75],[76,83,69,81],[76,87,69,85],[76,91,69,89,"_item$meta3"],[76,102,69,100],[76,107,69,105],[76,112,69,110],[76,113,69,111],[76,116,69,114],[76,121,69,119],[76,122,69,120],[76,125,69,123,"_item$meta3"],[76,136,69,134],[76,137,69,135,"props"],[77,8,70,6],[77,9,70,7],[77,10,70,8],[78,8,71,6],[78,12,71,6,"deepMergeArray"],[78,18,71,20],[78,19,71,20,"deepMergeArray"],[78,33,71,20],[78,35,71,21,"ret"],[78,38,71,24],[78,40,71,26,"stateObject"],[78,51,71,37],[78,52,71,38],[79,6,72,4],[80,4,73,2],[81,2,74,0],[82,0,74,1],[82,3]],"functionMap":{"names":["<global>","checkAndPush","getIndexes","array.map$argument_0","array.map.filter$argument_0","createNestedObject","arr.reduce$argument_0","setNestedObjectValue","allStates.forEach$argument_0","allColorModes.forEach$argument_0","allThemes.forEach$argument_0"],"mappings":"AAA;OCC;ECE;qBCC,0CD,SE,aF;GDC;EIC;eCE;KDE;GJE;EMC;GNS;wBO4B;OPI;4BQC;ORI;wBSC;OTI;CDS"},"hasCjsExports":false},"type":"js/module"}]}