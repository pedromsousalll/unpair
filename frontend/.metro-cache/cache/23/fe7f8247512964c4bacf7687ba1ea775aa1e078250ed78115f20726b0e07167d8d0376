{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"./sxToSxResolved","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"oMdbMOhyFDFQzagXDt8K4VGVM7A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"value\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.reduceAndResolveCompoundVariants = reduceAndResolveCompoundVariants;\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _sxToSxResolved = require(_dependencyMap[1], \"./sxToSxResolved\");\n  function reduceAndResolveCompoundVariants(compoundVariants, path, CONFIG, shouldResolve = true) {\n    const compoundVariantsResolved = compoundVariants === null || compoundVariants === void 0 ? void 0 : compoundVariants.map((compoundVariant, index) => {\n      const {\n          value\n        } = compoundVariant,\n        condition = (0, _objectWithoutPropertiesLoose.default)(compoundVariant, _excluded);\n      // let conditionPath: Array<string> = [];\n      // Object.keys(condition).map((key) => {\n      //   conditionPath.push(key);\n      //   conditionPath.push(condition[key]);\n      // });\n      return (0, _sxToSxResolved.sxToSXResolved)(\n      //@ts-ignore\n\n      value, [...path, 'compoundVariants', index], {\n        condition\n      }, CONFIG, shouldResolve);\n    });\n    // console.log(compoundVariantsResolved, 'compoundVariantsResolved');\n\n    return compoundVariantsResolved;\n  }\n});","lineCount":39,"map":[[13,2,2,0,"exports"],[13,9,2,0],[13,10,2,0,"reduceAndResolveCompoundVariants"],[13,42,2,0],[13,45,2,0,"reduceAndResolveCompoundVariants"],[13,77,2,0],[14,2,23,1],[14,6,23,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[14,54,23,1],[14,57,23,1,"require"],[14,64,23,1],[14,65,23,1,"_dependencyMap"],[14,79,23,1],[15,2,23,1],[15,6,23,1,"_objectWithoutPropertiesLoose"],[15,35,23,1],[15,38,23,1,"_interopDefault"],[15,53,23,1],[15,54,23,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[15,102,23,1],[16,2,1,0],[16,6,1,0,"_sxToSxResolved"],[16,21,1,0],[16,24,1,0,"require"],[16,31,1,0],[16,32,1,0,"_dependencyMap"],[16,46,1,0],[17,2,2,7],[17,11,2,16,"reduceAndResolveCompoundVariants"],[17,43,2,48,"reduceAndResolveCompoundVariants"],[17,44,2,49,"compoundVariants"],[17,60,2,65],[17,62,2,67,"path"],[17,66,2,71],[17,68,2,73,"CONFIG"],[17,74,2,79],[17,76,2,81,"shouldResolve"],[17,89,2,94],[17,92,2,97],[17,96,2,101],[17,98,2,103],[18,4,3,2],[18,10,3,8,"compoundVariantsResolved"],[18,34,3,32],[18,37,3,35,"compoundVariants"],[18,53,3,51],[18,58,3,56],[18,62,3,60],[18,66,3,64,"compoundVariants"],[18,82,3,80],[18,87,3,85],[18,92,3,90],[18,93,3,91],[18,96,3,94],[18,101,3,99],[18,102,3,100],[18,105,3,103,"compoundVariants"],[18,121,3,119],[18,122,3,120,"map"],[18,125,3,123],[18,126,3,124],[18,127,3,125,"compoundVariant"],[18,142,3,140],[18,144,3,142,"index"],[18,149,3,147],[18,154,3,152],[19,6,4,4],[19,12,4,10],[20,10,5,6,"value"],[21,8,7,4],[21,9,7,5],[21,12,7,8,"compoundVariant"],[21,27,7,23],[22,8,6,9,"condition"],[22,17,6,18],[22,24,6,18,"_objectWithoutPropertiesLoose"],[22,53,6,18],[22,54,6,18,"default"],[22,61,6,18],[22,63,7,8,"compoundVariant"],[22,78,7,23],[22,80,7,23,"_excluded"],[22,89,7,23],[23,6,8,4],[24,6,9,4],[25,6,10,4],[26,6,11,4],[27,6,12,4],[28,6,13,4],[28,13,13,11],[28,17,13,11,"sxToSXResolved"],[28,32,13,25],[28,33,13,25,"sxToSXResolved"],[28,47,13,25],[29,6,14,4],[31,6,16,4,"value"],[31,11,16,9],[31,13,16,11],[31,14,16,12],[31,17,16,15,"path"],[31,21,16,19],[31,23,16,21],[31,41,16,39],[31,43,16,41,"index"],[31,48,16,46],[31,49,16,47],[31,51,16,49],[32,8,17,6,"condition"],[33,6,18,4],[33,7,18,5],[33,9,18,7,"CONFIG"],[33,15,18,13],[33,17,18,15,"shouldResolve"],[33,30,18,28],[33,31,18,29],[34,4,19,2],[34,5,19,3],[34,6,19,4],[35,4,20,2],[37,4,22,2],[37,11,22,9,"compoundVariantsResolved"],[37,35,22,33],[38,2,23,0],[39,0,23,1],[39,3]],"functionMap":{"names":["<global>","reduceAndResolveCompoundVariants","compoundVariants.map$argument_0"],"mappings":"AAA;OCC;4HCC;GDgB;CDI"},"hasCjsExports":false},"type":"js/module"}]}