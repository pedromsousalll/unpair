{"dependencies":[{"name":"@formatjs/icu-messageformat-parser","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":33,"index":230},"end":{"line":6,"column":78,"index":275}}],"key":"/N5oM54MjYRrK3pXz6XGeaLPoOI=","exportNames":["*"],"imports":1}},{"name":"./error","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":14,"index":291},"end":{"line":7,"column":32,"index":309}}],"key":"ABL1W5lBwNEqpjG9q/KVa7squiQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PART_TYPE = void 0;\n  exports.isFormatXMLElementFn = isFormatXMLElementFn;\n  exports.formatToParts = formatToParts;\n  var icu_messageformat_parser_1 = require(_dependencyMap[0], \"@formatjs/icu-messageformat-parser\");\n  var error_1 = require(_dependencyMap[1], \"./error\");\n  var PART_TYPE;\n  (function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n  })(PART_TYPE || (exports.PART_TYPE = PART_TYPE = {}));\n  function mergeLiteral(parts) {\n    if (parts.length < 2) {\n      return parts;\n    }\n    return parts.reduce(function (all, part) {\n      var lastPart = all[all.length - 1];\n      if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {\n        all.push(part);\n      } else {\n        lastPart.value += part.value;\n      }\n      return all;\n    }, []);\n  }\n  function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n  }\n  // TODO(skeleton): add skeleton support\n  function formatToParts(els, locales, formatters, formats, values, currentPluralValue,\n  // For debugging\n  originalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && (0, icu_messageformat_parser_1.isLiteralElement)(els[0])) {\n      return [{\n        type: PART_TYPE.literal,\n        value: els[0].value\n      }];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n      var el = els_1[_i];\n      // Exit early for string parts.\n      if ((0, icu_messageformat_parser_1.isLiteralElement)(el)) {\n        result.push({\n          type: PART_TYPE.literal,\n          value: el.value\n        });\n        continue;\n      }\n      // TODO: should this part be literal type?\n      // Replace `#` in plural rules with the actual numeric value.\n      if ((0, icu_messageformat_parser_1.isPoundElement)(el)) {\n        if (typeof currentPluralValue === 'number') {\n          result.push({\n            type: PART_TYPE.literal,\n            value: formatters.getNumberFormat(locales).format(currentPluralValue)\n          });\n        }\n        continue;\n      }\n      var varName = el.value;\n      // Enforce that all required values are provided by the caller.\n      if (!(values && varName in values)) {\n        throw new error_1.MissingValueError(varName, originalMessage);\n      }\n      var value = values[varName];\n      if ((0, icu_messageformat_parser_1.isArgumentElement)(el)) {\n        if (!value || typeof value === 'string' || typeof value === 'number') {\n          value = typeof value === 'string' || typeof value === 'number' ? String(value) : '';\n        }\n        result.push({\n          type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n          value: value\n        });\n        continue;\n      }\n      // Recursively format plural and select parts' option â€” which can be a\n      // nested pattern structure. The choosing of the option to use is\n      // abstracted-by and delegated-to the part helper object.\n      if ((0, icu_messageformat_parser_1.isDateElement)(el)) {\n        var style = typeof el.style === 'string' ? formats.date[el.style] : (0, icu_messageformat_parser_1.isDateTimeSkeleton)(el.style) ? el.style.parsedOptions : undefined;\n        result.push({\n          type: PART_TYPE.literal,\n          value: formatters.getDateTimeFormat(locales, style).format(value)\n        });\n        continue;\n      }\n      if ((0, icu_messageformat_parser_1.isTimeElement)(el)) {\n        var style = typeof el.style === 'string' ? formats.time[el.style] : (0, icu_messageformat_parser_1.isDateTimeSkeleton)(el.style) ? el.style.parsedOptions : formats.time.medium;\n        result.push({\n          type: PART_TYPE.literal,\n          value: formatters.getDateTimeFormat(locales, style).format(value)\n        });\n        continue;\n      }\n      if ((0, icu_messageformat_parser_1.isNumberElement)(el)) {\n        var style = typeof el.style === 'string' ? formats.number[el.style] : (0, icu_messageformat_parser_1.isNumberSkeleton)(el.style) ? el.style.parsedOptions : undefined;\n        if (style && style.scale) {\n          value = value * (style.scale || 1);\n        }\n        result.push({\n          type: PART_TYPE.literal,\n          value: formatters.getNumberFormat(locales, style).format(value)\n        });\n        continue;\n      }\n      if ((0, icu_messageformat_parser_1.isTagElement)(el)) {\n        var children = el.children,\n          value_1 = el.value;\n        var formatFn = values[value_1];\n        if (!isFormatXMLElementFn(formatFn)) {\n          throw new error_1.InvalidValueTypeError(value_1, 'function', originalMessage);\n        }\n        var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n        var chunks = formatFn(parts.map(function (p) {\n          return p.value;\n        }));\n        if (!Array.isArray(chunks)) {\n          chunks = [chunks];\n        }\n        result.push.apply(result, chunks.map(function (c) {\n          return {\n            type: typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n            value: c\n          };\n        }));\n      }\n      if ((0, icu_messageformat_parser_1.isSelectElement)(el)) {\n        var opt = el.options[value] || el.options.other;\n        if (!opt) {\n          throw new error_1.InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n        }\n        result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n        continue;\n      }\n      if ((0, icu_messageformat_parser_1.isPluralElement)(el)) {\n        var opt = el.options[\"=\".concat(value)];\n        if (!opt) {\n          if (!Intl.PluralRules) {\n            throw new error_1.FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", error_1.ErrorCode.MISSING_INTL_API, originalMessage);\n          }\n          var rule = formatters.getPluralRules(locales, {\n            type: el.pluralType\n          }).select(value - (el.offset || 0));\n          opt = el.options[rule] || el.options.other;\n        }\n        if (!opt) {\n          throw new error_1.InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n        }\n        result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n        continue;\n      }\n    }\n    return mergeLiteral(result);\n  }\n});","lineCount":162,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"PART_TYPE"],[7,19,3,17],[7,22,3,20],[7,27,3,25],[7,28,3,26],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"isFormatXMLElementFn"],[8,30,4,28],[8,33,4,31,"isFormatXMLElementFn"],[8,53,4,51],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"formatToParts"],[9,23,5,21],[9,26,5,24,"formatToParts"],[9,39,5,37],[10,2,6,0],[10,6,6,4,"icu_messageformat_parser_1"],[10,32,6,30],[10,35,6,33,"require"],[10,42,6,40],[10,43,6,40,"_dependencyMap"],[10,57,6,40],[10,98,6,77],[10,99,6,78],[11,2,7,0],[11,6,7,4,"error_1"],[11,13,7,11],[11,16,7,14,"require"],[11,23,7,21],[11,24,7,21,"_dependencyMap"],[11,38,7,21],[11,52,7,31],[11,53,7,32],[12,2,8,0],[12,6,8,4,"PART_TYPE"],[12,15,8,13],[13,2,9,0],[13,3,9,1],[13,13,9,11,"PART_TYPE"],[13,22,9,20],[13,24,9,22],[14,4,10,4,"PART_TYPE"],[14,13,10,13],[14,14,10,14,"PART_TYPE"],[14,23,10,23],[14,24,10,24],[14,33,10,33],[14,34,10,34],[14,37,10,37],[14,38,10,38],[14,39,10,39],[14,42,10,42],[14,51,10,51],[15,4,11,4,"PART_TYPE"],[15,13,11,13],[15,14,11,14,"PART_TYPE"],[15,23,11,23],[15,24,11,24],[15,32,11,32],[15,33,11,33],[15,36,11,36],[15,37,11,37],[15,38,11,38],[15,41,11,41],[15,49,11,49],[16,2,12,0],[16,3,12,1],[16,5,12,3,"PART_TYPE"],[16,14,12,12],[16,19,12,17,"exports"],[16,26,12,24],[16,27,12,25,"PART_TYPE"],[16,36,12,34],[16,39,12,37,"PART_TYPE"],[16,48,12,46],[16,51,12,49],[16,52,12,50],[16,53,12,51],[16,54,12,52],[16,55,12,53],[17,2,13,0],[17,11,13,9,"mergeLiteral"],[17,23,13,21,"mergeLiteral"],[17,24,13,22,"parts"],[17,29,13,27],[17,31,13,29],[18,4,14,4],[18,8,14,8,"parts"],[18,13,14,13],[18,14,14,14,"length"],[18,20,14,20],[18,23,14,23],[18,24,14,24],[18,26,14,26],[19,6,15,8],[19,13,15,15,"parts"],[19,18,15,20],[20,4,16,4],[21,4,17,4],[21,11,17,11,"parts"],[21,16,17,16],[21,17,17,17,"reduce"],[21,23,17,23],[21,24,17,24],[21,34,17,34,"all"],[21,37,17,37],[21,39,17,39,"part"],[21,43,17,43],[21,45,17,45],[22,6,18,8],[22,10,18,12,"lastPart"],[22,18,18,20],[22,21,18,23,"all"],[22,24,18,26],[22,25,18,27,"all"],[22,28,18,30],[22,29,18,31,"length"],[22,35,18,37],[22,38,18,40],[22,39,18,41],[22,40,18,42],[23,6,19,8],[23,10,19,12],[23,11,19,13,"lastPart"],[23,19,19,21],[23,23,20,12,"lastPart"],[23,31,20,20],[23,32,20,21,"type"],[23,36,20,25],[23,41,20,30,"PART_TYPE"],[23,50,20,39],[23,51,20,40,"literal"],[23,58,20,47],[23,62,21,12,"part"],[23,66,21,16],[23,67,21,17,"type"],[23,71,21,21],[23,76,21,26,"PART_TYPE"],[23,85,21,35],[23,86,21,36,"literal"],[23,93,21,43],[23,95,21,45],[24,8,22,12,"all"],[24,11,22,15],[24,12,22,16,"push"],[24,16,22,20],[24,17,22,21,"part"],[24,21,22,25],[24,22,22,26],[25,6,23,8],[25,7,23,9],[25,13,24,13],[26,8,25,12,"lastPart"],[26,16,25,20],[26,17,25,21,"value"],[26,22,25,26],[26,26,25,30,"part"],[26,30,25,34],[26,31,25,35,"value"],[26,36,25,40],[27,6,26,8],[28,6,27,8],[28,13,27,15,"all"],[28,16,27,18],[29,4,28,4],[29,5,28,5],[29,7,28,7],[29,9,28,9],[29,10,28,10],[30,2,29,0],[31,2,30,0],[31,11,30,9,"isFormatXMLElementFn"],[31,31,30,29,"isFormatXMLElementFn"],[31,32,30,30,"el"],[31,34,30,32],[31,36,30,34],[32,4,31,4],[32,11,31,11],[32,18,31,18,"el"],[32,20,31,20],[32,25,31,25],[32,35,31,35],[33,2,32,0],[34,2,33,0],[35,2,34,0],[35,11,34,9,"formatToParts"],[35,24,34,22,"formatToParts"],[35,25,34,23,"els"],[35,28,34,26],[35,30,34,28,"locales"],[35,37,34,35],[35,39,34,37,"formatters"],[35,49,34,47],[35,51,34,49,"formats"],[35,58,34,56],[35,60,34,58,"values"],[35,66,34,64],[35,68,34,66,"currentPluralValue"],[35,86,34,84],[36,2,35,0],[37,2,36,0,"originalMessage"],[37,17,36,15],[37,19,36,17],[38,4,37,4],[39,4,38,4],[39,8,38,8,"els"],[39,11,38,11],[39,12,38,12,"length"],[39,18,38,18],[39,23,38,23],[39,24,38,24],[39,28,38,28],[39,29,38,29],[39,30,38,30],[39,32,38,32,"icu_messageformat_parser_1"],[39,58,38,58],[39,59,38,59,"isLiteralElement"],[39,75,38,75],[39,77,38,77,"els"],[39,80,38,80],[39,81,38,81],[39,82,38,82],[39,83,38,83],[39,84,38,84],[39,86,38,86],[40,6,39,8],[40,13,39,15],[40,14,40,12],[41,8,41,16,"type"],[41,12,41,20],[41,14,41,22,"PART_TYPE"],[41,23,41,31],[41,24,41,32,"literal"],[41,31,41,39],[42,8,42,16,"value"],[42,13,42,21],[42,15,42,23,"els"],[42,18,42,26],[42,19,42,27],[42,20,42,28],[42,21,42,29],[42,22,42,30,"value"],[43,6,43,12],[43,7,43,13],[43,8,44,9],[44,4,45,4],[45,4,46,4],[45,8,46,8,"result"],[45,14,46,14],[45,17,46,17],[45,19,46,19],[46,4,47,4],[46,9,47,9],[46,13,47,13,"_i"],[46,15,47,15],[46,18,47,18],[46,19,47,19],[46,21,47,21,"els_1"],[46,26,47,26],[46,29,47,29,"els"],[46,32,47,32],[46,34,47,34,"_i"],[46,36,47,36],[46,39,47,39,"els_1"],[46,44,47,44],[46,45,47,45,"length"],[46,51,47,51],[46,53,47,53,"_i"],[46,55,47,55],[46,57,47,57],[46,59,47,59],[47,6,48,8],[47,10,48,12,"el"],[47,12,48,14],[47,15,48,17,"els_1"],[47,20,48,22],[47,21,48,23,"_i"],[47,23,48,25],[47,24,48,26],[48,6,49,8],[49,6,50,8],[49,10,50,12],[49,11,50,13],[49,12,50,14],[49,14,50,16,"icu_messageformat_parser_1"],[49,40,50,42],[49,41,50,43,"isLiteralElement"],[49,57,50,59],[49,59,50,61,"el"],[49,61,50,63],[49,62,50,64],[49,64,50,66],[50,8,51,12,"result"],[50,14,51,18],[50,15,51,19,"push"],[50,19,51,23],[50,20,51,24],[51,10,52,16,"type"],[51,14,52,20],[51,16,52,22,"PART_TYPE"],[51,25,52,31],[51,26,52,32,"literal"],[51,33,52,39],[52,10,53,16,"value"],[52,15,53,21],[52,17,53,23,"el"],[52,19,53,25],[52,20,53,26,"value"],[53,8,54,12],[53,9,54,13],[53,10,54,14],[54,8,55,12],[55,6,56,8],[56,6,57,8],[57,6,58,8],[58,6,59,8],[58,10,59,12],[58,11,59,13],[58,12,59,14],[58,14,59,16,"icu_messageformat_parser_1"],[58,40,59,42],[58,41,59,43,"isPoundElement"],[58,55,59,57],[58,57,59,59,"el"],[58,59,59,61],[58,60,59,62],[58,62,59,64],[59,8,60,12],[59,12,60,16],[59,19,60,23,"currentPluralValue"],[59,37,60,41],[59,42,60,46],[59,50,60,54],[59,52,60,56],[60,10,61,16,"result"],[60,16,61,22],[60,17,61,23,"push"],[60,21,61,27],[60,22,61,28],[61,12,62,20,"type"],[61,16,62,24],[61,18,62,26,"PART_TYPE"],[61,27,62,35],[61,28,62,36,"literal"],[61,35,62,43],[62,12,63,20,"value"],[62,17,63,25],[62,19,63,27,"formatters"],[62,29,63,37],[62,30,63,38,"getNumberFormat"],[62,45,63,53],[62,46,63,54,"locales"],[62,53,63,61],[62,54,63,62],[62,55,63,63,"format"],[62,61,63,69],[62,62,63,70,"currentPluralValue"],[62,80,63,88],[63,10,64,16],[63,11,64,17],[63,12,64,18],[64,8,65,12],[65,8,66,12],[66,6,67,8],[67,6,68,8],[67,10,68,12,"varName"],[67,17,68,19],[67,20,68,22,"el"],[67,22,68,24],[67,23,68,25,"value"],[67,28,68,30],[68,6,69,8],[69,6,70,8],[69,10,70,12],[69,12,70,14,"values"],[69,18,70,20],[69,22,70,24,"varName"],[69,29,70,31],[69,33,70,35,"values"],[69,39,70,41],[69,40,70,42],[69,42,70,44],[70,8,71,12],[70,14,71,18],[70,18,71,22,"error_1"],[70,25,71,29],[70,26,71,30,"MissingValueError"],[70,43,71,47],[70,44,71,48,"varName"],[70,51,71,55],[70,53,71,57,"originalMessage"],[70,68,71,72],[70,69,71,73],[71,6,72,8],[72,6,73,8],[72,10,73,12,"value"],[72,15,73,17],[72,18,73,20,"values"],[72,24,73,26],[72,25,73,27,"varName"],[72,32,73,34],[72,33,73,35],[73,6,74,8],[73,10,74,12],[73,11,74,13],[73,12,74,14],[73,14,74,16,"icu_messageformat_parser_1"],[73,40,74,42],[73,41,74,43,"isArgumentElement"],[73,58,74,60],[73,60,74,62,"el"],[73,62,74,64],[73,63,74,65],[73,65,74,67],[74,8,75,12],[74,12,75,16],[74,13,75,17,"value"],[74,18,75,22],[74,22,75,26],[74,29,75,33,"value"],[74,34,75,38],[74,39,75,43],[74,47,75,51],[74,51,75,55],[74,58,75,62,"value"],[74,63,75,67],[74,68,75,72],[74,76,75,80],[74,78,75,82],[75,10,76,16,"value"],[75,15,76,21],[75,18,77,20],[75,25,77,27,"value"],[75,30,77,32],[75,35,77,37],[75,43,77,45],[75,47,77,49],[75,54,77,56,"value"],[75,59,77,61],[75,64,77,66],[75,72,77,74],[75,75,78,26,"String"],[75,81,78,32],[75,82,78,33,"value"],[75,87,78,38],[75,88,78,39],[75,91,79,26],[75,93,79,28],[76,8,80,12],[77,8,81,12,"result"],[77,14,81,18],[77,15,81,19,"push"],[77,19,81,23],[77,20,81,24],[78,10,82,16,"type"],[78,14,82,20],[78,16,82,22],[78,23,82,29,"value"],[78,28,82,34],[78,33,82,39],[78,41,82,47],[78,44,82,50,"PART_TYPE"],[78,53,82,59],[78,54,82,60,"literal"],[78,61,82,67],[78,64,82,70,"PART_TYPE"],[78,73,82,79],[78,74,82,80,"object"],[78,80,82,86],[79,10,83,16,"value"],[79,15,83,21],[79,17,83,23,"value"],[80,8,84,12],[80,9,84,13],[80,10,84,14],[81,8,85,12],[82,6,86,8],[83,6,87,8],[84,6,88,8],[85,6,89,8],[86,6,90,8],[86,10,90,12],[86,11,90,13],[86,12,90,14],[86,14,90,16,"icu_messageformat_parser_1"],[86,40,90,42],[86,41,90,43,"isDateElement"],[86,54,90,56],[86,56,90,58,"el"],[86,58,90,60],[86,59,90,61],[86,61,90,63],[87,8,91,12],[87,12,91,16,"style"],[87,17,91,21],[87,20,91,24],[87,27,91,31,"el"],[87,29,91,33],[87,30,91,34,"style"],[87,35,91,39],[87,40,91,44],[87,48,91,52],[87,51,92,18,"formats"],[87,58,92,25],[87,59,92,26,"date"],[87,63,92,30],[87,64,92,31,"el"],[87,66,92,33],[87,67,92,34,"style"],[87,72,92,39],[87,73,92,40],[87,76,93,18],[87,77,93,19],[87,78,93,20],[87,80,93,22,"icu_messageformat_parser_1"],[87,106,93,48],[87,107,93,49,"isDateTimeSkeleton"],[87,125,93,67],[87,127,93,69,"el"],[87,129,93,71],[87,130,93,72,"style"],[87,135,93,77],[87,136,93,78],[87,139,94,22,"el"],[87,141,94,24],[87,142,94,25,"style"],[87,147,94,30],[87,148,94,31,"parsedOptions"],[87,161,94,44],[87,164,95,22,"undefined"],[87,173,95,31],[88,8,96,12,"result"],[88,14,96,18],[88,15,96,19,"push"],[88,19,96,23],[88,20,96,24],[89,10,97,16,"type"],[89,14,97,20],[89,16,97,22,"PART_TYPE"],[89,25,97,31],[89,26,97,32,"literal"],[89,33,97,39],[90,10,98,16,"value"],[90,15,98,21],[90,17,98,23,"formatters"],[90,27,98,33],[90,28,99,21,"getDateTimeFormat"],[90,45,99,38],[90,46,99,39,"locales"],[90,53,99,46],[90,55,99,48,"style"],[90,60,99,53],[90,61,99,54],[90,62,100,21,"format"],[90,68,100,27],[90,69,100,28,"value"],[90,74,100,33],[91,8,101,12],[91,9,101,13],[91,10,101,14],[92,8,102,12],[93,6,103,8],[94,6,104,8],[94,10,104,12],[94,11,104,13],[94,12,104,14],[94,14,104,16,"icu_messageformat_parser_1"],[94,40,104,42],[94,41,104,43,"isTimeElement"],[94,54,104,56],[94,56,104,58,"el"],[94,58,104,60],[94,59,104,61],[94,61,104,63],[95,8,105,12],[95,12,105,16,"style"],[95,17,105,21],[95,20,105,24],[95,27,105,31,"el"],[95,29,105,33],[95,30,105,34,"style"],[95,35,105,39],[95,40,105,44],[95,48,105,52],[95,51,106,18,"formats"],[95,58,106,25],[95,59,106,26,"time"],[95,63,106,30],[95,64,106,31,"el"],[95,66,106,33],[95,67,106,34,"style"],[95,72,106,39],[95,73,106,40],[95,76,107,18],[95,77,107,19],[95,78,107,20],[95,80,107,22,"icu_messageformat_parser_1"],[95,106,107,48],[95,107,107,49,"isDateTimeSkeleton"],[95,125,107,67],[95,127,107,69,"el"],[95,129,107,71],[95,130,107,72,"style"],[95,135,107,77],[95,136,107,78],[95,139,108,22,"el"],[95,141,108,24],[95,142,108,25,"style"],[95,147,108,30],[95,148,108,31,"parsedOptions"],[95,161,108,44],[95,164,109,22,"formats"],[95,171,109,29],[95,172,109,30,"time"],[95,176,109,34],[95,177,109,35,"medium"],[95,183,109,41],[96,8,110,12,"result"],[96,14,110,18],[96,15,110,19,"push"],[96,19,110,23],[96,20,110,24],[97,10,111,16,"type"],[97,14,111,20],[97,16,111,22,"PART_TYPE"],[97,25,111,31],[97,26,111,32,"literal"],[97,33,111,39],[98,10,112,16,"value"],[98,15,112,21],[98,17,112,23,"formatters"],[98,27,112,33],[98,28,113,21,"getDateTimeFormat"],[98,45,113,38],[98,46,113,39,"locales"],[98,53,113,46],[98,55,113,48,"style"],[98,60,113,53],[98,61,113,54],[98,62,114,21,"format"],[98,68,114,27],[98,69,114,28,"value"],[98,74,114,33],[99,8,115,12],[99,9,115,13],[99,10,115,14],[100,8,116,12],[101,6,117,8],[102,6,118,8],[102,10,118,12],[102,11,118,13],[102,12,118,14],[102,14,118,16,"icu_messageformat_parser_1"],[102,40,118,42],[102,41,118,43,"isNumberElement"],[102,56,118,58],[102,58,118,60,"el"],[102,60,118,62],[102,61,118,63],[102,63,118,65],[103,8,119,12],[103,12,119,16,"style"],[103,17,119,21],[103,20,119,24],[103,27,119,31,"el"],[103,29,119,33],[103,30,119,34,"style"],[103,35,119,39],[103,40,119,44],[103,48,119,52],[103,51,120,18,"formats"],[103,58,120,25],[103,59,120,26,"number"],[103,65,120,32],[103,66,120,33,"el"],[103,68,120,35],[103,69,120,36,"style"],[103,74,120,41],[103,75,120,42],[103,78,121,18],[103,79,121,19],[103,80,121,20],[103,82,121,22,"icu_messageformat_parser_1"],[103,108,121,48],[103,109,121,49,"isNumberSkeleton"],[103,125,121,65],[103,127,121,67,"el"],[103,129,121,69],[103,130,121,70,"style"],[103,135,121,75],[103,136,121,76],[103,139,122,22,"el"],[103,141,122,24],[103,142,122,25,"style"],[103,147,122,30],[103,148,122,31,"parsedOptions"],[103,161,122,44],[103,164,123,22,"undefined"],[103,173,123,31],[104,8,124,12],[104,12,124,16,"style"],[104,17,124,21],[104,21,124,25,"style"],[104,26,124,30],[104,27,124,31,"scale"],[104,32,124,36],[104,34,124,38],[105,10,125,16,"value"],[105,15,125,21],[105,18,126,20,"value"],[105,23,126,25],[105,27,127,25,"style"],[105,32,127,30],[105,33,127,31,"scale"],[105,38,127,36],[105,42,127,40],[105,43,127,41],[105,44,127,42],[106,8,128,12],[107,8,129,12,"result"],[107,14,129,18],[107,15,129,19,"push"],[107,19,129,23],[107,20,129,24],[108,10,130,16,"type"],[108,14,130,20],[108,16,130,22,"PART_TYPE"],[108,25,130,31],[108,26,130,32,"literal"],[108,33,130,39],[109,10,131,16,"value"],[109,15,131,21],[109,17,131,23,"formatters"],[109,27,131,33],[109,28,132,21,"getNumberFormat"],[109,43,132,36],[109,44,132,37,"locales"],[109,51,132,44],[109,53,132,46,"style"],[109,58,132,51],[109,59,132,52],[109,60,133,21,"format"],[109,66,133,27],[109,67,133,28,"value"],[109,72,133,33],[110,8,134,12],[110,9,134,13],[110,10,134,14],[111,8,135,12],[112,6,136,8],[113,6,137,8],[113,10,137,12],[113,11,137,13],[113,12,137,14],[113,14,137,16,"icu_messageformat_parser_1"],[113,40,137,42],[113,41,137,43,"isTagElement"],[113,53,137,55],[113,55,137,57,"el"],[113,57,137,59],[113,58,137,60],[113,60,137,62],[114,8,138,12],[114,12,138,16,"children"],[114,20,138,24],[114,23,138,27,"el"],[114,25,138,29],[114,26,138,30,"children"],[114,34,138,38],[115,10,138,40,"value_1"],[115,17,138,47],[115,20,138,50,"el"],[115,22,138,52],[115,23,138,53,"value"],[115,28,138,58],[116,8,139,12],[116,12,139,16,"formatFn"],[116,20,139,24],[116,23,139,27,"values"],[116,29,139,33],[116,30,139,34,"value_1"],[116,37,139,41],[116,38,139,42],[117,8,140,12],[117,12,140,16],[117,13,140,17,"isFormatXMLElementFn"],[117,33,140,37],[117,34,140,38,"formatFn"],[117,42,140,46],[117,43,140,47],[117,45,140,49],[118,10,141,16],[118,16,141,22],[118,20,141,26,"error_1"],[118,27,141,33],[118,28,141,34,"InvalidValueTypeError"],[118,49,141,55],[118,50,141,56,"value_1"],[118,57,141,63],[118,59,141,65],[118,69,141,75],[118,71,141,77,"originalMessage"],[118,86,141,92],[118,87,141,93],[119,8,142,12],[120,8,143,12],[120,12,143,16,"parts"],[120,17,143,21],[120,20,143,24,"formatToParts"],[120,33,143,37],[120,34,143,38,"children"],[120,42,143,46],[120,44,143,48,"locales"],[120,51,143,55],[120,53,143,57,"formatters"],[120,63,143,67],[120,65,143,69,"formats"],[120,72,143,76],[120,74,143,78,"values"],[120,80,143,84],[120,82,143,86,"currentPluralValue"],[120,100,143,104],[120,101,143,105],[121,8,144,12],[121,12,144,16,"chunks"],[121,18,144,22],[121,21,144,25,"formatFn"],[121,29,144,33],[121,30,144,34,"parts"],[121,35,144,39],[121,36,144,40,"map"],[121,39,144,43],[121,40,144,44],[121,50,144,54,"p"],[121,51,144,55],[121,53,144,57],[122,10,144,59],[122,17,144,66,"p"],[122,18,144,67],[122,19,144,68,"value"],[122,24,144,73],[123,8,144,75],[123,9,144,76],[123,10,144,77],[123,11,144,78],[124,8,145,12],[124,12,145,16],[124,13,145,17,"Array"],[124,18,145,22],[124,19,145,23,"isArray"],[124,26,145,30],[124,27,145,31,"chunks"],[124,33,145,37],[124,34,145,38],[124,36,145,40],[125,10,146,16,"chunks"],[125,16,146,22],[125,19,146,25],[125,20,146,26,"chunks"],[125,26,146,32],[125,27,146,33],[126,8,147,12],[127,8,148,12,"result"],[127,14,148,18],[127,15,148,19,"push"],[127,19,148,23],[127,20,148,24,"apply"],[127,25,148,29],[127,26,148,30,"result"],[127,32,148,36],[127,34,148,38,"chunks"],[127,40,148,44],[127,41,148,45,"map"],[127,44,148,48],[127,45,148,49],[127,55,148,59,"c"],[127,56,148,60],[127,58,148,62],[128,10,149,16],[128,17,149,23],[129,12,150,20,"type"],[129,16,150,24],[129,18,150,26],[129,25,150,33,"c"],[129,26,150,34],[129,31,150,39],[129,39,150,47],[129,42,150,50,"PART_TYPE"],[129,51,150,59],[129,52,150,60,"literal"],[129,59,150,67],[129,62,150,70,"PART_TYPE"],[129,71,150,79],[129,72,150,80,"object"],[129,78,150,86],[130,12,151,20,"value"],[130,17,151,25],[130,19,151,27,"c"],[131,10,152,16],[131,11,152,17],[132,8,153,12],[132,9,153,13],[132,10,153,14],[132,11,153,15],[133,6,154,8],[134,6,155,8],[134,10,155,12],[134,11,155,13],[134,12,155,14],[134,14,155,16,"icu_messageformat_parser_1"],[134,40,155,42],[134,41,155,43,"isSelectElement"],[134,56,155,58],[134,58,155,60,"el"],[134,60,155,62],[134,61,155,63],[134,63,155,65],[135,8,156,12],[135,12,156,16,"opt"],[135,15,156,19],[135,18,156,22,"el"],[135,20,156,24],[135,21,156,25,"options"],[135,28,156,32],[135,29,156,33,"value"],[135,34,156,38],[135,35,156,39],[135,39,156,43,"el"],[135,41,156,45],[135,42,156,46,"options"],[135,49,156,53],[135,50,156,54,"other"],[135,55,156,59],[136,8,157,12],[136,12,157,16],[136,13,157,17,"opt"],[136,16,157,20],[136,18,157,22],[137,10,158,16],[137,16,158,22],[137,20,158,26,"error_1"],[137,27,158,33],[137,28,158,34,"InvalidValueError"],[137,45,158,51],[137,46,158,52,"el"],[137,48,158,54],[137,49,158,55,"value"],[137,54,158,60],[137,56,158,62,"value"],[137,61,158,67],[137,63,158,69,"Object"],[137,69,158,75],[137,70,158,76,"keys"],[137,74,158,80],[137,75,158,81,"el"],[137,77,158,83],[137,78,158,84,"options"],[137,85,158,91],[137,86,158,92],[137,88,158,94,"originalMessage"],[137,103,158,109],[137,104,158,110],[138,8,159,12],[139,8,160,12,"result"],[139,14,160,18],[139,15,160,19,"push"],[139,19,160,23],[139,20,160,24,"apply"],[139,25,160,29],[139,26,160,30,"result"],[139,32,160,36],[139,34,160,38,"formatToParts"],[139,47,160,51],[139,48,160,52,"opt"],[139,51,160,55],[139,52,160,56,"value"],[139,57,160,61],[139,59,160,63,"locales"],[139,66,160,70],[139,68,160,72,"formatters"],[139,78,160,82],[139,80,160,84,"formats"],[139,87,160,91],[139,89,160,93,"values"],[139,95,160,99],[139,96,160,100],[139,97,160,101],[140,8,161,12],[141,6,162,8],[142,6,163,8],[142,10,163,12],[142,11,163,13],[142,12,163,14],[142,14,163,16,"icu_messageformat_parser_1"],[142,40,163,42],[142,41,163,43,"isPluralElement"],[142,56,163,58],[142,58,163,60,"el"],[142,60,163,62],[142,61,163,63],[142,63,163,65],[143,8,164,12],[143,12,164,16,"opt"],[143,15,164,19],[143,18,164,22,"el"],[143,20,164,24],[143,21,164,25,"options"],[143,28,164,32],[143,29,164,33],[143,32,164,36],[143,33,164,37,"concat"],[143,39,164,43],[143,40,164,44,"value"],[143,45,164,49],[143,46,164,50],[143,47,164,51],[144,8,165,12],[144,12,165,16],[144,13,165,17,"opt"],[144,16,165,20],[144,18,165,22],[145,10,166,16],[145,14,166,20],[145,15,166,21,"Intl"],[145,19,166,25],[145,20,166,26,"PluralRules"],[145,31,166,37],[145,33,166,39],[146,12,167,20],[146,18,167,26],[146,22,167,30,"error_1"],[146,29,167,37],[146,30,167,38,"FormatError"],[146,41,167,49],[146,42,167,50],[146,157,167,165],[146,159,167,167,"error_1"],[146,166,167,174],[146,167,167,175,"ErrorCode"],[146,176,167,184],[146,177,167,185,"MISSING_INTL_API"],[146,193,167,201],[146,195,167,203,"originalMessage"],[146,210,167,218],[146,211,167,219],[147,10,168,16],[148,10,169,16],[148,14,169,20,"rule"],[148,18,169,24],[148,21,169,27,"formatters"],[148,31,169,37],[148,32,170,21,"getPluralRules"],[148,46,170,35],[148,47,170,36,"locales"],[148,54,170,43],[148,56,170,45],[149,12,170,47,"type"],[149,16,170,51],[149,18,170,53,"el"],[149,20,170,55],[149,21,170,56,"pluralType"],[150,10,170,67],[150,11,170,68],[150,12,170,69],[150,13,171,21,"select"],[150,19,171,27],[150,20,171,28,"value"],[150,25,171,33],[150,29,171,37,"el"],[150,31,171,39],[150,32,171,40,"offset"],[150,38,171,46],[150,42,171,50],[150,43,171,51],[150,44,171,52],[150,45,171,53],[151,10,172,16,"opt"],[151,13,172,19],[151,16,172,22,"el"],[151,18,172,24],[151,19,172,25,"options"],[151,26,172,32],[151,27,172,33,"rule"],[151,31,172,37],[151,32,172,38],[151,36,172,42,"el"],[151,38,172,44],[151,39,172,45,"options"],[151,46,172,52],[151,47,172,53,"other"],[151,52,172,58],[152,8,173,12],[153,8,174,12],[153,12,174,16],[153,13,174,17,"opt"],[153,16,174,20],[153,18,174,22],[154,10,175,16],[154,16,175,22],[154,20,175,26,"error_1"],[154,27,175,33],[154,28,175,34,"InvalidValueError"],[154,45,175,51],[154,46,175,52,"el"],[154,48,175,54],[154,49,175,55,"value"],[154,54,175,60],[154,56,175,62,"value"],[154,61,175,67],[154,63,175,69,"Object"],[154,69,175,75],[154,70,175,76,"keys"],[154,74,175,80],[154,75,175,81,"el"],[154,77,175,83],[154,78,175,84,"options"],[154,85,175,91],[154,86,175,92],[154,88,175,94,"originalMessage"],[154,103,175,109],[154,104,175,110],[155,8,176,12],[156,8,177,12,"result"],[156,14,177,18],[156,15,177,19,"push"],[156,19,177,23],[156,20,177,24,"apply"],[156,25,177,29],[156,26,177,30,"result"],[156,32,177,36],[156,34,177,38,"formatToParts"],[156,47,177,51],[156,48,177,52,"opt"],[156,51,177,55],[156,52,177,56,"value"],[156,57,177,61],[156,59,177,63,"locales"],[156,66,177,70],[156,68,177,72,"formatters"],[156,78,177,82],[156,80,177,84,"formats"],[156,87,177,91],[156,89,177,93,"values"],[156,95,177,99],[156,97,177,101,"value"],[156,102,177,106],[156,106,177,110,"el"],[156,108,177,112],[156,109,177,113,"offset"],[156,115,177,119],[156,119,177,123],[156,120,177,124],[156,121,177,125],[156,122,177,126],[156,123,177,127],[157,8,178,12],[158,6,179,8],[159,4,180,4],[160,4,181,4],[160,11,181,11,"mergeLiteral"],[160,23,181,23],[160,24,181,24,"result"],[160,30,181,30],[160,31,181,31],[161,2,182,0],[162,0,182,1],[162,3]],"functionMap":{"names":["<global>","<anonymous>","mergeLiteral","parts.reduce$argument_0","isFormatXMLElementFn","formatToParts","parts.map$argument_0","chunks.map$argument_0"],"mappings":"AAA;CCQ;CDG;AEC;wBCI;KDW;CFC;AIC;CJE;AKE;4CC8G,gCD;iDEI;aFK;CL6B"},"hasCjsExports":true},"type":"js/module"}]}