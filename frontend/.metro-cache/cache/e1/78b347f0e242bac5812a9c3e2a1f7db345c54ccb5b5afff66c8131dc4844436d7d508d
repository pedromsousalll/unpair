{"dependencies":[{"name":"./normalizeValueWithProperty","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":126},"end":{"line":6,"column":70,"index":196}}],"key":"81wKapm6Jvhg4Q7uguKo82FjsDs=","exportNames":["*"],"imports":1}},{"name":"./canUseDom","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":197},"end":{"line":7,"column":36,"index":233}}],"key":"vjaHX0KX6tRRJpC6jaMu1q89b/M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"createTransformValue\", {\n    enumerable: true,\n    get: function () {\n      return createTransformValue;\n    }\n  });\n  var _normalizeValueWithProperty = require(_dependencyMap[0], \"./normalizeValueWithProperty\");\n  var normalizeValueWithProperty = _interopDefault(_normalizeValueWithProperty);\n  var _canUseDom = require(_dependencyMap[1], \"./canUseDom\");\n  var canUseDOM = _interopDefault(_canUseDom);\n  // Code copied from the open source library 'react-native-web'\n  // https://github.com/necolas/react-native-web\n\n  //@ts-nocheck\n\n  /**\n   * The browser implements the CSS cascade, where the order of properties is a\n   * factor in determining which styles to paint. React Native is different. It\n   * gives giving precedence to the more specific style property. For example,\n   * the value of `paddingTop` takes precedence over that of `padding`.\n   *\n   * This module creates mutally exclusive style declarations by expanding all of\n   * React Native's supported shortform properties (e.g. `padding`) to their\n   * longfrom equivalents.\n   */\n\n  const emptyObject = {};\n  const supportsCSS3TextDecoration = !canUseDOM.default || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\n  const ignoredProps = {\n    elevation: true,\n    overlayColor: true,\n    resizeMode: true,\n    tintColor: true\n  };\n  const MONOSPACE_FONT_STACK = 'monospace,monospace';\n  const SYSTEM_FONT_STACK = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\n  const STYLE_SHORT_FORM_EXPANSIONS = {\n    borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n    borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\n    borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n    borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n    marginHorizontal: ['marginRight', 'marginLeft'],\n    marginVertical: ['marginTop', 'marginBottom'],\n    overflow: ['overflowX', 'overflowY'],\n    overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n    paddingHorizontal: ['paddingRight', 'paddingLeft'],\n    paddingVertical: ['paddingTop', 'paddingBottom']\n  };\n\n  /**\n   * Transform\n   */\n\n  // { scale: 2 } => 'scale(2)'\n  // { translateX: 20 } => 'translateX(20px)'\n  // { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\n  const mapTransform = transform => {\n    const type = Object.keys(transform)[0];\n    const value = transform[type];\n    if (type === 'matrix' || type === 'matrix3d') {\n      return `${type}(${value.join(',')})`;\n    } else {\n      const normalizedValue = (0, normalizeValueWithProperty.default)(value, type);\n      return `${type}(${normalizedValue})`;\n    }\n  };\n  const createTransformValue = style => {\n    let transform = style.transform;\n    if (Array.isArray(style.transform)) {\n      transform = style.transform.map(mapTransform).join(' ');\n    }\n    return transform;\n  };\n\n  /**\n   * Reducer\n   */\n\n  const createReactDOMStyle = (style, isInline) => {\n    if (!style) {\n      return emptyObject;\n    }\n    const resolvedStyle = {};\n    for (const prop in style) {\n      const value = style[prop];\n      if (\n      // Ignore everything with a null value\n      value == null ||\n      // Ignore some React Native styles\n      ignoredProps[prop]) {\n        continue;\n      }\n      if (prop === 'aspectRatio') {\n        resolvedStyle[prop] = value.toString();\n      } else if (prop === 'backgroundClip') {\n        // TODO: remove once this issue is fixed\n        // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n        if (value === 'text') {\n          resolvedStyle.backgroundClip = value;\n          resolvedStyle.WebkitBackgroundClip = value;\n        }\n      } else if (prop === 'flex') {\n        if (value === -1) {\n          resolvedStyle.flexGrow = 0;\n          resolvedStyle.flexShrink = 1;\n          resolvedStyle.flexBasis = 'auto';\n        } else {\n          resolvedStyle.flex = value;\n        }\n      } else if (prop === 'font') {\n        resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n      } else if (prop === 'fontFamily') {\n        if (value.indexOf('System') > -1) {\n          const stack = value.split(/,\\s*/);\n          stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n          resolvedStyle[prop] = stack.join(',');\n        } else if (value === 'monospace') {\n          resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n        } else {\n          resolvedStyle[prop] = value;\n        }\n      } else if (prop === 'fontVariant') {\n        if (Array.isArray(value) && value.length > 0) {\n          resolvedStyle.fontVariant = value.join(' ');\n        }\n      } else if (prop === 'textAlignVertical') {\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n      } else if (prop === 'textDecorationLine') {\n        // use 'text-decoration' for browsers that only support CSS2\n        // text-decoration (e.g., IE, Edge)\n        if (!supportsCSS3TextDecoration) {\n          resolvedStyle.textDecoration = value;\n        } else {\n          resolvedStyle.textDecorationLine = value;\n        }\n      } else if (prop === 'transform' || prop === 'transformMatrix') {\n        resolvedStyle.transform = createTransformValue(style);\n      } else if (prop === 'writingDirection') {\n        resolvedStyle.direction = value;\n      } else {\n        const value = (0, normalizeValueWithProperty.default)(style[prop], prop);\n        const longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n        if (isInline && prop === 'margin') {\n          if (style.marginHorizontal == null) {\n            resolvedStyle.marginLeft = value;\n            resolvedStyle.marginRight = value;\n          }\n          if (style.marginVertical == null) {\n            resolvedStyle.marginTop = value;\n            resolvedStyle.marginBottom = value;\n          }\n        } else if (isInline && prop === 'padding') {\n          if (style.paddingHorizontal == null) {\n            resolvedStyle.paddingLeft = value;\n            resolvedStyle.paddingRight = value;\n          }\n          if (style.paddingVertical == null) {\n            resolvedStyle.paddingTop = value;\n            resolvedStyle.paddingBottom = value;\n          }\n        } else if (longFormProperties) {\n          longFormProperties.forEach((longForm, _i) => {\n            // The value of any longform property in the original styles takes\n            // precedence over the shortform's value.\n            if (style[longForm] == null) {\n              resolvedStyle[longForm] = value;\n            }\n          });\n        } else {\n          resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n        }\n      }\n    }\n    return resolvedStyle;\n  };\n  var _default = createReactDOMStyle;\n});","lineCount":194,"map":[[12,2,168,0,"Object"],[12,8,168,0],[12,9,168,0,"defineProperty"],[12,23,168,0],[12,24,168,0,"exports"],[12,31,168,0],[13,4,168,0,"enumerable"],[13,14,168,0],[14,4,168,0,"get"],[14,7,168,0],[14,18,168,0,"get"],[14,19,168,0],[15,6,168,0],[15,13,168,0,"_default"],[15,21,168,0],[16,4,168,0],[17,2,168,0],[18,2,59,0,"Object"],[18,8,59,0],[18,9,59,0,"defineProperty"],[18,23,59,0],[18,24,59,0,"exports"],[18,31,59,0],[19,4,59,0,"enumerable"],[19,14,59,0],[20,4,59,0,"get"],[20,7,59,0],[20,18,59,0,"get"],[20,19,59,0],[21,6,59,0],[21,13,59,0,"createTransformValue"],[21,33,59,0],[22,4,59,0],[23,2,59,0],[24,2,6,0],[24,6,6,0,"_normalizeValueWithProperty"],[24,33,6,0],[24,36,6,0,"require"],[24,43,6,0],[24,44,6,0,"_dependencyMap"],[24,58,6,0],[25,2,6,0],[25,6,6,0,"normalizeValueWithProperty"],[25,32,6,0],[25,35,6,0,"_interopDefault"],[25,50,6,0],[25,51,6,0,"_normalizeValueWithProperty"],[25,78,6,0],[26,2,7,0],[26,6,7,0,"_canUseDom"],[26,16,7,0],[26,19,7,0,"require"],[26,26,7,0],[26,27,7,0,"_dependencyMap"],[26,41,7,0],[27,2,7,0],[27,6,7,0,"canUseDOM"],[27,15,7,0],[27,18,7,0,"_interopDefault"],[27,33,7,0],[27,34,7,0,"_canUseDom"],[27,44,7,0],[28,2,1,0],[29,2,2,0],[31,2,4,0],[33,2,8,0],[34,0,9,0],[35,0,10,0],[36,0,11,0],[37,0,12,0],[38,0,13,0],[39,0,14,0],[40,0,15,0],[41,0,16,0],[42,0,17,0],[44,2,19,0],[44,8,19,6,"emptyObject"],[44,19,19,17],[44,22,19,20],[44,23,19,21],[44,24,19,22],[45,2,20,0],[45,8,20,6,"supportsCSS3TextDecoration"],[45,34,20,32],[45,37,20,35],[45,38,20,36,"canUseDOM"],[45,47,20,45],[45,48,20,45,"default"],[45,55,20,45],[45,59,20,49,"window"],[45,65,20,55],[45,66,20,56,"CSS"],[45,69,20,59],[45,73,20,63],[45,77,20,67],[45,81,20,71,"window"],[45,87,20,77],[45,88,20,78,"CSS"],[45,91,20,81],[45,92,20,82,"supports"],[45,100,20,90],[45,104,20,94],[45,108,20,98],[45,113,20,103,"window"],[45,119,20,109],[45,120,20,110,"CSS"],[45,123,20,113],[45,124,20,114,"supports"],[45,132,20,122],[45,133,20,123],[45,155,20,145],[45,157,20,147],[45,163,20,153],[45,164,20,154],[45,168,20,158,"window"],[45,174,20,164],[45,175,20,165,"CSS"],[45,178,20,168],[45,179,20,169,"supports"],[45,187,20,177],[45,188,20,178],[45,218,20,208],[45,220,20,210],[45,226,20,216],[45,227,20,217],[45,228,20,218],[46,2,21,0],[46,8,21,6,"ignoredProps"],[46,20,21,18],[46,23,21,21],[47,4,22,2,"elevation"],[47,13,22,11],[47,15,22,13],[47,19,22,17],[48,4,23,2,"overlayColor"],[48,16,23,14],[48,18,23,16],[48,22,23,20],[49,4,24,2,"resizeMode"],[49,14,24,12],[49,16,24,14],[49,20,24,18],[50,4,25,2,"tintColor"],[50,13,25,11],[50,15,25,13],[51,2,26,0],[51,3,26,1],[52,2,27,0],[52,8,27,6,"MONOSPACE_FONT_STACK"],[52,28,27,26],[52,31,27,29],[52,52,27,50],[53,2,28,0],[53,8,28,6,"SYSTEM_FONT_STACK"],[53,25,28,23],[53,28,28,26],[53,107,28,105],[54,2,29,0],[54,8,29,6,"STYLE_SHORT_FORM_EXPANSIONS"],[54,35,29,33],[54,38,29,36],[55,4,30,2,"borderColor"],[55,15,30,13],[55,17,30,15],[55,18,30,16],[55,34,30,32],[55,36,30,34],[55,54,30,52],[55,56,30,54],[55,75,30,73],[55,77,30,75],[55,94,30,92],[55,95,30,93],[56,4,31,2,"borderRadius"],[56,16,31,14],[56,18,31,16],[56,19,31,17],[56,40,31,38],[56,42,31,40],[56,64,31,62],[56,66,31,64],[56,91,31,89],[56,93,31,91],[56,117,31,115],[56,118,31,116],[57,4,32,2,"borderStyle"],[57,15,32,13],[57,17,32,15],[57,18,32,16],[57,34,32,32],[57,36,32,34],[57,54,32,52],[57,56,32,54],[57,75,32,73],[57,77,32,75],[57,94,32,92],[57,95,32,93],[58,4,33,2,"borderWidth"],[58,15,33,13],[58,17,33,15],[58,18,33,16],[58,34,33,32],[58,36,33,34],[58,54,33,52],[58,56,33,54],[58,75,33,73],[58,77,33,75],[58,94,33,92],[58,95,33,93],[59,4,34,2,"marginHorizontal"],[59,20,34,18],[59,22,34,20],[59,23,34,21],[59,36,34,34],[59,38,34,36],[59,50,34,48],[59,51,34,49],[60,4,35,2,"marginVertical"],[60,18,35,16],[60,20,35,18],[60,21,35,19],[60,32,35,30],[60,34,35,32],[60,48,35,46],[60,49,35,47],[61,4,36,2,"overflow"],[61,12,36,10],[61,14,36,12],[61,15,36,13],[61,26,36,24],[61,28,36,26],[61,39,36,37],[61,40,36,38],[62,4,37,2,"overscrollBehavior"],[62,22,37,20],[62,24,37,22],[62,25,37,23],[62,46,37,44],[62,48,37,46],[62,69,37,67],[62,70,37,68],[63,4,38,2,"paddingHorizontal"],[63,21,38,19],[63,23,38,21],[63,24,38,22],[63,38,38,36],[63,40,38,38],[63,53,38,51],[63,54,38,52],[64,4,39,2,"paddingVertical"],[64,19,39,17],[64,21,39,19],[64,22,39,20],[64,34,39,32],[64,36,39,34],[64,51,39,49],[65,2,40,0],[65,3,40,1],[67,2,42,0],[68,0,43,0],[69,0,44,0],[71,2,46,0],[72,2,47,0],[73,2,48,0],[74,2,49,0],[74,8,49,6,"mapTransform"],[74,20,49,18],[74,23,49,21,"transform"],[74,32,49,30],[74,36,49,34],[75,4,50,2],[75,10,50,8,"type"],[75,14,50,12],[75,17,50,15,"Object"],[75,23,50,21],[75,24,50,22,"keys"],[75,28,50,26],[75,29,50,27,"transform"],[75,38,50,36],[75,39,50,37],[75,40,50,38],[75,41,50,39],[75,42,50,40],[76,4,51,2],[76,10,51,8,"value"],[76,15,51,13],[76,18,51,16,"transform"],[76,27,51,25],[76,28,51,26,"type"],[76,32,51,30],[76,33,51,31],[77,4,52,2],[77,8,52,6,"type"],[77,12,52,10],[77,17,52,15],[77,25,52,23],[77,29,52,27,"type"],[77,33,52,31],[77,38,52,36],[77,48,52,46],[77,50,52,48],[78,6,53,4],[78,13,53,11],[78,16,53,14,"type"],[78,20,53,18],[78,24,53,22,"value"],[78,29,53,27],[78,30,53,28,"join"],[78,34,53,32],[78,35,53,33],[78,38,53,36],[78,39,53,37],[78,42,53,40],[79,4,54,2],[79,5,54,3],[79,11,54,9],[80,6,55,4],[80,12,55,10,"normalizedValue"],[80,27,55,25],[80,30,55,28],[80,34,55,28,"normalizeValueWithProperty"],[80,60,55,54],[80,61,55,54,"default"],[80,68,55,54],[80,70,55,55,"value"],[80,75,55,60],[80,77,55,62,"type"],[80,81,55,66],[80,82,55,67],[81,6,56,4],[81,13,56,11],[81,16,56,14,"type"],[81,20,56,18],[81,24,56,22,"normalizedValue"],[81,39,56,37],[81,42,56,40],[82,4,57,2],[83,2,58,0],[83,3,58,1],[84,2,59,7],[84,8,59,13,"createTransformValue"],[84,28,59,33],[84,31,59,36,"style"],[84,36,59,41],[84,40,59,45],[85,4,60,2],[85,8,60,6,"transform"],[85,17,60,15],[85,20,60,18,"style"],[85,25,60,23],[85,26,60,24,"transform"],[85,35,60,33],[86,4,61,2],[86,8,61,6,"Array"],[86,13,61,11],[86,14,61,12,"isArray"],[86,21,61,19],[86,22,61,20,"style"],[86,27,61,25],[86,28,61,26,"transform"],[86,37,61,35],[86,38,61,36],[86,40,61,38],[87,6,62,4,"transform"],[87,15,62,13],[87,18,62,16,"style"],[87,23,62,21],[87,24,62,22,"transform"],[87,33,62,31],[87,34,62,32,"map"],[87,37,62,35],[87,38,62,36,"mapTransform"],[87,50,62,48],[87,51,62,49],[87,52,62,50,"join"],[87,56,62,54],[87,57,62,55],[87,60,62,58],[87,61,62,59],[88,4,63,2],[89,4,64,2],[89,11,64,9,"transform"],[89,20,64,18],[90,2,65,0],[90,3,65,1],[92,2,67,0],[93,0,68,0],[94,0,69,0],[96,2,71,0],[96,8,71,6,"createReactDOMStyle"],[96,27,71,25],[96,30,71,28,"createReactDOMStyle"],[96,31,71,29,"style"],[96,36,71,34],[96,38,71,36,"isInline"],[96,46,71,44],[96,51,71,49],[97,4,72,2],[97,8,72,6],[97,9,72,7,"style"],[97,14,72,12],[97,16,72,14],[98,6,73,4],[98,13,73,11,"emptyObject"],[98,24,73,22],[99,4,74,2],[100,4,75,2],[100,10,75,8,"resolvedStyle"],[100,23,75,21],[100,26,75,24],[100,27,75,25],[100,28,75,26],[101,4,76,2],[101,9,76,7],[101,15,76,13,"prop"],[101,19,76,17],[101,23,76,21,"style"],[101,28,76,26],[101,30,76,28],[102,6,77,4],[102,12,77,10,"value"],[102,17,77,15],[102,20,77,18,"style"],[102,25,77,23],[102,26,77,24,"prop"],[102,30,77,28],[102,31,77,29],[103,6,78,4],[104,6,79,4],[105,6,80,4,"value"],[105,11,80,9],[105,15,80,13],[105,19,80,17],[106,6,81,4],[107,6,82,4,"ignoredProps"],[107,18,82,16],[107,19,82,17,"prop"],[107,23,82,21],[107,24,82,22],[107,26,82,24],[108,8,83,6],[109,6,84,4],[110,6,85,4],[110,10,85,8,"prop"],[110,14,85,12],[110,19,85,17],[110,32,85,30],[110,34,85,32],[111,8,86,6,"resolvedStyle"],[111,21,86,19],[111,22,86,20,"prop"],[111,26,86,24],[111,27,86,25],[111,30,86,28,"value"],[111,35,86,33],[111,36,86,34,"toString"],[111,44,86,42],[111,45,86,43],[111,46,86,44],[112,6,87,4],[112,7,87,5],[112,13,87,11],[112,17,87,15,"prop"],[112,21,87,19],[112,26,87,24],[112,42,87,40],[112,44,87,42],[113,8,88,6],[114,8,89,6],[115,8,90,6],[115,12,90,10,"value"],[115,17,90,15],[115,22,90,20],[115,28,90,26],[115,30,90,28],[116,10,91,8,"resolvedStyle"],[116,23,91,21],[116,24,91,22,"backgroundClip"],[116,38,91,36],[116,41,91,39,"value"],[116,46,91,44],[117,10,92,8,"resolvedStyle"],[117,23,92,21],[117,24,92,22,"WebkitBackgroundClip"],[117,44,92,42],[117,47,92,45,"value"],[117,52,92,50],[118,8,93,6],[119,6,94,4],[119,7,94,5],[119,13,94,11],[119,17,94,15,"prop"],[119,21,94,19],[119,26,94,24],[119,32,94,30],[119,34,94,32],[120,8,95,6],[120,12,95,10,"value"],[120,17,95,15],[120,22,95,20],[120,23,95,21],[120,24,95,22],[120,26,95,24],[121,10,96,8,"resolvedStyle"],[121,23,96,21],[121,24,96,22,"flexGrow"],[121,32,96,30],[121,35,96,33],[121,36,96,34],[122,10,97,8,"resolvedStyle"],[122,23,97,21],[122,24,97,22,"flexShrink"],[122,34,97,32],[122,37,97,35],[122,38,97,36],[123,10,98,8,"resolvedStyle"],[123,23,98,21],[123,24,98,22,"flexBasis"],[123,33,98,31],[123,36,98,34],[123,42,98,40],[124,8,99,6],[124,9,99,7],[124,15,99,13],[125,10,100,8,"resolvedStyle"],[125,23,100,21],[125,24,100,22,"flex"],[125,28,100,26],[125,31,100,29,"value"],[125,36,100,34],[126,8,101,6],[127,6,102,4],[127,7,102,5],[127,13,102,11],[127,17,102,15,"prop"],[127,21,102,19],[127,26,102,24],[127,32,102,30],[127,34,102,32],[128,8,103,6,"resolvedStyle"],[128,21,103,19],[128,22,103,20,"prop"],[128,26,103,24],[128,27,103,25],[128,30,103,28,"value"],[128,35,103,33],[128,36,103,34,"replace"],[128,43,103,41],[128,44,103,42],[128,52,103,50],[128,54,103,52,"SYSTEM_FONT_STACK"],[128,71,103,69],[128,72,103,70],[129,6,104,4],[129,7,104,5],[129,13,104,11],[129,17,104,15,"prop"],[129,21,104,19],[129,26,104,24],[129,38,104,36],[129,40,104,38],[130,8,105,6],[130,12,105,10,"value"],[130,17,105,15],[130,18,105,16,"indexOf"],[130,25,105,23],[130,26,105,24],[130,34,105,32],[130,35,105,33],[130,38,105,36],[130,39,105,37],[130,40,105,38],[130,42,105,40],[131,10,106,8],[131,16,106,14,"stack"],[131,21,106,19],[131,24,106,22,"value"],[131,29,106,27],[131,30,106,28,"split"],[131,35,106,33],[131,36,106,34],[131,42,106,40],[131,43,106,41],[132,10,107,8,"stack"],[132,15,107,13],[132,16,107,14,"stack"],[132,21,107,19],[132,22,107,20,"indexOf"],[132,29,107,27],[132,30,107,28],[132,38,107,36],[132,39,107,37],[132,40,107,38],[132,43,107,41,"SYSTEM_FONT_STACK"],[132,60,107,58],[133,10,108,8,"resolvedStyle"],[133,23,108,21],[133,24,108,22,"prop"],[133,28,108,26],[133,29,108,27],[133,32,108,30,"stack"],[133,37,108,35],[133,38,108,36,"join"],[133,42,108,40],[133,43,108,41],[133,46,108,44],[133,47,108,45],[134,8,109,6],[134,9,109,7],[134,15,109,13],[134,19,109,17,"value"],[134,24,109,22],[134,29,109,27],[134,40,109,38],[134,42,109,40],[135,10,110,8,"resolvedStyle"],[135,23,110,21],[135,24,110,22,"prop"],[135,28,110,26],[135,29,110,27],[135,32,110,30,"MONOSPACE_FONT_STACK"],[135,52,110,50],[136,8,111,6],[136,9,111,7],[136,15,111,13],[137,10,112,8,"resolvedStyle"],[137,23,112,21],[137,24,112,22,"prop"],[137,28,112,26],[137,29,112,27],[137,32,112,30,"value"],[137,37,112,35],[138,8,113,6],[139,6,114,4],[139,7,114,5],[139,13,114,11],[139,17,114,15,"prop"],[139,21,114,19],[139,26,114,24],[139,39,114,37],[139,41,114,39],[140,8,115,6],[140,12,115,10,"Array"],[140,17,115,15],[140,18,115,16,"isArray"],[140,25,115,23],[140,26,115,24,"value"],[140,31,115,29],[140,32,115,30],[140,36,115,34,"value"],[140,41,115,39],[140,42,115,40,"length"],[140,48,115,46],[140,51,115,49],[140,52,115,50],[140,54,115,52],[141,10,116,8,"resolvedStyle"],[141,23,116,21],[141,24,116,22,"fontVariant"],[141,35,116,33],[141,38,116,36,"value"],[141,43,116,41],[141,44,116,42,"join"],[141,48,116,46],[141,49,116,47],[141,52,116,50],[141,53,116,51],[142,8,117,6],[143,6,118,4],[143,7,118,5],[143,13,118,11],[143,17,118,15,"prop"],[143,21,118,19],[143,26,118,24],[143,45,118,43],[143,47,118,45],[144,8,119,6,"resolvedStyle"],[144,21,119,19],[144,22,119,20,"verticalAlign"],[144,35,119,33],[144,38,119,36,"value"],[144,43,119,41],[144,48,119,46],[144,56,119,54],[144,59,119,57],[144,67,119,65],[144,70,119,68,"value"],[144,75,119,73],[145,6,120,4],[145,7,120,5],[145,13,120,11],[145,17,120,15,"prop"],[145,21,120,19],[145,26,120,24],[145,46,120,44],[145,48,120,46],[146,8,121,6],[147,8,122,6],[148,8,123,6],[148,12,123,10],[148,13,123,11,"supportsCSS3TextDecoration"],[148,39,123,37],[148,41,123,39],[149,10,124,8,"resolvedStyle"],[149,23,124,21],[149,24,124,22,"textDecoration"],[149,38,124,36],[149,41,124,39,"value"],[149,46,124,44],[150,8,125,6],[150,9,125,7],[150,15,125,13],[151,10,126,8,"resolvedStyle"],[151,23,126,21],[151,24,126,22,"textDecorationLine"],[151,42,126,40],[151,45,126,43,"value"],[151,50,126,48],[152,8,127,6],[153,6,128,4],[153,7,128,5],[153,13,128,11],[153,17,128,15,"prop"],[153,21,128,19],[153,26,128,24],[153,37,128,35],[153,41,128,39,"prop"],[153,45,128,43],[153,50,128,48],[153,67,128,65],[153,69,128,67],[154,8,129,6,"resolvedStyle"],[154,21,129,19],[154,22,129,20,"transform"],[154,31,129,29],[154,34,129,32,"createTransformValue"],[154,54,129,52],[154,55,129,53,"style"],[154,60,129,58],[154,61,129,59],[155,6,130,4],[155,7,130,5],[155,13,130,11],[155,17,130,15,"prop"],[155,21,130,19],[155,26,130,24],[155,44,130,42],[155,46,130,44],[156,8,131,6,"resolvedStyle"],[156,21,131,19],[156,22,131,20,"direction"],[156,31,131,29],[156,34,131,32,"value"],[156,39,131,37],[157,6,132,4],[157,7,132,5],[157,13,132,11],[158,8,133,6],[158,14,133,12,"value"],[158,19,133,17],[158,22,133,20],[158,26,133,20,"normalizeValueWithProperty"],[158,52,133,46],[158,53,133,46,"default"],[158,60,133,46],[158,62,133,47,"style"],[158,67,133,52],[158,68,133,53,"prop"],[158,72,133,57],[158,73,133,58],[158,75,133,60,"prop"],[158,79,133,64],[158,80,133,65],[159,8,134,6],[159,14,134,12,"longFormProperties"],[159,32,134,30],[159,35,134,33,"STYLE_SHORT_FORM_EXPANSIONS"],[159,62,134,60],[159,63,134,61,"prop"],[159,67,134,65],[159,68,134,66],[160,8,135,6],[160,12,135,10,"isInline"],[160,20,135,18],[160,24,135,22,"prop"],[160,28,135,26],[160,33,135,31],[160,41,135,39],[160,43,135,41],[161,10,136,8],[161,14,136,12,"style"],[161,19,136,17],[161,20,136,18,"marginHorizontal"],[161,36,136,34],[161,40,136,38],[161,44,136,42],[161,46,136,44],[162,12,137,10,"resolvedStyle"],[162,25,137,23],[162,26,137,24,"marginLeft"],[162,36,137,34],[162,39,137,37,"value"],[162,44,137,42],[163,12,138,10,"resolvedStyle"],[163,25,138,23],[163,26,138,24,"marginRight"],[163,37,138,35],[163,40,138,38,"value"],[163,45,138,43],[164,10,139,8],[165,10,140,8],[165,14,140,12,"style"],[165,19,140,17],[165,20,140,18,"marginVertical"],[165,34,140,32],[165,38,140,36],[165,42,140,40],[165,44,140,42],[166,12,141,10,"resolvedStyle"],[166,25,141,23],[166,26,141,24,"marginTop"],[166,35,141,33],[166,38,141,36,"value"],[166,43,141,41],[167,12,142,10,"resolvedStyle"],[167,25,142,23],[167,26,142,24,"marginBottom"],[167,38,142,36],[167,41,142,39,"value"],[167,46,142,44],[168,10,143,8],[169,8,144,6],[169,9,144,7],[169,15,144,13],[169,19,144,17,"isInline"],[169,27,144,25],[169,31,144,29,"prop"],[169,35,144,33],[169,40,144,38],[169,49,144,47],[169,51,144,49],[170,10,145,8],[170,14,145,12,"style"],[170,19,145,17],[170,20,145,18,"paddingHorizontal"],[170,37,145,35],[170,41,145,39],[170,45,145,43],[170,47,145,45],[171,12,146,10,"resolvedStyle"],[171,25,146,23],[171,26,146,24,"paddingLeft"],[171,37,146,35],[171,40,146,38,"value"],[171,45,146,43],[172,12,147,10,"resolvedStyle"],[172,25,147,23],[172,26,147,24,"paddingRight"],[172,38,147,36],[172,41,147,39,"value"],[172,46,147,44],[173,10,148,8],[174,10,149,8],[174,14,149,12,"style"],[174,19,149,17],[174,20,149,18,"paddingVertical"],[174,35,149,33],[174,39,149,37],[174,43,149,41],[174,45,149,43],[175,12,150,10,"resolvedStyle"],[175,25,150,23],[175,26,150,24,"paddingTop"],[175,36,150,34],[175,39,150,37,"value"],[175,44,150,42],[176,12,151,10,"resolvedStyle"],[176,25,151,23],[176,26,151,24,"paddingBottom"],[176,39,151,37],[176,42,151,40,"value"],[176,47,151,45],[177,10,152,8],[178,8,153,6],[178,9,153,7],[178,15,153,13],[178,19,153,17,"longFormProperties"],[178,37,153,35],[178,39,153,37],[179,10,154,8,"longFormProperties"],[179,28,154,26],[179,29,154,27,"forEach"],[179,36,154,34],[179,37,154,35],[179,38,154,36,"longForm"],[179,46,154,44],[179,48,154,46,"_i"],[179,50,154,48],[179,55,154,53],[180,12,155,10],[181,12,156,10],[182,12,157,10],[182,16,157,14,"style"],[182,21,157,19],[182,22,157,20,"longForm"],[182,30,157,28],[182,31,157,29],[182,35,157,33],[182,39,157,37],[182,41,157,39],[183,14,158,12,"resolvedStyle"],[183,27,158,25],[183,28,158,26,"longForm"],[183,36,158,34],[183,37,158,35],[183,40,158,38,"value"],[183,45,158,43],[184,12,159,10],[185,10,160,8],[185,11,160,9],[185,12,160,10],[186,8,161,6],[186,9,161,7],[186,15,161,13],[187,10,162,8,"resolvedStyle"],[187,23,162,21],[187,24,162,22,"prop"],[187,28,162,26],[187,29,162,27],[187,32,162,30,"Array"],[187,37,162,35],[187,38,162,36,"isArray"],[187,45,162,43],[187,46,162,44,"value"],[187,51,162,49],[187,52,162,50],[187,55,162,53,"value"],[187,60,162,58],[187,61,162,59,"join"],[187,65,162,63],[187,66,162,64],[187,69,162,67],[187,70,162,68],[187,73,162,71,"value"],[187,78,162,76],[188,8,163,6],[189,6,164,4],[190,4,165,2],[191,4,166,2],[191,11,166,9,"resolvedStyle"],[191,24,166,22],[192,2,167,0],[192,3,167,1],[193,2,168,0],[193,6,168,0,"_default"],[193,14,168,0],[193,17,168,15,"createReactDOMStyle"],[193,36,168,34],[194,0,168,35],[194,3]],"functionMap":{"names":["<global>","mapTransform","createTransformValue","createReactDOMStyle","longFormProperties.forEach$argument_0"],"mappings":"AAA;qBCgD;CDS;oCEC;CFM;4BGM;mCCmF;SDM;CHO"},"hasCjsExports":false},"type":"js/module"}]}