{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-aria/interactions","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":35},"end":{"line":2,"column":58,"index":93}}],"key":"FcpU6JkYHVe2vVdySmtNP/5zbkQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useOverlay = useOverlay;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactAriaInteractions = require(_dependencyMap[1], \"@react-aria/interactions\");\n  const visibleOverlays = [];\n\n  /**\n   * Provides the behavior for overlays such as dialogs, popovers, and menus.\n   * Hides the overlay when the user interacts outside it, when the Escape key is pressed,\n   * or optionally, on blur. Only the top-most overlay will close at once.\n   */\n  function useOverlay(props, ref) {\n    let {\n      onClose,\n      shouldCloseOnBlur,\n      isOpen,\n      isKeyboardDismissDisabled = false\n    } = props;\n\n    // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.\n    (0, _react.useEffect)(() => {\n      if (isOpen) {\n        visibleOverlays.push(ref);\n      }\n      return () => {\n        let index = visibleOverlays.indexOf(ref);\n        if (index >= 0) {\n          visibleOverlays.splice(index, 1);\n        }\n      };\n    }, [isOpen, ref]);\n\n    // Only hide the overlay when it is the topmost visible overlay in the stack.\n    let onHide = () => {\n      if (visibleOverlays[visibleOverlays.length - 1] === ref && onClose) {\n        onClose();\n      }\n    };\n\n    // Handle the escape key\n    let onKeyDown = e => {\n      if (e.key === 'Escape' && !isKeyboardDismissDisabled) {\n        e.preventDefault();\n        onHide();\n      }\n    };\n\n    // Handle clicking outside the overlay to close it\n\n    let {\n      focusWithinProps\n    } = (0, _reactAriaInteractions.useFocusWithin)({\n      isDisabled: !shouldCloseOnBlur,\n      onBlurWithin: () => {\n        onClose && onClose();\n      }\n    });\n    return {\n      overlayProps: Object.assign({\n        onKeyDown\n      }, focusWithinProps)\n    };\n  }\n});","lineCount":69,"map":[[7,2,10,0,"exports"],[7,9,10,0],[7,10,10,0,"useOverlay"],[7,20,10,0],[7,23,10,0,"useOverlay"],[7,33,10,0],[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,0],[9,6,2,0,"_reactAriaInteractions"],[9,28,2,0],[9,31,2,0,"require"],[9,38,2,0],[9,39,2,0,"_dependencyMap"],[9,53,2,0],[10,2,3,0],[10,8,3,6,"visibleOverlays"],[10,23,3,21],[10,26,3,24],[10,28,3,26],[12,2,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,2,10,7],[17,11,10,16,"useOverlay"],[17,21,10,26,"useOverlay"],[17,22,10,27,"props"],[17,27,10,32],[17,29,10,34,"ref"],[17,32,10,37],[17,34,10,39],[18,4,11,2],[18,8,11,6],[19,6,12,4,"onClose"],[19,13,12,11],[20,6,13,4,"shouldCloseOnBlur"],[20,23,13,21],[21,6,14,4,"isOpen"],[21,12,14,10],[22,6,15,4,"isKeyboardDismissDisabled"],[22,31,15,29],[22,34,15,32],[23,4,16,2],[23,5,16,3],[23,8,16,6,"props"],[23,13,16,11],[25,4,18,2],[26,4,19,2],[26,8,19,2,"useEffect"],[26,14,19,11],[26,15,19,11,"useEffect"],[26,24,19,11],[26,26,19,12],[26,32,19,18],[27,6,20,4],[27,10,20,8,"isOpen"],[27,16,20,14],[27,18,20,16],[28,8,21,6,"visibleOverlays"],[28,23,21,21],[28,24,21,22,"push"],[28,28,21,26],[28,29,21,27,"ref"],[28,32,21,30],[28,33,21,31],[29,6,22,4],[30,6,23,4],[30,13,23,11],[30,19,23,17],[31,8,24,6],[31,12,24,10,"index"],[31,17,24,15],[31,20,24,18,"visibleOverlays"],[31,35,24,33],[31,36,24,34,"indexOf"],[31,43,24,41],[31,44,24,42,"ref"],[31,47,24,45],[31,48,24,46],[32,8,25,6],[32,12,25,10,"index"],[32,17,25,15],[32,21,25,19],[32,22,25,20],[32,24,25,22],[33,10,26,8,"visibleOverlays"],[33,25,26,23],[33,26,26,24,"splice"],[33,32,26,30],[33,33,26,31,"index"],[33,38,26,36],[33,40,26,38],[33,41,26,39],[33,42,26,40],[34,8,27,6],[35,6,28,4],[35,7,28,5],[36,4,29,2],[36,5,29,3],[36,7,29,5],[36,8,29,6,"isOpen"],[36,14,29,12],[36,16,29,14,"ref"],[36,19,29,17],[36,20,29,18],[36,21,29,19],[38,4,31,2],[39,4,32,2],[39,8,32,6,"onHide"],[39,14,32,12],[39,17,32,15,"onHide"],[39,18,32,15],[39,23,32,21],[40,6,33,4],[40,10,33,8,"visibleOverlays"],[40,25,33,23],[40,26,33,24,"visibleOverlays"],[40,41,33,39],[40,42,33,40,"length"],[40,48,33,46],[40,51,33,49],[40,52,33,50],[40,53,33,51],[40,58,33,56,"ref"],[40,61,33,59],[40,65,33,63,"onClose"],[40,72,33,70],[40,74,33,72],[41,8,34,6,"onClose"],[41,15,34,13],[41,16,34,14],[41,17,34,15],[42,6,35,4],[43,4,36,2],[43,5,36,3],[45,4,38,2],[46,4,39,2],[46,8,39,6,"onKeyDown"],[46,17,39,15],[46,20,39,18,"e"],[46,21,39,19],[46,25,39,23],[47,6,40,4],[47,10,40,8,"e"],[47,11,40,9],[47,12,40,10,"key"],[47,15,40,13],[47,20,40,18],[47,28,40,26],[47,32,40,30],[47,33,40,31,"isKeyboardDismissDisabled"],[47,58,40,56],[47,60,40,58],[48,8,41,6,"e"],[48,9,41,7],[48,10,41,8,"preventDefault"],[48,24,41,22],[48,25,41,23],[48,26,41,24],[49,8,42,6,"onHide"],[49,14,42,12],[49,15,42,13],[49,16,42,14],[50,6,43,4],[51,4,44,2],[51,5,44,3],[53,4,46,2],[55,4,48,2],[55,8,48,6],[56,6,49,4,"focusWithinProps"],[57,4,50,2],[57,5,50,3],[57,8,50,6],[57,12,50,6,"useFocusWithin"],[57,34,50,20],[57,35,50,20,"useFocusWithin"],[57,49,50,20],[57,51,50,21],[58,6,51,4,"isDisabled"],[58,16,51,14],[58,18,51,16],[58,19,51,17,"shouldCloseOnBlur"],[58,36,51,34],[59,6,52,4,"onBlurWithin"],[59,18,52,16],[59,20,52,18,"onBlurWithin"],[59,21,52,18],[59,26,52,24],[60,8,53,6,"onClose"],[60,15,53,13],[60,19,53,17,"onClose"],[60,26,53,24],[60,27,53,25],[60,28,53,26],[61,6,54,4],[62,4,55,2],[62,5,55,3],[62,6,55,4],[63,4,56,2],[63,11,56,9],[64,6,57,4,"overlayProps"],[64,18,57,16],[64,20,57,16,"Object"],[64,26,57,16],[64,27,57,16,"assign"],[64,33,57,16],[65,8,58,6,"onKeyDown"],[66,6,58,15],[66,9,59,9,"focusWithinProps"],[66,25,59,25],[67,4,61,2],[67,5,61,3],[68,2,62,0],[69,0,62,1],[69,3]],"functionMap":{"names":["<global>","useOverlay","useEffect$argument_0","<anonymous>","onHide","onKeyDown","useFocusWithin$argument_0.onBlurWithin"],"mappings":"AAA;OCS;YCS;WCI;KDK;GDC;eGG;GHI;kBIG;GJK;kBKQ;KLE;CDQ"},"hasCjsExports":false},"type":"js/module"}]}