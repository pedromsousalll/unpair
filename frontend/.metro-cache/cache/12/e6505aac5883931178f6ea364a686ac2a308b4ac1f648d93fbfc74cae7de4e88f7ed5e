{"dependencies":[{"name":"./wrap-idb-value.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":67,"index":67}}],"key":"OGBTW7H/ooZIE0ffuAGbHXYdREw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"unwrap\", {\n    enumerable: true,\n    get: function () {\n      return _wrapIdbValueJs.u;\n    }\n  });\n  Object.defineProperty(exports, \"wrap\", {\n    enumerable: true,\n    get: function () {\n      return _wrapIdbValueJs.w;\n    }\n  });\n  Object.defineProperty(exports, \"deleteDB\", {\n    enumerable: true,\n    get: function () {\n      return deleteDB;\n    }\n  });\n  Object.defineProperty(exports, \"openDB\", {\n    enumerable: true,\n    get: function () {\n      return openDB;\n    }\n  });\n  var _wrapIdbValueJs = require(_dependencyMap[0], \"./wrap-idb-value.js\");\n  /**\n   * Open a database.\n   *\n   * @param name Name of the database.\n   * @param version Schema version.\n   * @param callbacks Additional callbacks.\n   */\n  function openDB(name, version, {\n    blocked,\n    upgrade,\n    blocking,\n    terminated\n  } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = (0, _wrapIdbValueJs.w)(request);\n    if (upgrade) {\n      request.addEventListener('upgradeneeded', event => {\n        upgrade((0, _wrapIdbValueJs.w)(request.result), event.oldVersion, event.newVersion, (0, _wrapIdbValueJs.w)(request.transaction), event);\n      });\n    }\n    if (blocked) {\n      request.addEventListener('blocked', event => blocked(\n      // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n      event.oldVersion, event.newVersion, event));\n    }\n    openPromise.then(db => {\n      if (terminated) db.addEventListener('close', () => terminated());\n      if (blocking) {\n        db.addEventListener('versionchange', event => blocking(event.oldVersion, event.newVersion, event));\n      }\n    }).catch(() => {});\n    return openPromise;\n  }\n  /**\n   * Delete a database.\n   *\n   * @param name Name of the database.\n   */\n  function deleteDB(name, {\n    blocked\n  } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n      request.addEventListener('blocked', event => blocked(\n      // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n      event.oldVersion, event));\n    }\n    return (0, _wrapIdbValueJs.w)(request).then(() => undefined);\n  }\n  const readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\n  const writeMethods = ['put', 'add', 'delete', 'clear'];\n  const cachedMethods = new Map();\n  function getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === 'string')) {\n      return;\n    }\n    if (cachedMethods.get(prop)) return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || readMethods.includes(targetFuncName))) {\n      return;\n    }\n    const method = async function (storeName, ...args) {\n      // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n      const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n      let target = tx.store;\n      if (useIndex) target = target.index(args.shift());\n      // Must reject if op rejects.\n      // If it's a write operation, must reject if tx.done rejects.\n      // Must reject with op rejection first.\n      // Must resolve with op value.\n      // Must handle both promises (no unhandled rejections)\n      return (await Promise.all([target[targetFuncName](...args), isWrite && tx.done]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n  }\n  (0, _wrapIdbValueJs.r)(oldTraps => Object.assign({}, oldTraps, {\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop)\n  }));\n});","lineCount":116,"map":[[7,2,2,0,"Object"],[7,8,2,0],[7,9,2,0,"defineProperty"],[7,23,2,0],[7,24,2,0,"exports"],[7,31,2,0],[8,4,2,0,"enumerable"],[8,14,2,0],[9,4,2,0,"get"],[9,7,2,0],[9,18,2,0,"get"],[9,19,2,0],[10,6,2,0],[10,13,2,0,"_wrapIdbValueJs"],[10,28,2,0],[10,29,2,0,"u"],[10,30,2,0],[11,4,2,0],[12,2,2,0],[13,2,2,0,"Object"],[13,8,2,0],[13,9,2,0,"defineProperty"],[13,23,2,0],[13,24,2,0,"exports"],[13,31,2,0],[14,4,2,0,"enumerable"],[14,14,2,0],[15,4,2,0,"get"],[15,7,2,0],[15,18,2,0,"get"],[15,19,2,0],[16,6,2,0],[16,13,2,0,"_wrapIdbValueJs"],[16,28,2,0],[16,29,2,0,"w"],[16,30,2,0],[17,4,2,0],[18,2,2,0],[19,2,95,0,"Object"],[19,8,95,0],[19,9,95,0,"defineProperty"],[19,23,95,0],[19,24,95,0,"exports"],[19,31,95,0],[20,4,95,0,"enumerable"],[20,14,95,0],[21,4,95,0,"get"],[21,7,95,0],[21,18,95,0,"get"],[21,19,95,0],[22,6,95,0],[22,13,95,9,"deleteDB"],[22,21,95,17],[23,4,95,17],[24,2,95,17],[25,2,95,0,"Object"],[25,8,95,0],[25,9,95,0,"defineProperty"],[25,23,95,0],[25,24,95,0,"exports"],[25,31,95,0],[26,4,95,0,"enumerable"],[26,14,95,0],[27,4,95,0,"get"],[27,7,95,0],[27,18,95,0,"get"],[27,19,95,0],[28,6,95,0],[28,13,95,19,"openDB"],[28,19,95,25],[29,4,95,25],[30,2,95,25],[31,2,1,0],[31,6,1,0,"_wrapIdbValueJs"],[31,21,1,0],[31,24,1,0,"require"],[31,31,1,0],[31,32,1,0,"_dependencyMap"],[31,46,1,0],[32,2,4,0],[33,0,5,0],[34,0,6,0],[35,0,7,0],[36,0,8,0],[37,0,9,0],[38,0,10,0],[39,2,11,0],[39,11,11,9,"openDB"],[39,17,11,15,"openDB"],[39,18,11,16,"name"],[39,22,11,20],[39,24,11,22,"version"],[39,31,11,29],[39,33,11,31],[40,4,11,33,"blocked"],[40,11,11,40],[41,4,11,42,"upgrade"],[41,11,11,49],[42,4,11,51,"blocking"],[42,12,11,59],[43,4,11,61,"terminated"],[44,2,11,72],[44,3,11,73],[44,6,11,76],[44,7,11,77],[44,8,11,78],[44,10,11,80],[45,4,12,4],[45,10,12,10,"request"],[45,17,12,17],[45,20,12,20,"indexedDB"],[45,29,12,29],[45,30,12,30,"open"],[45,34,12,34],[45,35,12,35,"name"],[45,39,12,39],[45,41,12,41,"version"],[45,48,12,48],[45,49,12,49],[46,4,13,4],[46,10,13,10,"openPromise"],[46,21,13,21],[46,24,13,24],[46,28,13,24,"wrap"],[46,43,13,28],[46,44,13,28,"w"],[46,45,13,28],[46,47,13,29,"request"],[46,54,13,36],[46,55,13,37],[47,4,14,4],[47,8,14,8,"upgrade"],[47,15,14,15],[47,17,14,17],[48,6,15,8,"request"],[48,13,15,15],[48,14,15,16,"addEventListener"],[48,30,15,32],[48,31,15,33],[48,46,15,48],[48,48,15,51,"event"],[48,53,15,56],[48,57,15,61],[49,8,16,12,"upgrade"],[49,15,16,19],[49,16,16,20],[49,20,16,20,"wrap"],[49,35,16,24],[49,36,16,24,"w"],[49,37,16,24],[49,39,16,25,"request"],[49,46,16,32],[49,47,16,33,"result"],[49,53,16,39],[49,54,16,40],[49,56,16,42,"event"],[49,61,16,47],[49,62,16,48,"oldVersion"],[49,72,16,58],[49,74,16,60,"event"],[49,79,16,65],[49,80,16,66,"newVersion"],[49,90,16,76],[49,92,16,78],[49,96,16,78,"wrap"],[49,111,16,82],[49,112,16,82,"w"],[49,113,16,82],[49,115,16,83,"request"],[49,122,16,90],[49,123,16,91,"transaction"],[49,134,16,102],[49,135,16,103],[49,137,16,105,"event"],[49,142,16,110],[49,143,16,111],[50,6,17,8],[50,7,17,9],[50,8,17,10],[51,4,18,4],[52,4,19,4],[52,8,19,8,"blocked"],[52,15,19,15],[52,17,19,17],[53,6,20,8,"request"],[53,13,20,15],[53,14,20,16,"addEventListener"],[53,30,20,32],[53,31,20,33],[53,40,20,42],[53,42,20,45,"event"],[53,47,20,50],[53,51,20,55,"blocked"],[53,58,20,62],[54,6,21,8],[55,6,22,8,"event"],[55,11,22,13],[55,12,22,14,"oldVersion"],[55,22,22,24],[55,24,22,26,"event"],[55,29,22,31],[55,30,22,32,"newVersion"],[55,40,22,42],[55,42,22,44,"event"],[55,47,22,49],[55,48,22,50],[55,49,22,51],[56,4,23,4],[57,4,24,4,"openPromise"],[57,15,24,15],[57,16,25,9,"then"],[57,20,25,13],[57,21,25,15,"db"],[57,23,25,17],[57,27,25,22],[58,6,26,8],[58,10,26,12,"terminated"],[58,20,26,22],[58,22,27,12,"db"],[58,24,27,14],[58,25,27,15,"addEventListener"],[58,41,27,31],[58,42,27,32],[58,49,27,39],[58,51,27,41],[58,57,27,47,"terminated"],[58,67,27,57],[58,68,27,58],[58,69,27,59],[58,70,27,60],[59,6,28,8],[59,10,28,12,"blocking"],[59,18,28,20],[59,20,28,22],[60,8,29,12,"db"],[60,10,29,14],[60,11,29,15,"addEventListener"],[60,27,29,31],[60,28,29,32],[60,43,29,47],[60,45,29,50,"event"],[60,50,29,55],[60,54,29,60,"blocking"],[60,62,29,68],[60,63,29,69,"event"],[60,68,29,74],[60,69,29,75,"oldVersion"],[60,79,29,85],[60,81,29,87,"event"],[60,86,29,92],[60,87,29,93,"newVersion"],[60,97,29,103],[60,99,29,105,"event"],[60,104,29,110],[60,105,29,111],[60,106,29,112],[61,6,30,8],[62,4,31,4],[62,5,31,5],[62,6,31,6],[62,7,32,9,"catch"],[62,12,32,14],[62,13,32,15],[62,19,32,21],[62,20,32,23],[62,21,32,24],[62,22,32,25],[63,4,33,4],[63,11,33,11,"openPromise"],[63,22,33,22],[64,2,34,0],[65,2,35,0],[66,0,36,0],[67,0,37,0],[68,0,38,0],[69,0,39,0],[70,2,40,0],[70,11,40,9,"deleteDB"],[70,19,40,17,"deleteDB"],[70,20,40,18,"name"],[70,24,40,22],[70,26,40,24],[71,4,40,26,"blocked"],[72,2,40,34],[72,3,40,35],[72,6,40,38],[72,7,40,39],[72,8,40,40],[72,10,40,42],[73,4,41,4],[73,10,41,10,"request"],[73,17,41,17],[73,20,41,20,"indexedDB"],[73,29,41,29],[73,30,41,30,"deleteDatabase"],[73,44,41,44],[73,45,41,45,"name"],[73,49,41,49],[73,50,41,50],[74,4,42,4],[74,8,42,8,"blocked"],[74,15,42,15],[74,17,42,17],[75,6,43,8,"request"],[75,13,43,15],[75,14,43,16,"addEventListener"],[75,30,43,32],[75,31,43,33],[75,40,43,42],[75,42,43,45,"event"],[75,47,43,50],[75,51,43,55,"blocked"],[75,58,43,62],[76,6,44,8],[77,6,45,8,"event"],[77,11,45,13],[77,12,45,14,"oldVersion"],[77,22,45,24],[77,24,45,26,"event"],[77,29,45,31],[77,30,45,32],[77,31,45,33],[78,4,46,4],[79,4,47,4],[79,11,47,11],[79,15,47,11,"wrap"],[79,30,47,15],[79,31,47,15,"w"],[79,32,47,15],[79,34,47,16,"request"],[79,41,47,23],[79,42,47,24],[79,43,47,25,"then"],[79,47,47,29],[79,48,47,30],[79,54,47,36,"undefined"],[79,63,47,45],[79,64,47,46],[80,2,48,0],[81,2,50,0],[81,8,50,6,"readMethods"],[81,19,50,17],[81,22,50,20],[81,23,50,21],[81,28,50,26],[81,30,50,28],[81,38,50,36],[81,40,50,38],[81,48,50,46],[81,50,50,48],[81,62,50,60],[81,64,50,62],[81,71,50,69],[81,72,50,70],[82,2,51,0],[82,8,51,6,"writeMethods"],[82,20,51,18],[82,23,51,21],[82,24,51,22],[82,29,51,27],[82,31,51,29],[82,36,51,34],[82,38,51,36],[82,46,51,44],[82,48,51,46],[82,55,51,53],[82,56,51,54],[83,2,52,0],[83,8,52,6,"cachedMethods"],[83,21,52,19],[83,24,52,22],[83,28,52,26,"Map"],[83,31,52,29],[83,32,52,30],[83,33,52,31],[84,2,53,0],[84,11,53,9,"getMethod"],[84,20,53,18,"getMethod"],[84,21,53,19,"target"],[84,27,53,25],[84,29,53,27,"prop"],[84,33,53,31],[84,35,53,33],[85,4,54,4],[85,8,54,8],[85,10,54,10,"target"],[85,16,54,16],[85,28,54,28,"IDBDatabase"],[85,39,54,39],[85,43,55,8],[85,45,55,10,"prop"],[85,49,55,14],[85,53,55,18,"target"],[85,59,55,24],[85,60,55,25],[85,64,56,8],[85,71,56,15,"prop"],[85,75,56,19],[85,80,56,24],[85,88,56,32],[85,89,56,33],[85,91,56,35],[86,6,57,8],[87,4,58,4],[88,4,59,4],[88,8,59,8,"cachedMethods"],[88,21,59,21],[88,22,59,22,"get"],[88,25,59,25],[88,26,59,26,"prop"],[88,30,59,30],[88,31,59,31],[88,33,60,8],[88,40,60,15,"cachedMethods"],[88,53,60,28],[88,54,60,29,"get"],[88,57,60,32],[88,58,60,33,"prop"],[88,62,60,37],[88,63,60,38],[89,4,61,4],[89,10,61,10,"targetFuncName"],[89,24,61,24],[89,27,61,27,"prop"],[89,31,61,31],[89,32,61,32,"replace"],[89,39,61,39],[89,40,61,40],[89,52,61,52],[89,54,61,54],[89,56,61,56],[89,57,61,57],[90,4,62,4],[90,10,62,10,"useIndex"],[90,18,62,18],[90,21,62,21,"prop"],[90,25,62,25],[90,30,62,30,"targetFuncName"],[90,44,62,44],[91,4,63,4],[91,10,63,10,"isWrite"],[91,17,63,17],[91,20,63,20,"writeMethods"],[91,32,63,32],[91,33,63,33,"includes"],[91,41,63,41],[91,42,63,42,"targetFuncName"],[91,56,63,56],[91,57,63,57],[92,4,64,4],[93,4,65,4],[94,4,66,4],[94,6,66,6,"targetFuncName"],[94,20,66,20],[94,24,66,24],[94,25,66,25,"useIndex"],[94,33,66,33],[94,36,66,36,"IDBIndex"],[94,44,66,44],[94,47,66,47,"IDBObjectStore"],[94,61,66,61],[94,63,66,63,"prototype"],[94,72,66,72],[94,73,66,73],[94,77,67,8],[94,79,67,10,"isWrite"],[94,86,67,17],[94,90,67,21,"readMethods"],[94,101,67,32],[94,102,67,33,"includes"],[94,110,67,41],[94,111,67,42,"targetFuncName"],[94,125,67,56],[94,126,67,57],[94,127,67,58],[94,129,67,60],[95,6,68,8],[96,4,69,4],[97,4,70,4],[97,10,70,10,"method"],[97,16,70,16],[97,19,70,19],[97,34,70,19,"method"],[97,35,70,35,"storeName"],[97,44,70,44],[97,46,70,46],[97,49,70,49,"args"],[97,53,70,53],[97,55,70,55],[98,6,71,8],[99,6,72,8],[99,12,72,14,"tx"],[99,14,72,16],[99,17,72,19],[99,21,72,23],[99,22,72,24,"transaction"],[99,33,72,35],[99,34,72,36,"storeName"],[99,43,72,45],[99,45,72,47,"isWrite"],[99,52,72,54],[99,55,72,57],[99,66,72,68],[99,69,72,71],[99,79,72,81],[99,80,72,82],[100,6,73,8],[100,10,73,12,"target"],[100,16,73,18],[100,19,73,21,"tx"],[100,21,73,23],[100,22,73,24,"store"],[100,27,73,29],[101,6,74,8],[101,10,74,12,"useIndex"],[101,18,74,20],[101,20,75,12,"target"],[101,26,75,18],[101,29,75,21,"target"],[101,35,75,27],[101,36,75,28,"index"],[101,41,75,33],[101,42,75,34,"args"],[101,46,75,38],[101,47,75,39,"shift"],[101,52,75,44],[101,53,75,45],[101,54,75,46],[101,55,75,47],[102,6,76,8],[103,6,77,8],[104,6,78,8],[105,6,79,8],[106,6,80,8],[107,6,81,8],[107,13,81,15],[107,14,81,16],[107,20,81,22,"Promise"],[107,27,81,29],[107,28,81,30,"all"],[107,31,81,33],[107,32,81,34],[107,33,82,12,"target"],[107,39,82,18],[107,40,82,19,"targetFuncName"],[107,54,82,33],[107,55,82,34],[107,56,82,35],[107,59,82,38,"args"],[107,63,82,42],[107,64,82,43],[107,66,83,12,"isWrite"],[107,73,83,19],[107,77,83,23,"tx"],[107,79,83,25],[107,80,83,26,"done"],[107,84,83,30],[107,85,84,9],[107,86,84,10],[107,88,84,12],[107,89,84,13],[107,90,84,14],[108,4,85,4],[108,5,85,5],[109,4,86,4,"cachedMethods"],[109,17,86,17],[109,18,86,18,"set"],[109,21,86,21],[109,22,86,22,"prop"],[109,26,86,26],[109,28,86,28,"method"],[109,34,86,34],[109,35,86,35],[110,4,87,4],[110,11,87,11,"method"],[110,17,87,17],[111,2,88,0],[112,2,89,0],[112,6,89,0,"replaceTraps"],[112,21,89,12],[112,22,89,12,"r"],[112,23,89,12],[112,25,89,14,"oldTraps"],[112,33,89,22],[112,37,89,22,"Object"],[112,43,89,22],[112,44,89,22,"assign"],[112,50,89,22],[112,55,90,7,"oldTraps"],[112,63,90,15],[113,4,91,4,"get"],[113,7,91,7],[113,9,91,9,"get"],[113,10,91,10,"target"],[113,16,91,16],[113,18,91,18,"prop"],[113,22,91,22],[113,24,91,24,"receiver"],[113,32,91,32],[113,37,91,37,"getMethod"],[113,46,91,46],[113,47,91,47,"target"],[113,53,91,53],[113,55,91,55,"prop"],[113,59,91,59],[113,60,91,60],[113,64,91,64,"oldTraps"],[113,72,91,72],[113,73,91,73,"get"],[113,76,91,76],[113,77,91,77,"target"],[113,83,91,83],[113,85,91,85,"prop"],[113,89,91,89],[113,91,91,91,"receiver"],[113,99,91,99],[113,100,91,100],[114,4,92,4,"has"],[114,7,92,7],[114,9,92,9,"has"],[114,10,92,10,"target"],[114,16,92,16],[114,18,92,18,"prop"],[114,22,92,22],[114,27,92,27],[114,28,92,28],[114,29,92,29,"getMethod"],[114,38,92,38],[114,39,92,39,"target"],[114,45,92,45],[114,47,92,47,"prop"],[114,51,92,51],[114,52,92,52],[114,56,92,56,"oldTraps"],[114,64,92,64],[114,65,92,65,"has"],[114,68,92,68],[114,69,92,69,"target"],[114,75,92,75],[114,77,92,77,"prop"],[114,81,92,81],[115,2,92,82],[115,4,93,2],[115,5,93,3],[116,0,93,4],[116,3]],"functionMap":{"names":["<global>","openDB","request.addEventListener$argument_1","openPromise.then$argument_0","db.addEventListener$argument_1","openPromise.then._catch$argument_0","deleteDB","wrap.then$argument_0","getMethod","method","replaceTraps$argument_0","get","has"],"mappings":"AAA;ACU;kDCI;SDE;4CCG;kDDE;cEG;yCCE,kBD;iDCE,8DD;KFE;eIC,SJ;CDE;AMM;4CJG;gCIE;8BCE,eD;CNC;AQK;mBCiB;KDe;CRG;aUC;SCE,2FD;SEC,yEF;EVC"},"hasCjsExports":false},"type":"js/module"}]}