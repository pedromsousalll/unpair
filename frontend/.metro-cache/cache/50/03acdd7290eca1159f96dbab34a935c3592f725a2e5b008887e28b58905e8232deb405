{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"./regex.generated","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":54,"index":88}}],"key":"b8HYA7B+xRysWWjWhz216U7woIw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.parseNumberSkeletonFromString = parseNumberSkeletonFromString;\n  exports.parseNumberSkeleton = parseNumberSkeleton;\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _regexGenerated = require(_dependencyMap[1], \"./regex.generated\");\n  function parseNumberSkeletonFromString(skeleton) {\n    if (skeleton.length === 0) {\n      throw new Error('Number skeleton cannot be empty');\n    }\n    // Parse the skeleton\n    var stringTokens = skeleton.split(_regexGenerated.WHITE_SPACE_REGEX).filter(function (x) {\n      return x.length > 0;\n    });\n    var tokens = [];\n    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {\n      var stringToken = stringTokens_1[_i];\n      var stemAndOptions = stringToken.split('/');\n      if (stemAndOptions.length === 0) {\n        throw new Error('Invalid number skeleton');\n      }\n      var stem = stemAndOptions[0],\n        options = stemAndOptions.slice(1);\n      for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n        var option = options_1[_a];\n        if (option.length === 0) {\n          throw new Error('Invalid number skeleton');\n        }\n      }\n      tokens.push({\n        stem: stem,\n        options: options\n      });\n    }\n    return tokens;\n  }\n  function icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n  }\n  var FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\n  var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?[rs]?$/g;\n  var INTEGER_WIDTH_REGEX = /(\\*)(0+)|(#+)(0+)|(0+)/g;\n  var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;\n  function parseSignificantPrecision(str) {\n    var result = {};\n    if (str[str.length - 1] === 'r') {\n      result.roundingPriority = 'morePrecision';\n    } else if (str[str.length - 1] === 's') {\n      result.roundingPriority = 'lessPrecision';\n    }\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n      // @@@ case\n      if (typeof g2 !== 'string') {\n        result.minimumSignificantDigits = g1.length;\n        result.maximumSignificantDigits = g1.length;\n      }\n      // @@@+ case\n      else if (g2 === '+') {\n        result.minimumSignificantDigits = g1.length;\n      }\n      // .### case\n      else if (g1[0] === '#') {\n        result.maximumSignificantDigits = g1.length;\n      }\n      // .@@## or .@@@ case\n      else {\n        result.minimumSignificantDigits = g1.length;\n        result.maximumSignificantDigits = g1.length + (typeof g2 === 'string' ? g2.length : 0);\n      }\n      return '';\n    });\n    return result;\n  }\n  function parseSign(str) {\n    switch (str) {\n      case 'sign-auto':\n        return {\n          signDisplay: 'auto'\n        };\n      case 'sign-accounting':\n      case '()':\n        return {\n          currencySign: 'accounting'\n        };\n      case 'sign-always':\n      case '+!':\n        return {\n          signDisplay: 'always'\n        };\n      case 'sign-accounting-always':\n      case '()!':\n        return {\n          signDisplay: 'always',\n          currencySign: 'accounting'\n        };\n      case 'sign-except-zero':\n      case '+?':\n        return {\n          signDisplay: 'exceptZero'\n        };\n      case 'sign-accounting-except-zero':\n      case '()?':\n        return {\n          signDisplay: 'exceptZero',\n          currencySign: 'accounting'\n        };\n      case 'sign-never':\n      case '+_':\n        return {\n          signDisplay: 'never'\n        };\n    }\n  }\n  function parseConciseScientificAndEngineeringStem(stem) {\n    // Engineering\n    var result;\n    if (stem[0] === 'E' && stem[1] === 'E') {\n      result = {\n        notation: 'engineering'\n      };\n      stem = stem.slice(2);\n    } else if (stem[0] === 'E') {\n      result = {\n        notation: 'scientific'\n      };\n      stem = stem.slice(1);\n    }\n    if (result) {\n      var signDisplay = stem.slice(0, 2);\n      if (signDisplay === '+!') {\n        result.signDisplay = 'always';\n        stem = stem.slice(2);\n      } else if (signDisplay === '+?') {\n        result.signDisplay = 'exceptZero';\n        stem = stem.slice(2);\n      }\n      if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {\n        throw new Error('Malformed concise eng/scientific notation');\n      }\n      result.minimumIntegerDigits = stem.length;\n    }\n    return result;\n  }\n  function parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n      return signOpts;\n    }\n    return result;\n  }\n  /**\n   * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n   */\n  function parseNumberSkeleton(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n      var token = tokens_1[_i];\n      switch (token.stem) {\n        case 'percent':\n        case '%':\n          result.style = 'percent';\n          continue;\n        case '%x100':\n          result.style = 'percent';\n          result.scale = 100;\n          continue;\n        case 'currency':\n          result.style = 'currency';\n          result.currency = token.options[0];\n          continue;\n        case 'group-off':\n        case ',_':\n          result.useGrouping = false;\n          continue;\n        case 'precision-integer':\n        case '.':\n          result.maximumFractionDigits = 0;\n          continue;\n        case 'measure-unit':\n        case 'unit':\n          result.style = 'unit';\n          result.unit = icuUnitToEcma(token.options[0]);\n          continue;\n        case 'compact-short':\n        case 'K':\n          result.notation = 'compact';\n          result.compactDisplay = 'short';\n          continue;\n        case 'compact-long':\n        case 'KK':\n          result.notation = 'compact';\n          result.compactDisplay = 'long';\n          continue;\n        case 'scientific':\n          result = (0, _tslib.__assign)((0, _tslib.__assign)((0, _tslib.__assign)({}, result), {\n            notation: 'scientific'\n          }), token.options.reduce(function (all, opt) {\n            return (0, _tslib.__assign)((0, _tslib.__assign)({}, all), parseNotationOptions(opt));\n          }, {}));\n          continue;\n        case 'engineering':\n          result = (0, _tslib.__assign)((0, _tslib.__assign)((0, _tslib.__assign)({}, result), {\n            notation: 'engineering'\n          }), token.options.reduce(function (all, opt) {\n            return (0, _tslib.__assign)((0, _tslib.__assign)({}, all), parseNotationOptions(opt));\n          }, {}));\n          continue;\n        case 'notation-simple':\n          result.notation = 'standard';\n          continue;\n        // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n        case 'unit-width-narrow':\n          result.currencyDisplay = 'narrowSymbol';\n          result.unitDisplay = 'narrow';\n          continue;\n        case 'unit-width-short':\n          result.currencyDisplay = 'code';\n          result.unitDisplay = 'short';\n          continue;\n        case 'unit-width-full-name':\n          result.currencyDisplay = 'name';\n          result.unitDisplay = 'long';\n          continue;\n        case 'unit-width-iso-code':\n          result.currencyDisplay = 'symbol';\n          continue;\n        case 'scale':\n          result.scale = parseFloat(token.options[0]);\n          continue;\n        case 'rounding-mode-floor':\n          result.roundingMode = 'floor';\n          continue;\n        case 'rounding-mode-ceiling':\n          result.roundingMode = 'ceil';\n          continue;\n        case 'rounding-mode-down':\n          result.roundingMode = 'trunc';\n          continue;\n        case 'rounding-mode-up':\n          result.roundingMode = 'expand';\n          continue;\n        case 'rounding-mode-half-even':\n          result.roundingMode = 'halfEven';\n          continue;\n        case 'rounding-mode-half-down':\n          result.roundingMode = 'halfTrunc';\n          continue;\n        case 'rounding-mode-half-up':\n          result.roundingMode = 'halfExpand';\n          continue;\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n        case 'integer-width':\n          if (token.options.length > 1) {\n            throw new RangeError('integer-width stems only accept a single optional option');\n          }\n          token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {\n            if (g1) {\n              result.minimumIntegerDigits = g2.length;\n            } else if (g3 && g4) {\n              throw new Error('We currently do not support maximum integer digits');\n            } else if (g5) {\n              throw new Error('We currently do not support exact integer digits');\n            }\n            return '';\n          });\n          continue;\n      }\n      // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n      if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {\n        result.minimumIntegerDigits = token.stem.length;\n        continue;\n      }\n      if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n        // Precision\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision\n        // precision-integer case\n        if (token.options.length > 1) {\n          throw new RangeError('Fraction-precision stems only accept a single optional option');\n        }\n        token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n          // .000* case (before ICU67 it was .000+)\n          if (g2 === '*') {\n            result.minimumFractionDigits = g1.length;\n          }\n          // .### case\n          else if (g3 && g3[0] === '#') {\n            result.maximumFractionDigits = g3.length;\n          }\n          // .00## case\n          else if (g4 && g5) {\n            result.minimumFractionDigits = g4.length;\n            result.maximumFractionDigits = g4.length + g5.length;\n          } else {\n            result.minimumFractionDigits = g1.length;\n            result.maximumFractionDigits = g1.length;\n          }\n          return '';\n        });\n        var opt = token.options[0];\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#trailing-zero-display\n        if (opt === 'w') {\n          result = (0, _tslib.__assign)((0, _tslib.__assign)({}, result), {\n            trailingZeroDisplay: 'stripIfInteger'\n          });\n        } else if (opt) {\n          result = (0, _tslib.__assign)((0, _tslib.__assign)({}, result), parseSignificantPrecision(opt));\n        }\n        continue;\n      }\n      // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision\n      if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n        result = (0, _tslib.__assign)((0, _tslib.__assign)({}, result), parseSignificantPrecision(token.stem));\n        continue;\n      }\n      var signOpts = parseSign(token.stem);\n      if (signOpts) {\n        result = (0, _tslib.__assign)((0, _tslib.__assign)({}, result), signOpts);\n      }\n      var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);\n      if (conciseScientificAndEngineeringOpts) {\n        result = (0, _tslib.__assign)((0, _tslib.__assign)({}, result), conciseScientificAndEngineeringOpts);\n      }\n    }\n    return result;\n  }\n});","lineCount":331,"map":[[7,2,3,0,"exports"],[7,9,3,0],[7,10,3,0,"parseNumberSkeletonFromString"],[7,39,3,0],[7,42,3,0,"parseNumberSkeletonFromString"],[7,71,3,0],[8,2,151,0,"exports"],[8,9,151,0],[8,10,151,0,"parseNumberSkeleton"],[8,29,151,0],[8,32,151,0,"parseNumberSkeleton"],[8,51,151,0],[9,2,1,0],[9,6,1,0,"_tslib"],[9,12,1,0],[9,15,1,0,"require"],[9,22,1,0],[9,23,1,0,"_dependencyMap"],[9,37,1,0],[10,2,2,0],[10,6,2,0,"_regexGenerated"],[10,21,2,0],[10,24,2,0,"require"],[10,31,2,0],[10,32,2,0,"_dependencyMap"],[10,46,2,0],[11,2,3,7],[11,11,3,16,"parseNumberSkeletonFromString"],[11,40,3,45,"parseNumberSkeletonFromString"],[11,41,3,46,"skeleton"],[11,49,3,54],[11,51,3,56],[12,4,4,4],[12,8,4,8,"skeleton"],[12,16,4,16],[12,17,4,17,"length"],[12,23,4,23],[12,28,4,28],[12,29,4,29],[12,31,4,31],[13,6,5,8],[13,12,5,14],[13,16,5,18,"Error"],[13,21,5,23],[13,22,5,24],[13,55,5,57],[13,56,5,58],[14,4,6,4],[15,4,7,4],[16,4,8,4],[16,8,8,8,"stringTokens"],[16,20,8,20],[16,23,8,23,"skeleton"],[16,31,8,31],[16,32,9,9,"split"],[16,37,9,14],[16,38,9,15,"WHITE_SPACE_REGEX"],[16,53,9,32],[16,54,9,32,"WHITE_SPACE_REGEX"],[16,71,9,32],[16,72,9,33],[16,73,10,9,"filter"],[16,79,10,15],[16,80,10,16],[16,90,10,26,"x"],[16,91,10,27],[16,93,10,29],[17,6,10,31],[17,13,10,38,"x"],[17,14,10,39],[17,15,10,40,"length"],[17,21,10,46],[17,24,10,49],[17,25,10,50],[18,4,10,52],[18,5,10,53],[18,6,10,54],[19,4,11,4],[19,8,11,8,"tokens"],[19,14,11,14],[19,17,11,17],[19,19,11,19],[20,4,12,4],[20,9,12,9],[20,13,12,13,"_i"],[20,15,12,15],[20,18,12,18],[20,19,12,19],[20,21,12,21,"stringTokens_1"],[20,35,12,35],[20,38,12,38,"stringTokens"],[20,50,12,50],[20,52,12,52,"_i"],[20,54,12,54],[20,57,12,57,"stringTokens_1"],[20,71,12,71],[20,72,12,72,"length"],[20,78,12,78],[20,80,12,80,"_i"],[20,82,12,82],[20,84,12,84],[20,86,12,86],[21,6,13,8],[21,10,13,12,"stringToken"],[21,21,13,23],[21,24,13,26,"stringTokens_1"],[21,38,13,40],[21,39,13,41,"_i"],[21,41,13,43],[21,42,13,44],[22,6,14,8],[22,10,14,12,"stemAndOptions"],[22,24,14,26],[22,27,14,29,"stringToken"],[22,38,14,40],[22,39,14,41,"split"],[22,44,14,46],[22,45,14,47],[22,48,14,50],[22,49,14,51],[23,6,15,8],[23,10,15,12,"stemAndOptions"],[23,24,15,26],[23,25,15,27,"length"],[23,31,15,33],[23,36,15,38],[23,37,15,39],[23,39,15,41],[24,8,16,12],[24,14,16,18],[24,18,16,22,"Error"],[24,23,16,27],[24,24,16,28],[24,49,16,53],[24,50,16,54],[25,6,17,8],[26,6,18,8],[26,10,18,12,"stem"],[26,14,18,16],[26,17,18,19,"stemAndOptions"],[26,31,18,33],[26,32,18,34],[26,33,18,35],[26,34,18,36],[27,8,18,38,"options"],[27,15,18,45],[27,18,18,48,"stemAndOptions"],[27,32,18,62],[27,33,18,63,"slice"],[27,38,18,68],[27,39,18,69],[27,40,18,70],[27,41,18,71],[28,6,19,8],[28,11,19,13],[28,15,19,17,"_a"],[28,17,19,19],[28,20,19,22],[28,21,19,23],[28,23,19,25,"options_1"],[28,32,19,34],[28,35,19,37,"options"],[28,42,19,44],[28,44,19,46,"_a"],[28,46,19,48],[28,49,19,51,"options_1"],[28,58,19,60],[28,59,19,61,"length"],[28,65,19,67],[28,67,19,69,"_a"],[28,69,19,71],[28,71,19,73],[28,73,19,75],[29,8,20,12],[29,12,20,16,"option"],[29,18,20,22],[29,21,20,25,"options_1"],[29,30,20,34],[29,31,20,35,"_a"],[29,33,20,37],[29,34,20,38],[30,8,21,12],[30,12,21,16,"option"],[30,18,21,22],[30,19,21,23,"length"],[30,25,21,29],[30,30,21,34],[30,31,21,35],[30,33,21,37],[31,10,22,16],[31,16,22,22],[31,20,22,26,"Error"],[31,25,22,31],[31,26,22,32],[31,51,22,57],[31,52,22,58],[32,8,23,12],[33,6,24,8],[34,6,25,8,"tokens"],[34,12,25,14],[34,13,25,15,"push"],[34,17,25,19],[34,18,25,20],[35,8,25,22,"stem"],[35,12,25,26],[35,14,25,28,"stem"],[35,18,25,32],[36,8,25,34,"options"],[36,15,25,41],[36,17,25,43,"options"],[37,6,25,51],[37,7,25,52],[37,8,25,53],[38,4,26,4],[39,4,27,4],[39,11,27,11,"tokens"],[39,17,27,17],[40,2,28,0],[41,2,29,0],[41,11,29,9,"icuUnitToEcma"],[41,24,29,22,"icuUnitToEcma"],[41,25,29,23,"unit"],[41,29,29,27],[41,31,29,29],[42,4,30,4],[42,11,30,11,"unit"],[42,15,30,15],[42,16,30,16,"replace"],[42,23,30,23],[42,24,30,24],[42,33,30,33],[42,35,30,35],[42,37,30,37],[42,38,30,38],[43,2,31,0],[44,2,32,0],[44,6,32,4,"FRACTION_PRECISION_REGEX"],[44,30,32,28],[44,33,32,31],[44,67,32,65],[45,2,33,0],[45,6,33,4,"SIGNIFICANT_PRECISION_REGEX"],[45,33,33,31],[45,36,33,34],[45,59,33,57],[46,2,34,0],[46,6,34,4,"INTEGER_WIDTH_REGEX"],[46,25,34,23],[46,28,34,26],[46,53,34,51],[47,2,35,0],[47,6,35,4,"CONCISE_INTEGER_WIDTH_REGEX"],[47,33,35,31],[47,36,35,34],[47,44,35,42],[48,2,36,0],[48,11,36,9,"parseSignificantPrecision"],[48,36,36,34,"parseSignificantPrecision"],[48,37,36,35,"str"],[48,40,36,38],[48,42,36,40],[49,4,37,4],[49,8,37,8,"result"],[49,14,37,14],[49,17,37,17],[49,18,37,18],[49,19,37,19],[50,4,38,4],[50,8,38,8,"str"],[50,11,38,11],[50,12,38,12,"str"],[50,15,38,15],[50,16,38,16,"length"],[50,22,38,22],[50,25,38,25],[50,26,38,26],[50,27,38,27],[50,32,38,32],[50,35,38,35],[50,37,38,37],[51,6,39,8,"result"],[51,12,39,14],[51,13,39,15,"roundingPriority"],[51,29,39,31],[51,32,39,34],[51,47,39,49],[52,4,40,4],[52,5,40,5],[52,11,41,9],[52,15,41,13,"str"],[52,18,41,16],[52,19,41,17,"str"],[52,22,41,20],[52,23,41,21,"length"],[52,29,41,27],[52,32,41,30],[52,33,41,31],[52,34,41,32],[52,39,41,37],[52,42,41,40],[52,44,41,42],[53,6,42,8,"result"],[53,12,42,14],[53,13,42,15,"roundingPriority"],[53,29,42,31],[53,32,42,34],[53,47,42,49],[54,4,43,4],[55,4,44,4,"str"],[55,7,44,7],[55,8,44,8,"replace"],[55,15,44,15],[55,16,44,16,"SIGNIFICANT_PRECISION_REGEX"],[55,43,44,43],[55,45,44,45],[55,55,44,55,"_"],[55,56,44,56],[55,58,44,58,"g1"],[55,60,44,60],[55,62,44,62,"g2"],[55,64,44,64],[55,66,44,66],[56,6,45,8],[57,6,46,8],[57,10,46,12],[57,17,46,19,"g2"],[57,19,46,21],[57,24,46,26],[57,32,46,34],[57,34,46,36],[58,8,47,12,"result"],[58,14,47,18],[58,15,47,19,"minimumSignificantDigits"],[58,39,47,43],[58,42,47,46,"g1"],[58,44,47,48],[58,45,47,49,"length"],[58,51,47,55],[59,8,48,12,"result"],[59,14,48,18],[59,15,48,19,"maximumSignificantDigits"],[59,39,48,43],[59,42,48,46,"g1"],[59,44,48,48],[59,45,48,49,"length"],[59,51,48,55],[60,6,49,8],[61,6,50,8],[62,6,50,8],[62,11,51,13],[62,15,51,17,"g2"],[62,17,51,19],[62,22,51,24],[62,25,51,27],[62,27,51,29],[63,8,52,12,"result"],[63,14,52,18],[63,15,52,19,"minimumSignificantDigits"],[63,39,52,43],[63,42,52,46,"g1"],[63,44,52,48],[63,45,52,49,"length"],[63,51,52,55],[64,6,53,8],[65,6,54,8],[66,6,54,8],[66,11,55,13],[66,15,55,17,"g1"],[66,17,55,19],[66,18,55,20],[66,19,55,21],[66,20,55,22],[66,25,55,27],[66,28,55,30],[66,30,55,32],[67,8,56,12,"result"],[67,14,56,18],[67,15,56,19,"maximumSignificantDigits"],[67,39,56,43],[67,42,56,46,"g1"],[67,44,56,48],[67,45,56,49,"length"],[67,51,56,55],[68,6,57,8],[69,6,58,8],[70,6,58,8],[70,11,59,13],[71,8,60,12,"result"],[71,14,60,18],[71,15,60,19,"minimumSignificantDigits"],[71,39,60,43],[71,42,60,46,"g1"],[71,44,60,48],[71,45,60,49,"length"],[71,51,60,55],[72,8,61,12,"result"],[72,14,61,18],[72,15,61,19,"maximumSignificantDigits"],[72,39,61,43],[72,42,62,16,"g1"],[72,44,62,18],[72,45,62,19,"length"],[72,51,62,25],[72,55,62,29],[72,62,62,36,"g2"],[72,64,62,38],[72,69,62,43],[72,77,62,51],[72,80,62,54,"g2"],[72,82,62,56],[72,83,62,57,"length"],[72,89,62,63],[72,92,62,66],[72,93,62,67],[72,94,62,68],[73,6,63,8],[74,6,64,8],[74,13,64,15],[74,15,64,17],[75,4,65,4],[75,5,65,5],[75,6,65,6],[76,4,66,4],[76,11,66,11,"result"],[76,17,66,17],[77,2,67,0],[78,2,68,0],[78,11,68,9,"parseSign"],[78,20,68,18,"parseSign"],[78,21,68,19,"str"],[78,24,68,22],[78,26,68,24],[79,4,69,4],[79,12,69,12,"str"],[79,15,69,15],[80,6,70,8],[80,11,70,13],[80,22,70,24],[81,8,71,12],[81,15,71,19],[82,10,72,16,"signDisplay"],[82,21,72,27],[82,23,72,29],[83,8,73,12],[83,9,73,13],[84,6,74,8],[84,11,74,13],[84,28,74,30],[85,6,75,8],[85,11,75,13],[85,15,75,17],[86,8,76,12],[86,15,76,19],[87,10,77,16,"currencySign"],[87,22,77,28],[87,24,77,30],[88,8,78,12],[88,9,78,13],[89,6,79,8],[89,11,79,13],[89,24,79,26],[90,6,80,8],[90,11,80,13],[90,15,80,17],[91,8,81,12],[91,15,81,19],[92,10,82,16,"signDisplay"],[92,21,82,27],[92,23,82,29],[93,8,83,12],[93,9,83,13],[94,6,84,8],[94,11,84,13],[94,35,84,37],[95,6,85,8],[95,11,85,13],[95,16,85,18],[96,8,86,12],[96,15,86,19],[97,10,87,16,"signDisplay"],[97,21,87,27],[97,23,87,29],[97,31,87,37],[98,10,88,16,"currencySign"],[98,22,88,28],[98,24,88,30],[99,8,89,12],[99,9,89,13],[100,6,90,8],[100,11,90,13],[100,29,90,31],[101,6,91,8],[101,11,91,13],[101,15,91,17],[102,8,92,12],[102,15,92,19],[103,10,93,16,"signDisplay"],[103,21,93,27],[103,23,93,29],[104,8,94,12],[104,9,94,13],[105,6,95,8],[105,11,95,13],[105,40,95,42],[106,6,96,8],[106,11,96,13],[106,16,96,18],[107,8,97,12],[107,15,97,19],[108,10,98,16,"signDisplay"],[108,21,98,27],[108,23,98,29],[108,35,98,41],[109,10,99,16,"currencySign"],[109,22,99,28],[109,24,99,30],[110,8,100,12],[110,9,100,13],[111,6,101,8],[111,11,101,13],[111,23,101,25],[112,6,102,8],[112,11,102,13],[112,15,102,17],[113,8,103,12],[113,15,103,19],[114,10,104,16,"signDisplay"],[114,21,104,27],[114,23,104,29],[115,8,105,12],[115,9,105,13],[116,4,106,4],[117,2,107,0],[118,2,108,0],[118,11,108,9,"parseConciseScientificAndEngineeringStem"],[118,51,108,49,"parseConciseScientificAndEngineeringStem"],[118,52,108,50,"stem"],[118,56,108,54],[118,58,108,56],[119,4,109,4],[120,4,110,4],[120,8,110,8,"result"],[120,14,110,14],[121,4,111,4],[121,8,111,8,"stem"],[121,12,111,12],[121,13,111,13],[121,14,111,14],[121,15,111,15],[121,20,111,20],[121,23,111,23],[121,27,111,27,"stem"],[121,31,111,31],[121,32,111,32],[121,33,111,33],[121,34,111,34],[121,39,111,39],[121,42,111,42],[121,44,111,44],[122,6,112,8,"result"],[122,12,112,14],[122,15,112,17],[123,8,113,12,"notation"],[123,16,113,20],[123,18,113,22],[124,6,114,8],[124,7,114,9],[125,6,115,8,"stem"],[125,10,115,12],[125,13,115,15,"stem"],[125,17,115,19],[125,18,115,20,"slice"],[125,23,115,25],[125,24,115,26],[125,25,115,27],[125,26,115,28],[126,4,116,4],[126,5,116,5],[126,11,117,9],[126,15,117,13,"stem"],[126,19,117,17],[126,20,117,18],[126,21,117,19],[126,22,117,20],[126,27,117,25],[126,30,117,28],[126,32,117,30],[127,6,118,8,"result"],[127,12,118,14],[127,15,118,17],[128,8,119,12,"notation"],[128,16,119,20],[128,18,119,22],[129,6,120,8],[129,7,120,9],[130,6,121,8,"stem"],[130,10,121,12],[130,13,121,15,"stem"],[130,17,121,19],[130,18,121,20,"slice"],[130,23,121,25],[130,24,121,26],[130,25,121,27],[130,26,121,28],[131,4,122,4],[132,4,123,4],[132,8,123,8,"result"],[132,14,123,14],[132,16,123,16],[133,6,124,8],[133,10,124,12,"signDisplay"],[133,21,124,23],[133,24,124,26,"stem"],[133,28,124,30],[133,29,124,31,"slice"],[133,34,124,36],[133,35,124,37],[133,36,124,38],[133,38,124,40],[133,39,124,41],[133,40,124,42],[134,6,125,8],[134,10,125,12,"signDisplay"],[134,21,125,23],[134,26,125,28],[134,30,125,32],[134,32,125,34],[135,8,126,12,"result"],[135,14,126,18],[135,15,126,19,"signDisplay"],[135,26,126,30],[135,29,126,33],[135,37,126,41],[136,8,127,12,"stem"],[136,12,127,16],[136,15,127,19,"stem"],[136,19,127,23],[136,20,127,24,"slice"],[136,25,127,29],[136,26,127,30],[136,27,127,31],[136,28,127,32],[137,6,128,8],[137,7,128,9],[137,13,129,13],[137,17,129,17,"signDisplay"],[137,28,129,28],[137,33,129,33],[137,37,129,37],[137,39,129,39],[138,8,130,12,"result"],[138,14,130,18],[138,15,130,19,"signDisplay"],[138,26,130,30],[138,29,130,33],[138,41,130,45],[139,8,131,12,"stem"],[139,12,131,16],[139,15,131,19,"stem"],[139,19,131,23],[139,20,131,24,"slice"],[139,25,131,29],[139,26,131,30],[139,27,131,31],[139,28,131,32],[140,6,132,8],[141,6,133,8],[141,10,133,12],[141,11,133,13,"CONCISE_INTEGER_WIDTH_REGEX"],[141,38,133,40],[141,39,133,41,"test"],[141,43,133,45],[141,44,133,46,"stem"],[141,48,133,50],[141,49,133,51],[141,51,133,53],[142,8,134,12],[142,14,134,18],[142,18,134,22,"Error"],[142,23,134,27],[142,24,134,28],[142,67,134,71],[142,68,134,72],[143,6,135,8],[144,6,136,8,"result"],[144,12,136,14],[144,13,136,15,"minimumIntegerDigits"],[144,33,136,35],[144,36,136,38,"stem"],[144,40,136,42],[144,41,136,43,"length"],[144,47,136,49],[145,4,137,4],[146,4,138,4],[146,11,138,11,"result"],[146,17,138,17],[147,2,139,0],[148,2,140,0],[148,11,140,9,"parseNotationOptions"],[148,31,140,29,"parseNotationOptions"],[148,32,140,30,"opt"],[148,35,140,33],[148,37,140,35],[149,4,141,4],[149,8,141,8,"result"],[149,14,141,14],[149,17,141,17],[149,18,141,18],[149,19,141,19],[150,4,142,4],[150,8,142,8,"signOpts"],[150,16,142,16],[150,19,142,19,"parseSign"],[150,28,142,28],[150,29,142,29,"opt"],[150,32,142,32],[150,33,142,33],[151,4,143,4],[151,8,143,8,"signOpts"],[151,16,143,16],[151,18,143,18],[152,6,144,8],[152,13,144,15,"signOpts"],[152,21,144,23],[153,4,145,4],[154,4,146,4],[154,11,146,11,"result"],[154,17,146,17],[155,2,147,0],[156,2,148,0],[157,0,149,0],[158,0,150,0],[159,2,151,7],[159,11,151,16,"parseNumberSkeleton"],[159,30,151,35,"parseNumberSkeleton"],[159,31,151,36,"tokens"],[159,37,151,42],[159,39,151,44],[160,4,152,4],[160,8,152,8,"result"],[160,14,152,14],[160,17,152,17],[160,18,152,18],[160,19,152,19],[161,4,153,4],[161,9,153,9],[161,13,153,13,"_i"],[161,15,153,15],[161,18,153,18],[161,19,153,19],[161,21,153,21,"tokens_1"],[161,29,153,29],[161,32,153,32,"tokens"],[161,38,153,38],[161,40,153,40,"_i"],[161,42,153,42],[161,45,153,45,"tokens_1"],[161,53,153,53],[161,54,153,54,"length"],[161,60,153,60],[161,62,153,62,"_i"],[161,64,153,64],[161,66,153,66],[161,68,153,68],[162,6,154,8],[162,10,154,12,"token"],[162,15,154,17],[162,18,154,20,"tokens_1"],[162,26,154,28],[162,27,154,29,"_i"],[162,29,154,31],[162,30,154,32],[163,6,155,8],[163,14,155,16,"token"],[163,19,155,21],[163,20,155,22,"stem"],[163,24,155,26],[164,8,156,12],[164,13,156,17],[164,22,156,26],[165,8,157,12],[165,13,157,17],[165,16,157,20],[166,10,158,16,"result"],[166,16,158,22],[166,17,158,23,"style"],[166,22,158,28],[166,25,158,31],[166,34,158,40],[167,10,159,16],[168,8,160,12],[168,13,160,17],[168,20,160,24],[169,10,161,16,"result"],[169,16,161,22],[169,17,161,23,"style"],[169,22,161,28],[169,25,161,31],[169,34,161,40],[170,10,162,16,"result"],[170,16,162,22],[170,17,162,23,"scale"],[170,22,162,28],[170,25,162,31],[170,28,162,34],[171,10,163,16],[172,8,164,12],[172,13,164,17],[172,23,164,27],[173,10,165,16,"result"],[173,16,165,22],[173,17,165,23,"style"],[173,22,165,28],[173,25,165,31],[173,35,165,41],[174,10,166,16,"result"],[174,16,166,22],[174,17,166,23,"currency"],[174,25,166,31],[174,28,166,34,"token"],[174,33,166,39],[174,34,166,40,"options"],[174,41,166,47],[174,42,166,48],[174,43,166,49],[174,44,166,50],[175,10,167,16],[176,8,168,12],[176,13,168,17],[176,24,168,28],[177,8,169,12],[177,13,169,17],[177,17,169,21],[178,10,170,16,"result"],[178,16,170,22],[178,17,170,23,"useGrouping"],[178,28,170,34],[178,31,170,37],[178,36,170,42],[179,10,171,16],[180,8,172,12],[180,13,172,17],[180,32,172,36],[181,8,173,12],[181,13,173,17],[181,16,173,20],[182,10,174,16,"result"],[182,16,174,22],[182,17,174,23,"maximumFractionDigits"],[182,38,174,44],[182,41,174,47],[182,42,174,48],[183,10,175,16],[184,8,176,12],[184,13,176,17],[184,27,176,31],[185,8,177,12],[185,13,177,17],[185,19,177,23],[186,10,178,16,"result"],[186,16,178,22],[186,17,178,23,"style"],[186,22,178,28],[186,25,178,31],[186,31,178,37],[187,10,179,16,"result"],[187,16,179,22],[187,17,179,23,"unit"],[187,21,179,27],[187,24,179,30,"icuUnitToEcma"],[187,37,179,43],[187,38,179,44,"token"],[187,43,179,49],[187,44,179,50,"options"],[187,51,179,57],[187,52,179,58],[187,53,179,59],[187,54,179,60],[187,55,179,61],[188,10,180,16],[189,8,181,12],[189,13,181,17],[189,28,181,32],[190,8,182,12],[190,13,182,17],[190,16,182,20],[191,10,183,16,"result"],[191,16,183,22],[191,17,183,23,"notation"],[191,25,183,31],[191,28,183,34],[191,37,183,43],[192,10,184,16,"result"],[192,16,184,22],[192,17,184,23,"compactDisplay"],[192,31,184,37],[192,34,184,40],[192,41,184,47],[193,10,185,16],[194,8,186,12],[194,13,186,17],[194,27,186,31],[195,8,187,12],[195,13,187,17],[195,17,187,21],[196,10,188,16,"result"],[196,16,188,22],[196,17,188,23,"notation"],[196,25,188,31],[196,28,188,34],[196,37,188,43],[197,10,189,16,"result"],[197,16,189,22],[197,17,189,23,"compactDisplay"],[197,31,189,37],[197,34,189,40],[197,40,189,46],[198,10,190,16],[199,8,191,12],[199,13,191,17],[199,25,191,29],[200,10,192,16,"result"],[200,16,192,22],[200,19,192,25],[200,23,192,25,"__assign"],[200,29,192,33],[200,30,192,33,"__assign"],[200,38,192,33],[200,40,192,34],[200,44,192,34,"__assign"],[200,50,192,42],[200,51,192,42,"__assign"],[200,59,192,42],[200,61,192,43],[200,65,192,43,"__assign"],[200,71,192,51],[200,72,192,51,"__assign"],[200,80,192,51],[200,82,192,52],[200,83,192,53],[200,84,192,54],[200,86,192,56,"result"],[200,92,192,62],[200,93,192,63],[200,95,192,65],[201,12,192,67,"notation"],[201,20,192,75],[201,22,192,77],[202,10,192,90],[202,11,192,91],[202,12,192,92],[202,14,192,94,"token"],[202,19,192,99],[202,20,192,100,"options"],[202,27,192,107],[202,28,192,108,"reduce"],[202,34,192,114],[202,35,192,115],[202,45,192,125,"all"],[202,48,192,128],[202,50,192,130,"opt"],[202,53,192,133],[202,55,192,135],[203,12,192,137],[203,19,192,145],[203,23,192,145,"__assign"],[203,29,192,153],[203,30,192,153,"__assign"],[203,38,192,153],[203,40,192,154],[203,44,192,154,"__assign"],[203,50,192,162],[203,51,192,162,"__assign"],[203,59,192,162],[203,61,192,163],[203,62,192,164],[203,63,192,165],[203,65,192,167,"all"],[203,68,192,170],[203,69,192,171],[203,71,192,173,"parseNotationOptions"],[203,91,192,193],[203,92,192,194,"opt"],[203,95,192,197],[203,96,192,198],[203,97,192,199],[204,10,192,202],[204,11,192,203],[204,13,192,205],[204,14,192,206],[204,15,192,207],[204,16,192,208],[204,17,192,209],[205,10,193,16],[206,8,194,12],[206,13,194,17],[206,26,194,30],[207,10,195,16,"result"],[207,16,195,22],[207,19,195,25],[207,23,195,25,"__assign"],[207,29,195,33],[207,30,195,33,"__assign"],[207,38,195,33],[207,40,195,34],[207,44,195,34,"__assign"],[207,50,195,42],[207,51,195,42,"__assign"],[207,59,195,42],[207,61,195,43],[207,65,195,43,"__assign"],[207,71,195,51],[207,72,195,51,"__assign"],[207,80,195,51],[207,82,195,52],[207,83,195,53],[207,84,195,54],[207,86,195,56,"result"],[207,92,195,62],[207,93,195,63],[207,95,195,65],[208,12,195,67,"notation"],[208,20,195,75],[208,22,195,77],[209,10,195,91],[209,11,195,92],[209,12,195,93],[209,14,195,95,"token"],[209,19,195,100],[209,20,195,101,"options"],[209,27,195,108],[209,28,195,109,"reduce"],[209,34,195,115],[209,35,195,116],[209,45,195,126,"all"],[209,48,195,129],[209,50,195,131,"opt"],[209,53,195,134],[209,55,195,136],[210,12,195,138],[210,19,195,146],[210,23,195,146,"__assign"],[210,29,195,154],[210,30,195,154,"__assign"],[210,38,195,154],[210,40,195,155],[210,44,195,155,"__assign"],[210,50,195,163],[210,51,195,163,"__assign"],[210,59,195,163],[210,61,195,164],[210,62,195,165],[210,63,195,166],[210,65,195,168,"all"],[210,68,195,171],[210,69,195,172],[210,71,195,174,"parseNotationOptions"],[210,91,195,194],[210,92,195,195,"opt"],[210,95,195,198],[210,96,195,199],[210,97,195,200],[211,10,195,203],[211,11,195,204],[211,13,195,206],[211,14,195,207],[211,15,195,208],[211,16,195,209],[211,17,195,210],[212,10,196,16],[213,8,197,12],[213,13,197,17],[213,30,197,34],[214,10,198,16,"result"],[214,16,198,22],[214,17,198,23,"notation"],[214,25,198,31],[214,28,198,34],[214,38,198,44],[215,10,199,16],[216,8,200,12],[217,8,201,12],[217,13,201,17],[217,32,201,36],[218,10,202,16,"result"],[218,16,202,22],[218,17,202,23,"currencyDisplay"],[218,32,202,38],[218,35,202,41],[218,49,202,55],[219,10,203,16,"result"],[219,16,203,22],[219,17,203,23,"unitDisplay"],[219,28,203,34],[219,31,203,37],[219,39,203,45],[220,10,204,16],[221,8,205,12],[221,13,205,17],[221,31,205,35],[222,10,206,16,"result"],[222,16,206,22],[222,17,206,23,"currencyDisplay"],[222,32,206,38],[222,35,206,41],[222,41,206,47],[223,10,207,16,"result"],[223,16,207,22],[223,17,207,23,"unitDisplay"],[223,28,207,34],[223,31,207,37],[223,38,207,44],[224,10,208,16],[225,8,209,12],[225,13,209,17],[225,35,209,39],[226,10,210,16,"result"],[226,16,210,22],[226,17,210,23,"currencyDisplay"],[226,32,210,38],[226,35,210,41],[226,41,210,47],[227,10,211,16,"result"],[227,16,211,22],[227,17,211,23,"unitDisplay"],[227,28,211,34],[227,31,211,37],[227,37,211,43],[228,10,212,16],[229,8,213,12],[229,13,213,17],[229,34,213,38],[230,10,214,16,"result"],[230,16,214,22],[230,17,214,23,"currencyDisplay"],[230,32,214,38],[230,35,214,41],[230,43,214,49],[231,10,215,16],[232,8,216,12],[232,13,216,17],[232,20,216,24],[233,10,217,16,"result"],[233,16,217,22],[233,17,217,23,"scale"],[233,22,217,28],[233,25,217,31,"parseFloat"],[233,35,217,41],[233,36,217,42,"token"],[233,41,217,47],[233,42,217,48,"options"],[233,49,217,55],[233,50,217,56],[233,51,217,57],[233,52,217,58],[233,53,217,59],[234,10,218,16],[235,8,219,12],[235,13,219,17],[235,34,219,38],[236,10,220,16,"result"],[236,16,220,22],[236,17,220,23,"roundingMode"],[236,29,220,35],[236,32,220,38],[236,39,220,45],[237,10,221,16],[238,8,222,12],[238,13,222,17],[238,36,222,40],[239,10,223,16,"result"],[239,16,223,22],[239,17,223,23,"roundingMode"],[239,29,223,35],[239,32,223,38],[239,38,223,44],[240,10,224,16],[241,8,225,12],[241,13,225,17],[241,33,225,37],[242,10,226,16,"result"],[242,16,226,22],[242,17,226,23,"roundingMode"],[242,29,226,35],[242,32,226,38],[242,39,226,45],[243,10,227,16],[244,8,228,12],[244,13,228,17],[244,31,228,35],[245,10,229,16,"result"],[245,16,229,22],[245,17,229,23,"roundingMode"],[245,29,229,35],[245,32,229,38],[245,40,229,46],[246,10,230,16],[247,8,231,12],[247,13,231,17],[247,38,231,42],[248,10,232,16,"result"],[248,16,232,22],[248,17,232,23,"roundingMode"],[248,29,232,35],[248,32,232,38],[248,42,232,48],[249,10,233,16],[250,8,234,12],[250,13,234,17],[250,38,234,42],[251,10,235,16,"result"],[251,16,235,22],[251,17,235,23,"roundingMode"],[251,29,235,35],[251,32,235,38],[251,43,235,49],[252,10,236,16],[253,8,237,12],[253,13,237,17],[253,36,237,40],[254,10,238,16,"result"],[254,16,238,22],[254,17,238,23,"roundingMode"],[254,29,238,35],[254,32,238,38],[254,44,238,50],[255,10,239,16],[256,8,240,12],[257,8,241,12],[257,13,241,17],[257,28,241,32],[258,10,242,16],[258,14,242,20,"token"],[258,19,242,25],[258,20,242,26,"options"],[258,27,242,33],[258,28,242,34,"length"],[258,34,242,40],[258,37,242,43],[258,38,242,44],[258,40,242,46],[259,12,243,20],[259,18,243,26],[259,22,243,30,"RangeError"],[259,32,243,40],[259,33,243,41],[259,91,243,99],[259,92,243,100],[260,10,244,16],[261,10,245,16,"token"],[261,15,245,21],[261,16,245,22,"options"],[261,23,245,29],[261,24,245,30],[261,25,245,31],[261,26,245,32],[261,27,245,33,"replace"],[261,34,245,40],[261,35,245,41,"INTEGER_WIDTH_REGEX"],[261,54,245,60],[261,56,245,62],[261,66,245,72,"_"],[261,67,245,73],[261,69,245,75,"g1"],[261,71,245,77],[261,73,245,79,"g2"],[261,75,245,81],[261,77,245,83,"g3"],[261,79,245,85],[261,81,245,87,"g4"],[261,83,245,89],[261,85,245,91,"g5"],[261,87,245,93],[261,89,245,95],[262,12,246,20],[262,16,246,24,"g1"],[262,18,246,26],[262,20,246,28],[263,14,247,24,"result"],[263,20,247,30],[263,21,247,31,"minimumIntegerDigits"],[263,41,247,51],[263,44,247,54,"g2"],[263,46,247,56],[263,47,247,57,"length"],[263,53,247,63],[264,12,248,20],[264,13,248,21],[264,19,249,25],[264,23,249,29,"g3"],[264,25,249,31],[264,29,249,35,"g4"],[264,31,249,37],[264,33,249,39],[265,14,250,24],[265,20,250,30],[265,24,250,34,"Error"],[265,29,250,39],[265,30,250,40],[265,82,250,92],[265,83,250,93],[266,12,251,20],[266,13,251,21],[266,19,252,25],[266,23,252,29,"g5"],[266,25,252,31],[266,27,252,33],[267,14,253,24],[267,20,253,30],[267,24,253,34,"Error"],[267,29,253,39],[267,30,253,40],[267,80,253,90],[267,81,253,91],[268,12,254,20],[269,12,255,20],[269,19,255,27],[269,21,255,29],[270,10,256,16],[270,11,256,17],[270,12,256,18],[271,10,257,16],[272,6,258,8],[273,6,259,8],[274,6,260,8],[274,10,260,12,"CONCISE_INTEGER_WIDTH_REGEX"],[274,37,260,39],[274,38,260,40,"test"],[274,42,260,44],[274,43,260,45,"token"],[274,48,260,50],[274,49,260,51,"stem"],[274,53,260,55],[274,54,260,56],[274,56,260,58],[275,8,261,12,"result"],[275,14,261,18],[275,15,261,19,"minimumIntegerDigits"],[275,35,261,39],[275,38,261,42,"token"],[275,43,261,47],[275,44,261,48,"stem"],[275,48,261,52],[275,49,261,53,"length"],[275,55,261,59],[276,8,262,12],[277,6,263,8],[278,6,264,8],[278,10,264,12,"FRACTION_PRECISION_REGEX"],[278,34,264,36],[278,35,264,37,"test"],[278,39,264,41],[278,40,264,42,"token"],[278,45,264,47],[278,46,264,48,"stem"],[278,50,264,52],[278,51,264,53],[278,53,264,55],[279,8,265,12],[280,8,266,12],[281,8,267,12],[282,8,268,12],[282,12,268,16,"token"],[282,17,268,21],[282,18,268,22,"options"],[282,25,268,29],[282,26,268,30,"length"],[282,32,268,36],[282,35,268,39],[282,36,268,40],[282,38,268,42],[283,10,269,16],[283,16,269,22],[283,20,269,26,"RangeError"],[283,30,269,36],[283,31,269,37],[283,94,269,100],[283,95,269,101],[284,8,270,12],[285,8,271,12,"token"],[285,13,271,17],[285,14,271,18,"stem"],[285,18,271,22],[285,19,271,23,"replace"],[285,26,271,30],[285,27,271,31,"FRACTION_PRECISION_REGEX"],[285,51,271,55],[285,53,271,57],[285,63,271,67,"_"],[285,64,271,68],[285,66,271,70,"g1"],[285,68,271,72],[285,70,271,74,"g2"],[285,72,271,76],[285,74,271,78,"g3"],[285,76,271,80],[285,78,271,82,"g4"],[285,80,271,84],[285,82,271,86,"g5"],[285,84,271,88],[285,86,271,90],[286,10,272,16],[287,10,273,16],[287,14,273,20,"g2"],[287,16,273,22],[287,21,273,27],[287,24,273,30],[287,26,273,32],[288,12,274,20,"result"],[288,18,274,26],[288,19,274,27,"minimumFractionDigits"],[288,40,274,48],[288,43,274,51,"g1"],[288,45,274,53],[288,46,274,54,"length"],[288,52,274,60],[289,10,275,16],[290,10,276,16],[291,10,276,16],[291,15,277,21],[291,19,277,25,"g3"],[291,21,277,27],[291,25,277,31,"g3"],[291,27,277,33],[291,28,277,34],[291,29,277,35],[291,30,277,36],[291,35,277,41],[291,38,277,44],[291,40,277,46],[292,12,278,20,"result"],[292,18,278,26],[292,19,278,27,"maximumFractionDigits"],[292,40,278,48],[292,43,278,51,"g3"],[292,45,278,53],[292,46,278,54,"length"],[292,52,278,60],[293,10,279,16],[294,10,280,16],[295,10,280,16],[295,15,281,21],[295,19,281,25,"g4"],[295,21,281,27],[295,25,281,31,"g5"],[295,27,281,33],[295,29,281,35],[296,12,282,20,"result"],[296,18,282,26],[296,19,282,27,"minimumFractionDigits"],[296,40,282,48],[296,43,282,51,"g4"],[296,45,282,53],[296,46,282,54,"length"],[296,52,282,60],[297,12,283,20,"result"],[297,18,283,26],[297,19,283,27,"maximumFractionDigits"],[297,40,283,48],[297,43,283,51,"g4"],[297,45,283,53],[297,46,283,54,"length"],[297,52,283,60],[297,55,283,63,"g5"],[297,57,283,65],[297,58,283,66,"length"],[297,64,283,72],[298,10,284,16],[298,11,284,17],[298,17,285,21],[299,12,286,20,"result"],[299,18,286,26],[299,19,286,27,"minimumFractionDigits"],[299,40,286,48],[299,43,286,51,"g1"],[299,45,286,53],[299,46,286,54,"length"],[299,52,286,60],[300,12,287,20,"result"],[300,18,287,26],[300,19,287,27,"maximumFractionDigits"],[300,40,287,48],[300,43,287,51,"g1"],[300,45,287,53],[300,46,287,54,"length"],[300,52,287,60],[301,10,288,16],[302,10,289,16],[302,17,289,23],[302,19,289,25],[303,8,290,12],[303,9,290,13],[303,10,290,14],[304,8,291,12],[304,12,291,16,"opt"],[304,15,291,19],[304,18,291,22,"token"],[304,23,291,27],[304,24,291,28,"options"],[304,31,291,35],[304,32,291,36],[304,33,291,37],[304,34,291,38],[305,8,292,12],[306,8,293,12],[306,12,293,16,"opt"],[306,15,293,19],[306,20,293,24],[306,23,293,27],[306,25,293,29],[307,10,294,16,"result"],[307,16,294,22],[307,19,294,25],[307,23,294,25,"__assign"],[307,29,294,33],[307,30,294,33,"__assign"],[307,38,294,33],[307,40,294,34],[307,44,294,34,"__assign"],[307,50,294,42],[307,51,294,42,"__assign"],[307,59,294,42],[307,61,294,43],[307,62,294,44],[307,63,294,45],[307,65,294,47,"result"],[307,71,294,53],[307,72,294,54],[307,74,294,56],[308,12,294,58,"trailingZeroDisplay"],[308,31,294,77],[308,33,294,79],[309,10,294,96],[309,11,294,97],[309,12,294,98],[310,8,295,12],[310,9,295,13],[310,15,296,17],[310,19,296,21,"opt"],[310,22,296,24],[310,24,296,26],[311,10,297,16,"result"],[311,16,297,22],[311,19,297,25],[311,23,297,25,"__assign"],[311,29,297,33],[311,30,297,33,"__assign"],[311,38,297,33],[311,40,297,34],[311,44,297,34,"__assign"],[311,50,297,42],[311,51,297,42,"__assign"],[311,59,297,42],[311,61,297,43],[311,62,297,44],[311,63,297,45],[311,65,297,47,"result"],[311,71,297,53],[311,72,297,54],[311,74,297,56,"parseSignificantPrecision"],[311,99,297,81],[311,100,297,82,"opt"],[311,103,297,85],[311,104,297,86],[311,105,297,87],[312,8,298,12],[313,8,299,12],[314,6,300,8],[315,6,301,8],[316,6,302,8],[316,10,302,12,"SIGNIFICANT_PRECISION_REGEX"],[316,37,302,39],[316,38,302,40,"test"],[316,42,302,44],[316,43,302,45,"token"],[316,48,302,50],[316,49,302,51,"stem"],[316,53,302,55],[316,54,302,56],[316,56,302,58],[317,8,303,12,"result"],[317,14,303,18],[317,17,303,21],[317,21,303,21,"__assign"],[317,27,303,29],[317,28,303,29,"__assign"],[317,36,303,29],[317,38,303,30],[317,42,303,30,"__assign"],[317,48,303,38],[317,49,303,38,"__assign"],[317,57,303,38],[317,59,303,39],[317,60,303,40],[317,61,303,41],[317,63,303,43,"result"],[317,69,303,49],[317,70,303,50],[317,72,303,52,"parseSignificantPrecision"],[317,97,303,77],[317,98,303,78,"token"],[317,103,303,83],[317,104,303,84,"stem"],[317,108,303,88],[317,109,303,89],[317,110,303,90],[318,8,304,12],[319,6,305,8],[320,6,306,8],[320,10,306,12,"signOpts"],[320,18,306,20],[320,21,306,23,"parseSign"],[320,30,306,32],[320,31,306,33,"token"],[320,36,306,38],[320,37,306,39,"stem"],[320,41,306,43],[320,42,306,44],[321,6,307,8],[321,10,307,12,"signOpts"],[321,18,307,20],[321,20,307,22],[322,8,308,12,"result"],[322,14,308,18],[322,17,308,21],[322,21,308,21,"__assign"],[322,27,308,29],[322,28,308,29,"__assign"],[322,36,308,29],[322,38,308,30],[322,42,308,30,"__assign"],[322,48,308,38],[322,49,308,38,"__assign"],[322,57,308,38],[322,59,308,39],[322,60,308,40],[322,61,308,41],[322,63,308,43,"result"],[322,69,308,49],[322,70,308,50],[322,72,308,52,"signOpts"],[322,80,308,60],[322,81,308,61],[323,6,309,8],[324,6,310,8],[324,10,310,12,"conciseScientificAndEngineeringOpts"],[324,45,310,47],[324,48,310,50,"parseConciseScientificAndEngineeringStem"],[324,88,310,90],[324,89,310,91,"token"],[324,94,310,96],[324,95,310,97,"stem"],[324,99,310,101],[324,100,310,102],[325,6,311,8],[325,10,311,12,"conciseScientificAndEngineeringOpts"],[325,45,311,47],[325,47,311,49],[326,8,312,12,"result"],[326,14,312,18],[326,17,312,21],[326,21,312,21,"__assign"],[326,27,312,29],[326,28,312,29,"__assign"],[326,36,312,29],[326,38,312,30],[326,42,312,30,"__assign"],[326,48,312,38],[326,49,312,38,"__assign"],[326,57,312,38],[326,59,312,39],[326,60,312,40],[326,61,312,41],[326,63,312,43,"result"],[326,69,312,49],[326,70,312,50],[326,72,312,52,"conciseScientificAndEngineeringOpts"],[326,107,312,87],[326,108,312,88],[327,6,313,8],[328,4,314,4],[329,4,315,4],[329,11,315,11,"result"],[329,17,315,17],[330,2,316,0],[331,0,316,1],[331,3]],"functionMap":{"names":["<global>","parseNumberSkeletonFromString","skeleton.split.filter$argument_0","icuUnitToEcma","parseSignificantPrecision","str.replace$argument_1","parseSign","parseConciseScientificAndEngineeringStem","parseNotationOptions","parseNumberSkeleton","token.options.reduce$argument_0","token.options._.replace$argument_1","token.stem.replace$argument_1"],"mappings":"AAA;OCE;gBCO,qCD;CDkB;AGC;CHE;AIK;6CCQ;KDqB;CJE;AMC;CNuC;AOC;CP+B;AQC;CRO;OSI;mHCyC,wFD;oHCG,wFD;8DEkD;iBFW;yDGe;aHmB;CT0B"},"hasCjsExports":false},"type":"js/module"}]}