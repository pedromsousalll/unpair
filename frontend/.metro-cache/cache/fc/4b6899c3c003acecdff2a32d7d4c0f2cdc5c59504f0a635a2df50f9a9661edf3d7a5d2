{"dependencies":[{"name":"./normalizeValueWithProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":57,"index":194},"end":{"line":7,"column":96,"index":233}}],"key":"/12IeszZBShxqi4svcfdPjFQkp0=","exportNames":["*"],"imports":1}},{"name":"./canUseDom","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":40,"index":276},"end":{"line":8,"column":62,"index":298}}],"key":"hJdAy7Md49kyW0nhw6oL2AysrUw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.createTransformValue = void 0;\n  var _normalizeValueWithProperty = _interopRequireDefault(require(_dependencyMap[0], \"./normalizeValueWithProperty\"));\n  var _canUseDom = _interopRequireDefault(require(_dependencyMap[1], \"./canUseDom\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  // Code copied from the open source library 'react-native-web'\n  // https://github.com/necolas/react-native-web\n\n  //@ts-nocheck\n\n  /**\n   * The browser implements the CSS cascade, where the order of properties is a\n   * factor in determining which styles to paint. React Native is different. It\n   * gives giving precedence to the more specific style property. For example,\n   * the value of `paddingTop` takes precedence over that of `padding`.\n   *\n   * This module creates mutally exclusive style declarations by expanding all of\n   * React Native's supported shortform properties (e.g. `padding`) to their\n   * longfrom equivalents.\n   */\n\n  const emptyObject = {};\n  const supportsCSS3TextDecoration = !_canUseDom.default || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\n  const ignoredProps = {\n    elevation: true,\n    overlayColor: true,\n    resizeMode: true,\n    tintColor: true\n  };\n  const MONOSPACE_FONT_STACK = 'monospace,monospace';\n  const SYSTEM_FONT_STACK = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\n  const STYLE_SHORT_FORM_EXPANSIONS = {\n    borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n    borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\n    borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n    borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n    marginHorizontal: ['marginRight', 'marginLeft'],\n    marginVertical: ['marginTop', 'marginBottom'],\n    overflow: ['overflowX', 'overflowY'],\n    overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n    paddingHorizontal: ['paddingRight', 'paddingLeft'],\n    paddingVertical: ['paddingTop', 'paddingBottom']\n  };\n\n  /**\n   * Transform\n   */\n\n  // { scale: 2 } => 'scale(2)'\n  // { translateX: 20 } => 'translateX(20px)'\n  // { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\n  const mapTransform = transform => {\n    const type = Object.keys(transform)[0];\n    const value = transform[type];\n    if (type === 'matrix' || type === 'matrix3d') {\n      return `${type}(${value.join(',')})`;\n    } else {\n      const normalizedValue = (0, _normalizeValueWithProperty.default)(value, type);\n      return `${type}(${normalizedValue})`;\n    }\n  };\n  const createTransformValue = style => {\n    let transform = style.transform;\n    if (Array.isArray(style.transform)) {\n      transform = style.transform.map(mapTransform).join(' ');\n    }\n    return transform;\n  };\n\n  /**\n   * Reducer\n   */\n  exports.createTransformValue = createTransformValue;\n  const createReactDOMStyle = (style, isInline) => {\n    if (!style) {\n      return emptyObject;\n    }\n    const resolvedStyle = {};\n    for (const prop in style) {\n      const value = style[prop];\n      if (\n      // Ignore everything with a null value\n      value == null ||\n      // Ignore some React Native styles\n      ignoredProps[prop]) {\n        continue;\n      }\n      if (prop === 'aspectRatio') {\n        resolvedStyle[prop] = value.toString();\n      } else if (prop === 'backgroundClip') {\n        // TODO: remove once this issue is fixed\n        // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n        if (value === 'text') {\n          resolvedStyle.backgroundClip = value;\n          resolvedStyle.WebkitBackgroundClip = value;\n        }\n      } else if (prop === 'flex') {\n        if (value === -1) {\n          resolvedStyle.flexGrow = 0;\n          resolvedStyle.flexShrink = 1;\n          resolvedStyle.flexBasis = 'auto';\n        } else {\n          resolvedStyle.flex = value;\n        }\n      } else if (prop === 'font') {\n        resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n      } else if (prop === 'fontFamily') {\n        if (value.indexOf('System') > -1) {\n          const stack = value.split(/,\\s*/);\n          stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n          resolvedStyle[prop] = stack.join(',');\n        } else if (value === 'monospace') {\n          resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n        } else {\n          resolvedStyle[prop] = value;\n        }\n      } else if (prop === 'fontVariant') {\n        if (Array.isArray(value) && value.length > 0) {\n          resolvedStyle.fontVariant = value.join(' ');\n        }\n      } else if (prop === 'textAlignVertical') {\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n      } else if (prop === 'textDecorationLine') {\n        // use 'text-decoration' for browsers that only support CSS2\n        // text-decoration (e.g., IE, Edge)\n        if (!supportsCSS3TextDecoration) {\n          resolvedStyle.textDecoration = value;\n        } else {\n          resolvedStyle.textDecorationLine = value;\n        }\n      } else if (prop === 'transform' || prop === 'transformMatrix') {\n        resolvedStyle.transform = createTransformValue(style);\n      } else if (prop === 'writingDirection') {\n        resolvedStyle.direction = value;\n      } else {\n        const value = (0, _normalizeValueWithProperty.default)(style[prop], prop);\n        const longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n        if (isInline && prop === 'margin') {\n          if (style.marginHorizontal == null) {\n            resolvedStyle.marginLeft = value;\n            resolvedStyle.marginRight = value;\n          }\n          if (style.marginVertical == null) {\n            resolvedStyle.marginTop = value;\n            resolvedStyle.marginBottom = value;\n          }\n        } else if (isInline && prop === 'padding') {\n          if (style.paddingHorizontal == null) {\n            resolvedStyle.paddingLeft = value;\n            resolvedStyle.paddingRight = value;\n          }\n          if (style.paddingVertical == null) {\n            resolvedStyle.paddingTop = value;\n            resolvedStyle.paddingBottom = value;\n          }\n        } else if (longFormProperties) {\n          longFormProperties.forEach((longForm, _i) => {\n            // The value of any longform property in the original styles takes\n            // precedence over the shortform's value.\n            if (style[longForm] == null) {\n              resolvedStyle[longForm] = value;\n            }\n          });\n        } else {\n          resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n        }\n      }\n    }\n    return resolvedStyle;\n  };\n  var _default = exports.default = createReactDOMStyle;\n});","lineCount":181,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"exports"],[7,27,6,25],[7,28,6,26,"createTransformValue"],[7,48,6,46],[7,51,6,49],[7,56,6,54],[7,57,6,55],[8,2,7,0],[8,6,7,4,"_normalizeValueWithProperty"],[8,33,7,31],[8,36,7,34,"_interopRequireDefault"],[8,58,7,56],[8,59,7,57,"require"],[8,66,7,64],[8,67,7,64,"_dependencyMap"],[8,81,7,64],[8,116,7,95],[8,117,7,96],[8,118,7,97],[9,2,8,0],[9,6,8,4,"_canUseDom"],[9,16,8,14],[9,19,8,17,"_interopRequireDefault"],[9,41,8,39],[9,42,8,40,"require"],[9,49,8,47],[9,50,8,47,"_dependencyMap"],[9,64,8,47],[9,82,8,61],[9,83,8,62],[9,84,8,63],[10,2,9,0],[10,11,9,9,"_interopRequireDefault"],[10,33,9,31,"_interopRequireDefault"],[10,34,9,32,"obj"],[10,37,9,35],[10,39,9,37],[11,4,9,39],[11,11,9,46,"obj"],[11,14,9,49],[11,18,9,53,"obj"],[11,21,9,56],[11,22,9,57,"__esModule"],[11,32,9,67],[11,35,9,70,"obj"],[11,38,9,73],[11,41,9,76],[12,6,9,78,"default"],[12,13,9,85],[12,15,9,87,"obj"],[13,4,9,91],[13,5,9,92],[14,2,9,94],[15,2,10,0],[16,2,11,0],[18,2,13,0],[20,2,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[31,2,26,0],[31,8,26,6,"emptyObject"],[31,19,26,17],[31,22,26,20],[31,23,26,21],[31,24,26,22],[32,2,27,0],[32,8,27,6,"supportsCSS3TextDecoration"],[32,34,27,32],[32,37,27,35],[32,38,27,36,"_canUseDom"],[32,48,27,46],[32,49,27,47,"default"],[32,56,27,54],[32,60,27,58,"window"],[32,66,27,64],[32,67,27,65,"CSS"],[32,70,27,68],[32,74,27,72],[32,78,27,76],[32,82,27,80,"window"],[32,88,27,86],[32,89,27,87,"CSS"],[32,92,27,90],[32,93,27,91,"supports"],[32,101,27,99],[32,105,27,103],[32,109,27,107],[32,114,27,112,"window"],[32,120,27,118],[32,121,27,119,"CSS"],[32,124,27,122],[32,125,27,123,"supports"],[32,133,27,131],[32,134,27,132],[32,156,27,154],[32,158,27,156],[32,164,27,162],[32,165,27,163],[32,169,27,167,"window"],[32,175,27,173],[32,176,27,174,"CSS"],[32,179,27,177],[32,180,27,178,"supports"],[32,188,27,186],[32,189,27,187],[32,219,27,217],[32,221,27,219],[32,227,27,225],[32,228,27,226],[32,229,27,227],[33,2,28,0],[33,8,28,6,"ignoredProps"],[33,20,28,18],[33,23,28,21],[34,4,29,2,"elevation"],[34,13,29,11],[34,15,29,13],[34,19,29,17],[35,4,30,2,"overlayColor"],[35,16,30,14],[35,18,30,16],[35,22,30,20],[36,4,31,2,"resizeMode"],[36,14,31,12],[36,16,31,14],[36,20,31,18],[37,4,32,2,"tintColor"],[37,13,32,11],[37,15,32,13],[38,2,33,0],[38,3,33,1],[39,2,34,0],[39,8,34,6,"MONOSPACE_FONT_STACK"],[39,28,34,26],[39,31,34,29],[39,52,34,50],[40,2,35,0],[40,8,35,6,"SYSTEM_FONT_STACK"],[40,25,35,23],[40,28,35,26],[40,107,35,105],[41,2,36,0],[41,8,36,6,"STYLE_SHORT_FORM_EXPANSIONS"],[41,35,36,33],[41,38,36,36],[42,4,37,2,"borderColor"],[42,15,37,13],[42,17,37,15],[42,18,37,16],[42,34,37,32],[42,36,37,34],[42,54,37,52],[42,56,37,54],[42,75,37,73],[42,77,37,75],[42,94,37,92],[42,95,37,93],[43,4,38,2,"borderRadius"],[43,16,38,14],[43,18,38,16],[43,19,38,17],[43,40,38,38],[43,42,38,40],[43,64,38,62],[43,66,38,64],[43,91,38,89],[43,93,38,91],[43,117,38,115],[43,118,38,116],[44,4,39,2,"borderStyle"],[44,15,39,13],[44,17,39,15],[44,18,39,16],[44,34,39,32],[44,36,39,34],[44,54,39,52],[44,56,39,54],[44,75,39,73],[44,77,39,75],[44,94,39,92],[44,95,39,93],[45,4,40,2,"borderWidth"],[45,15,40,13],[45,17,40,15],[45,18,40,16],[45,34,40,32],[45,36,40,34],[45,54,40,52],[45,56,40,54],[45,75,40,73],[45,77,40,75],[45,94,40,92],[45,95,40,93],[46,4,41,2,"marginHorizontal"],[46,20,41,18],[46,22,41,20],[46,23,41,21],[46,36,41,34],[46,38,41,36],[46,50,41,48],[46,51,41,49],[47,4,42,2,"marginVertical"],[47,18,42,16],[47,20,42,18],[47,21,42,19],[47,32,42,30],[47,34,42,32],[47,48,42,46],[47,49,42,47],[48,4,43,2,"overflow"],[48,12,43,10],[48,14,43,12],[48,15,43,13],[48,26,43,24],[48,28,43,26],[48,39,43,37],[48,40,43,38],[49,4,44,2,"overscrollBehavior"],[49,22,44,20],[49,24,44,22],[49,25,44,23],[49,46,44,44],[49,48,44,46],[49,69,44,67],[49,70,44,68],[50,4,45,2,"paddingHorizontal"],[50,21,45,19],[50,23,45,21],[50,24,45,22],[50,38,45,36],[50,40,45,38],[50,53,45,51],[50,54,45,52],[51,4,46,2,"paddingVertical"],[51,19,46,17],[51,21,46,19],[51,22,46,20],[51,34,46,32],[51,36,46,34],[51,51,46,49],[52,2,47,0],[52,3,47,1],[54,2,49,0],[55,0,50,0],[56,0,51,0],[58,2,53,0],[59,2,54,0],[60,2,55,0],[61,2,56,0],[61,8,56,6,"mapTransform"],[61,20,56,18],[61,23,56,21,"transform"],[61,32,56,30],[61,36,56,34],[62,4,57,2],[62,10,57,8,"type"],[62,14,57,12],[62,17,57,15,"Object"],[62,23,57,21],[62,24,57,22,"keys"],[62,28,57,26],[62,29,57,27,"transform"],[62,38,57,36],[62,39,57,37],[62,40,57,38],[62,41,57,39],[62,42,57,40],[63,4,58,2],[63,10,58,8,"value"],[63,15,58,13],[63,18,58,16,"transform"],[63,27,58,25],[63,28,58,26,"type"],[63,32,58,30],[63,33,58,31],[64,4,59,2],[64,8,59,6,"type"],[64,12,59,10],[64,17,59,15],[64,25,59,23],[64,29,59,27,"type"],[64,33,59,31],[64,38,59,36],[64,48,59,46],[64,50,59,48],[65,6,60,4],[65,13,60,11],[65,16,60,14,"type"],[65,20,60,18],[65,24,60,22,"value"],[65,29,60,27],[65,30,60,28,"join"],[65,34,60,32],[65,35,60,33],[65,38,60,36],[65,39,60,37],[65,42,60,40],[66,4,61,2],[66,5,61,3],[66,11,61,9],[67,6,62,4],[67,12,62,10,"normalizedValue"],[67,27,62,25],[67,30,62,28],[67,31,62,29],[67,32,62,30],[67,34,62,32,"_normalizeValueWithProperty"],[67,61,62,59],[67,62,62,60,"default"],[67,69,62,67],[67,71,62,69,"value"],[67,76,62,74],[67,78,62,76,"type"],[67,82,62,80],[67,83,62,81],[68,6,63,4],[68,13,63,11],[68,16,63,14,"type"],[68,20,63,18],[68,24,63,22,"normalizedValue"],[68,39,63,37],[68,42,63,40],[69,4,64,2],[70,2,65,0],[70,3,65,1],[71,2,66,0],[71,8,66,6,"createTransformValue"],[71,28,66,26],[71,31,66,29,"style"],[71,36,66,34],[71,40,66,38],[72,4,67,2],[72,8,67,6,"transform"],[72,17,67,15],[72,20,67,18,"style"],[72,25,67,23],[72,26,67,24,"transform"],[72,35,67,33],[73,4,68,2],[73,8,68,6,"Array"],[73,13,68,11],[73,14,68,12,"isArray"],[73,21,68,19],[73,22,68,20,"style"],[73,27,68,25],[73,28,68,26,"transform"],[73,37,68,35],[73,38,68,36],[73,40,68,38],[74,6,69,4,"transform"],[74,15,69,13],[74,18,69,16,"style"],[74,23,69,21],[74,24,69,22,"transform"],[74,33,69,31],[74,34,69,32,"map"],[74,37,69,35],[74,38,69,36,"mapTransform"],[74,50,69,48],[74,51,69,49],[74,52,69,50,"join"],[74,56,69,54],[74,57,69,55],[74,60,69,58],[74,61,69,59],[75,4,70,2],[76,4,71,2],[76,11,71,9,"transform"],[76,20,71,18],[77,2,72,0],[77,3,72,1],[79,2,74,0],[80,0,75,0],[81,0,76,0],[82,2,77,0,"exports"],[82,9,77,7],[82,10,77,8,"createTransformValue"],[82,30,77,28],[82,33,77,31,"createTransformValue"],[82,53,77,51],[83,2,78,0],[83,8,78,6,"createReactDOMStyle"],[83,27,78,25],[83,30,78,28,"createReactDOMStyle"],[83,31,78,29,"style"],[83,36,78,34],[83,38,78,36,"isInline"],[83,46,78,44],[83,51,78,49],[84,4,79,2],[84,8,79,6],[84,9,79,7,"style"],[84,14,79,12],[84,16,79,14],[85,6,80,4],[85,13,80,11,"emptyObject"],[85,24,80,22],[86,4,81,2],[87,4,82,2],[87,10,82,8,"resolvedStyle"],[87,23,82,21],[87,26,82,24],[87,27,82,25],[87,28,82,26],[88,4,83,2],[88,9,83,7],[88,15,83,13,"prop"],[88,19,83,17],[88,23,83,21,"style"],[88,28,83,26],[88,30,83,28],[89,6,84,4],[89,12,84,10,"value"],[89,17,84,15],[89,20,84,18,"style"],[89,25,84,23],[89,26,84,24,"prop"],[89,30,84,28],[89,31,84,29],[90,6,85,4],[91,6,86,4],[92,6,87,4,"value"],[92,11,87,9],[92,15,87,13],[92,19,87,17],[93,6,88,4],[94,6,89,4,"ignoredProps"],[94,18,89,16],[94,19,89,17,"prop"],[94,23,89,21],[94,24,89,22],[94,26,89,24],[95,8,90,6],[96,6,91,4],[97,6,92,4],[97,10,92,8,"prop"],[97,14,92,12],[97,19,92,17],[97,32,92,30],[97,34,92,32],[98,8,93,6,"resolvedStyle"],[98,21,93,19],[98,22,93,20,"prop"],[98,26,93,24],[98,27,93,25],[98,30,93,28,"value"],[98,35,93,33],[98,36,93,34,"toString"],[98,44,93,42],[98,45,93,43],[98,46,93,44],[99,6,94,4],[99,7,94,5],[99,13,94,11],[99,17,94,15,"prop"],[99,21,94,19],[99,26,94,24],[99,42,94,40],[99,44,94,42],[100,8,95,6],[101,8,96,6],[102,8,97,6],[102,12,97,10,"value"],[102,17,97,15],[102,22,97,20],[102,28,97,26],[102,30,97,28],[103,10,98,8,"resolvedStyle"],[103,23,98,21],[103,24,98,22,"backgroundClip"],[103,38,98,36],[103,41,98,39,"value"],[103,46,98,44],[104,10,99,8,"resolvedStyle"],[104,23,99,21],[104,24,99,22,"WebkitBackgroundClip"],[104,44,99,42],[104,47,99,45,"value"],[104,52,99,50],[105,8,100,6],[106,6,101,4],[106,7,101,5],[106,13,101,11],[106,17,101,15,"prop"],[106,21,101,19],[106,26,101,24],[106,32,101,30],[106,34,101,32],[107,8,102,6],[107,12,102,10,"value"],[107,17,102,15],[107,22,102,20],[107,23,102,21],[107,24,102,22],[107,26,102,24],[108,10,103,8,"resolvedStyle"],[108,23,103,21],[108,24,103,22,"flexGrow"],[108,32,103,30],[108,35,103,33],[108,36,103,34],[109,10,104,8,"resolvedStyle"],[109,23,104,21],[109,24,104,22,"flexShrink"],[109,34,104,32],[109,37,104,35],[109,38,104,36],[110,10,105,8,"resolvedStyle"],[110,23,105,21],[110,24,105,22,"flexBasis"],[110,33,105,31],[110,36,105,34],[110,42,105,40],[111,8,106,6],[111,9,106,7],[111,15,106,13],[112,10,107,8,"resolvedStyle"],[112,23,107,21],[112,24,107,22,"flex"],[112,28,107,26],[112,31,107,29,"value"],[112,36,107,34],[113,8,108,6],[114,6,109,4],[114,7,109,5],[114,13,109,11],[114,17,109,15,"prop"],[114,21,109,19],[114,26,109,24],[114,32,109,30],[114,34,109,32],[115,8,110,6,"resolvedStyle"],[115,21,110,19],[115,22,110,20,"prop"],[115,26,110,24],[115,27,110,25],[115,30,110,28,"value"],[115,35,110,33],[115,36,110,34,"replace"],[115,43,110,41],[115,44,110,42],[115,52,110,50],[115,54,110,52,"SYSTEM_FONT_STACK"],[115,71,110,69],[115,72,110,70],[116,6,111,4],[116,7,111,5],[116,13,111,11],[116,17,111,15,"prop"],[116,21,111,19],[116,26,111,24],[116,38,111,36],[116,40,111,38],[117,8,112,6],[117,12,112,10,"value"],[117,17,112,15],[117,18,112,16,"indexOf"],[117,25,112,23],[117,26,112,24],[117,34,112,32],[117,35,112,33],[117,38,112,36],[117,39,112,37],[117,40,112,38],[117,42,112,40],[118,10,113,8],[118,16,113,14,"stack"],[118,21,113,19],[118,24,113,22,"value"],[118,29,113,27],[118,30,113,28,"split"],[118,35,113,33],[118,36,113,34],[118,42,113,40],[118,43,113,41],[119,10,114,8,"stack"],[119,15,114,13],[119,16,114,14,"stack"],[119,21,114,19],[119,22,114,20,"indexOf"],[119,29,114,27],[119,30,114,28],[119,38,114,36],[119,39,114,37],[119,40,114,38],[119,43,114,41,"SYSTEM_FONT_STACK"],[119,60,114,58],[120,10,115,8,"resolvedStyle"],[120,23,115,21],[120,24,115,22,"prop"],[120,28,115,26],[120,29,115,27],[120,32,115,30,"stack"],[120,37,115,35],[120,38,115,36,"join"],[120,42,115,40],[120,43,115,41],[120,46,115,44],[120,47,115,45],[121,8,116,6],[121,9,116,7],[121,15,116,13],[121,19,116,17,"value"],[121,24,116,22],[121,29,116,27],[121,40,116,38],[121,42,116,40],[122,10,117,8,"resolvedStyle"],[122,23,117,21],[122,24,117,22,"prop"],[122,28,117,26],[122,29,117,27],[122,32,117,30,"MONOSPACE_FONT_STACK"],[122,52,117,50],[123,8,118,6],[123,9,118,7],[123,15,118,13],[124,10,119,8,"resolvedStyle"],[124,23,119,21],[124,24,119,22,"prop"],[124,28,119,26],[124,29,119,27],[124,32,119,30,"value"],[124,37,119,35],[125,8,120,6],[126,6,121,4],[126,7,121,5],[126,13,121,11],[126,17,121,15,"prop"],[126,21,121,19],[126,26,121,24],[126,39,121,37],[126,41,121,39],[127,8,122,6],[127,12,122,10,"Array"],[127,17,122,15],[127,18,122,16,"isArray"],[127,25,122,23],[127,26,122,24,"value"],[127,31,122,29],[127,32,122,30],[127,36,122,34,"value"],[127,41,122,39],[127,42,122,40,"length"],[127,48,122,46],[127,51,122,49],[127,52,122,50],[127,54,122,52],[128,10,123,8,"resolvedStyle"],[128,23,123,21],[128,24,123,22,"fontVariant"],[128,35,123,33],[128,38,123,36,"value"],[128,43,123,41],[128,44,123,42,"join"],[128,48,123,46],[128,49,123,47],[128,52,123,50],[128,53,123,51],[129,8,124,6],[130,6,125,4],[130,7,125,5],[130,13,125,11],[130,17,125,15,"prop"],[130,21,125,19],[130,26,125,24],[130,45,125,43],[130,47,125,45],[131,8,126,6,"resolvedStyle"],[131,21,126,19],[131,22,126,20,"verticalAlign"],[131,35,126,33],[131,38,126,36,"value"],[131,43,126,41],[131,48,126,46],[131,56,126,54],[131,59,126,57],[131,67,126,65],[131,70,126,68,"value"],[131,75,126,73],[132,6,127,4],[132,7,127,5],[132,13,127,11],[132,17,127,15,"prop"],[132,21,127,19],[132,26,127,24],[132,46,127,44],[132,48,127,46],[133,8,128,6],[134,8,129,6],[135,8,130,6],[135,12,130,10],[135,13,130,11,"supportsCSS3TextDecoration"],[135,39,130,37],[135,41,130,39],[136,10,131,8,"resolvedStyle"],[136,23,131,21],[136,24,131,22,"textDecoration"],[136,38,131,36],[136,41,131,39,"value"],[136,46,131,44],[137,8,132,6],[137,9,132,7],[137,15,132,13],[138,10,133,8,"resolvedStyle"],[138,23,133,21],[138,24,133,22,"textDecorationLine"],[138,42,133,40],[138,45,133,43,"value"],[138,50,133,48],[139,8,134,6],[140,6,135,4],[140,7,135,5],[140,13,135,11],[140,17,135,15,"prop"],[140,21,135,19],[140,26,135,24],[140,37,135,35],[140,41,135,39,"prop"],[140,45,135,43],[140,50,135,48],[140,67,135,65],[140,69,135,67],[141,8,136,6,"resolvedStyle"],[141,21,136,19],[141,22,136,20,"transform"],[141,31,136,29],[141,34,136,32,"createTransformValue"],[141,54,136,52],[141,55,136,53,"style"],[141,60,136,58],[141,61,136,59],[142,6,137,4],[142,7,137,5],[142,13,137,11],[142,17,137,15,"prop"],[142,21,137,19],[142,26,137,24],[142,44,137,42],[142,46,137,44],[143,8,138,6,"resolvedStyle"],[143,21,138,19],[143,22,138,20,"direction"],[143,31,138,29],[143,34,138,32,"value"],[143,39,138,37],[144,6,139,4],[144,7,139,5],[144,13,139,11],[145,8,140,6],[145,14,140,12,"value"],[145,19,140,17],[145,22,140,20],[145,23,140,21],[145,24,140,22],[145,26,140,24,"_normalizeValueWithProperty"],[145,53,140,51],[145,54,140,52,"default"],[145,61,140,59],[145,63,140,61,"style"],[145,68,140,66],[145,69,140,67,"prop"],[145,73,140,71],[145,74,140,72],[145,76,140,74,"prop"],[145,80,140,78],[145,81,140,79],[146,8,141,6],[146,14,141,12,"longFormProperties"],[146,32,141,30],[146,35,141,33,"STYLE_SHORT_FORM_EXPANSIONS"],[146,62,141,60],[146,63,141,61,"prop"],[146,67,141,65],[146,68,141,66],[147,8,142,6],[147,12,142,10,"isInline"],[147,20,142,18],[147,24,142,22,"prop"],[147,28,142,26],[147,33,142,31],[147,41,142,39],[147,43,142,41],[148,10,143,8],[148,14,143,12,"style"],[148,19,143,17],[148,20,143,18,"marginHorizontal"],[148,36,143,34],[148,40,143,38],[148,44,143,42],[148,46,143,44],[149,12,144,10,"resolvedStyle"],[149,25,144,23],[149,26,144,24,"marginLeft"],[149,36,144,34],[149,39,144,37,"value"],[149,44,144,42],[150,12,145,10,"resolvedStyle"],[150,25,145,23],[150,26,145,24,"marginRight"],[150,37,145,35],[150,40,145,38,"value"],[150,45,145,43],[151,10,146,8],[152,10,147,8],[152,14,147,12,"style"],[152,19,147,17],[152,20,147,18,"marginVertical"],[152,34,147,32],[152,38,147,36],[152,42,147,40],[152,44,147,42],[153,12,148,10,"resolvedStyle"],[153,25,148,23],[153,26,148,24,"marginTop"],[153,35,148,33],[153,38,148,36,"value"],[153,43,148,41],[154,12,149,10,"resolvedStyle"],[154,25,149,23],[154,26,149,24,"marginBottom"],[154,38,149,36],[154,41,149,39,"value"],[154,46,149,44],[155,10,150,8],[156,8,151,6],[156,9,151,7],[156,15,151,13],[156,19,151,17,"isInline"],[156,27,151,25],[156,31,151,29,"prop"],[156,35,151,33],[156,40,151,38],[156,49,151,47],[156,51,151,49],[157,10,152,8],[157,14,152,12,"style"],[157,19,152,17],[157,20,152,18,"paddingHorizontal"],[157,37,152,35],[157,41,152,39],[157,45,152,43],[157,47,152,45],[158,12,153,10,"resolvedStyle"],[158,25,153,23],[158,26,153,24,"paddingLeft"],[158,37,153,35],[158,40,153,38,"value"],[158,45,153,43],[159,12,154,10,"resolvedStyle"],[159,25,154,23],[159,26,154,24,"paddingRight"],[159,38,154,36],[159,41,154,39,"value"],[159,46,154,44],[160,10,155,8],[161,10,156,8],[161,14,156,12,"style"],[161,19,156,17],[161,20,156,18,"paddingVertical"],[161,35,156,33],[161,39,156,37],[161,43,156,41],[161,45,156,43],[162,12,157,10,"resolvedStyle"],[162,25,157,23],[162,26,157,24,"paddingTop"],[162,36,157,34],[162,39,157,37,"value"],[162,44,157,42],[163,12,158,10,"resolvedStyle"],[163,25,158,23],[163,26,158,24,"paddingBottom"],[163,39,158,37],[163,42,158,40,"value"],[163,47,158,45],[164,10,159,8],[165,8,160,6],[165,9,160,7],[165,15,160,13],[165,19,160,17,"longFormProperties"],[165,37,160,35],[165,39,160,37],[166,10,161,8,"longFormProperties"],[166,28,161,26],[166,29,161,27,"forEach"],[166,36,161,34],[166,37,161,35],[166,38,161,36,"longForm"],[166,46,161,44],[166,48,161,46,"_i"],[166,50,161,48],[166,55,161,53],[167,12,162,10],[168,12,163,10],[169,12,164,10],[169,16,164,14,"style"],[169,21,164,19],[169,22,164,20,"longForm"],[169,30,164,28],[169,31,164,29],[169,35,164,33],[169,39,164,37],[169,41,164,39],[170,14,165,12,"resolvedStyle"],[170,27,165,25],[170,28,165,26,"longForm"],[170,36,165,34],[170,37,165,35],[170,40,165,38,"value"],[170,45,165,43],[171,12,166,10],[172,10,167,8],[172,11,167,9],[172,12,167,10],[173,8,168,6],[173,9,168,7],[173,15,168,13],[174,10,169,8,"resolvedStyle"],[174,23,169,21],[174,24,169,22,"prop"],[174,28,169,26],[174,29,169,27],[174,32,169,30,"Array"],[174,37,169,35],[174,38,169,36,"isArray"],[174,45,169,43],[174,46,169,44,"value"],[174,51,169,49],[174,52,169,50],[174,55,169,53,"value"],[174,60,169,58],[174,61,169,59,"join"],[174,65,169,63],[174,66,169,64],[174,69,169,67],[174,70,169,68],[174,73,169,71,"value"],[174,78,169,76],[175,8,170,6],[176,6,171,4],[177,4,172,2],[178,4,173,2],[178,11,173,9,"resolvedStyle"],[178,24,173,22],[179,2,174,0],[179,3,174,1],[180,2,175,0],[180,6,175,4,"_default"],[180,14,175,12],[180,17,175,15,"exports"],[180,24,175,22],[180,25,175,23,"default"],[180,32,175,30],[180,35,175,33,"createReactDOMStyle"],[180,54,175,52],[181,0,175,53],[181,3]],"functionMap":{"names":["<global>","_interopRequireDefault","mapTransform","createTransformValue","createReactDOMStyle","longFormProperties.forEach$argument_0"],"mappings":"AAA;ACQ,+FD;qBE+C;CFS;6BGC;CHM;4BIM;mCCmF;SDM;CJO"},"hasCjsExports":true},"type":"js/module"}]}