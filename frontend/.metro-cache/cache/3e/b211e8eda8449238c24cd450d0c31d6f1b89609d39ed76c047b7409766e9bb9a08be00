{"dependencies":[{"name":"dom-helpers/css","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":687},"end":{"line":16,"column":37,"index":724}}],"key":"tuTGukb/T7QFxZYCGKDd5sA1MuU=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/offset","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":725},"end":{"line":17,"column":43,"index":768}}],"key":"CeDf2Vwobpnu4ZfFRBEXThpwhxo=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/position","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":769},"end":{"line":18,"column":47,"index":816}}],"key":"j0BEEbXjkXjc91+mWhvhOlUSFFM=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/scrollLeft","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":817},"end":{"line":19,"column":51,"index":868}}],"key":"twHvdiXPIpgs7jDDoQWtFEQYM+U=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/scrollTop","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":869},"end":{"line":20,"column":49,"index":918}}],"key":"xaXKm0c2uI39cpjiZbbU/cYBYvc=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/ownerDocument","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":919},"end":{"line":21,"column":54,"index":973}}],"key":"ubUfSGTTn7mpcYd/IFothVCvZWg=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/getComputedStyle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":974},"end":{"line":22,"column":60,"index":1034}}],"key":"HR8QQMGTiFCO3r1NGV18B7I+dvc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.calculatePositionInternal = calculatePositionInternal;\n  exports.calculatePosition = calculatePosition;\n  var _domHelpersCss = require(_dependencyMap[0], \"dom-helpers/css\");\n  var getCss = _interopDefault(_domHelpersCss);\n  var _domHelpersOffset = require(_dependencyMap[1], \"dom-helpers/offset\");\n  var getOffset = _interopDefault(_domHelpersOffset);\n  var _domHelpersPosition = require(_dependencyMap[2], \"dom-helpers/position\");\n  var getPosition = _interopDefault(_domHelpersPosition);\n  var _domHelpersScrollLeft = require(_dependencyMap[3], \"dom-helpers/scrollLeft\");\n  var getScrollLeft = _interopDefault(_domHelpersScrollLeft);\n  var _domHelpersScrollTop = require(_dependencyMap[4], \"dom-helpers/scrollTop\");\n  var getScrollTop = _interopDefault(_domHelpersScrollTop);\n  var _domHelpersOwnerDocument = require(_dependencyMap[5], \"dom-helpers/ownerDocument\");\n  var ownerDocument = _interopDefault(_domHelpersOwnerDocument);\n  var _domHelpersGetComputedStyle = require(_dependencyMap[6], \"dom-helpers/getComputedStyle\");\n  var getComputedStyle = _interopDefault(_domHelpersGetComputedStyle);\n  // @ts-nocheck\n  /* eslint @typescript-eslint/no-unused-vars: 2 */\n\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */\n\n  const AXIS = {\n    top: 'top',\n    bottom: 'top',\n    left: 'left',\n    right: 'left'\n  };\n  const FLIPPED_DIRECTION = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left'\n  };\n  const CROSS_AXIS = {\n    top: 'left',\n    left: 'top'\n  };\n  const AXIS_SIZE = {\n    top: 'height',\n    left: 'width'\n  };\n  const PARSED_PLACEMENT_CACHE = {};\n\n  // @ts-ignore\n  let visualViewport = typeof window !== 'undefined' && window.visualViewport;\n  function getContainerDimensions(containerNode) {\n    let width = 0,\n      height = 0,\n      top = 0,\n      left = 0;\n    let scroll = {};\n    if (containerNode.tagName === 'BODY') {\n      width = (visualViewport === null || visualViewport === void 0 ? void 0 : visualViewport.width) ?? document.documentElement.clientWidth;\n      height = (visualViewport === null || visualViewport === void 0 ? void 0 : visualViewport.height) ?? document.documentElement.clientHeight;\n      scroll.top = (0, getScrollTop.default)((0, ownerDocument.default)(containerNode).documentElement) || (0, getScrollTop.default)(containerNode);\n      scroll.left = (0, getScrollLeft.default)((0, ownerDocument.default)(containerNode).documentElement) || (0, getScrollLeft.default)(containerNode);\n    } else {\n      ({\n        width,\n        height,\n        top,\n        left\n      } = (0, getOffset.default)(containerNode));\n      scroll.top = (0, getScrollTop.default)(containerNode);\n      scroll.left = (0, getScrollLeft.default)(containerNode);\n    }\n    return {\n      width,\n      height,\n      scroll,\n      top,\n      left\n    };\n  }\n  function getScroll(node) {\n    return {\n      top: node.scrollTop,\n      left: node.scrollLeft,\n      width: node.scrollWidth,\n      height: node.scrollHeight\n    };\n  }\n  function getDelta(axis, offset, size, containerDimensions, padding) {\n    let containerScroll = containerDimensions.scroll[axis];\n    let containerHeight = containerDimensions[AXIS_SIZE[axis]];\n    let startEdgeOffset = offset - padding - containerScroll;\n    let endEdgeOffset = offset + padding - containerScroll + size;\n    if (startEdgeOffset < 0) {\n      return -startEdgeOffset;\n    } else if (endEdgeOffset > containerHeight) {\n      return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);\n    } else {\n      return 0;\n    }\n  }\n  function getMargins(node) {\n    let style = window.getComputedStyle(node);\n    return {\n      top: parseInt(style.marginTop, 10) || 0,\n      bottom: parseInt(style.marginBottom, 10) || 0,\n      left: parseInt(style.marginLeft, 10) || 0,\n      right: parseInt(style.marginRight, 10) || 0\n    };\n  }\n  function parsePlacement(input) {\n    if (PARSED_PLACEMENT_CACHE[input]) {\n      return PARSED_PLACEMENT_CACHE[input];\n    }\n    let [placement, crossPlacement] = input.split(' ');\n    let axis = AXIS[placement] || 'right';\n    let crossAxis = CROSS_AXIS[axis];\n    if (!AXIS[crossPlacement]) {\n      crossPlacement = 'center';\n    }\n    let size = AXIS_SIZE[axis];\n    let crossSize = AXIS_SIZE[crossAxis];\n    PARSED_PLACEMENT_CACHE[input] = {\n      placement,\n      crossPlacement,\n      axis,\n      crossAxis,\n      size,\n      crossSize\n    };\n    return PARSED_PLACEMENT_CACHE[input];\n  }\n  function computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned) {\n    let {\n      placement,\n      crossPlacement,\n      axis,\n      crossAxis,\n      size,\n      crossSize\n    } = placementInfo;\n    let position = {};\n\n    // button position\n    position[crossAxis] = childOffset[crossAxis];\n    if (crossPlacement === 'center') {\n      //  + (button size / 2) - (overlay size / 2)\n      // at this point the overlay center should match the button center\n      position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;\n    } else if (crossPlacement !== crossAxis) {\n      //  + (button size) - (overlay size)\n      // at this point the overlay bottom should match the button bottom\n      position[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];\n    } /* else {\n      the overlay top should match the button top\n      } */\n    // add the crossOffset from props\n    position[crossAxis] += crossOffset;\n\n    // // this is button center position - the overlay size + half of the button to align bottom of overlay with button center\n    // let minViablePosition =\n    //   childOffset[crossAxis] +\n    //   childOffset[crossSize] / 2 -\n    //   overlaySize[crossSize];\n    // // this is button position of center, aligns top of overlay with button center\n    // let maxViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2;\n\n    // // clamp it into the range of the min/max positions\n    // position[crossAxis] = Math.min(\n    //   Math.max(minViablePosition, position[crossAxis]),\n    //   maxViablePosition\n    // );\n\n    // Floor these so the position isn't placed on a partial pixel, only whole pixels. Shouldn't matter if it was floored or ceiled, so chose one.\n    if (placement === axis) {\n      // If the container is positioned (non-static), then we use the container's actual\n      // height, as `bottom` will be relative to this height.  But if the container is static,\n      // then it can only be the `document.body`, and `bottom` will be relative to _its_\n      // container, which should be as large as boundaryDimensions.\n      const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size];\n      position[FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);\n    } else {\n      position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);\n    }\n    return position;\n  }\n  function getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding) {\n    return position.top != null ?\n    // We want the distance between the top of the overlay to the bottom of the boundary\n    Math.max(0, boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top - (\n    // this is the bottom of the boundary\n    containerOffsetWithBoundary.top + position.top) - (\n    // this is the top of the overlay\n    margins.top + margins.bottom + padding) // save additional space for margin and padding\n    ) :\n    // We want the distance between the top of the trigger to the top of the boundary\n    Math.max(0, childOffset.top + containerOffsetWithBoundary.top - (\n    // this is the top of the trigger\n    boundaryDimensions.top + boundaryDimensions.scroll.top) - (\n    // this is the top of the boundary\n    margins.top + margins.bottom + padding) // save additional space for margin and padding\n    );\n  }\n  function getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding, placementInfo) {\n    let {\n      placement,\n      axis,\n      size\n    } = placementInfo;\n    if (placement === axis) {\n      return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n    }\n    return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n  }\n  function calculatePositionInternal(placementInput, childOffset, overlaySize, scrollSize, margins, padding, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, shouldOverlapWithTrigger) {\n    let placementInfo = parsePlacement(placementInput);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    let {\n      size,\n      crossAxis,\n      crossSize,\n      placement,\n      crossPlacement,\n      axis\n    } = placementInfo;\n    let position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n    let isFlipped = false;\n    let normalizedOffset = offset;\n    let space = getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, placementInfo);\n\n    // Check if the scroll size of the overlay is greater than the available space to determine if we need to flip\n    if (flip && scrollSize[size] > space) {\n      let flippedPlacementInfo = parsePlacement(`${FLIPPED_DIRECTION[placement]} ${crossPlacement}`);\n      let flippedPosition = computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n      let flippedSpace = getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, flippedPlacementInfo);\n\n      // If the available space for the flipped position is greater than the original available space, flip.\n      if (flippedSpace > space) {\n        isFlipped = true;\n        placementInfo = flippedPlacementInfo;\n        position = flippedPosition;\n        normalizedOffset = offset;\n      } else {\n        isFlipped = false;\n      }\n    } else {\n      isFlipped = false;\n    }\n    let delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n    position[crossAxis] += delta;\n    let maxHeight = getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding);\n    overlaySize.height = Math.min(overlaySize.height, maxHeight);\n    position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n    delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n    position[crossAxis] += delta;\n    let arrowPosition = {};\n    arrowPosition[crossAxis] = childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2;\n    if (shouldOverlapWithTrigger) {\n      position[FLIPPED_DIRECTION[placementInfo.placement]] = position[FLIPPED_DIRECTION[placementInfo.placement]] - childOffset[size];\n    }\n    return {\n      position,\n      maxHeight: maxHeight,\n      arrowOffsetLeft: arrowPosition.left,\n      arrowOffsetTop: arrowPosition.top,\n      placement: placementInfo.placement,\n      isFlipped\n    };\n  }\n\n  /**\n   * Determines where to place the overlay with regards to the target and the position of an optional indicator.\n   */\n  function calculatePosition(opts) {\n    let {\n      placement,\n      targetNode,\n      overlayNode,\n      scrollNode,\n      padding,\n      shouldFlip,\n      boundaryElement,\n      offset,\n      crossOffset,\n      shouldOverlapWithTrigger\n    } = opts;\n    let container = overlayNode.offsetParent || document.body;\n    let isBodyContainer = container.tagName === 'BODY';\n    const containerPositionStyle = window.getComputedStyle(container).position;\n    let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== 'static';\n    let childOffset = isBodyContainer ? (0, getOffset.default)(targetNode) : (0, getPosition.default)(targetNode, container);\n    if (!isBodyContainer) {\n      childOffset.top += parseInt((0, getCss.default)(targetNode, 'marginTop'), 10) || 0;\n      childOffset.left += parseInt((0, getCss.default)(targetNode, 'marginLeft'), 10) || 0;\n    }\n    let overlaySize = (0, getOffset.default)(overlayNode);\n    const matrix = (0, getComputedStyle.default)(overlayNode).getPropertyValue('transform');\n    const transform = matrix;\n    const regex = /matrix\\((-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+)\\)/;\n    const matches = transform.match(regex);\n    let scaleX = 1;\n    let scaleY = 1;\n    if (matches) {\n      scaleX = parseFloat(matches[1]);\n      scaleY = parseFloat(matches[4]);\n      if (!scaleX || !Number.isFinite(scaleX)) {\n        scaleX = 1;\n      }\n      if (!scaleY || !Number.isFinite(scaleY)) {\n        scaleY = 1;\n      }\n    }\n    let margins = getMargins(overlayNode);\n    overlaySize.width += margins.left + margins.right;\n    overlaySize.height += margins.top + margins.bottom;\n    if (scaleX) {\n      overlaySize.width = overlaySize.width / scaleX;\n    }\n    if (scaleY) {\n      overlaySize.height = overlaySize.height / scaleY;\n    }\n    let scrollSize = getScroll(scrollNode);\n    let boundaryDimensions = getContainerDimensions(boundaryElement);\n    let containerOffsetWithBoundary = boundaryElement.tagName === 'BODY' ? (0, getOffset.default)(container) : (0, getPosition.default)(container, boundaryElement);\n    return calculatePositionInternal(placement, childOffset, overlaySize, scrollSize, margins, padding, shouldFlip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, shouldOverlapWithTrigger);\n  }\n});","lineCount":342,"map":[[12,2,210,0,"exports"],[12,9,210,0],[12,10,210,0,"calculatePositionInternal"],[12,35,210,0],[12,38,210,0,"calculatePositionInternal"],[12,63,210,0],[13,2,269,0,"exports"],[13,9,269,0],[13,10,269,0,"calculatePosition"],[13,27,269,0],[13,30,269,0,"calculatePosition"],[13,47,269,0],[14,2,16,0],[14,6,16,0,"_domHelpersCss"],[14,20,16,0],[14,23,16,0,"require"],[14,30,16,0],[14,31,16,0,"_dependencyMap"],[14,45,16,0],[15,2,16,0],[15,6,16,0,"getCss"],[15,12,16,0],[15,15,16,0,"_interopDefault"],[15,30,16,0],[15,31,16,0,"_domHelpersCss"],[15,45,16,0],[16,2,17,0],[16,6,17,0,"_domHelpersOffset"],[16,23,17,0],[16,26,17,0,"require"],[16,33,17,0],[16,34,17,0,"_dependencyMap"],[16,48,17,0],[17,2,17,0],[17,6,17,0,"getOffset"],[17,15,17,0],[17,18,17,0,"_interopDefault"],[17,33,17,0],[17,34,17,0,"_domHelpersOffset"],[17,51,17,0],[18,2,18,0],[18,6,18,0,"_domHelpersPosition"],[18,25,18,0],[18,28,18,0,"require"],[18,35,18,0],[18,36,18,0,"_dependencyMap"],[18,50,18,0],[19,2,18,0],[19,6,18,0,"getPosition"],[19,17,18,0],[19,20,18,0,"_interopDefault"],[19,35,18,0],[19,36,18,0,"_domHelpersPosition"],[19,55,18,0],[20,2,19,0],[20,6,19,0,"_domHelpersScrollLeft"],[20,27,19,0],[20,30,19,0,"require"],[20,37,19,0],[20,38,19,0,"_dependencyMap"],[20,52,19,0],[21,2,19,0],[21,6,19,0,"getScrollLeft"],[21,19,19,0],[21,22,19,0,"_interopDefault"],[21,37,19,0],[21,38,19,0,"_domHelpersScrollLeft"],[21,59,19,0],[22,2,20,0],[22,6,20,0,"_domHelpersScrollTop"],[22,26,20,0],[22,29,20,0,"require"],[22,36,20,0],[22,37,20,0,"_dependencyMap"],[22,51,20,0],[23,2,20,0],[23,6,20,0,"getScrollTop"],[23,18,20,0],[23,21,20,0,"_interopDefault"],[23,36,20,0],[23,37,20,0,"_domHelpersScrollTop"],[23,57,20,0],[24,2,21,0],[24,6,21,0,"_domHelpersOwnerDocument"],[24,30,21,0],[24,33,21,0,"require"],[24,40,21,0],[24,41,21,0,"_dependencyMap"],[24,55,21,0],[25,2,21,0],[25,6,21,0,"ownerDocument"],[25,19,21,0],[25,22,21,0,"_interopDefault"],[25,37,21,0],[25,38,21,0,"_domHelpersOwnerDocument"],[25,62,21,0],[26,2,22,0],[26,6,22,0,"_domHelpersGetComputedStyle"],[26,33,22,0],[26,36,22,0,"require"],[26,43,22,0],[26,44,22,0,"_dependencyMap"],[26,58,22,0],[27,2,22,0],[27,6,22,0,"getComputedStyle"],[27,22,22,0],[27,25,22,0,"_interopDefault"],[27,40,22,0],[27,41,22,0,"_domHelpersGetComputedStyle"],[27,68,22,0],[28,2,1,0],[29,2,2,0],[31,2,4,0],[32,0,5,0],[33,0,6,0],[34,0,7,0],[35,0,8,0],[36,0,9,0],[37,0,10,0],[38,0,11,0],[39,0,12,0],[40,0,13,0],[41,0,14,0],[43,2,23,0],[43,8,23,6,"AXIS"],[43,12,23,10],[43,15,23,13],[44,4,24,2,"top"],[44,7,24,5],[44,9,24,7],[44,14,24,12],[45,4,25,2,"bottom"],[45,10,25,8],[45,12,25,10],[45,17,25,15],[46,4,26,2,"left"],[46,8,26,6],[46,10,26,8],[46,16,26,14],[47,4,27,2,"right"],[47,9,27,7],[47,11,27,9],[48,2,28,0],[48,3,28,1],[49,2,29,0],[49,8,29,6,"FLIPPED_DIRECTION"],[49,25,29,23],[49,28,29,26],[50,4,30,2,"top"],[50,7,30,5],[50,9,30,7],[50,17,30,15],[51,4,31,2,"bottom"],[51,10,31,8],[51,12,31,10],[51,17,31,15],[52,4,32,2,"left"],[52,8,32,6],[52,10,32,8],[52,17,32,15],[53,4,33,2,"right"],[53,9,33,7],[53,11,33,9],[54,2,34,0],[54,3,34,1],[55,2,35,0],[55,8,35,6,"CROSS_AXIS"],[55,18,35,16],[55,21,35,19],[56,4,36,2,"top"],[56,7,36,5],[56,9,36,7],[56,15,36,13],[57,4,37,2,"left"],[57,8,37,6],[57,10,37,8],[58,2,38,0],[58,3,38,1],[59,2,39,0],[59,8,39,6,"AXIS_SIZE"],[59,17,39,15],[59,20,39,18],[60,4,40,2,"top"],[60,7,40,5],[60,9,40,7],[60,17,40,15],[61,4,41,2,"left"],[61,8,41,6],[61,10,41,8],[62,2,42,0],[62,3,42,1],[63,2,43,0],[63,8,43,6,"PARSED_PLACEMENT_CACHE"],[63,30,43,28],[63,33,43,31],[63,34,43,32],[63,35,43,33],[65,2,45,0],[66,2,46,0],[66,6,46,4,"visualViewport"],[66,20,46,18],[66,23,46,21],[66,30,46,28,"window"],[66,36,46,34],[66,41,46,39],[66,52,46,50],[66,56,46,54,"window"],[66,62,46,60],[66,63,46,61,"visualViewport"],[66,77,46,75],[67,2,47,0],[67,11,47,9,"getContainerDimensions"],[67,33,47,31,"getContainerDimensions"],[67,34,47,32,"containerNode"],[67,47,47,45],[67,49,47,47],[68,4,48,2],[68,8,48,6,"width"],[68,13,48,11],[68,16,48,14],[68,17,48,15],[69,6,49,4,"height"],[69,12,49,10],[69,15,49,13],[69,16,49,14],[70,6,50,4,"top"],[70,9,50,7],[70,12,50,10],[70,13,50,11],[71,6,51,4,"left"],[71,10,51,8],[71,13,51,11],[71,14,51,12],[72,4,52,2],[72,8,52,6,"scroll"],[72,14,52,12],[72,17,52,15],[72,18,52,16],[72,19,52,17],[73,4,53,2],[73,8,53,6,"containerNode"],[73,21,53,19],[73,22,53,20,"tagName"],[73,29,53,27],[73,34,53,32],[73,40,53,38],[73,42,53,40],[74,6,54,4,"width"],[74,11,54,9],[74,14,54,12],[74,15,54,13,"visualViewport"],[74,29,54,27],[74,34,54,32],[74,38,54,36],[74,42,54,40,"visualViewport"],[74,56,54,54],[74,61,54,59],[74,66,54,64],[74,67,54,65],[74,70,54,68],[74,75,54,73],[74,76,54,74],[74,79,54,77,"visualViewport"],[74,93,54,91],[74,94,54,92,"width"],[74,99,54,97],[74,104,54,102,"document"],[74,112,54,110],[74,113,54,111,"documentElement"],[74,128,54,126],[74,129,54,127,"clientWidth"],[74,140,54,138],[75,6,55,4,"height"],[75,12,55,10],[75,15,55,13],[75,16,55,14,"visualViewport"],[75,30,55,28],[75,35,55,33],[75,39,55,37],[75,43,55,41,"visualViewport"],[75,57,55,55],[75,62,55,60],[75,67,55,65],[75,68,55,66],[75,71,55,69],[75,76,55,74],[75,77,55,75],[75,80,55,78,"visualViewport"],[75,94,55,92],[75,95,55,93,"height"],[75,101,55,99],[75,106,55,104,"document"],[75,114,55,112],[75,115,55,113,"documentElement"],[75,130,55,128],[75,131,55,129,"clientHeight"],[75,143,55,141],[76,6,56,4,"scroll"],[76,12,56,10],[76,13,56,11,"top"],[76,16,56,14],[76,19,56,17],[76,23,56,17,"getScrollTop"],[76,35,56,29],[76,36,56,29,"default"],[76,43,56,29],[76,45,56,30],[76,49,56,30,"ownerDocument"],[76,62,56,43],[76,63,56,43,"default"],[76,70,56,43],[76,72,56,44,"containerNode"],[76,85,56,57],[76,86,56,58],[76,87,56,59,"documentElement"],[76,102,56,74],[76,103,56,75],[76,107,56,79],[76,111,56,79,"getScrollTop"],[76,123,56,91],[76,124,56,91,"default"],[76,131,56,91],[76,133,56,92,"containerNode"],[76,146,56,105],[76,147,56,106],[77,6,57,4,"scroll"],[77,12,57,10],[77,13,57,11,"left"],[77,17,57,15],[77,20,57,18],[77,24,57,18,"getScrollLeft"],[77,37,57,31],[77,38,57,31,"default"],[77,45,57,31],[77,47,57,32],[77,51,57,32,"ownerDocument"],[77,64,57,45],[77,65,57,45,"default"],[77,72,57,45],[77,74,57,46,"containerNode"],[77,87,57,59],[77,88,57,60],[77,89,57,61,"documentElement"],[77,104,57,76],[77,105,57,77],[77,109,57,81],[77,113,57,81,"getScrollLeft"],[77,126,57,94],[77,127,57,94,"default"],[77,134,57,94],[77,136,57,95,"containerNode"],[77,149,57,108],[77,150,57,109],[78,4,58,2],[78,5,58,3],[78,11,58,9],[79,6,59,4],[79,7,59,5],[80,8,60,6,"width"],[80,13,60,11],[81,8,61,6,"height"],[81,14,61,12],[82,8,62,6,"top"],[82,11,62,9],[83,8,63,6,"left"],[84,6,64,4],[84,7,64,5],[84,10,64,8],[84,14,64,8,"getOffset"],[84,23,64,17],[84,24,64,17,"default"],[84,31,64,17],[84,33,64,18,"containerNode"],[84,46,64,31],[84,47,64,32],[85,6,65,4,"scroll"],[85,12,65,10],[85,13,65,11,"top"],[85,16,65,14],[85,19,65,17],[85,23,65,17,"getScrollTop"],[85,35,65,29],[85,36,65,29,"default"],[85,43,65,29],[85,45,65,30,"containerNode"],[85,58,65,43],[85,59,65,44],[86,6,66,4,"scroll"],[86,12,66,10],[86,13,66,11,"left"],[86,17,66,15],[86,20,66,18],[86,24,66,18,"getScrollLeft"],[86,37,66,31],[86,38,66,31,"default"],[86,45,66,31],[86,47,66,32,"containerNode"],[86,60,66,45],[86,61,66,46],[87,4,67,2],[88,4,68,2],[88,11,68,9],[89,6,69,4,"width"],[89,11,69,9],[90,6,70,4,"height"],[90,12,70,10],[91,6,71,4,"scroll"],[91,12,71,10],[92,6,72,4,"top"],[92,9,72,7],[93,6,73,4,"left"],[94,4,74,2],[94,5,74,3],[95,2,75,0],[96,2,76,0],[96,11,76,9,"getScroll"],[96,20,76,18,"getScroll"],[96,21,76,19,"node"],[96,25,76,23],[96,27,76,25],[97,4,77,2],[97,11,77,9],[98,6,78,4,"top"],[98,9,78,7],[98,11,78,9,"node"],[98,15,78,13],[98,16,78,14,"scrollTop"],[98,25,78,23],[99,6,79,4,"left"],[99,10,79,8],[99,12,79,10,"node"],[99,16,79,14],[99,17,79,15,"scrollLeft"],[99,27,79,25],[100,6,80,4,"width"],[100,11,80,9],[100,13,80,11,"node"],[100,17,80,15],[100,18,80,16,"scrollWidth"],[100,29,80,27],[101,6,81,4,"height"],[101,12,81,10],[101,14,81,12,"node"],[101,18,81,16],[101,19,81,17,"scrollHeight"],[102,4,82,2],[102,5,82,3],[103,2,83,0],[104,2,84,0],[104,11,84,9,"getDelta"],[104,19,84,17,"getDelta"],[104,20,84,18,"axis"],[104,24,84,22],[104,26,84,24,"offset"],[104,32,84,30],[104,34,84,32,"size"],[104,38,84,36],[104,40,84,38,"containerDimensions"],[104,59,84,57],[104,61,84,59,"padding"],[104,68,84,66],[104,70,84,68],[105,4,85,2],[105,8,85,6,"containerScroll"],[105,23,85,21],[105,26,85,24,"containerDimensions"],[105,45,85,43],[105,46,85,44,"scroll"],[105,52,85,50],[105,53,85,51,"axis"],[105,57,85,55],[105,58,85,56],[106,4,86,2],[106,8,86,6,"containerHeight"],[106,23,86,21],[106,26,86,24,"containerDimensions"],[106,45,86,43],[106,46,86,44,"AXIS_SIZE"],[106,55,86,53],[106,56,86,54,"axis"],[106,60,86,58],[106,61,86,59],[106,62,86,60],[107,4,87,2],[107,8,87,6,"startEdgeOffset"],[107,23,87,21],[107,26,87,24,"offset"],[107,32,87,30],[107,35,87,33,"padding"],[107,42,87,40],[107,45,87,43,"containerScroll"],[107,60,87,58],[108,4,88,2],[108,8,88,6,"endEdgeOffset"],[108,21,88,19],[108,24,88,22,"offset"],[108,30,88,28],[108,33,88,31,"padding"],[108,40,88,38],[108,43,88,41,"containerScroll"],[108,58,88,56],[108,61,88,59,"size"],[108,65,88,63],[109,4,89,2],[109,8,89,6,"startEdgeOffset"],[109,23,89,21],[109,26,89,24],[109,27,89,25],[109,29,89,27],[110,6,90,4],[110,13,90,11],[110,14,90,12,"startEdgeOffset"],[110,29,90,27],[111,4,91,2],[111,5,91,3],[111,11,91,9],[111,15,91,13,"endEdgeOffset"],[111,28,91,26],[111,31,91,29,"containerHeight"],[111,46,91,44],[111,48,91,46],[112,6,92,4],[112,13,92,11,"Math"],[112,17,92,15],[112,18,92,16,"max"],[112,21,92,19],[112,22,92,20,"containerHeight"],[112,37,92,35],[112,40,92,38,"endEdgeOffset"],[112,53,92,51],[112,55,92,53],[112,56,92,54,"startEdgeOffset"],[112,71,92,69],[112,72,92,70],[113,4,93,2],[113,5,93,3],[113,11,93,9],[114,6,94,4],[114,13,94,11],[114,14,94,12],[115,4,95,2],[116,2,96,0],[117,2,97,0],[117,11,97,9,"getMargins"],[117,21,97,19,"getMargins"],[117,22,97,20,"node"],[117,26,97,24],[117,28,97,26],[118,4,98,2],[118,8,98,6,"style"],[118,13,98,11],[118,16,98,14,"window"],[118,22,98,20],[118,23,98,21,"getComputedStyle"],[118,39,98,37],[118,40,98,38,"node"],[118,44,98,42],[118,45,98,43],[119,4,99,2],[119,11,99,9],[120,6,100,4,"top"],[120,9,100,7],[120,11,100,9,"parseInt"],[120,19,100,17],[120,20,100,18,"style"],[120,25,100,23],[120,26,100,24,"marginTop"],[120,35,100,33],[120,37,100,35],[120,39,100,37],[120,40,100,38],[120,44,100,42],[120,45,100,43],[121,6,101,4,"bottom"],[121,12,101,10],[121,14,101,12,"parseInt"],[121,22,101,20],[121,23,101,21,"style"],[121,28,101,26],[121,29,101,27,"marginBottom"],[121,41,101,39],[121,43,101,41],[121,45,101,43],[121,46,101,44],[121,50,101,48],[121,51,101,49],[122,6,102,4,"left"],[122,10,102,8],[122,12,102,10,"parseInt"],[122,20,102,18],[122,21,102,19,"style"],[122,26,102,24],[122,27,102,25,"marginLeft"],[122,37,102,35],[122,39,102,37],[122,41,102,39],[122,42,102,40],[122,46,102,44],[122,47,102,45],[123,6,103,4,"right"],[123,11,103,9],[123,13,103,11,"parseInt"],[123,21,103,19],[123,22,103,20,"style"],[123,27,103,25],[123,28,103,26,"marginRight"],[123,39,103,37],[123,41,103,39],[123,43,103,41],[123,44,103,42],[123,48,103,46],[124,4,104,2],[124,5,104,3],[125,2,105,0],[126,2,106,0],[126,11,106,9,"parsePlacement"],[126,25,106,23,"parsePlacement"],[126,26,106,24,"input"],[126,31,106,29],[126,33,106,31],[127,4,107,2],[127,8,107,6,"PARSED_PLACEMENT_CACHE"],[127,30,107,28],[127,31,107,29,"input"],[127,36,107,34],[127,37,107,35],[127,39,107,37],[128,6,108,4],[128,13,108,11,"PARSED_PLACEMENT_CACHE"],[128,35,108,33],[128,36,108,34,"input"],[128,41,108,39],[128,42,108,40],[129,4,109,2],[130,4,110,2],[130,8,110,6],[130,9,110,7,"placement"],[130,18,110,16],[130,20,110,18,"crossPlacement"],[130,34,110,32],[130,35,110,33],[130,38,110,36,"input"],[130,43,110,41],[130,44,110,42,"split"],[130,49,110,47],[130,50,110,48],[130,53,110,51],[130,54,110,52],[131,4,111,2],[131,8,111,6,"axis"],[131,12,111,10],[131,15,111,13,"AXIS"],[131,19,111,17],[131,20,111,18,"placement"],[131,29,111,27],[131,30,111,28],[131,34,111,32],[131,41,111,39],[132,4,112,2],[132,8,112,6,"crossAxis"],[132,17,112,15],[132,20,112,18,"CROSS_AXIS"],[132,30,112,28],[132,31,112,29,"axis"],[132,35,112,33],[132,36,112,34],[133,4,113,2],[133,8,113,6],[133,9,113,7,"AXIS"],[133,13,113,11],[133,14,113,12,"crossPlacement"],[133,28,113,26],[133,29,113,27],[133,31,113,29],[134,6,114,4,"crossPlacement"],[134,20,114,18],[134,23,114,21],[134,31,114,29],[135,4,115,2],[136,4,116,2],[136,8,116,6,"size"],[136,12,116,10],[136,15,116,13,"AXIS_SIZE"],[136,24,116,22],[136,25,116,23,"axis"],[136,29,116,27],[136,30,116,28],[137,4,117,2],[137,8,117,6,"crossSize"],[137,17,117,15],[137,20,117,18,"AXIS_SIZE"],[137,29,117,27],[137,30,117,28,"crossAxis"],[137,39,117,37],[137,40,117,38],[138,4,118,2,"PARSED_PLACEMENT_CACHE"],[138,26,118,24],[138,27,118,25,"input"],[138,32,118,30],[138,33,118,31],[138,36,118,34],[139,6,119,4,"placement"],[139,15,119,13],[140,6,120,4,"crossPlacement"],[140,20,120,18],[141,6,121,4,"axis"],[141,10,121,8],[142,6,122,4,"crossAxis"],[142,15,122,13],[143,6,123,4,"size"],[143,10,123,8],[144,6,124,4,"crossSize"],[145,4,125,2],[145,5,125,3],[146,4,126,2],[146,11,126,9,"PARSED_PLACEMENT_CACHE"],[146,33,126,31],[146,34,126,32,"input"],[146,39,126,37],[146,40,126,38],[147,2,127,0],[148,2,128,0],[148,11,128,9,"computePosition"],[148,26,128,24,"computePosition"],[148,27,128,25,"childOffset"],[148,38,128,36],[148,40,128,38,"boundaryDimensions"],[148,58,128,56],[148,60,128,58,"overlaySize"],[148,71,128,69],[148,73,128,71,"placementInfo"],[148,86,128,84],[148,88,128,86,"offset"],[148,94,128,92],[148,96,128,94,"crossOffset"],[148,107,128,105],[148,109,128,107,"containerOffsetWithBoundary"],[148,136,128,134],[148,138,128,136,"isContainerPositioned"],[148,159,128,157],[148,161,128,159],[149,4,129,2],[149,8,129,6],[150,6,130,4,"placement"],[150,15,130,13],[151,6,131,4,"crossPlacement"],[151,20,131,18],[152,6,132,4,"axis"],[152,10,132,8],[153,6,133,4,"crossAxis"],[153,15,133,13],[154,6,134,4,"size"],[154,10,134,8],[155,6,135,4,"crossSize"],[156,4,136,2],[156,5,136,3],[156,8,136,6,"placementInfo"],[156,21,136,19],[157,4,137,2],[157,8,137,6,"position"],[157,16,137,14],[157,19,137,17],[157,20,137,18],[157,21,137,19],[159,4,139,2],[160,4,140,2,"position"],[160,12,140,10],[160,13,140,11,"crossAxis"],[160,22,140,20],[160,23,140,21],[160,26,140,24,"childOffset"],[160,37,140,35],[160,38,140,36,"crossAxis"],[160,47,140,45],[160,48,140,46],[161,4,141,2],[161,8,141,6,"crossPlacement"],[161,22,141,20],[161,27,141,25],[161,35,141,33],[161,37,141,35],[162,6,142,4],[163,6,143,4],[164,6,144,4,"position"],[164,14,144,12],[164,15,144,13,"crossAxis"],[164,24,144,22],[164,25,144,23],[164,29,144,27],[164,30,144,28,"childOffset"],[164,41,144,39],[164,42,144,40,"crossSize"],[164,51,144,49],[164,52,144,50],[164,55,144,53,"overlaySize"],[164,66,144,64],[164,67,144,65,"crossSize"],[164,76,144,74],[164,77,144,75],[164,81,144,79],[164,82,144,80],[165,4,145,2],[165,5,145,3],[165,11,145,9],[165,15,145,13,"crossPlacement"],[165,29,145,27],[165,34,145,32,"crossAxis"],[165,43,145,41],[165,45,145,43],[166,6,146,4],[167,6,147,4],[168,6,148,4,"position"],[168,14,148,12],[168,15,148,13,"crossAxis"],[168,24,148,22],[168,25,148,23],[168,29,148,27,"childOffset"],[168,40,148,38],[168,41,148,39,"crossSize"],[168,50,148,48],[168,51,148,49],[168,54,148,52,"overlaySize"],[168,65,148,63],[168,66,148,64,"crossSize"],[168,75,148,73],[168,76,148,74],[169,4,149,2],[169,5,149,3],[169,6,149,4],[170,0,150,0],[171,0,151,0],[172,4,152,2],[173,4,153,2,"position"],[173,12,153,10],[173,13,153,11,"crossAxis"],[173,22,153,20],[173,23,153,21],[173,27,153,25,"crossOffset"],[173,38,153,36],[175,4,155,2],[176,4,156,2],[177,4,157,2],[178,4,158,2],[179,4,159,2],[180,4,160,2],[181,4,161,2],[183,4,163,2],[184,4,164,2],[185,4,165,2],[186,4,166,2],[187,4,167,2],[189,4,169,2],[190,4,170,2],[190,8,170,6,"placement"],[190,17,170,15],[190,22,170,20,"axis"],[190,26,170,24],[190,28,170,26],[191,6,171,4],[192,6,172,4],[193,6,173,4],[194,6,174,4],[195,6,175,4],[195,12,175,10,"containerHeight"],[195,27,175,25],[195,30,175,28,"isContainerPositioned"],[195,51,175,49],[195,54,175,52,"containerOffsetWithBoundary"],[195,81,175,79],[195,82,175,80,"size"],[195,86,175,84],[195,87,175,85],[195,90,175,88,"boundaryDimensions"],[195,108,175,106],[195,109,175,107,"size"],[195,113,175,111],[195,114,175,112],[196,6,176,4,"position"],[196,14,176,12],[196,15,176,13,"FLIPPED_DIRECTION"],[196,32,176,30],[196,33,176,31,"axis"],[196,37,176,35],[196,38,176,36],[196,39,176,37],[196,42,176,40,"Math"],[196,46,176,44],[196,47,176,45,"floor"],[196,52,176,50],[196,53,176,51,"containerHeight"],[196,68,176,66],[196,71,176,69,"childOffset"],[196,82,176,80],[196,83,176,81,"axis"],[196,87,176,85],[196,88,176,86],[196,91,176,89,"offset"],[196,97,176,95],[196,98,176,96],[197,4,177,2],[197,5,177,3],[197,11,177,9],[198,6,178,4,"position"],[198,14,178,12],[198,15,178,13,"axis"],[198,19,178,17],[198,20,178,18],[198,23,178,21,"Math"],[198,27,178,25],[198,28,178,26,"floor"],[198,33,178,31],[198,34,178,32,"childOffset"],[198,45,178,43],[198,46,178,44,"axis"],[198,50,178,48],[198,51,178,49],[198,54,178,52,"childOffset"],[198,65,178,63],[198,66,178,64,"size"],[198,70,178,68],[198,71,178,69],[198,74,178,72,"offset"],[198,80,178,78],[198,81,178,79],[199,4,179,2],[200,4,180,2],[200,11,180,9,"position"],[200,19,180,17],[201,2,181,0],[202,2,182,0],[202,11,182,9,"getMaxHeight"],[202,23,182,21,"getMaxHeight"],[202,24,182,22,"position"],[202,32,182,30],[202,34,182,32,"boundaryDimensions"],[202,52,182,50],[202,54,182,52,"containerOffsetWithBoundary"],[202,81,182,79],[202,83,182,81,"childOffset"],[202,94,182,92],[202,96,182,94,"margins"],[202,103,182,101],[202,105,182,103,"padding"],[202,112,182,110],[202,114,182,112],[203,4,183,2],[203,11,183,9,"position"],[203,19,183,17],[203,20,183,18,"top"],[203,23,183,21],[203,27,183,25],[203,31,183,29],[204,4,184,2],[205,4,185,2,"Math"],[205,8,185,6],[205,9,185,7,"max"],[205,12,185,10],[205,13,185,11],[205,14,185,12],[205,16,185,14,"boundaryDimensions"],[205,34,185,32],[205,35,185,33,"height"],[205,41,185,39],[205,44,185,42,"boundaryDimensions"],[205,62,185,60],[205,63,185,61,"top"],[205,66,185,64],[205,69,185,67,"boundaryDimensions"],[205,87,185,85],[205,88,185,86,"scroll"],[205,94,185,92],[205,95,185,93,"top"],[205,98,185,96],[206,4,186,2],[207,4,187,2,"containerOffsetWithBoundary"],[207,31,187,29],[207,32,187,30,"top"],[207,35,187,33],[207,38,187,36,"position"],[207,46,187,44],[207,47,187,45,"top"],[207,50,187,48],[207,51,187,49],[208,4,188,2],[209,4,189,2,"margins"],[209,11,189,9],[209,12,189,10,"top"],[209,15,189,13],[209,18,189,16,"margins"],[209,25,189,23],[209,26,189,24,"bottom"],[209,32,189,30],[209,35,189,33,"padding"],[209,42,189,40],[209,43,189,41],[209,44,189,42],[210,4,190,2],[210,5,190,3],[211,4,191,2],[212,4,192,2,"Math"],[212,8,192,6],[212,9,192,7,"max"],[212,12,192,10],[212,13,192,11],[212,14,192,12],[212,16,192,14,"childOffset"],[212,27,192,25],[212,28,192,26,"top"],[212,31,192,29],[212,34,192,32,"containerOffsetWithBoundary"],[212,61,192,59],[212,62,192,60,"top"],[212,65,192,63],[213,4,193,2],[214,4,194,2,"boundaryDimensions"],[214,22,194,20],[214,23,194,21,"top"],[214,26,194,24],[214,29,194,27,"boundaryDimensions"],[214,47,194,45],[214,48,194,46,"scroll"],[214,54,194,52],[214,55,194,53,"top"],[214,58,194,56],[214,59,194,57],[215,4,195,2],[216,4,196,2,"margins"],[216,11,196,9],[216,12,196,10,"top"],[216,15,196,13],[216,18,196,16,"margins"],[216,25,196,23],[216,26,196,24,"bottom"],[216,32,196,30],[216,35,196,33,"padding"],[216,42,196,40],[216,43,196,41],[216,44,196,42],[217,4,197,2],[217,5,197,3],[218,2,198,0],[219,2,199,0],[219,11,199,9,"getAvailableSpace"],[219,28,199,26,"getAvailableSpace"],[219,29,199,27,"boundaryDimensions"],[219,47,199,45],[219,49,199,47,"containerOffsetWithBoundary"],[219,76,199,74],[219,78,199,76,"childOffset"],[219,89,199,87],[219,91,199,89,"margins"],[219,98,199,96],[219,100,199,98,"padding"],[219,107,199,105],[219,109,199,107,"placementInfo"],[219,122,199,120],[219,124,199,122],[220,4,200,2],[220,8,200,6],[221,6,201,4,"placement"],[221,15,201,13],[222,6,202,4,"axis"],[222,10,202,8],[223,6,203,4,"size"],[224,4,204,2],[224,5,204,3],[224,8,204,6,"placementInfo"],[224,21,204,19],[225,4,205,2],[225,8,205,6,"placement"],[225,17,205,15],[225,22,205,20,"axis"],[225,26,205,24],[225,28,205,26],[226,6,206,4],[226,13,206,11,"Math"],[226,17,206,15],[226,18,206,16,"max"],[226,21,206,19],[226,22,206,20],[226,23,206,21],[226,25,206,23,"childOffset"],[226,36,206,34],[226,37,206,35,"axis"],[226,41,206,39],[226,42,206,40],[226,45,206,43,"boundaryDimensions"],[226,63,206,61],[226,64,206,62,"axis"],[226,68,206,66],[226,69,206,67],[226,72,206,70,"boundaryDimensions"],[226,90,206,88],[226,91,206,89,"scroll"],[226,97,206,95],[226,98,206,96,"axis"],[226,102,206,100],[226,103,206,101],[226,106,206,104,"containerOffsetWithBoundary"],[226,133,206,131],[226,134,206,132,"axis"],[226,138,206,136],[226,139,206,137],[226,142,206,140,"margins"],[226,149,206,147],[226,150,206,148,"axis"],[226,154,206,152],[226,155,206,153],[226,158,206,156,"margins"],[226,165,206,163],[226,166,206,164,"FLIPPED_DIRECTION"],[226,183,206,181],[226,184,206,182,"axis"],[226,188,206,186],[226,189,206,187],[226,190,206,188],[226,193,206,191,"padding"],[226,200,206,198],[226,201,206,199],[227,4,207,2],[228,4,208,2],[228,11,208,9,"Math"],[228,15,208,13],[228,16,208,14,"max"],[228,19,208,17],[228,20,208,18],[228,21,208,19],[228,23,208,21,"boundaryDimensions"],[228,41,208,39],[228,42,208,40,"size"],[228,46,208,44],[228,47,208,45],[228,50,208,48,"boundaryDimensions"],[228,68,208,66],[228,69,208,67,"axis"],[228,73,208,71],[228,74,208,72],[228,77,208,75,"boundaryDimensions"],[228,95,208,93],[228,96,208,94,"scroll"],[228,102,208,100],[228,103,208,101,"axis"],[228,107,208,105],[228,108,208,106],[228,111,208,109,"containerOffsetWithBoundary"],[228,138,208,136],[228,139,208,137,"axis"],[228,143,208,141],[228,144,208,142],[228,147,208,145,"childOffset"],[228,158,208,156],[228,159,208,157,"axis"],[228,163,208,161],[228,164,208,162],[228,167,208,165,"childOffset"],[228,178,208,176],[228,179,208,177,"size"],[228,183,208,181],[228,184,208,182],[228,187,208,185,"margins"],[228,194,208,192],[228,195,208,193,"axis"],[228,199,208,197],[228,200,208,198],[228,203,208,201,"margins"],[228,210,208,208],[228,211,208,209,"FLIPPED_DIRECTION"],[228,228,208,226],[228,229,208,227,"axis"],[228,233,208,231],[228,234,208,232],[228,235,208,233],[228,238,208,236,"padding"],[228,245,208,243],[228,246,208,244],[229,2,209,0],[230,2,210,7],[230,11,210,16,"calculatePositionInternal"],[230,36,210,41,"calculatePositionInternal"],[230,37,210,42,"placementInput"],[230,51,210,56],[230,53,210,58,"childOffset"],[230,64,210,69],[230,66,210,71,"overlaySize"],[230,77,210,82],[230,79,210,84,"scrollSize"],[230,89,210,94],[230,91,210,96,"margins"],[230,98,210,103],[230,100,210,105,"padding"],[230,107,210,112],[230,109,210,114,"flip"],[230,113,210,118],[230,115,210,120,"boundaryDimensions"],[230,133,210,138],[230,135,210,140,"containerOffsetWithBoundary"],[230,162,210,167],[230,164,210,169,"offset"],[230,170,210,175],[230,172,210,177,"crossOffset"],[230,183,210,188],[230,185,210,190,"isContainerPositioned"],[230,206,210,211],[230,208,210,213,"shouldOverlapWithTrigger"],[230,232,210,237],[230,234,210,239],[231,4,211,2],[231,8,211,6,"placementInfo"],[231,21,211,19],[231,24,211,22,"parsePlacement"],[231,38,211,36],[231,39,211,37,"placementInput"],[231,53,211,51],[231,54,211,52],[232,4,212,2],[233,4,213,2],[233,8,213,6],[234,6,214,4,"size"],[234,10,214,8],[235,6,215,4,"crossAxis"],[235,15,215,13],[236,6,216,4,"crossSize"],[236,15,216,13],[237,6,217,4,"placement"],[237,15,217,13],[238,6,218,4,"crossPlacement"],[238,20,218,18],[239,6,219,4,"axis"],[240,4,220,2],[240,5,220,3],[240,8,220,6,"placementInfo"],[240,21,220,19],[241,4,221,2],[241,8,221,6,"position"],[241,16,221,14],[241,19,221,17,"computePosition"],[241,34,221,32],[241,35,221,33,"childOffset"],[241,46,221,44],[241,48,221,46,"boundaryDimensions"],[241,66,221,64],[241,68,221,66,"overlaySize"],[241,79,221,77],[241,81,221,79,"placementInfo"],[241,94,221,92],[241,96,221,94,"offset"],[241,102,221,100],[241,104,221,102,"crossOffset"],[241,115,221,113],[241,117,221,115,"containerOffsetWithBoundary"],[241,144,221,142],[241,146,221,144,"isContainerPositioned"],[241,167,221,165],[241,168,221,166],[242,4,222,2],[242,8,222,6,"isFlipped"],[242,17,222,15],[242,20,222,18],[242,25,222,23],[243,4,223,2],[243,8,223,6,"normalizedOffset"],[243,24,223,22],[243,27,223,25,"offset"],[243,33,223,31],[244,4,224,2],[244,8,224,6,"space"],[244,13,224,11],[244,16,224,14,"getAvailableSpace"],[244,33,224,31],[244,34,224,32,"boundaryDimensions"],[244,52,224,50],[244,54,224,52,"containerOffsetWithBoundary"],[244,81,224,79],[244,83,224,81,"childOffset"],[244,94,224,92],[244,96,224,94,"margins"],[244,103,224,101],[244,105,224,103,"padding"],[244,112,224,110],[244,115,224,113,"offset"],[244,121,224,119],[244,123,224,121,"placementInfo"],[244,136,224,134],[244,137,224,135],[246,4,226,2],[247,4,227,2],[247,8,227,6,"flip"],[247,12,227,10],[247,16,227,14,"scrollSize"],[247,26,227,24],[247,27,227,25,"size"],[247,31,227,29],[247,32,227,30],[247,35,227,33,"space"],[247,40,227,38],[247,42,227,40],[248,6,228,4],[248,10,228,8,"flippedPlacementInfo"],[248,30,228,28],[248,33,228,31,"parsePlacement"],[248,47,228,45],[248,48,228,46],[248,51,228,49,"FLIPPED_DIRECTION"],[248,68,228,66],[248,69,228,67,"placement"],[248,78,228,76],[248,79,228,77],[248,83,228,81,"crossPlacement"],[248,97,228,95],[248,99,228,97],[248,100,228,98],[249,6,229,4],[249,10,229,8,"flippedPosition"],[249,25,229,23],[249,28,229,26,"computePosition"],[249,43,229,41],[249,44,229,42,"childOffset"],[249,55,229,53],[249,57,229,55,"boundaryDimensions"],[249,75,229,73],[249,77,229,75,"overlaySize"],[249,88,229,86],[249,90,229,88,"flippedPlacementInfo"],[249,110,229,108],[249,112,229,110,"offset"],[249,118,229,116],[249,120,229,118,"crossOffset"],[249,131,229,129],[249,133,229,131,"containerOffsetWithBoundary"],[249,160,229,158],[249,162,229,160,"isContainerPositioned"],[249,183,229,181],[249,184,229,182],[250,6,230,4],[250,10,230,8,"flippedSpace"],[250,22,230,20],[250,25,230,23,"getAvailableSpace"],[250,42,230,40],[250,43,230,41,"boundaryDimensions"],[250,61,230,59],[250,63,230,61,"containerOffsetWithBoundary"],[250,90,230,88],[250,92,230,90,"childOffset"],[250,103,230,101],[250,105,230,103,"margins"],[250,112,230,110],[250,114,230,112,"padding"],[250,121,230,119],[250,124,230,122,"offset"],[250,130,230,128],[250,132,230,130,"flippedPlacementInfo"],[250,152,230,150],[250,153,230,151],[252,6,232,4],[253,6,233,4],[253,10,233,8,"flippedSpace"],[253,22,233,20],[253,25,233,23,"space"],[253,30,233,28],[253,32,233,30],[254,8,234,6,"isFlipped"],[254,17,234,15],[254,20,234,18],[254,24,234,22],[255,8,235,6,"placementInfo"],[255,21,235,19],[255,24,235,22,"flippedPlacementInfo"],[255,44,235,42],[256,8,236,6,"position"],[256,16,236,14],[256,19,236,17,"flippedPosition"],[256,34,236,32],[257,8,237,6,"normalizedOffset"],[257,24,237,22],[257,27,237,25,"offset"],[257,33,237,31],[258,6,238,4],[258,7,238,5],[258,13,238,11],[259,8,239,6,"isFlipped"],[259,17,239,15],[259,20,239,18],[259,25,239,23],[260,6,240,4],[261,4,241,2],[261,5,241,3],[261,11,241,9],[262,6,242,4,"isFlipped"],[262,15,242,13],[262,18,242,16],[262,23,242,21],[263,4,243,2],[264,4,244,2],[264,8,244,6,"delta"],[264,13,244,11],[264,16,244,14,"getDelta"],[264,24,244,22],[264,25,244,23,"crossAxis"],[264,34,244,32],[264,36,244,34,"position"],[264,44,244,42],[264,45,244,43,"crossAxis"],[264,54,244,52],[264,55,244,53],[264,57,244,55,"overlaySize"],[264,68,244,66],[264,69,244,67,"crossSize"],[264,78,244,76],[264,79,244,77],[264,81,244,79,"boundaryDimensions"],[264,99,244,97],[264,101,244,99,"padding"],[264,108,244,106],[264,109,244,107],[265,4,245,2,"position"],[265,12,245,10],[265,13,245,11,"crossAxis"],[265,22,245,20],[265,23,245,21],[265,27,245,25,"delta"],[265,32,245,30],[266,4,246,2],[266,8,246,6,"maxHeight"],[266,17,246,15],[266,20,246,18,"getMaxHeight"],[266,32,246,30],[266,33,246,31,"position"],[266,41,246,39],[266,43,246,41,"boundaryDimensions"],[266,61,246,59],[266,63,246,61,"containerOffsetWithBoundary"],[266,90,246,88],[266,92,246,90,"childOffset"],[266,103,246,101],[266,105,246,103,"margins"],[266,112,246,110],[266,114,246,112,"padding"],[266,121,246,119],[266,122,246,120],[267,4,247,2,"overlaySize"],[267,15,247,13],[267,16,247,14,"height"],[267,22,247,20],[267,25,247,23,"Math"],[267,29,247,27],[267,30,247,28,"min"],[267,33,247,31],[267,34,247,32,"overlaySize"],[267,45,247,43],[267,46,247,44,"height"],[267,52,247,50],[267,54,247,52,"maxHeight"],[267,63,247,61],[267,64,247,62],[268,4,248,2,"position"],[268,12,248,10],[268,15,248,13,"computePosition"],[268,30,248,28],[268,31,248,29,"childOffset"],[268,42,248,40],[268,44,248,42,"boundaryDimensions"],[268,62,248,60],[268,64,248,62,"overlaySize"],[268,75,248,73],[268,77,248,75,"placementInfo"],[268,90,248,88],[268,92,248,90,"normalizedOffset"],[268,108,248,106],[268,110,248,108,"crossOffset"],[268,121,248,119],[268,123,248,121,"containerOffsetWithBoundary"],[268,150,248,148],[268,152,248,150,"isContainerPositioned"],[268,173,248,171],[268,174,248,172],[269,4,249,2,"delta"],[269,9,249,7],[269,12,249,10,"getDelta"],[269,20,249,18],[269,21,249,19,"crossAxis"],[269,30,249,28],[269,32,249,30,"position"],[269,40,249,38],[269,41,249,39,"crossAxis"],[269,50,249,48],[269,51,249,49],[269,53,249,51,"overlaySize"],[269,64,249,62],[269,65,249,63,"crossSize"],[269,74,249,72],[269,75,249,73],[269,77,249,75,"boundaryDimensions"],[269,95,249,93],[269,97,249,95,"padding"],[269,104,249,102],[269,105,249,103],[270,4,250,2,"position"],[270,12,250,10],[270,13,250,11,"crossAxis"],[270,22,250,20],[270,23,250,21],[270,27,250,25,"delta"],[270,32,250,30],[271,4,251,2],[271,8,251,6,"arrowPosition"],[271,21,251,19],[271,24,251,22],[271,25,251,23],[271,26,251,24],[272,4,252,2,"arrowPosition"],[272,17,252,15],[272,18,252,16,"crossAxis"],[272,27,252,25],[272,28,252,26],[272,31,252,29,"childOffset"],[272,42,252,40],[272,43,252,41,"crossAxis"],[272,52,252,50],[272,53,252,51],[272,56,252,54,"position"],[272,64,252,62],[272,65,252,63,"crossAxis"],[272,74,252,72],[272,75,252,73],[272,78,252,76,"childOffset"],[272,89,252,87],[272,90,252,88,"crossSize"],[272,99,252,97],[272,100,252,98],[272,103,252,101],[272,104,252,102],[273,4,253,2],[273,8,253,6,"shouldOverlapWithTrigger"],[273,32,253,30],[273,34,253,32],[274,6,254,4,"position"],[274,14,254,12],[274,15,254,13,"FLIPPED_DIRECTION"],[274,32,254,30],[274,33,254,31,"placementInfo"],[274,46,254,44],[274,47,254,45,"placement"],[274,56,254,54],[274,57,254,55],[274,58,254,56],[274,61,254,59,"position"],[274,69,254,67],[274,70,254,68,"FLIPPED_DIRECTION"],[274,87,254,85],[274,88,254,86,"placementInfo"],[274,101,254,99],[274,102,254,100,"placement"],[274,111,254,109],[274,112,254,110],[274,113,254,111],[274,116,254,114,"childOffset"],[274,127,254,125],[274,128,254,126,"size"],[274,132,254,130],[274,133,254,131],[275,4,255,2],[276,4,256,2],[276,11,256,9],[277,6,257,4,"position"],[277,14,257,12],[278,6,258,4,"maxHeight"],[278,15,258,13],[278,17,258,15,"maxHeight"],[278,26,258,24],[279,6,259,4,"arrowOffsetLeft"],[279,21,259,19],[279,23,259,21,"arrowPosition"],[279,36,259,34],[279,37,259,35,"left"],[279,41,259,39],[280,6,260,4,"arrowOffsetTop"],[280,20,260,18],[280,22,260,20,"arrowPosition"],[280,35,260,33],[280,36,260,34,"top"],[280,39,260,37],[281,6,261,4,"placement"],[281,15,261,13],[281,17,261,15,"placementInfo"],[281,30,261,28],[281,31,261,29,"placement"],[281,40,261,38],[282,6,262,4,"isFlipped"],[283,4,263,2],[283,5,263,3],[284,2,264,0],[286,2,266,0],[287,0,267,0],[288,0,268,0],[289,2,269,7],[289,11,269,16,"calculatePosition"],[289,28,269,33,"calculatePosition"],[289,29,269,34,"opts"],[289,33,269,38],[289,35,269,40],[290,4,270,2],[290,8,270,6],[291,6,271,4,"placement"],[291,15,271,13],[292,6,272,4,"targetNode"],[292,16,272,14],[293,6,273,4,"overlayNode"],[293,17,273,15],[294,6,274,4,"scrollNode"],[294,16,274,14],[295,6,275,4,"padding"],[295,13,275,11],[296,6,276,4,"shouldFlip"],[296,16,276,14],[297,6,277,4,"boundaryElement"],[297,21,277,19],[298,6,278,4,"offset"],[298,12,278,10],[299,6,279,4,"crossOffset"],[299,17,279,15],[300,6,280,4,"shouldOverlapWithTrigger"],[301,4,281,2],[301,5,281,3],[301,8,281,6,"opts"],[301,12,281,10],[302,4,282,2],[302,8,282,6,"container"],[302,17,282,15],[302,20,282,18,"overlayNode"],[302,31,282,29],[302,32,282,30,"offsetParent"],[302,44,282,42],[302,48,282,46,"document"],[302,56,282,54],[302,57,282,55,"body"],[302,61,282,59],[303,4,283,2],[303,8,283,6,"isBodyContainer"],[303,23,283,21],[303,26,283,24,"container"],[303,35,283,33],[303,36,283,34,"tagName"],[303,43,283,41],[303,48,283,46],[303,54,283,52],[304,4,284,2],[304,10,284,8,"containerPositionStyle"],[304,32,284,30],[304,35,284,33,"window"],[304,41,284,39],[304,42,284,40,"getComputedStyle"],[304,58,284,56],[304,59,284,57,"container"],[304,68,284,66],[304,69,284,67],[304,70,284,68,"position"],[304,78,284,76],[305,4,285,2],[305,8,285,6,"isContainerPositioned"],[305,29,285,27],[305,32,285,30],[305,33,285,31],[305,34,285,32,"containerPositionStyle"],[305,56,285,54],[305,60,285,58,"containerPositionStyle"],[305,82,285,80],[305,87,285,85],[305,95,285,93],[306,4,286,2],[306,8,286,6,"childOffset"],[306,19,286,17],[306,22,286,20,"isBodyContainer"],[306,37,286,35],[306,40,286,38],[306,44,286,38,"getOffset"],[306,53,286,47],[306,54,286,47,"default"],[306,61,286,47],[306,63,286,48,"targetNode"],[306,73,286,58],[306,74,286,59],[306,77,286,62],[306,81,286,62,"getPosition"],[306,92,286,73],[306,93,286,73,"default"],[306,100,286,73],[306,102,286,74,"targetNode"],[306,112,286,84],[306,114,286,86,"container"],[306,123,286,95],[306,124,286,96],[307,4,287,2],[307,8,287,6],[307,9,287,7,"isBodyContainer"],[307,24,287,22],[307,26,287,24],[308,6,288,4,"childOffset"],[308,17,288,15],[308,18,288,16,"top"],[308,21,288,19],[308,25,288,23,"parseInt"],[308,33,288,31],[308,34,288,32],[308,38,288,32,"getCss"],[308,44,288,38],[308,45,288,38,"default"],[308,52,288,38],[308,54,288,39,"targetNode"],[308,64,288,49],[308,66,288,51],[308,77,288,62],[308,78,288,63],[308,80,288,65],[308,82,288,67],[308,83,288,68],[308,87,288,72],[308,88,288,73],[309,6,289,4,"childOffset"],[309,17,289,15],[309,18,289,16,"left"],[309,22,289,20],[309,26,289,24,"parseInt"],[309,34,289,32],[309,35,289,33],[309,39,289,33,"getCss"],[309,45,289,39],[309,46,289,39,"default"],[309,53,289,39],[309,55,289,40,"targetNode"],[309,65,289,50],[309,67,289,52],[309,79,289,64],[309,80,289,65],[309,82,289,67],[309,84,289,69],[309,85,289,70],[309,89,289,74],[309,90,289,75],[310,4,290,2],[311,4,291,2],[311,8,291,6,"overlaySize"],[311,19,291,17],[311,22,291,20],[311,26,291,20,"getOffset"],[311,35,291,29],[311,36,291,29,"default"],[311,43,291,29],[311,45,291,30,"overlayNode"],[311,56,291,41],[311,57,291,42],[312,4,292,2],[312,10,292,8,"matrix"],[312,16,292,14],[312,19,292,17],[312,23,292,17,"getComputedStyle"],[312,39,292,33],[312,40,292,33,"default"],[312,47,292,33],[312,49,292,34,"overlayNode"],[312,60,292,45],[312,61,292,46],[312,62,292,47,"getPropertyValue"],[312,78,292,63],[312,79,292,64],[312,90,292,75],[312,91,292,76],[313,4,293,2],[313,10,293,8,"transform"],[313,19,293,17],[313,22,293,20,"matrix"],[313,28,293,26],[314,4,294,2],[314,10,294,8,"regex"],[314,15,294,13],[314,18,294,16],[314,128,294,126],[315,4,295,2],[315,10,295,8,"matches"],[315,17,295,15],[315,20,295,18,"transform"],[315,29,295,27],[315,30,295,28,"match"],[315,35,295,33],[315,36,295,34,"regex"],[315,41,295,39],[315,42,295,40],[316,4,296,2],[316,8,296,6,"scaleX"],[316,14,296,12],[316,17,296,15],[316,18,296,16],[317,4,297,2],[317,8,297,6,"scaleY"],[317,14,297,12],[317,17,297,15],[317,18,297,16],[318,4,298,2],[318,8,298,6,"matches"],[318,15,298,13],[318,17,298,15],[319,6,299,4,"scaleX"],[319,12,299,10],[319,15,299,13,"parseFloat"],[319,25,299,23],[319,26,299,24,"matches"],[319,33,299,31],[319,34,299,32],[319,35,299,33],[319,36,299,34],[319,37,299,35],[320,6,300,4,"scaleY"],[320,12,300,10],[320,15,300,13,"parseFloat"],[320,25,300,23],[320,26,300,24,"matches"],[320,33,300,31],[320,34,300,32],[320,35,300,33],[320,36,300,34],[320,37,300,35],[321,6,301,4],[321,10,301,8],[321,11,301,9,"scaleX"],[321,17,301,15],[321,21,301,19],[321,22,301,20,"Number"],[321,28,301,26],[321,29,301,27,"isFinite"],[321,37,301,35],[321,38,301,36,"scaleX"],[321,44,301,42],[321,45,301,43],[321,47,301,45],[322,8,302,6,"scaleX"],[322,14,302,12],[322,17,302,15],[322,18,302,16],[323,6,303,4],[324,6,304,4],[324,10,304,8],[324,11,304,9,"scaleY"],[324,17,304,15],[324,21,304,19],[324,22,304,20,"Number"],[324,28,304,26],[324,29,304,27,"isFinite"],[324,37,304,35],[324,38,304,36,"scaleY"],[324,44,304,42],[324,45,304,43],[324,47,304,45],[325,8,305,6,"scaleY"],[325,14,305,12],[325,17,305,15],[325,18,305,16],[326,6,306,4],[327,4,307,2],[328,4,308,2],[328,8,308,6,"margins"],[328,15,308,13],[328,18,308,16,"getMargins"],[328,28,308,26],[328,29,308,27,"overlayNode"],[328,40,308,38],[328,41,308,39],[329,4,309,2,"overlaySize"],[329,15,309,13],[329,16,309,14,"width"],[329,21,309,19],[329,25,309,23,"margins"],[329,32,309,30],[329,33,309,31,"left"],[329,37,309,35],[329,40,309,38,"margins"],[329,47,309,45],[329,48,309,46,"right"],[329,53,309,51],[330,4,310,2,"overlaySize"],[330,15,310,13],[330,16,310,14,"height"],[330,22,310,20],[330,26,310,24,"margins"],[330,33,310,31],[330,34,310,32,"top"],[330,37,310,35],[330,40,310,38,"margins"],[330,47,310,45],[330,48,310,46,"bottom"],[330,54,310,52],[331,4,311,2],[331,8,311,6,"scaleX"],[331,14,311,12],[331,16,311,14],[332,6,312,4,"overlaySize"],[332,17,312,15],[332,18,312,16,"width"],[332,23,312,21],[332,26,312,24,"overlaySize"],[332,37,312,35],[332,38,312,36,"width"],[332,43,312,41],[332,46,312,44,"scaleX"],[332,52,312,50],[333,4,313,2],[334,4,314,2],[334,8,314,6,"scaleY"],[334,14,314,12],[334,16,314,14],[335,6,315,4,"overlaySize"],[335,17,315,15],[335,18,315,16,"height"],[335,24,315,22],[335,27,315,25,"overlaySize"],[335,38,315,36],[335,39,315,37,"height"],[335,45,315,43],[335,48,315,46,"scaleY"],[335,54,315,52],[336,4,316,2],[337,4,317,2],[337,8,317,6,"scrollSize"],[337,18,317,16],[337,21,317,19,"getScroll"],[337,30,317,28],[337,31,317,29,"scrollNode"],[337,41,317,39],[337,42,317,40],[338,4,318,2],[338,8,318,6,"boundaryDimensions"],[338,26,318,24],[338,29,318,27,"getContainerDimensions"],[338,51,318,49],[338,52,318,50,"boundaryElement"],[338,67,318,65],[338,68,318,66],[339,4,319,2],[339,8,319,6,"containerOffsetWithBoundary"],[339,35,319,33],[339,38,319,36,"boundaryElement"],[339,53,319,51],[339,54,319,52,"tagName"],[339,61,319,59],[339,66,319,64],[339,72,319,70],[339,75,319,73],[339,79,319,73,"getOffset"],[339,88,319,82],[339,89,319,82,"default"],[339,96,319,82],[339,98,319,83,"container"],[339,107,319,92],[339,108,319,93],[339,111,319,96],[339,115,319,96,"getPosition"],[339,126,319,107],[339,127,319,107,"default"],[339,134,319,107],[339,136,319,108,"container"],[339,145,319,117],[339,147,319,119,"boundaryElement"],[339,162,319,134],[339,163,319,135],[340,4,320,2],[340,11,320,9,"calculatePositionInternal"],[340,36,320,34],[340,37,320,35,"placement"],[340,46,320,44],[340,48,320,46,"childOffset"],[340,59,320,57],[340,61,320,59,"overlaySize"],[340,72,320,70],[340,74,320,72,"scrollSize"],[340,84,320,82],[340,86,320,84,"margins"],[340,93,320,91],[340,95,320,93,"padding"],[340,102,320,100],[340,104,320,102,"shouldFlip"],[340,114,320,112],[340,116,320,114,"boundaryDimensions"],[340,134,320,132],[340,136,320,134,"containerOffsetWithBoundary"],[340,163,320,161],[340,165,320,163,"offset"],[340,171,320,169],[340,173,320,171,"crossOffset"],[340,184,320,182],[340,186,320,184,"isContainerPositioned"],[340,207,320,205],[340,209,320,207,"shouldOverlapWithTrigger"],[340,233,320,231],[340,234,320,232],[341,2,321,0],[342,0,321,1],[342,3]],"functionMap":{"names":["<global>","getContainerDimensions","getScroll","getDelta","getMargins","parsePlacement","computePosition","getMaxHeight","getAvailableSpace","calculatePositionInternal","calculatePosition"],"mappings":"AAA;AC8C;CD4B;AEC;CFO;AGC;CHY;AIC;CJQ;AKC;CLqB;AMC;CNqD;AOC;CPgB;AQC;CRU;OSC;CTsD;OUK;CVoD"},"hasCjsExports":false},"type":"js/module"}]}