{"dependencies":[{"name":"./time-data.generated","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"zMkW1kzSGYb7aSetH17NuC6/FXo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.getBestPattern = getBestPattern;\n  var _timeDataGenerated = require(_dependencyMap[0], \"./time-data.generated\");\n  /**\n   * Returns the best matching date time pattern if a date time skeleton\n   * pattern is provided with a locale. Follows the Unicode specification:\n   * https://www.unicode.org/reports/tr35/tr35-dates.html#table-mapping-requested-time-skeletons-to-patterns\n   * @param skeleton date time skeleton pattern that possibly includes j, J or C\n   * @param locale\n   */\n  function getBestPattern(skeleton, locale) {\n    var skeletonCopy = '';\n    for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {\n      var patternChar = skeleton.charAt(patternPos);\n      if (patternChar === 'j') {\n        var extraLength = 0;\n        while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {\n          extraLength++;\n          patternPos++;\n        }\n        var hourLen = 1 + (extraLength & 1);\n        var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);\n        var dayPeriodChar = 'a';\n        var hourChar = getDefaultHourSymbolFromLocale(locale);\n        if (hourChar == 'H' || hourChar == 'k') {\n          dayPeriodLen = 0;\n        }\n        while (dayPeriodLen-- > 0) {\n          skeletonCopy += dayPeriodChar;\n        }\n        while (hourLen-- > 0) {\n          skeletonCopy = hourChar + skeletonCopy;\n        }\n      } else if (patternChar === 'J') {\n        skeletonCopy += 'H';\n      } else {\n        skeletonCopy += patternChar;\n      }\n    }\n    return skeletonCopy;\n  }\n  /**\n   * Maps the [hour cycle type](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle)\n   * of the given `locale` to the corresponding time pattern.\n   * @param locale\n   */\n  function getDefaultHourSymbolFromLocale(locale) {\n    var hourCycle = locale.hourCycle;\n    if (hourCycle === undefined &&\n    // @ts-ignore hourCycle(s) is not identified yet\n    locale.hourCycles &&\n    // @ts-ignore\n    locale.hourCycles.length) {\n      // @ts-ignore\n      hourCycle = locale.hourCycles[0];\n    }\n    if (hourCycle) {\n      switch (hourCycle) {\n        case 'h24':\n          return 'k';\n        case 'h23':\n          return 'H';\n        case 'h12':\n          return 'h';\n        case 'h11':\n          return 'K';\n        default:\n          throw new Error('Invalid hourCycle');\n      }\n    }\n    // TODO: Once hourCycle is fully supported remove the following with data generation\n    var languageTag = locale.language;\n    var regionTag;\n    if (languageTag !== 'root') {\n      regionTag = locale.maximize().region;\n    }\n    var hourCycles = _timeDataGenerated.timeData[regionTag || ''] || _timeDataGenerated.timeData[languageTag || ''] || _timeDataGenerated.timeData[\"\".concat(languageTag, \"-001\")] || _timeDataGenerated.timeData['001'];\n    return hourCycles[0];\n  }\n});","lineCount":85,"map":[[7,2,9,0,"exports"],[7,9,9,0],[7,10,9,0,"getBestPattern"],[7,24,9,0],[7,27,9,0,"getBestPattern"],[7,41,9,0],[8,2,1,0],[8,6,1,0,"_timeDataGenerated"],[8,24,1,0],[8,27,1,0,"require"],[8,34,1,0],[8,35,1,0,"_dependencyMap"],[8,49,1,0],[9,2,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,2,9,7],[16,11,9,16,"getBestPattern"],[16,25,9,30,"getBestPattern"],[16,26,9,31,"skeleton"],[16,34,9,39],[16,36,9,41,"locale"],[16,42,9,47],[16,44,9,49],[17,4,10,4],[17,8,10,8,"skeletonCopy"],[17,20,10,20],[17,23,10,23],[17,25,10,25],[18,4,11,4],[18,9,11,9],[18,13,11,13,"patternPos"],[18,23,11,23],[18,26,11,26],[18,27,11,27],[18,29,11,29,"patternPos"],[18,39,11,39],[18,42,11,42,"skeleton"],[18,50,11,50],[18,51,11,51,"length"],[18,57,11,57],[18,59,11,59,"patternPos"],[18,69,11,69],[18,71,11,71],[18,73,11,73],[19,6,12,8],[19,10,12,12,"patternChar"],[19,21,12,23],[19,24,12,26,"skeleton"],[19,32,12,34],[19,33,12,35,"charAt"],[19,39,12,41],[19,40,12,42,"patternPos"],[19,50,12,52],[19,51,12,53],[20,6,13,8],[20,10,13,12,"patternChar"],[20,21,13,23],[20,26,13,28],[20,29,13,31],[20,31,13,33],[21,8,14,12],[21,12,14,16,"extraLength"],[21,23,14,27],[21,26,14,30],[21,27,14,31],[22,8,15,12],[22,15,15,19,"patternPos"],[22,25,15,29],[22,28,15,32],[22,29,15,33],[22,32,15,36,"skeleton"],[22,40,15,44],[22,41,15,45,"length"],[22,47,15,51],[22,51,16,16,"skeleton"],[22,59,16,24],[22,60,16,25,"charAt"],[22,66,16,31],[22,67,16,32,"patternPos"],[22,77,16,42],[22,80,16,45],[22,81,16,46],[22,82,16,47],[22,87,16,52,"patternChar"],[22,98,16,63],[22,100,16,65],[23,10,17,16,"extraLength"],[23,21,17,27],[23,23,17,29],[24,10,18,16,"patternPos"],[24,20,18,26],[24,22,18,28],[25,8,19,12],[26,8,20,12],[26,12,20,16,"hourLen"],[26,19,20,23],[26,22,20,26],[26,23,20,27],[26,27,20,31,"extraLength"],[26,38,20,42],[26,41,20,45],[26,42,20,46],[26,43,20,47],[27,8,21,12],[27,12,21,16,"dayPeriodLen"],[27,24,21,28],[27,27,21,31,"extraLength"],[27,38,21,42],[27,41,21,45],[27,42,21,46],[27,45,21,49],[27,46,21,50],[27,49,21,53],[27,50,21,54],[27,54,21,58,"extraLength"],[27,65,21,69],[27,69,21,73],[27,70,21,74],[27,71,21,75],[28,8,22,12],[28,12,22,16,"dayPeriodChar"],[28,25,22,29],[28,28,22,32],[28,31,22,35],[29,8,23,12],[29,12,23,16,"hourChar"],[29,20,23,24],[29,23,23,27,"getDefaultHourSymbolFromLocale"],[29,53,23,57],[29,54,23,58,"locale"],[29,60,23,64],[29,61,23,65],[30,8,24,12],[30,12,24,16,"hourChar"],[30,20,24,24],[30,24,24,28],[30,27,24,31],[30,31,24,35,"hourChar"],[30,39,24,43],[30,43,24,47],[30,46,24,50],[30,48,24,52],[31,10,25,16,"dayPeriodLen"],[31,22,25,28],[31,25,25,31],[31,26,25,32],[32,8,26,12],[33,8,27,12],[33,15,27,19,"dayPeriodLen"],[33,27,27,31],[33,29,27,33],[33,32,27,36],[33,33,27,37],[33,35,27,39],[34,10,28,16,"skeletonCopy"],[34,22,28,28],[34,26,28,32,"dayPeriodChar"],[34,39,28,45],[35,8,29,12],[36,8,30,12],[36,15,30,19,"hourLen"],[36,22,30,26],[36,24,30,28],[36,27,30,31],[36,28,30,32],[36,30,30,34],[37,10,31,16,"skeletonCopy"],[37,22,31,28],[37,25,31,31,"hourChar"],[37,33,31,39],[37,36,31,42,"skeletonCopy"],[37,48,31,54],[38,8,32,12],[39,6,33,8],[39,7,33,9],[39,13,34,13],[39,17,34,17,"patternChar"],[39,28,34,28],[39,33,34,33],[39,36,34,36],[39,38,34,38],[40,8,35,12,"skeletonCopy"],[40,20,35,24],[40,24,35,28],[40,27,35,31],[41,6,36,8],[41,7,36,9],[41,13,37,13],[42,8,38,12,"skeletonCopy"],[42,20,38,24],[42,24,38,28,"patternChar"],[42,35,38,39],[43,6,39,8],[44,4,40,4],[45,4,41,4],[45,11,41,11,"skeletonCopy"],[45,23,41,23],[46,2,42,0],[47,2,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,2,48,0],[52,11,48,9,"getDefaultHourSymbolFromLocale"],[52,41,48,39,"getDefaultHourSymbolFromLocale"],[52,42,48,40,"locale"],[52,48,48,46],[52,50,48,48],[53,4,49,4],[53,8,49,8,"hourCycle"],[53,17,49,17],[53,20,49,20,"locale"],[53,26,49,26],[53,27,49,27,"hourCycle"],[53,36,49,36],[54,4,50,4],[54,8,50,8,"hourCycle"],[54,17,50,17],[54,22,50,22,"undefined"],[54,31,50,31],[55,4,51,8],[56,4,52,8,"locale"],[56,10,52,14],[56,11,52,15,"hourCycles"],[56,21,52,25],[57,4,53,8],[58,4,54,8,"locale"],[58,10,54,14],[58,11,54,15,"hourCycles"],[58,21,54,25],[58,22,54,26,"length"],[58,28,54,32],[58,30,54,34],[59,6,55,8],[60,6,56,8,"hourCycle"],[60,15,56,17],[60,18,56,20,"locale"],[60,24,56,26],[60,25,56,27,"hourCycles"],[60,35,56,37],[60,36,56,38],[60,37,56,39],[60,38,56,40],[61,4,57,4],[62,4,58,4],[62,8,58,8,"hourCycle"],[62,17,58,17],[62,19,58,19],[63,6,59,8],[63,14,59,16,"hourCycle"],[63,23,59,25],[64,8,60,12],[64,13,60,17],[64,18,60,22],[65,10,61,16],[65,17,61,23],[65,20,61,26],[66,8,62,12],[66,13,62,17],[66,18,62,22],[67,10,63,16],[67,17,63,23],[67,20,63,26],[68,8,64,12],[68,13,64,17],[68,18,64,22],[69,10,65,16],[69,17,65,23],[69,20,65,26],[70,8,66,12],[70,13,66,17],[70,18,66,22],[71,10,67,16],[71,17,67,23],[71,20,67,26],[72,8,68,12],[73,10,69,16],[73,16,69,22],[73,20,69,26,"Error"],[73,25,69,31],[73,26,69,32],[73,45,69,51],[73,46,69,52],[74,6,70,8],[75,4,71,4],[76,4,72,4],[77,4,73,4],[77,8,73,8,"languageTag"],[77,19,73,19],[77,22,73,22,"locale"],[77,28,73,28],[77,29,73,29,"language"],[77,37,73,37],[78,4,74,4],[78,8,74,8,"regionTag"],[78,17,74,17],[79,4,75,4],[79,8,75,8,"languageTag"],[79,19,75,19],[79,24,75,24],[79,30,75,30],[79,32,75,32],[80,6,76,8,"regionTag"],[80,15,76,17],[80,18,76,20,"locale"],[80,24,76,26],[80,25,76,27,"maximize"],[80,33,76,35],[80,34,76,36],[80,35,76,37],[80,36,76,38,"region"],[80,42,76,44],[81,4,77,4],[82,4,78,4],[82,8,78,8,"hourCycles"],[82,18,78,18],[82,21,78,21,"timeData"],[82,39,78,29],[82,40,78,29,"timeData"],[82,48,78,29],[82,49,78,30,"regionTag"],[82,58,78,39],[82,62,78,43],[82,64,78,45],[82,65,78,46],[82,69,79,8,"timeData"],[82,87,79,16],[82,88,79,16,"timeData"],[82,96,79,16],[82,97,79,17,"languageTag"],[82,108,79,28],[82,112,79,32],[82,114,79,34],[82,115,79,35],[82,119,80,8,"timeData"],[82,137,80,16],[82,138,80,16,"timeData"],[82,146,80,16],[82,147,80,17],[82,149,80,19],[82,150,80,20,"concat"],[82,156,80,26],[82,157,80,27,"languageTag"],[82,168,80,38],[82,170,80,40],[82,176,80,46],[82,177,80,47],[82,178,80,48],[82,182,81,8,"timeData"],[82,200,81,16],[82,201,81,16,"timeData"],[82,209,81,16],[82,210,81,17],[82,215,81,22],[82,216,81,23],[83,4,82,4],[83,11,82,11,"hourCycles"],[83,21,82,21],[83,22,82,22],[83,23,82,23],[83,24,82,24],[84,2,83,0],[85,0,83,1],[85,3]],"functionMap":{"names":["<global>","getBestPattern","getDefaultHourSymbolFromLocale"],"mappings":"AAA;OCQ;CDiC;AEM;CFmC"},"hasCjsExports":false},"type":"js/module"}]}