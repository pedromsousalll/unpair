{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":8},"end":{"line":2,"column":33,"index":41}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"./error","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":36,"index":78}}],"key":"QHycRqnFtfUmvzFfqax6IEFlq9M=","exportNames":["*"],"imports":1}},{"name":"./types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":79},"end":{"line":4,"column":47,"index":126}}],"key":"iV91Bk2eI9buML90FP6cK2SM5h0=","exportNames":["*"],"imports":1}},{"name":"./regex.generated","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":127},"end":{"line":5,"column":58,"index":185}}],"key":"b8HYA7B+xRysWWjWhz216U7woIw=","exportNames":["*"],"imports":1}},{"name":"@formatjs/icu-skeleton-parser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":186},"end":{"line":6,"column":123,"index":309}}],"key":"XXJGd4Xp/ocHD5rJ98uv/bIfZo4=","exportNames":["*"],"imports":1}},{"name":"./date-time-pattern-generator","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":310},"end":{"line":7,"column":63,"index":373}}],"key":"vlSKBPgN4VbK6/6KISn2nuYwcAM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"Parser\", {\n    enumerable: true,\n    get: function () {\n      return Parser;\n    }\n  });\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _error = require(_dependencyMap[1], \"./error\");\n  var _types = require(_dependencyMap[2], \"./types\");\n  var _regexGenerated = require(_dependencyMap[3], \"./regex.generated\");\n  var _formatjsIcuSkeletonParser = require(_dependencyMap[4], \"@formatjs/icu-skeleton-parser\");\n  var _dateTimePatternGenerator = require(_dependencyMap[5], \"./date-time-pattern-generator\");\n  var _a;\n  var SPACE_SEPARATOR_START_REGEX = new RegExp(\"^\".concat(_regexGenerated.SPACE_SEPARATOR_REGEX.source, \"*\"));\n  var SPACE_SEPARATOR_END_REGEX = new RegExp(\"\".concat(_regexGenerated.SPACE_SEPARATOR_REGEX.source, \"*$\"));\n  function createLocation(start, end) {\n    return {\n      start: start,\n      end: end\n    };\n  }\n  // #region Ponyfills\n  // Consolidate these variables up top for easier toggling during debugging\n  var hasNativeStartsWith = !!String.prototype.startsWith && '_a'.startsWith('a', 1);\n  var hasNativeFromCodePoint = !!String.fromCodePoint;\n  var hasNativeFromEntries = !!Object.fromEntries;\n  var hasNativeCodePointAt = !!String.prototype.codePointAt;\n  var hasTrimStart = !!String.prototype.trimStart;\n  var hasTrimEnd = !!String.prototype.trimEnd;\n  var hasNativeIsSafeInteger = !!Number.isSafeInteger;\n  var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function (n) {\n    return typeof n === 'number' && isFinite(n) && Math.floor(n) === n && Math.abs(n) <= 0x1fffffffffffff;\n  };\n  // IE11 does not support y and u.\n  var REGEX_SUPPORTS_U_AND_Y = true;\n  try {\n    var re = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    /**\n     * legacy Edge or Xbox One browser\n     * Unicode flag support: supported\n     * Pattern_Syntax support: not supported\n     * See https://github.com/formatjs/formatjs/issues/2822\n     */\n    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';\n  } catch (_) {\n    REGEX_SUPPORTS_U_AND_Y = false;\n  }\n  var startsWith = hasNativeStartsWith ?\n  // Native\n  function startsWith(s, search, position) {\n    return s.startsWith(search, position);\n  } :\n  // For IE11\n  function startsWith(s, search, position) {\n    return s.slice(position, position + search.length) === search;\n  };\n  var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint :\n  // IE11\n  function fromCodePoint() {\n    var codePoints = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      codePoints[_i] = arguments[_i];\n    }\n    var elements = '';\n    var length = codePoints.length;\n    var i = 0;\n    var code;\n    while (length > i) {\n      code = codePoints[i++];\n      if (code > 0x10ffff) throw RangeError(code + ' is not a valid code point');\n      elements += code < 0x10000 ? String.fromCharCode(code) : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00);\n    }\n    return elements;\n  };\n  var fromEntries =\n  // native\n  hasNativeFromEntries ? Object.fromEntries :\n  // Ponyfill\n  function fromEntries(entries) {\n    var obj = {};\n    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n      var _a = entries_1[_i],\n        k = _a[0],\n        v = _a[1];\n      obj[k] = v;\n    }\n    return obj;\n  };\n  var codePointAt = hasNativeCodePointAt ?\n  // Native\n  function codePointAt(s, index) {\n    return s.codePointAt(index);\n  } :\n  // IE 11\n  function codePointAt(s, index) {\n    var size = s.length;\n    if (index < 0 || index >= size) {\n      return undefined;\n    }\n    var first = s.charCodeAt(index);\n    var second;\n    return first < 0xd800 || first > 0xdbff || index + 1 === size || (second = s.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? first : (first - 0xd800 << 10) + (second - 0xdc00) + 0x10000;\n  };\n  var trimStart = hasTrimStart ?\n  // Native\n  function trimStart(s) {\n    return s.trimStart();\n  } :\n  // Ponyfill\n  function trimStart(s) {\n    return s.replace(SPACE_SEPARATOR_START_REGEX, '');\n  };\n  var trimEnd = hasTrimEnd ?\n  // Native\n  function trimEnd(s) {\n    return s.trimEnd();\n  } :\n  // Ponyfill\n  function trimEnd(s) {\n    return s.replace(SPACE_SEPARATOR_END_REGEX, '');\n  };\n  // Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.\n  function RE(s, flag) {\n    return new RegExp(s, flag);\n  }\n  // #endregion\n  var matchIdentifierAtIndex;\n  if (REGEX_SUPPORTS_U_AND_Y) {\n    // Native\n    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n      var _a;\n      IDENTIFIER_PREFIX_RE_1.lastIndex = index;\n      var match = IDENTIFIER_PREFIX_RE_1.exec(s);\n      return (_a = match[1]) !== null && _a !== void 0 ? _a : '';\n    };\n  } else {\n    // IE11\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n      var match = [];\n      while (true) {\n        var c = codePointAt(s, index);\n        if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {\n          break;\n        }\n        match.push(c);\n        index += c >= 0x10000 ? 2 : 1;\n      }\n      return fromCodePoint.apply(void 0, match);\n    };\n  }\n  var Parser = /** @class */function () {\n    function Parser(message, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      this.message = message;\n      this.position = {\n        offset: 0,\n        line: 1,\n        column: 1\n      };\n      this.ignoreTag = !!options.ignoreTag;\n      this.locale = options.locale;\n      this.requiresOtherClause = !!options.requiresOtherClause;\n      this.shouldParseSkeletons = !!options.shouldParseSkeletons;\n    }\n    Parser.prototype.parse = function () {\n      if (this.offset() !== 0) {\n        throw Error('parser can only be used once');\n      }\n      return this.parseMessage(0, '', false);\n    };\n    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {\n      var elements = [];\n      while (!this.isEOF()) {\n        var char = this.char();\n        if (char === 123 /* `{` */) {\n          var result = this.parseArgument(nestingLevel, expectingCloseTag);\n          if (result.err) {\n            return result;\n          }\n          elements.push(result.val);\n        } else if (char === 125 /* `}` */ && nestingLevel > 0) {\n          break;\n        } else if (char === 35 /* `#` */ && (parentArgType === 'plural' || parentArgType === 'selectordinal')) {\n          var position = this.clonePosition();\n          this.bump();\n          elements.push({\n            type: _types.TYPE.pound,\n            location: createLocation(position, this.clonePosition())\n          });\n        } else if (char === 60 /* `<` */ && !this.ignoreTag && this.peek() === 47 // char code for '/'\n        ) {\n          if (expectingCloseTag) {\n            break;\n          } else {\n            return this.error(_error.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\n          }\n        } else if (char === 60 /* `<` */ && !this.ignoreTag && _isAlpha(this.peek() || 0)) {\n          var result = this.parseTag(nestingLevel, parentArgType);\n          if (result.err) {\n            return result;\n          }\n          elements.push(result.val);\n        } else {\n          var result = this.parseLiteral(nestingLevel, parentArgType);\n          if (result.err) {\n            return result;\n          }\n          elements.push(result.val);\n        }\n      }\n      return {\n        val: elements,\n        err: null\n      };\n    };\n    /**\n     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the\n     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters\n     * are accepted:\n     *\n     * ```\n     * tag ::= \"<\" tagName (whitespace)* \"/>\" | \"<\" tagName (whitespace)* \">\" message \"</\" tagName (whitespace)* \">\"\n     * tagName ::= [a-z] (PENChar)*\n     * PENChar ::=\n     *     \"-\" | \".\" | [0-9] | \"_\" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |\n     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |\n     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n     * ```\n     *\n     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do\n     * since other tag-based engines like React allow it\n     */\n    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {\n      var startPosition = this.clonePosition();\n      this.bump(); // `<`\n      var tagName = this.parseTagName();\n      this.bumpSpace();\n      if (this.bumpIf('/>')) {\n        // Self closing tag\n        return {\n          val: {\n            type: _types.TYPE.literal,\n            value: \"<\".concat(tagName, \"/>\"),\n            location: createLocation(startPosition, this.clonePosition())\n          },\n          err: null\n        };\n      } else if (this.bumpIf('>')) {\n        var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\n        if (childrenResult.err) {\n          return childrenResult;\n        }\n        var children = childrenResult.val;\n        // Expecting a close tag\n        var endTagStartPosition = this.clonePosition();\n        if (this.bumpIf('</')) {\n          if (this.isEOF() || !_isAlpha(this.char())) {\n            return this.error(_error.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n          }\n          var closingTagNameStartPosition = this.clonePosition();\n          var closingTagName = this.parseTagName();\n          if (tagName !== closingTagName) {\n            return this.error(_error.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\n          }\n          this.bumpSpace();\n          if (!this.bumpIf('>')) {\n            return this.error(_error.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n          }\n          return {\n            val: {\n              type: _types.TYPE.tag,\n              value: tagName,\n              children: children,\n              location: createLocation(startPosition, this.clonePosition())\n            },\n            err: null\n          };\n        } else {\n          return this.error(_error.ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\n        }\n      } else {\n        return this.error(_error.ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\n      }\n    };\n    /**\n     * This method assumes that the caller has peeked ahead for the first tag character.\n     */\n    Parser.prototype.parseTagName = function () {\n      var startOffset = this.offset();\n      this.bump(); // the first tag name character\n      while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\n        this.bump();\n      }\n      return this.message.slice(startOffset, this.offset());\n    };\n    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {\n      var start = this.clonePosition();\n      var value = '';\n      while (true) {\n        var parseQuoteResult = this.tryParseQuote(parentArgType);\n        if (parseQuoteResult) {\n          value += parseQuoteResult;\n          continue;\n        }\n        var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\n        if (parseUnquotedResult) {\n          value += parseUnquotedResult;\n          continue;\n        }\n        var parseLeftAngleResult = this.tryParseLeftAngleBracket();\n        if (parseLeftAngleResult) {\n          value += parseLeftAngleResult;\n          continue;\n        }\n        break;\n      }\n      var location = createLocation(start, this.clonePosition());\n      return {\n        val: {\n          type: _types.TYPE.literal,\n          value: value,\n          location: location\n        },\n        err: null\n      };\n    };\n    Parser.prototype.tryParseLeftAngleBracket = function () {\n      if (!this.isEOF() && this.char() === 60 /* `<` */ && (this.ignoreTag ||\n      // If at the opening tag or closing tag position, bail.\n      !_isAlphaOrSlash(this.peek() || 0))) {\n        this.bump(); // `<`\n        return '<';\n      }\n      return null;\n    };\n    /**\n     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes\n     * a character that requires quoting (that is, \"only where needed\"), and works the same in\n     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.\n     */\n    Parser.prototype.tryParseQuote = function (parentArgType) {\n      if (this.isEOF() || this.char() !== 39 /* `'` */) {\n        return null;\n      }\n      // Parse escaped char following the apostrophe, or early return if there is no escaped char.\n      // Check if is valid escaped character\n      switch (this.peek()) {\n        case 39 /* `'` */:\n          // double quote, should return as a single quote.\n          this.bump();\n          this.bump();\n          return \"'\";\n        // '{', '<', '>', '}'\n        case 123:\n        case 60:\n        case 62:\n        case 125:\n          break;\n        case 35:\n          // '#'\n          if (parentArgType === 'plural' || parentArgType === 'selectordinal') {\n            break;\n          }\n          return null;\n        default:\n          return null;\n      }\n      this.bump(); // apostrophe\n      var codePoints = [this.char()]; // escaped char\n      this.bump();\n      // read chars until the optional closing apostrophe is found\n      while (!this.isEOF()) {\n        var ch = this.char();\n        if (ch === 39 /* `'` */) {\n          if (this.peek() === 39 /* `'` */) {\n            codePoints.push(39);\n            // Bump one more time because we need to skip 2 characters.\n            this.bump();\n          } else {\n            // Optional closing apostrophe.\n            this.bump();\n            break;\n          }\n        } else {\n          codePoints.push(ch);\n        }\n        this.bump();\n      }\n      return fromCodePoint.apply(void 0, codePoints);\n    };\n    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {\n      if (this.isEOF()) {\n        return null;\n      }\n      var ch = this.char();\n      if (ch === 60 /* `<` */ || ch === 123 /* `{` */ || ch === 35 /* `#` */ && (parentArgType === 'plural' || parentArgType === 'selectordinal') || ch === 125 /* `}` */ && nestingLevel > 0) {\n        return null;\n      } else {\n        this.bump();\n        return fromCodePoint(ch);\n      }\n    };\n    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {\n      var openingBracePosition = this.clonePosition();\n      this.bump(); // `{`\n      this.bumpSpace();\n      if (this.isEOF()) {\n        return this.error(_error.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      if (this.char() === 125 /* `}` */) {\n        this.bump();\n        return this.error(_error.ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      // argument name\n      var value = this.parseIdentifierIfPossible().value;\n      if (!value) {\n        return this.error(_error.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      this.bumpSpace();\n      if (this.isEOF()) {\n        return this.error(_error.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      switch (this.char()) {\n        // Simple argument: `{name}`\n        case 125 /* `}` */:\n          {\n            this.bump(); // `}`\n            return {\n              val: {\n                type: _types.TYPE.argument,\n                // value does not include the opening and closing braces.\n                value: value,\n                location: createLocation(openingBracePosition, this.clonePosition())\n              },\n              err: null\n            };\n          }\n        // Argument with options: `{name, format, ...}`\n        case 44 /* `,` */:\n          {\n            this.bump(); // `,`\n            this.bumpSpace();\n            if (this.isEOF()) {\n              return this.error(_error.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n            }\n            return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\n          }\n        default:\n          return this.error(_error.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n      }\n    };\n    /**\n     * Advance the parser until the end of the identifier, if it is currently on\n     * an identifier character. Return an empty string otherwise.\n     */\n    Parser.prototype.parseIdentifierIfPossible = function () {\n      var startingPosition = this.clonePosition();\n      var startOffset = this.offset();\n      var value = matchIdentifierAtIndex(this.message, startOffset);\n      var endOffset = startOffset + value.length;\n      this.bumpTo(endOffset);\n      var endPosition = this.clonePosition();\n      var location = createLocation(startingPosition, endPosition);\n      return {\n        value: value,\n        location: location\n      };\n    };\n    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {\n      var _a;\n      // Parse this range:\n      // {name, type, style}\n      //        ^---^\n      var typeStartPosition = this.clonePosition();\n      var argType = this.parseIdentifierIfPossible().value;\n      var typeEndPosition = this.clonePosition();\n      switch (argType) {\n        case '':\n          // Expecting a style string number, date, time, plural, selectordinal, or select.\n          return this.error(_error.ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n        case 'number':\n        case 'date':\n        case 'time':\n          {\n            // Parse this range:\n            // {name, number, style}\n            //              ^-------^\n            this.bumpSpace();\n            var styleAndLocation = null;\n            if (this.bumpIf(',')) {\n              this.bumpSpace();\n              var styleStartPosition = this.clonePosition();\n              var result = this.parseSimpleArgStyleIfPossible();\n              if (result.err) {\n                return result;\n              }\n              var style = trimEnd(result.val);\n              if (style.length === 0) {\n                return this.error(_error.ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\n              }\n              var styleLocation = createLocation(styleStartPosition, this.clonePosition());\n              styleAndLocation = {\n                style: style,\n                styleLocation: styleLocation\n              };\n            }\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n            if (argCloseResult.err) {\n              return argCloseResult;\n            }\n            var location_1 = createLocation(openingBracePosition, this.clonePosition());\n            // Extract style or skeleton\n            if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {\n              // Skeleton starts with `::`.\n              var skeleton = trimStart(styleAndLocation.style.slice(2));\n              if (argType === 'number') {\n                var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\n                if (result.err) {\n                  return result;\n                }\n                return {\n                  val: {\n                    type: _types.TYPE.number,\n                    value: value,\n                    location: location_1,\n                    style: result.val\n                  },\n                  err: null\n                };\n              } else {\n                if (skeleton.length === 0) {\n                  return this.error(_error.ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\n                }\n                var dateTimePattern = skeleton;\n                // Get \"best match\" pattern only if locale is passed, if not, let it\n                // pass as-is where `parseDateTimeSkeleton()` will throw an error\n                // for unsupported patterns.\n                if (this.locale) {\n                  dateTimePattern = (0, _dateTimePatternGenerator.getBestPattern)(skeleton, this.locale);\n                }\n                var style = {\n                  type: _types.SKELETON_TYPE.dateTime,\n                  pattern: dateTimePattern,\n                  location: styleAndLocation.styleLocation,\n                  parsedOptions: this.shouldParseSkeletons ? (0, _formatjsIcuSkeletonParser.parseDateTimeSkeleton)(dateTimePattern) : {}\n                };\n                var type = argType === 'date' ? _types.TYPE.date : _types.TYPE.time;\n                return {\n                  val: {\n                    type: type,\n                    value: value,\n                    location: location_1,\n                    style: style\n                  },\n                  err: null\n                };\n              }\n            }\n            // Regular style or no style.\n            return {\n              val: {\n                type: argType === 'number' ? _types.TYPE.number : argType === 'date' ? _types.TYPE.date : _types.TYPE.time,\n                value: value,\n                location: location_1,\n                style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null\n              },\n              err: null\n            };\n          }\n        case 'plural':\n        case 'selectordinal':\n        case 'select':\n          {\n            // Parse this range:\n            // {name, plural, options}\n            //              ^---------^\n            var typeEndPosition_1 = this.clonePosition();\n            this.bumpSpace();\n            if (!this.bumpIf(',')) {\n              return this.error(_error.ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, (0, _tslib.__assign)({}, typeEndPosition_1)));\n            }\n            this.bumpSpace();\n            // Parse offset:\n            // {name, plural, offset:1, options}\n            //                ^-----^\n            //\n            // or the first option:\n            //\n            // {name, plural, one {...} other {...}}\n            //                ^--^\n            var identifierAndLocation = this.parseIdentifierIfPossible();\n            var pluralOffset = 0;\n            if (argType !== 'select' && identifierAndLocation.value === 'offset') {\n              if (!this.bumpIf(':')) {\n                return this.error(_error.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\n              }\n              this.bumpSpace();\n              var result = this.tryParseDecimalInteger(_error.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, _error.ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\n              if (result.err) {\n                return result;\n              }\n              // Parse another identifier for option parsing\n              this.bumpSpace();\n              identifierAndLocation = this.parseIdentifierIfPossible();\n              pluralOffset = result.val;\n            }\n            var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\n            if (optionsResult.err) {\n              return optionsResult;\n            }\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n            if (argCloseResult.err) {\n              return argCloseResult;\n            }\n            var location_2 = createLocation(openingBracePosition, this.clonePosition());\n            if (argType === 'select') {\n              return {\n                val: {\n                  type: _types.TYPE.select,\n                  value: value,\n                  options: fromEntries(optionsResult.val),\n                  location: location_2\n                },\n                err: null\n              };\n            } else {\n              return {\n                val: {\n                  type: _types.TYPE.plural,\n                  value: value,\n                  options: fromEntries(optionsResult.val),\n                  offset: pluralOffset,\n                  pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',\n                  location: location_2\n                },\n                err: null\n              };\n            }\n          }\n        default:\n          return this.error(_error.ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n      }\n    };\n    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {\n      // Parse: {value, number, ::currency/GBP }\n      //\n      if (this.isEOF() || this.char() !== 125 /* `}` */) {\n        return this.error(_error.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      this.bump(); // `}`\n      return {\n        val: true,\n        err: null\n      };\n    };\n    /**\n     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659\n     */\n    Parser.prototype.parseSimpleArgStyleIfPossible = function () {\n      var nestedBraces = 0;\n      var startPosition = this.clonePosition();\n      while (!this.isEOF()) {\n        var ch = this.char();\n        switch (ch) {\n          case 39 /* `'` */:\n            {\n              // Treat apostrophe as quoting but include it in the style part.\n              // Find the end of the quoted literal text.\n              this.bump();\n              var apostrophePosition = this.clonePosition();\n              if (!this.bumpUntil(\"'\")) {\n                return this.error(_error.ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\n              }\n              this.bump();\n              break;\n            }\n          case 123 /* `{` */:\n            {\n              nestedBraces += 1;\n              this.bump();\n              break;\n            }\n          case 125 /* `}` */:\n            {\n              if (nestedBraces > 0) {\n                nestedBraces -= 1;\n              } else {\n                return {\n                  val: this.message.slice(startPosition.offset, this.offset()),\n                  err: null\n                };\n              }\n              break;\n            }\n          default:\n            this.bump();\n            break;\n        }\n      }\n      return {\n        val: this.message.slice(startPosition.offset, this.offset()),\n        err: null\n      };\n    };\n    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {\n      var tokens = [];\n      try {\n        tokens = (0, _formatjsIcuSkeletonParser.parseNumberSkeletonFromString)(skeleton);\n      } catch (e) {\n        return this.error(_error.ErrorKind.INVALID_NUMBER_SKELETON, location);\n      }\n      return {\n        val: {\n          type: _types.SKELETON_TYPE.number,\n          tokens: tokens,\n          location: location,\n          parsedOptions: this.shouldParseSkeletons ? (0, _formatjsIcuSkeletonParser.parseNumberSkeleton)(tokens) : {}\n        },\n        err: null\n      };\n    };\n    /**\n     * @param nesting_level The current nesting level of messages.\n     *     This can be positive when parsing message fragment in select or plural argument options.\n     * @param parent_arg_type The parent argument's type.\n     * @param parsed_first_identifier If provided, this is the first identifier-like selector of\n     *     the argument. It is a by-product of a previous parsing attempt.\n     * @param expecting_close_tag If true, this message is directly or indirectly nested inside\n     *     between a pair of opening and closing tags. The nested message will not parse beyond\n     *     the closing tag boundary.\n     */\n    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\n      var _a;\n      var hasOtherClause = false;\n      var options = [];\n      var parsedSelectors = new Set();\n      var selector = parsedFirstIdentifier.value,\n        selectorLocation = parsedFirstIdentifier.location;\n      // Parse:\n      // one {one apple}\n      // ^--^\n      while (true) {\n        if (selector.length === 0) {\n          var startPosition = this.clonePosition();\n          if (parentArgType !== 'select' && this.bumpIf('=')) {\n            // Try parse `={number}` selector\n            var result = this.tryParseDecimalInteger(_error.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, _error.ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\n            if (result.err) {\n              return result;\n            }\n            selectorLocation = createLocation(startPosition, this.clonePosition());\n            selector = this.message.slice(startPosition.offset, this.offset());\n          } else {\n            break;\n          }\n        }\n        // Duplicate selector clauses\n        if (parsedSelectors.has(selector)) {\n          return this.error(parentArgType === 'select' ? _error.ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : _error.ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\n        }\n        if (selector === 'other') {\n          hasOtherClause = true;\n        }\n        // Parse:\n        // one {one apple}\n        //     ^----------^\n        this.bumpSpace();\n        var openingBracePosition = this.clonePosition();\n        if (!this.bumpIf('{')) {\n          return this.error(parentArgType === 'select' ? _error.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : _error.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\n        if (fragmentResult.err) {\n          return fragmentResult;\n        }\n        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n        if (argCloseResult.err) {\n          return argCloseResult;\n        }\n        options.push([selector, {\n          value: fragmentResult.val,\n          location: createLocation(openingBracePosition, this.clonePosition())\n        }]);\n        // Keep track of the existing selectors\n        parsedSelectors.add(selector);\n        // Prep next selector clause.\n        this.bumpSpace();\n        _a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location;\n      }\n      if (options.length === 0) {\n        return this.error(parentArgType === 'select' ? _error.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : _error.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\n      }\n      if (this.requiresOtherClause && !hasOtherClause) {\n        return this.error(_error.ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\n      }\n      return {\n        val: options,\n        err: null\n      };\n    };\n    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {\n      var sign = 1;\n      var startingPosition = this.clonePosition();\n      if (this.bumpIf('+')) {} else if (this.bumpIf('-')) {\n        sign = -1;\n      }\n      var hasDigits = false;\n      var decimal = 0;\n      while (!this.isEOF()) {\n        var ch = this.char();\n        if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {\n          hasDigits = true;\n          decimal = decimal * 10 + (ch - 48);\n          this.bump();\n        } else {\n          break;\n        }\n      }\n      var location = createLocation(startingPosition, this.clonePosition());\n      if (!hasDigits) {\n        return this.error(expectNumberError, location);\n      }\n      decimal *= sign;\n      if (!isSafeInteger(decimal)) {\n        return this.error(invalidNumberError, location);\n      }\n      return {\n        val: decimal,\n        err: null\n      };\n    };\n    Parser.prototype.offset = function () {\n      return this.position.offset;\n    };\n    Parser.prototype.isEOF = function () {\n      return this.offset() === this.message.length;\n    };\n    Parser.prototype.clonePosition = function () {\n      // This is much faster than `Object.assign` or spread.\n      return {\n        offset: this.position.offset,\n        line: this.position.line,\n        column: this.position.column\n      };\n    };\n    /**\n     * Return the code point at the current position of the parser.\n     * Throws if the index is out of bound.\n     */\n    Parser.prototype.char = function () {\n      var offset = this.position.offset;\n      if (offset >= this.message.length) {\n        throw Error('out of bound');\n      }\n      var code = codePointAt(this.message, offset);\n      if (code === undefined) {\n        throw Error(\"Offset \".concat(offset, \" is at invalid UTF-16 code unit boundary\"));\n      }\n      return code;\n    };\n    Parser.prototype.error = function (kind, location) {\n      return {\n        val: null,\n        err: {\n          kind: kind,\n          message: this.message,\n          location: location\n        }\n      };\n    };\n    /** Bump the parser to the next UTF-16 code unit. */\n    Parser.prototype.bump = function () {\n      if (this.isEOF()) {\n        return;\n      }\n      var code = this.char();\n      if (code === 10 /* '\\n' */) {\n        this.position.line += 1;\n        this.position.column = 1;\n        this.position.offset += 1;\n      } else {\n        this.position.column += 1;\n        // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.\n        this.position.offset += code < 0x10000 ? 1 : 2;\n      }\n    };\n    /**\n     * If the substring starting at the current position of the parser has\n     * the given prefix, then bump the parser to the character immediately\n     * following the prefix and return true. Otherwise, don't bump the parser\n     * and return false.\n     */\n    Parser.prototype.bumpIf = function (prefix) {\n      if (startsWith(this.message, prefix, this.offset())) {\n        for (var i = 0; i < prefix.length; i++) {\n          this.bump();\n        }\n        return true;\n      }\n      return false;\n    };\n    /**\n     * Bump the parser until the pattern character is found and return `true`.\n     * Otherwise bump to the end of the file and return `false`.\n     */\n    Parser.prototype.bumpUntil = function (pattern) {\n      var currentOffset = this.offset();\n      var index = this.message.indexOf(pattern, currentOffset);\n      if (index >= 0) {\n        this.bumpTo(index);\n        return true;\n      } else {\n        this.bumpTo(this.message.length);\n        return false;\n      }\n    };\n    /**\n     * Bump the parser to the target offset.\n     * If target offset is beyond the end of the input, bump the parser to the end of the input.\n     */\n    Parser.prototype.bumpTo = function (targetOffset) {\n      if (this.offset() > targetOffset) {\n        throw Error(\"targetOffset \".concat(targetOffset, \" must be greater than or equal to the current offset \").concat(this.offset()));\n      }\n      targetOffset = Math.min(targetOffset, this.message.length);\n      while (true) {\n        var offset = this.offset();\n        if (offset === targetOffset) {\n          break;\n        }\n        if (offset > targetOffset) {\n          throw Error(\"targetOffset \".concat(targetOffset, \" is at invalid UTF-16 code unit boundary\"));\n        }\n        this.bump();\n        if (this.isEOF()) {\n          break;\n        }\n      }\n    };\n    /** advance the parser through all whitespace to the next non-whitespace code unit. */\n    Parser.prototype.bumpSpace = function () {\n      while (!this.isEOF() && _isWhiteSpace(this.char())) {\n        this.bump();\n      }\n    };\n    /**\n     * Peek at the *next* Unicode codepoint in the input without advancing the parser.\n     * If the input has been exhausted, then this returns null.\n     */\n    Parser.prototype.peek = function () {\n      if (this.isEOF()) {\n        return null;\n      }\n      var code = this.char();\n      var offset = this.offset();\n      var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));\n      return nextCode !== null && nextCode !== void 0 ? nextCode : null;\n    };\n    return Parser;\n  }();\n  /**\n   * This check if codepoint is alphabet (lower & uppercase)\n   * @param codepoint\n   * @returns\n   */\n  function _isAlpha(codepoint) {\n    return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;\n  }\n  function _isAlphaOrSlash(codepoint) {\n    return _isAlpha(codepoint) || codepoint === 47; /* '/' */\n  }\n  /** See `parseTag` function docs. */\n  function _isPotentialElementNameChar(c) {\n    return c === 45 /* '-' */ || c === 46 /* '.' */ || c >= 48 && c <= 57 /* 0..9 */ || c === 95 /* '_' */ || c >= 97 && c <= 122 /** a..z */ || c >= 65 && c <= 90 /* A..Z */ || c == 0xb7 || c >= 0xc0 && c <= 0xd6 || c >= 0xd8 && c <= 0xf6 || c >= 0xf8 && c <= 0x37d || c >= 0x37f && c <= 0x1fff || c >= 0x200c && c <= 0x200d || c >= 0x203f && c <= 0x2040 || c >= 0x2070 && c <= 0x218f || c >= 0x2c00 && c <= 0x2fef || c >= 0x3001 && c <= 0xd7ff || c >= 0xf900 && c <= 0xfdcf || c >= 0xfdf0 && c <= 0xfffd || c >= 0x10000 && c <= 0xeffff;\n  }\n  /**\n   * Code point equivalent of regex `\\p{White_Space}`.\n   * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n   */\n  function _isWhiteSpace(c) {\n    return c >= 0x0009 && c <= 0x000d || c === 0x0020 || c === 0x0085 || c >= 0x200e && c <= 0x200f || c === 0x2028 || c === 0x2029;\n  }\n  /**\n   * Code point equivalent of regex `\\p{Pattern_Syntax}`.\n   * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n   */\n  function _isPatternSyntax(c) {\n    return c >= 0x0021 && c <= 0x0023 || c === 0x0024 || c >= 0x0025 && c <= 0x0027 || c === 0x0028 || c === 0x0029 || c === 0x002a || c === 0x002b || c === 0x002c || c === 0x002d || c >= 0x002e && c <= 0x002f || c >= 0x003a && c <= 0x003b || c >= 0x003c && c <= 0x003e || c >= 0x003f && c <= 0x0040 || c === 0x005b || c === 0x005c || c === 0x005d || c === 0x005e || c === 0x0060 || c === 0x007b || c === 0x007c || c === 0x007d || c === 0x007e || c === 0x00a1 || c >= 0x00a2 && c <= 0x00a5 || c === 0x00a6 || c === 0x00a7 || c === 0x00a9 || c === 0x00ab || c === 0x00ac || c === 0x00ae || c === 0x00b0 || c === 0x00b1 || c === 0x00b6 || c === 0x00bb || c === 0x00bf || c === 0x00d7 || c === 0x00f7 || c >= 0x2010 && c <= 0x2015 || c >= 0x2016 && c <= 0x2017 || c === 0x2018 || c === 0x2019 || c === 0x201a || c >= 0x201b && c <= 0x201c || c === 0x201d || c === 0x201e || c === 0x201f || c >= 0x2020 && c <= 0x2027 || c >= 0x2030 && c <= 0x2038 || c === 0x2039 || c === 0x203a || c >= 0x203b && c <= 0x203e || c >= 0x2041 && c <= 0x2043 || c === 0x2044 || c === 0x2045 || c === 0x2046 || c >= 0x2047 && c <= 0x2051 || c === 0x2052 || c === 0x2053 || c >= 0x2055 && c <= 0x205e || c >= 0x2190 && c <= 0x2194 || c >= 0x2195 && c <= 0x2199 || c >= 0x219a && c <= 0x219b || c >= 0x219c && c <= 0x219f || c === 0x21a0 || c >= 0x21a1 && c <= 0x21a2 || c === 0x21a3 || c >= 0x21a4 && c <= 0x21a5 || c === 0x21a6 || c >= 0x21a7 && c <= 0x21ad || c === 0x21ae || c >= 0x21af && c <= 0x21cd || c >= 0x21ce && c <= 0x21cf || c >= 0x21d0 && c <= 0x21d1 || c === 0x21d2 || c === 0x21d3 || c === 0x21d4 || c >= 0x21d5 && c <= 0x21f3 || c >= 0x21f4 && c <= 0x22ff || c >= 0x2300 && c <= 0x2307 || c === 0x2308 || c === 0x2309 || c === 0x230a || c === 0x230b || c >= 0x230c && c <= 0x231f || c >= 0x2320 && c <= 0x2321 || c >= 0x2322 && c <= 0x2328 || c === 0x2329 || c === 0x232a || c >= 0x232b && c <= 0x237b || c === 0x237c || c >= 0x237d && c <= 0x239a || c >= 0x239b && c <= 0x23b3 || c >= 0x23b4 && c <= 0x23db || c >= 0x23dc && c <= 0x23e1 || c >= 0x23e2 && c <= 0x2426 || c >= 0x2427 && c <= 0x243f || c >= 0x2440 && c <= 0x244a || c >= 0x244b && c <= 0x245f || c >= 0x2500 && c <= 0x25b6 || c === 0x25b7 || c >= 0x25b8 && c <= 0x25c0 || c === 0x25c1 || c >= 0x25c2 && c <= 0x25f7 || c >= 0x25f8 && c <= 0x25ff || c >= 0x2600 && c <= 0x266e || c === 0x266f || c >= 0x2670 && c <= 0x2767 || c === 0x2768 || c === 0x2769 || c === 0x276a || c === 0x276b || c === 0x276c || c === 0x276d || c === 0x276e || c === 0x276f || c === 0x2770 || c === 0x2771 || c === 0x2772 || c === 0x2773 || c === 0x2774 || c === 0x2775 || c >= 0x2794 && c <= 0x27bf || c >= 0x27c0 && c <= 0x27c4 || c === 0x27c5 || c === 0x27c6 || c >= 0x27c7 && c <= 0x27e5 || c === 0x27e6 || c === 0x27e7 || c === 0x27e8 || c === 0x27e9 || c === 0x27ea || c === 0x27eb || c === 0x27ec || c === 0x27ed || c === 0x27ee || c === 0x27ef || c >= 0x27f0 && c <= 0x27ff || c >= 0x2800 && c <= 0x28ff || c >= 0x2900 && c <= 0x2982 || c === 0x2983 || c === 0x2984 || c === 0x2985 || c === 0x2986 || c === 0x2987 || c === 0x2988 || c === 0x2989 || c === 0x298a || c === 0x298b || c === 0x298c || c === 0x298d || c === 0x298e || c === 0x298f || c === 0x2990 || c === 0x2991 || c === 0x2992 || c === 0x2993 || c === 0x2994 || c === 0x2995 || c === 0x2996 || c === 0x2997 || c === 0x2998 || c >= 0x2999 && c <= 0x29d7 || c === 0x29d8 || c === 0x29d9 || c === 0x29da || c === 0x29db || c >= 0x29dc && c <= 0x29fb || c === 0x29fc || c === 0x29fd || c >= 0x29fe && c <= 0x2aff || c >= 0x2b00 && c <= 0x2b2f || c >= 0x2b30 && c <= 0x2b44 || c >= 0x2b45 && c <= 0x2b46 || c >= 0x2b47 && c <= 0x2b4c || c >= 0x2b4d && c <= 0x2b73 || c >= 0x2b74 && c <= 0x2b75 || c >= 0x2b76 && c <= 0x2b95 || c === 0x2b96 || c >= 0x2b97 && c <= 0x2bff || c >= 0x2e00 && c <= 0x2e01 || c === 0x2e02 || c === 0x2e03 || c === 0x2e04 || c === 0x2e05 || c >= 0x2e06 && c <= 0x2e08 || c === 0x2e09 || c === 0x2e0a || c === 0x2e0b || c === 0x2e0c || c === 0x2e0d || c >= 0x2e0e && c <= 0x2e16 || c === 0x2e17 || c >= 0x2e18 && c <= 0x2e19 || c === 0x2e1a || c === 0x2e1b || c === 0x2e1c || c === 0x2e1d || c >= 0x2e1e && c <= 0x2e1f || c === 0x2e20 || c === 0x2e21 || c === 0x2e22 || c === 0x2e23 || c === 0x2e24 || c === 0x2e25 || c === 0x2e26 || c === 0x2e27 || c === 0x2e28 || c === 0x2e29 || c >= 0x2e2a && c <= 0x2e2e || c === 0x2e2f || c >= 0x2e30 && c <= 0x2e39 || c >= 0x2e3a && c <= 0x2e3b || c >= 0x2e3c && c <= 0x2e3f || c === 0x2e40 || c === 0x2e41 || c === 0x2e42 || c >= 0x2e43 && c <= 0x2e4f || c >= 0x2e50 && c <= 0x2e51 || c === 0x2e52 || c >= 0x2e53 && c <= 0x2e7f || c >= 0x3001 && c <= 0x3003 || c === 0x3008 || c === 0x3009 || c === 0x300a || c === 0x300b || c === 0x300c || c === 0x300d || c === 0x300e || c === 0x300f || c === 0x3010 || c === 0x3011 || c >= 0x3012 && c <= 0x3013 || c === 0x3014 || c === 0x3015 || c === 0x3016 || c === 0x3017 || c === 0x3018 || c === 0x3019 || c === 0x301a || c === 0x301b || c === 0x301c || c === 0x301d || c >= 0x301e && c <= 0x301f || c === 0x3020 || c === 0x3030 || c === 0xfd3e || c === 0xfd3f || c >= 0xfe45 && c <= 0xfe46;\n  }\n});","lineCount":1000,"map":[[7,2,976,0,"Object"],[7,8,976,0],[7,9,976,0,"defineProperty"],[7,23,976,0],[7,24,976,0,"exports"],[7,31,976,0],[8,4,976,0,"enumerable"],[8,14,976,0],[9,4,976,0,"get"],[9,7,976,0],[9,18,976,0,"get"],[9,19,976,0],[10,6,976,0],[10,13,976,9,"Parser"],[10,19,976,15],[11,4,976,15],[12,2,976,15],[13,2,2,0],[13,6,2,0,"_tslib"],[13,12,2,0],[13,15,2,0,"require"],[13,22,2,0],[13,23,2,0,"_dependencyMap"],[13,37,2,0],[14,2,3,0],[14,6,3,0,"_error"],[14,12,3,0],[14,15,3,0,"require"],[14,22,3,0],[14,23,3,0,"_dependencyMap"],[14,37,3,0],[15,2,4,0],[15,6,4,0,"_types"],[15,12,4,0],[15,15,4,0,"require"],[15,22,4,0],[15,23,4,0,"_dependencyMap"],[15,37,4,0],[16,2,5,0],[16,6,5,0,"_regexGenerated"],[16,21,5,0],[16,24,5,0,"require"],[16,31,5,0],[16,32,5,0,"_dependencyMap"],[16,46,5,0],[17,2,6,0],[17,6,6,0,"_formatjsIcuSkeletonParser"],[17,32,6,0],[17,35,6,0,"require"],[17,42,6,0],[17,43,6,0,"_dependencyMap"],[17,57,6,0],[18,2,7,0],[18,6,7,0,"_dateTimePatternGenerator"],[18,31,7,0],[18,34,7,0,"require"],[18,41,7,0],[18,42,7,0,"_dependencyMap"],[18,56,7,0],[19,2,1,0],[19,6,1,4,"_a"],[19,8,1,6],[20,2,8,0],[20,6,8,4,"SPACE_SEPARATOR_START_REGEX"],[20,33,8,31],[20,36,8,34],[20,40,8,38,"RegExp"],[20,46,8,44],[20,47,8,45],[20,50,8,48],[20,51,8,49,"concat"],[20,57,8,55],[20,58,8,56,"SPACE_SEPARATOR_REGEX"],[20,73,8,77],[20,74,8,77,"SPACE_SEPARATOR_REGEX"],[20,95,8,77],[20,96,8,78,"source"],[20,102,8,84],[20,104,8,86],[20,107,8,89],[20,108,8,90],[20,109,8,91],[21,2,9,0],[21,6,9,4,"SPACE_SEPARATOR_END_REGEX"],[21,31,9,29],[21,34,9,32],[21,38,9,36,"RegExp"],[21,44,9,42],[21,45,9,43],[21,47,9,45],[21,48,9,46,"concat"],[21,54,9,52],[21,55,9,53,"SPACE_SEPARATOR_REGEX"],[21,70,9,74],[21,71,9,74,"SPACE_SEPARATOR_REGEX"],[21,92,9,74],[21,93,9,75,"source"],[21,99,9,81],[21,101,9,83],[21,105,9,87],[21,106,9,88],[21,107,9,89],[22,2,10,0],[22,11,10,9,"createLocation"],[22,25,10,23,"createLocation"],[22,26,10,24,"start"],[22,31,10,29],[22,33,10,31,"end"],[22,36,10,34],[22,38,10,36],[23,4,11,4],[23,11,11,11],[24,6,11,13,"start"],[24,11,11,18],[24,13,11,20,"start"],[24,18,11,25],[25,6,11,27,"end"],[25,9,11,30],[25,11,11,32,"end"],[26,4,11,36],[26,5,11,37],[27,2,12,0],[28,2,13,0],[29,2,14,0],[30,2,15,0],[30,6,15,4,"hasNativeStartsWith"],[30,25,15,23],[30,28,15,26],[30,29,15,27],[30,30,15,28,"String"],[30,36,15,34],[30,37,15,35,"prototype"],[30,46,15,44],[30,47,15,45,"startsWith"],[30,57,15,55],[30,61,15,59],[30,65,15,63],[30,66,15,64,"startsWith"],[30,76,15,74],[30,77,15,75],[30,80,15,78],[30,82,15,80],[30,83,15,81],[30,84,15,82],[31,2,16,0],[31,6,16,4,"hasNativeFromCodePoint"],[31,28,16,26],[31,31,16,29],[31,32,16,30],[31,33,16,31,"String"],[31,39,16,37],[31,40,16,38,"fromCodePoint"],[31,53,16,51],[32,2,17,0],[32,6,17,4,"hasNativeFromEntries"],[32,26,17,24],[32,29,17,27],[32,30,17,28],[32,31,17,29,"Object"],[32,37,17,35],[32,38,17,36,"fromEntries"],[32,49,17,47],[33,2,18,0],[33,6,18,4,"hasNativeCodePointAt"],[33,26,18,24],[33,29,18,27],[33,30,18,28],[33,31,18,29,"String"],[33,37,18,35],[33,38,18,36,"prototype"],[33,47,18,45],[33,48,18,46,"codePointAt"],[33,59,18,57],[34,2,19,0],[34,6,19,4,"hasTrimStart"],[34,18,19,16],[34,21,19,19],[34,22,19,20],[34,23,19,21,"String"],[34,29,19,27],[34,30,19,28,"prototype"],[34,39,19,37],[34,40,19,38,"trimStart"],[34,49,19,47],[35,2,20,0],[35,6,20,4,"hasTrimEnd"],[35,16,20,14],[35,19,20,17],[35,20,20,18],[35,21,20,19,"String"],[35,27,20,25],[35,28,20,26,"prototype"],[35,37,20,35],[35,38,20,36,"trimEnd"],[35,45,20,43],[36,2,21,0],[36,6,21,4,"hasNativeIsSafeInteger"],[36,28,21,26],[36,31,21,29],[36,32,21,30],[36,33,21,31,"Number"],[36,39,21,37],[36,40,21,38,"isSafeInteger"],[36,53,21,51],[37,2,22,0],[37,6,22,4,"isSafeInteger"],[37,19,22,17],[37,22,22,20,"hasNativeIsSafeInteger"],[37,44,22,42],[37,47,23,6,"Number"],[37,53,23,12],[37,54,23,13,"isSafeInteger"],[37,67,23,26],[37,70,24,6],[37,80,24,16,"n"],[37,81,24,17],[37,83,24,19],[38,4,25,8],[38,11,25,16],[38,18,25,23,"n"],[38,19,25,24],[38,24,25,29],[38,32,25,37],[38,36,26,12,"isFinite"],[38,44,26,20],[38,45,26,21,"n"],[38,46,26,22],[38,47,26,23],[38,51,27,12,"Math"],[38,55,27,16],[38,56,27,17,"floor"],[38,61,27,22],[38,62,27,23,"n"],[38,63,27,24],[38,64,27,25],[38,69,27,30,"n"],[38,70,27,31],[38,74,28,12,"Math"],[38,78,28,16],[38,79,28,17,"abs"],[38,82,28,20],[38,83,28,21,"n"],[38,84,28,22],[38,85,28,23],[38,89,28,27],[38,105,28,43],[39,2,29,4],[39,3,29,5],[40,2,30,0],[41,2,31,0],[41,6,31,4,"REGEX_SUPPORTS_U_AND_Y"],[41,28,31,26],[41,31,31,29],[41,35,31,33],[42,2,32,0],[42,6,32,4],[43,4,33,4],[43,8,33,8,"re"],[43,10,33,10],[43,13,33,13,"RE"],[43,15,33,15],[43,16,33,16],[43,59,33,59],[43,61,33,61],[43,65,33,65],[43,66,33,66],[44,4,34,4],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,4,40,4,"REGEX_SUPPORTS_U_AND_Y"],[50,26,40,26],[50,29,40,29],[50,30,40,30],[50,31,40,31,"_a"],[50,33,40,33],[50,36,40,36,"re"],[50,38,40,38],[50,39,40,39,"exec"],[50,43,40,43],[50,44,40,44],[50,47,40,47],[50,48,40,48],[50,54,40,54],[50,58,40,58],[50,62,40,62,"_a"],[50,64,40,64],[50,69,40,69],[50,74,40,74],[50,75,40,75],[50,78,40,78],[50,83,40,83],[50,84,40,84],[50,87,40,87,"_a"],[50,89,40,89],[50,90,40,90],[50,91,40,91],[50,92,40,92],[50,98,40,98],[50,101,40,101],[51,2,41,0],[51,3,41,1],[51,4,42,0],[51,11,42,7,"_"],[51,12,42,8],[51,14,42,10],[52,4,43,4,"REGEX_SUPPORTS_U_AND_Y"],[52,26,43,26],[52,29,43,29],[52,34,43,34],[53,2,44,0],[54,2,45,0],[54,6,45,4,"startsWith"],[54,16,45,14],[54,19,45,17,"hasNativeStartsWith"],[54,38,45,36],[55,2,46,6],[56,2,47,8],[56,11,47,17,"startsWith"],[56,21,47,27,"startsWith"],[56,22,47,28,"s"],[56,23,47,29],[56,25,47,31,"search"],[56,31,47,37],[56,33,47,39,"position"],[56,41,47,47],[56,43,47,49],[57,4,48,12],[57,11,48,19,"s"],[57,12,48,20],[57,13,48,21,"startsWith"],[57,23,48,31],[57,24,48,32,"search"],[57,30,48,38],[57,32,48,40,"position"],[57,40,48,48],[57,41,48,49],[58,2,49,8],[58,3,49,9],[59,2,50,6],[60,2,51,8],[60,11,51,17,"startsWith"],[60,21,51,27,"startsWith"],[60,22,51,28,"s"],[60,23,51,29],[60,25,51,31,"search"],[60,31,51,37],[60,33,51,39,"position"],[60,41,51,47],[60,43,51,49],[61,4,52,12],[61,11,52,19,"s"],[61,12,52,20],[61,13,52,21,"slice"],[61,18,52,26],[61,19,52,27,"position"],[61,27,52,35],[61,29,52,37,"position"],[61,37,52,45],[61,40,52,48,"search"],[61,46,52,54],[61,47,52,55,"length"],[61,53,52,61],[61,54,52,62],[61,59,52,67,"search"],[61,65,52,73],[62,2,53,8],[62,3,53,9],[63,2,54,0],[63,6,54,4,"fromCodePoint"],[63,19,54,17],[63,22,54,20,"hasNativeFromCodePoint"],[63,44,54,42],[63,47,55,6,"String"],[63,53,55,12],[63,54,55,13,"fromCodePoint"],[63,67,55,26],[64,2,56,6],[65,2,57,8],[65,11,57,17,"fromCodePoint"],[65,24,57,30,"fromCodePoint"],[65,25,57,30],[65,27,57,33],[66,4,58,12],[66,8,58,16,"codePoints"],[66,18,58,26],[66,21,58,29],[66,23,58,31],[67,4,59,12],[67,9,59,17],[67,13,59,21,"_i"],[67,15,59,23],[67,18,59,26],[67,19,59,27],[67,21,59,29,"_i"],[67,23,59,31],[67,26,59,34,"arguments"],[67,35,59,43],[67,36,59,44,"length"],[67,42,59,50],[67,44,59,52,"_i"],[67,46,59,54],[67,48,59,56],[67,50,59,58],[68,6,60,16,"codePoints"],[68,16,60,26],[68,17,60,27,"_i"],[68,19,60,29],[68,20,60,30],[68,23,60,33,"arguments"],[68,32,60,42],[68,33,60,43,"_i"],[68,35,60,45],[68,36,60,46],[69,4,61,12],[70,4,62,12],[70,8,62,16,"elements"],[70,16,62,24],[70,19,62,27],[70,21,62,29],[71,4,63,12],[71,8,63,16,"length"],[71,14,63,22],[71,17,63,25,"codePoints"],[71,27,63,35],[71,28,63,36,"length"],[71,34,63,42],[72,4,64,12],[72,8,64,16,"i"],[72,9,64,17],[72,12,64,20],[72,13,64,21],[73,4,65,12],[73,8,65,16,"code"],[73,12,65,20],[74,4,66,12],[74,11,66,19,"length"],[74,17,66,25],[74,20,66,28,"i"],[74,21,66,29],[74,23,66,31],[75,6,67,16,"code"],[75,10,67,20],[75,13,67,23,"codePoints"],[75,23,67,33],[75,24,67,34,"i"],[75,25,67,35],[75,27,67,37],[75,28,67,38],[76,6,68,16],[76,10,68,20,"code"],[76,14,68,24],[76,17,68,27],[76,25,68,35],[76,27,69,20],[76,33,69,26,"RangeError"],[76,43,69,36],[76,44,69,37,"code"],[76,48,69,41],[76,51,69,44],[76,79,69,72],[76,80,69,73],[77,6,70,16,"elements"],[77,14,70,24],[77,18,71,20,"code"],[77,22,71,24],[77,25,71,27],[77,32,71,34],[77,35,72,26,"String"],[77,41,72,32],[77,42,72,33,"fromCharCode"],[77,54,72,45],[77,55,72,46,"code"],[77,59,72,50],[77,60,72,51],[77,63,73,26,"String"],[77,69,73,32],[77,70,73,33,"fromCharCode"],[77,82,73,45],[77,83,73,46],[77,84,73,47],[77,85,73,48,"code"],[77,89,73,52],[77,93,73,56],[77,100,73,63],[77,105,73,68],[77,107,73,70],[77,111,73,74],[77,117,73,80],[77,119,73,83,"code"],[77,123,73,87],[77,126,73,90],[77,131,73,95],[77,134,73,99],[77,140,73,105],[77,141,73,106],[78,4,74,12],[79,4,75,12],[79,11,75,19,"elements"],[79,19,75,27],[80,2,76,8],[80,3,76,9],[81,2,77,0],[81,6,77,4,"fromEntries"],[81,17,77,15],[82,2,78,0],[83,2,79,0,"hasNativeFromEntries"],[83,22,79,20],[83,25,80,6,"Object"],[83,31,80,12],[83,32,80,13,"fromEntries"],[83,43,80,24],[84,2,81,6],[85,2,82,8],[85,11,82,17,"fromEntries"],[85,22,82,28,"fromEntries"],[85,23,82,29,"entries"],[85,30,82,36],[85,32,82,38],[86,4,83,12],[86,8,83,16,"obj"],[86,11,83,19],[86,14,83,22],[86,15,83,23],[86,16,83,24],[87,4,84,12],[87,9,84,17],[87,13,84,21,"_i"],[87,15,84,23],[87,18,84,26],[87,19,84,27],[87,21,84,29,"entries_1"],[87,30,84,38],[87,33,84,41,"entries"],[87,40,84,48],[87,42,84,50,"_i"],[87,44,84,52],[87,47,84,55,"entries_1"],[87,56,84,64],[87,57,84,65,"length"],[87,63,84,71],[87,65,84,73,"_i"],[87,67,84,75],[87,69,84,77],[87,71,84,79],[88,6,85,16],[88,10,85,20,"_a"],[88,12,85,22],[88,15,85,25,"entries_1"],[88,24,85,34],[88,25,85,35,"_i"],[88,27,85,37],[88,28,85,38],[89,8,85,40,"k"],[89,9,85,41],[89,12,85,44,"_a"],[89,14,85,46],[89,15,85,47],[89,16,85,48],[89,17,85,49],[90,8,85,51,"v"],[90,9,85,52],[90,12,85,55,"_a"],[90,14,85,57],[90,15,85,58],[90,16,85,59],[90,17,85,60],[91,6,86,16,"obj"],[91,9,86,19],[91,10,86,20,"k"],[91,11,86,21],[91,12,86,22],[91,15,86,25,"v"],[91,16,86,26],[92,4,87,12],[93,4,88,12],[93,11,88,19,"obj"],[93,14,88,22],[94,2,89,8],[94,3,89,9],[95,2,90,0],[95,6,90,4,"codePointAt"],[95,17,90,15],[95,20,90,18,"hasNativeCodePointAt"],[95,40,90,38],[96,2,91,6],[97,2,92,8],[97,11,92,17,"codePointAt"],[97,22,92,28,"codePointAt"],[97,23,92,29,"s"],[97,24,92,30],[97,26,92,32,"index"],[97,31,92,37],[97,33,92,39],[98,4,93,12],[98,11,93,19,"s"],[98,12,93,20],[98,13,93,21,"codePointAt"],[98,24,93,32],[98,25,93,33,"index"],[98,30,93,38],[98,31,93,39],[99,2,94,8],[99,3,94,9],[100,2,95,6],[101,2,96,8],[101,11,96,17,"codePointAt"],[101,22,96,28,"codePointAt"],[101,23,96,29,"s"],[101,24,96,30],[101,26,96,32,"index"],[101,31,96,37],[101,33,96,39],[102,4,97,12],[102,8,97,16,"size"],[102,12,97,20],[102,15,97,23,"s"],[102,16,97,24],[102,17,97,25,"length"],[102,23,97,31],[103,4,98,12],[103,8,98,16,"index"],[103,13,98,21],[103,16,98,24],[103,17,98,25],[103,21,98,29,"index"],[103,26,98,34],[103,30,98,38,"size"],[103,34,98,42],[103,36,98,44],[104,6,99,16],[104,13,99,23,"undefined"],[104,22,99,32],[105,4,100,12],[106,4,101,12],[106,8,101,16,"first"],[106,13,101,21],[106,16,101,24,"s"],[106,17,101,25],[106,18,101,26,"charCodeAt"],[106,28,101,36],[106,29,101,37,"index"],[106,34,101,42],[106,35,101,43],[107,4,102,12],[107,8,102,16,"second"],[107,14,102,22],[108,4,103,12],[108,11,103,19,"first"],[108,16,103,24],[108,19,103,27],[108,25,103,33],[108,29,104,16,"first"],[108,34,104,21],[108,37,104,24],[108,43,104,30],[108,47,105,16,"index"],[108,52,105,21],[108,55,105,24],[108,56,105,25],[108,61,105,30,"size"],[108,65,105,34],[108,69,106,16],[108,70,106,17,"second"],[108,76,106,23],[108,79,106,26,"s"],[108,80,106,27],[108,81,106,28,"charCodeAt"],[108,91,106,38],[108,92,106,39,"index"],[108,97,106,44],[108,100,106,47],[108,101,106,48],[108,102,106,49],[108,106,106,53],[108,112,106,59],[108,116,107,16,"second"],[108,122,107,22],[108,125,107,25],[108,131,107,31],[108,134,108,18,"first"],[108,139,108,23],[108,142,109,18],[108,143,109,20,"first"],[108,148,109,25],[108,151,109,28],[108,157,109,34],[108,161,109,39],[108,163,109,41],[108,168,109,46,"second"],[108,174,109,52],[108,177,109,55],[108,183,109,61],[108,184,109,62],[108,187,109,65],[108,194,109,72],[109,2,110,8],[109,3,110,9],[110,2,111,0],[110,6,111,4,"trimStart"],[110,15,111,13],[110,18,111,16,"hasTrimStart"],[110,30,111,28],[111,2,112,6],[112,2,113,8],[112,11,113,17,"trimStart"],[112,20,113,26,"trimStart"],[112,21,113,27,"s"],[112,22,113,28],[112,24,113,30],[113,4,114,12],[113,11,114,19,"s"],[113,12,114,20],[113,13,114,21,"trimStart"],[113,22,114,30],[113,23,114,31],[113,24,114,32],[114,2,115,8],[114,3,115,9],[115,2,116,6],[116,2,117,8],[116,11,117,17,"trimStart"],[116,20,117,26,"trimStart"],[116,21,117,27,"s"],[116,22,117,28],[116,24,117,30],[117,4,118,12],[117,11,118,19,"s"],[117,12,118,20],[117,13,118,21,"replace"],[117,20,118,28],[117,21,118,29,"SPACE_SEPARATOR_START_REGEX"],[117,48,118,56],[117,50,118,58],[117,52,118,60],[117,53,118,61],[118,2,119,8],[118,3,119,9],[119,2,120,0],[119,6,120,4,"trimEnd"],[119,13,120,11],[119,16,120,14,"hasTrimEnd"],[119,26,120,24],[120,2,121,6],[121,2,122,8],[121,11,122,17,"trimEnd"],[121,18,122,24,"trimEnd"],[121,19,122,25,"s"],[121,20,122,26],[121,22,122,28],[122,4,123,12],[122,11,123,19,"s"],[122,12,123,20],[122,13,123,21,"trimEnd"],[122,20,123,28],[122,21,123,29],[122,22,123,30],[123,2,124,8],[123,3,124,9],[124,2,125,6],[125,2,126,8],[125,11,126,17,"trimEnd"],[125,18,126,24,"trimEnd"],[125,19,126,25,"s"],[125,20,126,26],[125,22,126,28],[126,4,127,12],[126,11,127,19,"s"],[126,12,127,20],[126,13,127,21,"replace"],[126,20,127,28],[126,21,127,29,"SPACE_SEPARATOR_END_REGEX"],[126,46,127,54],[126,48,127,56],[126,50,127,58],[126,51,127,59],[127,2,128,8],[127,3,128,9],[128,2,129,0],[129,2,130,0],[129,11,130,9,"RE"],[129,13,130,11,"RE"],[129,14,130,12,"s"],[129,15,130,13],[129,17,130,15,"flag"],[129,21,130,19],[129,23,130,21],[130,4,131,4],[130,11,131,11],[130,15,131,15,"RegExp"],[130,21,131,21],[130,22,131,22,"s"],[130,23,131,23],[130,25,131,25,"flag"],[130,29,131,29],[130,30,131,30],[131,2,132,0],[132,2,133,0],[133,2,134,0],[133,6,134,4,"matchIdentifierAtIndex"],[133,28,134,26],[134,2,135,0],[134,6,135,4,"REGEX_SUPPORTS_U_AND_Y"],[134,28,135,26],[134,30,135,28],[135,4,136,4],[136,4,137,4],[136,8,137,8,"IDENTIFIER_PREFIX_RE_1"],[136,30,137,30],[136,33,137,33,"RE"],[136,35,137,35],[136,36,137,36],[136,79,137,79],[136,81,137,81],[136,85,137,85],[136,86,137,86],[137,4,138,4,"matchIdentifierAtIndex"],[137,26,138,26],[137,29,138,29],[137,38,138,38,"matchIdentifierAtIndex"],[137,60,138,60,"matchIdentifierAtIndex"],[137,61,138,61,"s"],[137,62,138,62],[137,64,138,64,"index"],[137,69,138,69],[137,71,138,71],[138,6,139,8],[138,10,139,12,"_a"],[138,12,139,14],[139,6,140,8,"IDENTIFIER_PREFIX_RE_1"],[139,28,140,30],[139,29,140,31,"lastIndex"],[139,38,140,40],[139,41,140,43,"index"],[139,46,140,48],[140,6,141,8],[140,10,141,12,"match"],[140,15,141,17],[140,18,141,20,"IDENTIFIER_PREFIX_RE_1"],[140,40,141,42],[140,41,141,43,"exec"],[140,45,141,47],[140,46,141,48,"s"],[140,47,141,49],[140,48,141,50],[141,6,142,8],[141,13,142,15],[141,14,142,16,"_a"],[141,16,142,18],[141,19,142,21,"match"],[141,24,142,26],[141,25,142,27],[141,26,142,28],[141,27,142,29],[141,33,142,35],[141,37,142,39],[141,41,142,43,"_a"],[141,43,142,45],[141,48,142,50],[141,53,142,55],[141,54,142,56],[141,57,142,59,"_a"],[141,59,142,61],[141,62,142,64],[141,64,142,66],[142,4,143,4],[142,5,143,5],[143,2,144,0],[143,3,144,1],[143,9,145,5],[144,4,146,4],[145,4,147,4,"matchIdentifierAtIndex"],[145,26,147,26],[145,29,147,29],[145,38,147,38,"matchIdentifierAtIndex"],[145,60,147,60,"matchIdentifierAtIndex"],[145,61,147,61,"s"],[145,62,147,62],[145,64,147,64,"index"],[145,69,147,69],[145,71,147,71],[146,6,148,8],[146,10,148,12,"match"],[146,15,148,17],[146,18,148,20],[146,20,148,22],[147,6,149,8],[147,13,149,15],[147,17,149,19],[147,19,149,21],[148,8,150,12],[148,12,150,16,"c"],[148,13,150,17],[148,16,150,20,"codePointAt"],[148,27,150,31],[148,28,150,32,"s"],[148,29,150,33],[148,31,150,35,"index"],[148,36,150,40],[148,37,150,41],[149,8,151,12],[149,12,151,16,"c"],[149,13,151,17],[149,18,151,22,"undefined"],[149,27,151,31],[149,31,151,35,"_isWhiteSpace"],[149,44,151,48],[149,45,151,49,"c"],[149,46,151,50],[149,47,151,51],[149,51,151,55,"_isPatternSyntax"],[149,67,151,71],[149,68,151,72,"c"],[149,69,151,73],[149,70,151,74],[149,72,151,76],[150,10,152,16],[151,8,153,12],[152,8,154,12,"match"],[152,13,154,17],[152,14,154,18,"push"],[152,18,154,22],[152,19,154,23,"c"],[152,20,154,24],[152,21,154,25],[153,8,155,12,"index"],[153,13,155,17],[153,17,155,21,"c"],[153,18,155,22],[153,22,155,26],[153,29,155,33],[153,32,155,36],[153,33,155,37],[153,36,155,40],[153,37,155,41],[154,6,156,8],[155,6,157,8],[155,13,157,15,"fromCodePoint"],[155,26,157,28],[155,27,157,29,"apply"],[155,32,157,34],[155,33,157,35],[155,38,157,40],[155,39,157,41],[155,41,157,43,"match"],[155,46,157,48],[155,47,157,49],[156,4,158,4],[156,5,158,5],[157,2,159,0],[158,2,160,0],[158,6,160,4,"Parser"],[158,12,160,10],[158,15,160,13],[158,28,160,28],[158,40,160,40],[159,4,161,4],[159,13,161,13,"Parser"],[159,19,161,19,"Parser"],[159,20,161,20,"message"],[159,27,161,27],[159,29,161,29,"options"],[159,36,161,36],[159,38,161,38],[160,6,162,8],[160,10,162,12,"options"],[160,17,162,19],[160,22,162,24],[160,27,162,29],[160,28,162,30],[160,30,162,32],[161,8,162,34,"options"],[161,15,162,41],[161,18,162,44],[161,19,162,45],[161,20,162,46],[162,6,162,48],[163,6,163,8],[163,10,163,12],[163,11,163,13,"message"],[163,18,163,20],[163,21,163,23,"message"],[163,28,163,30],[164,6,164,8],[164,10,164,12],[164,11,164,13,"position"],[164,19,164,21],[164,22,164,24],[165,8,164,26,"offset"],[165,14,164,32],[165,16,164,34],[165,17,164,35],[166,8,164,37,"line"],[166,12,164,41],[166,14,164,43],[166,15,164,44],[167,8,164,46,"column"],[167,14,164,52],[167,16,164,54],[168,6,164,56],[168,7,164,57],[169,6,165,8],[169,10,165,12],[169,11,165,13,"ignoreTag"],[169,20,165,22],[169,23,165,25],[169,24,165,26],[169,25,165,27,"options"],[169,32,165,34],[169,33,165,35,"ignoreTag"],[169,42,165,44],[170,6,166,8],[170,10,166,12],[170,11,166,13,"locale"],[170,17,166,19],[170,20,166,22,"options"],[170,27,166,29],[170,28,166,30,"locale"],[170,34,166,36],[171,6,167,8],[171,10,167,12],[171,11,167,13,"requiresOtherClause"],[171,30,167,32],[171,33,167,35],[171,34,167,36],[171,35,167,37,"options"],[171,42,167,44],[171,43,167,45,"requiresOtherClause"],[171,62,167,64],[172,6,168,8],[172,10,168,12],[172,11,168,13,"shouldParseSkeletons"],[172,31,168,33],[172,34,168,36],[172,35,168,37],[172,36,168,38,"options"],[172,43,168,45],[172,44,168,46,"shouldParseSkeletons"],[172,64,168,66],[173,4,169,4],[174,4,170,4,"Parser"],[174,10,170,10],[174,11,170,11,"prototype"],[174,20,170,20],[174,21,170,21,"parse"],[174,26,170,26],[174,29,170,29],[174,41,170,41],[175,6,171,8],[175,10,171,12],[175,14,171,16],[175,15,171,17,"offset"],[175,21,171,23],[175,22,171,24],[175,23,171,25],[175,28,171,30],[175,29,171,31],[175,31,171,33],[176,8,172,12],[176,14,172,18,"Error"],[176,19,172,23],[176,20,172,24],[176,50,172,54],[176,51,172,55],[177,6,173,8],[178,6,174,8],[178,13,174,15],[178,17,174,19],[178,18,174,20,"parseMessage"],[178,30,174,32],[178,31,174,33],[178,32,174,34],[178,34,174,36],[178,36,174,38],[178,38,174,40],[178,43,174,45],[178,44,174,46],[179,4,175,4],[179,5,175,5],[180,4,176,4,"Parser"],[180,10,176,10],[180,11,176,11,"prototype"],[180,20,176,20],[180,21,176,21,"parseMessage"],[180,33,176,33],[180,36,176,36],[180,46,176,46,"nestingLevel"],[180,58,176,58],[180,60,176,60,"parentArgType"],[180,73,176,73],[180,75,176,75,"expectingCloseTag"],[180,92,176,92],[180,94,176,94],[181,6,177,8],[181,10,177,12,"elements"],[181,18,177,20],[181,21,177,23],[181,23,177,25],[182,6,178,8],[182,13,178,15],[182,14,178,16],[182,18,178,20],[182,19,178,21,"isEOF"],[182,24,178,26],[182,25,178,27],[182,26,178,28],[182,28,178,30],[183,8,179,12],[183,12,179,16,"char"],[183,16,179,20],[183,19,179,23],[183,23,179,27],[183,24,179,28,"char"],[183,28,179,32],[183,29,179,33],[183,30,179,34],[184,8,180,12],[184,12,180,16,"char"],[184,16,180,20],[184,21,180,25],[184,24,180,28],[184,25,180,29],[184,36,180,40],[185,10,181,16],[185,14,181,20,"result"],[185,20,181,26],[185,23,181,29],[185,27,181,33],[185,28,181,34,"parseArgument"],[185,41,181,47],[185,42,181,48,"nestingLevel"],[185,54,181,60],[185,56,181,62,"expectingCloseTag"],[185,73,181,79],[185,74,181,80],[186,10,182,16],[186,14,182,20,"result"],[186,20,182,26],[186,21,182,27,"err"],[186,24,182,30],[186,26,182,32],[187,12,183,20],[187,19,183,27,"result"],[187,25,183,33],[188,10,184,16],[189,10,185,16,"elements"],[189,18,185,24],[189,19,185,25,"push"],[189,23,185,29],[189,24,185,30,"result"],[189,30,185,36],[189,31,185,37,"val"],[189,34,185,40],[189,35,185,41],[190,8,186,12],[190,9,186,13],[190,15,187,17],[190,19,187,21,"char"],[190,23,187,25],[190,28,187,30],[190,31,187,33],[190,32,187,34],[190,45,187,47,"nestingLevel"],[190,57,187,59],[190,60,187,62],[190,61,187,63],[190,63,187,65],[191,10,188,16],[192,8,189,12],[192,9,189,13],[192,15,190,17],[192,19,190,21,"char"],[192,23,190,25],[192,28,190,30],[192,30,190,32],[192,31,190,33],[192,45,191,17,"parentArgType"],[192,58,191,30],[192,63,191,35],[192,71,191,43],[192,75,191,47,"parentArgType"],[192,88,191,60],[192,93,191,65],[192,108,191,80],[192,109,191,81],[192,111,191,83],[193,10,192,16],[193,14,192,20,"position"],[193,22,192,28],[193,25,192,31],[193,29,192,35],[193,30,192,36,"clonePosition"],[193,43,192,49],[193,44,192,50],[193,45,192,51],[194,10,193,16],[194,14,193,20],[194,15,193,21,"bump"],[194,19,193,25],[194,20,193,26],[194,21,193,27],[195,10,194,16,"elements"],[195,18,194,24],[195,19,194,25,"push"],[195,23,194,29],[195,24,194,30],[196,12,195,20,"type"],[196,16,195,24],[196,18,195,26,"TYPE"],[196,24,195,30],[196,25,195,30,"TYPE"],[196,29,195,30],[196,30,195,31,"pound"],[196,35,195,36],[197,12,196,20,"location"],[197,20,196,28],[197,22,196,30,"createLocation"],[197,36,196,44],[197,37,196,45,"position"],[197,45,196,53],[197,47,196,55],[197,51,196,59],[197,52,196,60,"clonePosition"],[197,65,196,73],[197,66,196,74],[197,67,196,75],[198,10,197,16],[198,11,197,17],[198,12,197,18],[199,8,198,12],[199,9,198,13],[199,15,199,17],[199,19,199,21,"char"],[199,23,199,25],[199,28,199,30],[199,30,199,32],[199,31,199,33],[199,44,200,16],[199,45,200,17],[199,49,200,21],[199,50,200,22,"ignoreTag"],[199,59,200,31],[199,63,201,16],[199,67,201,20],[199,68,201,21,"peek"],[199,72,201,25],[199,73,201,26],[199,74,201,27],[199,79,201,32],[199,81,201,34],[199,82,201,35],[200,8,201,35],[200,10,202,14],[201,10,203,16],[201,14,203,20,"expectingCloseTag"],[201,31,203,37],[201,33,203,39],[202,12,204,20],[203,10,205,16],[203,11,205,17],[203,17,206,21],[204,12,207,20],[204,19,207,27],[204,23,207,31],[204,24,207,32,"error"],[204,29,207,37],[204,30,207,38,"ErrorKind"],[204,36,207,47],[204,37,207,47,"ErrorKind"],[204,46,207,47],[204,47,207,48,"UNMATCHED_CLOSING_TAG"],[204,68,207,69],[204,70,207,71,"createLocation"],[204,84,207,85],[204,85,207,86],[204,89,207,90],[204,90,207,91,"clonePosition"],[204,103,207,104],[204,104,207,105],[204,105,207,106],[204,107,207,108],[204,111,207,112],[204,112,207,113,"clonePosition"],[204,125,207,126],[204,126,207,127],[204,127,207,128],[204,128,207,129],[204,129,207,130],[205,10,208,16],[206,8,209,12],[206,9,209,13],[206,15,210,17],[206,19,210,21,"char"],[206,23,210,25],[206,28,210,30],[206,30,210,32],[206,31,210,33],[206,44,211,16],[206,45,211,17],[206,49,211,21],[206,50,211,22,"ignoreTag"],[206,59,211,31],[206,63,212,16,"_isAlpha"],[206,71,212,24],[206,72,212,25],[206,76,212,29],[206,77,212,30,"peek"],[206,81,212,34],[206,82,212,35],[206,83,212,36],[206,87,212,40],[206,88,212,41],[206,89,212,42],[206,91,212,44],[207,10,213,16],[207,14,213,20,"result"],[207,20,213,26],[207,23,213,29],[207,27,213,33],[207,28,213,34,"parseTag"],[207,36,213,42],[207,37,213,43,"nestingLevel"],[207,49,213,55],[207,51,213,57,"parentArgType"],[207,64,213,70],[207,65,213,71],[208,10,214,16],[208,14,214,20,"result"],[208,20,214,26],[208,21,214,27,"err"],[208,24,214,30],[208,26,214,32],[209,12,215,20],[209,19,215,27,"result"],[209,25,215,33],[210,10,216,16],[211,10,217,16,"elements"],[211,18,217,24],[211,19,217,25,"push"],[211,23,217,29],[211,24,217,30,"result"],[211,30,217,36],[211,31,217,37,"val"],[211,34,217,40],[211,35,217,41],[212,8,218,12],[212,9,218,13],[212,15,219,17],[213,10,220,16],[213,14,220,20,"result"],[213,20,220,26],[213,23,220,29],[213,27,220,33],[213,28,220,34,"parseLiteral"],[213,40,220,46],[213,41,220,47,"nestingLevel"],[213,53,220,59],[213,55,220,61,"parentArgType"],[213,68,220,74],[213,69,220,75],[214,10,221,16],[214,14,221,20,"result"],[214,20,221,26],[214,21,221,27,"err"],[214,24,221,30],[214,26,221,32],[215,12,222,20],[215,19,222,27,"result"],[215,25,222,33],[216,10,223,16],[217,10,224,16,"elements"],[217,18,224,24],[217,19,224,25,"push"],[217,23,224,29],[217,24,224,30,"result"],[217,30,224,36],[217,31,224,37,"val"],[217,34,224,40],[217,35,224,41],[218,8,225,12],[219,6,226,8],[220,6,227,8],[220,13,227,15],[221,8,227,17,"val"],[221,11,227,20],[221,13,227,22,"elements"],[221,21,227,30],[222,8,227,32,"err"],[222,11,227,35],[222,13,227,37],[223,6,227,42],[223,7,227,43],[224,4,228,4],[224,5,228,5],[225,4,229,4],[226,0,230,0],[227,0,231,0],[228,0,232,0],[229,0,233,0],[230,0,234,0],[231,0,235,0],[232,0,236,0],[233,0,237,0],[234,0,238,0],[235,0,239,0],[236,0,240,0],[237,0,241,0],[238,0,242,0],[239,0,243,0],[240,0,244,0],[241,0,245,0],[242,0,246,0],[243,4,247,4,"Parser"],[243,10,247,10],[243,11,247,11,"prototype"],[243,20,247,20],[243,21,247,21,"parseTag"],[243,29,247,29],[243,32,247,32],[243,42,247,42,"nestingLevel"],[243,54,247,54],[243,56,247,56,"parentArgType"],[243,69,247,69],[243,71,247,71],[244,6,248,8],[244,10,248,12,"startPosition"],[244,23,248,25],[244,26,248,28],[244,30,248,32],[244,31,248,33,"clonePosition"],[244,44,248,46],[244,45,248,47],[244,46,248,48],[245,6,249,8],[245,10,249,12],[245,11,249,13,"bump"],[245,15,249,17],[245,16,249,18],[245,17,249,19],[245,18,249,20],[245,19,249,21],[246,6,250,8],[246,10,250,12,"tagName"],[246,17,250,19],[246,20,250,22],[246,24,250,26],[246,25,250,27,"parseTagName"],[246,37,250,39],[246,38,250,40],[246,39,250,41],[247,6,251,8],[247,10,251,12],[247,11,251,13,"bumpSpace"],[247,20,251,22],[247,21,251,23],[247,22,251,24],[248,6,252,8],[248,10,252,12],[248,14,252,16],[248,15,252,17,"bumpIf"],[248,21,252,23],[248,22,252,24],[248,26,252,28],[248,27,252,29],[248,29,252,31],[249,8,253,12],[250,8,254,12],[250,15,254,19],[251,10,255,16,"val"],[251,13,255,19],[251,15,255,21],[252,12,256,20,"type"],[252,16,256,24],[252,18,256,26,"TYPE"],[252,24,256,30],[252,25,256,30,"TYPE"],[252,29,256,30],[252,30,256,31,"literal"],[252,37,256,38],[253,12,257,20,"value"],[253,17,257,25],[253,19,257,27],[253,22,257,30],[253,23,257,31,"concat"],[253,29,257,37],[253,30,257,38,"tagName"],[253,37,257,45],[253,39,257,47],[253,43,257,51],[253,44,257,52],[254,12,258,20,"location"],[254,20,258,28],[254,22,258,30,"createLocation"],[254,36,258,44],[254,37,258,45,"startPosition"],[254,50,258,58],[254,52,258,60],[254,56,258,64],[254,57,258,65,"clonePosition"],[254,70,258,78],[254,71,258,79],[254,72,258,80],[255,10,259,16],[255,11,259,17],[256,10,260,16,"err"],[256,13,260,19],[256,15,260,21],[257,8,261,12],[257,9,261,13],[258,6,262,8],[258,7,262,9],[258,13,263,13],[258,17,263,17],[258,21,263,21],[258,22,263,22,"bumpIf"],[258,28,263,28],[258,29,263,29],[258,32,263,32],[258,33,263,33],[258,35,263,35],[259,8,264,12],[259,12,264,16,"childrenResult"],[259,26,264,30],[259,29,264,33],[259,33,264,37],[259,34,264,38,"parseMessage"],[259,46,264,50],[259,47,264,51,"nestingLevel"],[259,59,264,63],[259,62,264,66],[259,63,264,67],[259,65,264,69,"parentArgType"],[259,78,264,82],[259,80,264,84],[259,84,264,88],[259,85,264,89],[260,8,265,12],[260,12,265,16,"childrenResult"],[260,26,265,30],[260,27,265,31,"err"],[260,30,265,34],[260,32,265,36],[261,10,266,16],[261,17,266,23,"childrenResult"],[261,31,266,37],[262,8,267,12],[263,8,268,12],[263,12,268,16,"children"],[263,20,268,24],[263,23,268,27,"childrenResult"],[263,37,268,41],[263,38,268,42,"val"],[263,41,268,45],[264,8,269,12],[265,8,270,12],[265,12,270,16,"endTagStartPosition"],[265,31,270,35],[265,34,270,38],[265,38,270,42],[265,39,270,43,"clonePosition"],[265,52,270,56],[265,53,270,57],[265,54,270,58],[266,8,271,12],[266,12,271,16],[266,16,271,20],[266,17,271,21,"bumpIf"],[266,23,271,27],[266,24,271,28],[266,28,271,32],[266,29,271,33],[266,31,271,35],[267,10,272,16],[267,14,272,20],[267,18,272,24],[267,19,272,25,"isEOF"],[267,24,272,30],[267,25,272,31],[267,26,272,32],[267,30,272,36],[267,31,272,37,"_isAlpha"],[267,39,272,45],[267,40,272,46],[267,44,272,50],[267,45,272,51,"char"],[267,49,272,55],[267,50,272,56],[267,51,272,57],[267,52,272,58],[267,54,272,60],[268,12,273,20],[268,19,273,27],[268,23,273,31],[268,24,273,32,"error"],[268,29,273,37],[268,30,273,38,"ErrorKind"],[268,36,273,47],[268,37,273,47,"ErrorKind"],[268,46,273,47],[268,47,273,48,"INVALID_TAG"],[268,58,273,59],[268,60,273,61,"createLocation"],[268,74,273,75],[268,75,273,76,"endTagStartPosition"],[268,94,273,95],[268,96,273,97],[268,100,273,101],[268,101,273,102,"clonePosition"],[268,114,273,115],[268,115,273,116],[268,116,273,117],[268,117,273,118],[268,118,273,119],[269,10,274,16],[270,10,275,16],[270,14,275,20,"closingTagNameStartPosition"],[270,41,275,47],[270,44,275,50],[270,48,275,54],[270,49,275,55,"clonePosition"],[270,62,275,68],[270,63,275,69],[270,64,275,70],[271,10,276,16],[271,14,276,20,"closingTagName"],[271,28,276,34],[271,31,276,37],[271,35,276,41],[271,36,276,42,"parseTagName"],[271,48,276,54],[271,49,276,55],[271,50,276,56],[272,10,277,16],[272,14,277,20,"tagName"],[272,21,277,27],[272,26,277,32,"closingTagName"],[272,40,277,46],[272,42,277,48],[273,12,278,20],[273,19,278,27],[273,23,278,31],[273,24,278,32,"error"],[273,29,278,37],[273,30,278,38,"ErrorKind"],[273,36,278,47],[273,37,278,47,"ErrorKind"],[273,46,278,47],[273,47,278,48,"UNMATCHED_CLOSING_TAG"],[273,68,278,69],[273,70,278,71,"createLocation"],[273,84,278,85],[273,85,278,86,"closingTagNameStartPosition"],[273,112,278,113],[273,114,278,115],[273,118,278,119],[273,119,278,120,"clonePosition"],[273,132,278,133],[273,133,278,134],[273,134,278,135],[273,135,278,136],[273,136,278,137],[274,10,279,16],[275,10,280,16],[275,14,280,20],[275,15,280,21,"bumpSpace"],[275,24,280,30],[275,25,280,31],[275,26,280,32],[276,10,281,16],[276,14,281,20],[276,15,281,21],[276,19,281,25],[276,20,281,26,"bumpIf"],[276,26,281,32],[276,27,281,33],[276,30,281,36],[276,31,281,37],[276,33,281,39],[277,12,282,20],[277,19,282,27],[277,23,282,31],[277,24,282,32,"error"],[277,29,282,37],[277,30,282,38,"ErrorKind"],[277,36,282,47],[277,37,282,47,"ErrorKind"],[277,46,282,47],[277,47,282,48,"INVALID_TAG"],[277,58,282,59],[277,60,282,61,"createLocation"],[277,74,282,75],[277,75,282,76,"endTagStartPosition"],[277,94,282,95],[277,96,282,97],[277,100,282,101],[277,101,282,102,"clonePosition"],[277,114,282,115],[277,115,282,116],[277,116,282,117],[277,117,282,118],[277,118,282,119],[278,10,283,16],[279,10,284,16],[279,17,284,23],[280,12,285,20,"val"],[280,15,285,23],[280,17,285,25],[281,14,286,24,"type"],[281,18,286,28],[281,20,286,30,"TYPE"],[281,26,286,34],[281,27,286,34,"TYPE"],[281,31,286,34],[281,32,286,35,"tag"],[281,35,286,38],[282,14,287,24,"value"],[282,19,287,29],[282,21,287,31,"tagName"],[282,28,287,38],[283,14,288,24,"children"],[283,22,288,32],[283,24,288,34,"children"],[283,32,288,42],[284,14,289,24,"location"],[284,22,289,32],[284,24,289,34,"createLocation"],[284,38,289,48],[284,39,289,49,"startPosition"],[284,52,289,62],[284,54,289,64],[284,58,289,68],[284,59,289,69,"clonePosition"],[284,72,289,82],[284,73,289,83],[284,74,289,84],[285,12,290,20],[285,13,290,21],[286,12,291,20,"err"],[286,15,291,23],[286,17,291,25],[287,10,292,16],[287,11,292,17],[288,8,293,12],[288,9,293,13],[288,15,294,17],[289,10,295,16],[289,17,295,23],[289,21,295,27],[289,22,295,28,"error"],[289,27,295,33],[289,28,295,34,"ErrorKind"],[289,34,295,43],[289,35,295,43,"ErrorKind"],[289,44,295,43],[289,45,295,44,"UNCLOSED_TAG"],[289,57,295,56],[289,59,295,58,"createLocation"],[289,73,295,72],[289,74,295,73,"startPosition"],[289,87,295,86],[289,89,295,88],[289,93,295,92],[289,94,295,93,"clonePosition"],[289,107,295,106],[289,108,295,107],[289,109,295,108],[289,110,295,109],[289,111,295,110],[290,8,296,12],[291,6,297,8],[291,7,297,9],[291,13,298,13],[292,8,299,12],[292,15,299,19],[292,19,299,23],[292,20,299,24,"error"],[292,25,299,29],[292,26,299,30,"ErrorKind"],[292,32,299,39],[292,33,299,39,"ErrorKind"],[292,42,299,39],[292,43,299,40,"INVALID_TAG"],[292,54,299,51],[292,56,299,53,"createLocation"],[292,70,299,67],[292,71,299,68,"startPosition"],[292,84,299,81],[292,86,299,83],[292,90,299,87],[292,91,299,88,"clonePosition"],[292,104,299,101],[292,105,299,102],[292,106,299,103],[292,107,299,104],[292,108,299,105],[293,6,300,8],[294,4,301,4],[294,5,301,5],[295,4,302,4],[296,0,303,0],[297,0,304,0],[298,4,305,4,"Parser"],[298,10,305,10],[298,11,305,11,"prototype"],[298,20,305,20],[298,21,305,21,"parseTagName"],[298,33,305,33],[298,36,305,36],[298,48,305,48],[299,6,306,8],[299,10,306,12,"startOffset"],[299,21,306,23],[299,24,306,26],[299,28,306,30],[299,29,306,31,"offset"],[299,35,306,37],[299,36,306,38],[299,37,306,39],[300,6,307,8],[300,10,307,12],[300,11,307,13,"bump"],[300,15,307,17],[300,16,307,18],[300,17,307,19],[300,18,307,20],[300,19,307,21],[301,6,308,8],[301,13,308,15],[301,14,308,16],[301,18,308,20],[301,19,308,21,"isEOF"],[301,24,308,26],[301,25,308,27],[301,26,308,28],[301,30,308,32,"_isPotentialElementNameChar"],[301,57,308,59],[301,58,308,60],[301,62,308,64],[301,63,308,65,"char"],[301,67,308,69],[301,68,308,70],[301,69,308,71],[301,70,308,72],[301,72,308,74],[302,8,309,12],[302,12,309,16],[302,13,309,17,"bump"],[302,17,309,21],[302,18,309,22],[302,19,309,23],[303,6,310,8],[304,6,311,8],[304,13,311,15],[304,17,311,19],[304,18,311,20,"message"],[304,25,311,27],[304,26,311,28,"slice"],[304,31,311,33],[304,32,311,34,"startOffset"],[304,43,311,45],[304,45,311,47],[304,49,311,51],[304,50,311,52,"offset"],[304,56,311,58],[304,57,311,59],[304,58,311,60],[304,59,311,61],[305,4,312,4],[305,5,312,5],[306,4,313,4,"Parser"],[306,10,313,10],[306,11,313,11,"prototype"],[306,20,313,20],[306,21,313,21,"parseLiteral"],[306,33,313,33],[306,36,313,36],[306,46,313,46,"nestingLevel"],[306,58,313,58],[306,60,313,60,"parentArgType"],[306,73,313,73],[306,75,313,75],[307,6,314,8],[307,10,314,12,"start"],[307,15,314,17],[307,18,314,20],[307,22,314,24],[307,23,314,25,"clonePosition"],[307,36,314,38],[307,37,314,39],[307,38,314,40],[308,6,315,8],[308,10,315,12,"value"],[308,15,315,17],[308,18,315,20],[308,20,315,22],[309,6,316,8],[309,13,316,15],[309,17,316,19],[309,19,316,21],[310,8,317,12],[310,12,317,16,"parseQuoteResult"],[310,28,317,32],[310,31,317,35],[310,35,317,39],[310,36,317,40,"tryParseQuote"],[310,49,317,53],[310,50,317,54,"parentArgType"],[310,63,317,67],[310,64,317,68],[311,8,318,12],[311,12,318,16,"parseQuoteResult"],[311,28,318,32],[311,30,318,34],[312,10,319,16,"value"],[312,15,319,21],[312,19,319,25,"parseQuoteResult"],[312,35,319,41],[313,10,320,16],[314,8,321,12],[315,8,322,12],[315,12,322,16,"parseUnquotedResult"],[315,31,322,35],[315,34,322,38],[315,38,322,42],[315,39,322,43,"tryParseUnquoted"],[315,55,322,59],[315,56,322,60,"nestingLevel"],[315,68,322,72],[315,70,322,74,"parentArgType"],[315,83,322,87],[315,84,322,88],[316,8,323,12],[316,12,323,16,"parseUnquotedResult"],[316,31,323,35],[316,33,323,37],[317,10,324,16,"value"],[317,15,324,21],[317,19,324,25,"parseUnquotedResult"],[317,38,324,44],[318,10,325,16],[319,8,326,12],[320,8,327,12],[320,12,327,16,"parseLeftAngleResult"],[320,32,327,36],[320,35,327,39],[320,39,327,43],[320,40,327,44,"tryParseLeftAngleBracket"],[320,64,327,68],[320,65,327,69],[320,66,327,70],[321,8,328,12],[321,12,328,16,"parseLeftAngleResult"],[321,32,328,36],[321,34,328,38],[322,10,329,16,"value"],[322,15,329,21],[322,19,329,25,"parseLeftAngleResult"],[322,39,329,45],[323,10,330,16],[324,8,331,12],[325,8,332,12],[326,6,333,8],[327,6,334,8],[327,10,334,12,"location"],[327,18,334,20],[327,21,334,23,"createLocation"],[327,35,334,37],[327,36,334,38,"start"],[327,41,334,43],[327,43,334,45],[327,47,334,49],[327,48,334,50,"clonePosition"],[327,61,334,63],[327,62,334,64],[327,63,334,65],[327,64,334,66],[328,6,335,8],[328,13,335,15],[329,8,336,12,"val"],[329,11,336,15],[329,13,336,17],[330,10,336,19,"type"],[330,14,336,23],[330,16,336,25,"TYPE"],[330,22,336,29],[330,23,336,29,"TYPE"],[330,27,336,29],[330,28,336,30,"literal"],[330,35,336,37],[331,10,336,39,"value"],[331,15,336,44],[331,17,336,46,"value"],[331,22,336,51],[332,10,336,53,"location"],[332,18,336,61],[332,20,336,63,"location"],[333,8,336,72],[333,9,336,73],[334,8,337,12,"err"],[334,11,337,15],[334,13,337,17],[335,6,338,8],[335,7,338,9],[336,4,339,4],[336,5,339,5],[337,4,340,4,"Parser"],[337,10,340,10],[337,11,340,11,"prototype"],[337,20,340,20],[337,21,340,21,"tryParseLeftAngleBracket"],[337,45,340,45],[337,48,340,48],[337,60,340,60],[338,6,341,8],[338,10,341,12],[338,11,341,13],[338,15,341,17],[338,16,341,18,"isEOF"],[338,21,341,23],[338,22,341,24],[338,23,341,25],[338,27,342,12],[338,31,342,16],[338,32,342,17,"char"],[338,36,342,21],[338,37,342,22],[338,38,342,23],[338,43,342,28],[338,45,342,30],[338,46,342,31],[338,60,343,13],[338,64,343,17],[338,65,343,18,"ignoreTag"],[338,74,343,27],[339,6,344,16],[340,6,345,16],[340,7,345,17,"_isAlphaOrSlash"],[340,22,345,32],[340,23,345,33],[340,27,345,37],[340,28,345,38,"peek"],[340,32,345,42],[340,33,345,43],[340,34,345,44],[340,38,345,48],[340,39,345,49],[340,40,345,50],[340,41,345,51],[340,43,345,53],[341,8,346,12],[341,12,346,16],[341,13,346,17,"bump"],[341,17,346,21],[341,18,346,22],[341,19,346,23],[341,20,346,24],[341,21,346,25],[342,8,347,12],[342,15,347,19],[342,18,347,22],[343,6,348,8],[344,6,349,8],[344,13,349,15],[344,17,349,19],[345,4,350,4],[345,5,350,5],[346,4,351,4],[347,0,352,0],[348,0,353,0],[349,0,354,0],[350,0,355,0],[351,4,356,4,"Parser"],[351,10,356,10],[351,11,356,11,"prototype"],[351,20,356,20],[351,21,356,21,"tryParseQuote"],[351,34,356,34],[351,37,356,37],[351,47,356,47,"parentArgType"],[351,60,356,60],[351,62,356,62],[352,6,357,8],[352,10,357,12],[352,14,357,16],[352,15,357,17,"isEOF"],[352,20,357,22],[352,21,357,23],[352,22,357,24],[352,26,357,28],[352,30,357,32],[352,31,357,33,"char"],[352,35,357,37],[352,36,357,38],[352,37,357,39],[352,42,357,44],[352,44,357,46],[352,45,357,47],[352,56,357,58],[353,8,358,12],[353,15,358,19],[353,19,358,23],[354,6,359,8],[355,6,360,8],[356,6,361,8],[357,6,362,8],[357,14,362,16],[357,18,362,20],[357,19,362,21,"peek"],[357,23,362,25],[357,24,362,26],[357,25,362,27],[358,8,363,12],[358,13,363,17],[358,15,363,19],[358,16,363,20],[359,10,364,16],[360,10,365,16],[360,14,365,20],[360,15,365,21,"bump"],[360,19,365,25],[360,20,365,26],[360,21,365,27],[361,10,366,16],[361,14,366,20],[361,15,366,21,"bump"],[361,19,366,25],[361,20,366,26],[361,21,366,27],[362,10,367,16],[362,17,367,23],[362,20,367,26],[363,8,368,12],[364,8,369,12],[364,13,369,17],[364,16,369,20],[365,8,370,12],[365,13,370,17],[365,15,370,19],[366,8,371,12],[366,13,371,17],[366,15,371,19],[367,8,372,12],[367,13,372,17],[367,16,372,20],[368,10,373,16],[369,8,374,12],[369,13,374,17],[369,15,374,19],[370,10,374,21],[371,10,375,16],[371,14,375,20,"parentArgType"],[371,27,375,33],[371,32,375,38],[371,40,375,46],[371,44,375,50,"parentArgType"],[371,57,375,63],[371,62,375,68],[371,77,375,83],[371,79,375,85],[372,12,376,20],[373,10,377,16],[374,10,378,16],[374,17,378,23],[374,21,378,27],[375,8,379,12],[376,10,380,16],[376,17,380,23],[376,21,380,27],[377,6,381,8],[378,6,382,8],[378,10,382,12],[378,11,382,13,"bump"],[378,15,382,17],[378,16,382,18],[378,17,382,19],[378,18,382,20],[378,19,382,21],[379,6,383,8],[379,10,383,12,"codePoints"],[379,20,383,22],[379,23,383,25],[379,24,383,26],[379,28,383,30],[379,29,383,31,"char"],[379,33,383,35],[379,34,383,36],[379,35,383,37],[379,36,383,38],[379,37,383,39],[379,38,383,40],[380,6,384,8],[380,10,384,12],[380,11,384,13,"bump"],[380,15,384,17],[380,16,384,18],[380,17,384,19],[381,6,385,8],[382,6,386,8],[382,13,386,15],[382,14,386,16],[382,18,386,20],[382,19,386,21,"isEOF"],[382,24,386,26],[382,25,386,27],[382,26,386,28],[382,28,386,30],[383,8,387,12],[383,12,387,16,"ch"],[383,14,387,18],[383,17,387,21],[383,21,387,25],[383,22,387,26,"char"],[383,26,387,30],[383,27,387,31],[383,28,387,32],[384,8,388,12],[384,12,388,16,"ch"],[384,14,388,18],[384,19,388,23],[384,21,388,25],[384,22,388,26],[384,33,388,37],[385,10,389,16],[385,14,389,20],[385,18,389,24],[385,19,389,25,"peek"],[385,23,389,29],[385,24,389,30],[385,25,389,31],[385,30,389,36],[385,32,389,38],[385,33,389,39],[385,44,389,50],[386,12,390,20,"codePoints"],[386,22,390,30],[386,23,390,31,"push"],[386,27,390,35],[386,28,390,36],[386,30,390,38],[386,31,390,39],[387,12,391,20],[388,12,392,20],[388,16,392,24],[388,17,392,25,"bump"],[388,21,392,29],[388,22,392,30],[388,23,392,31],[389,10,393,16],[389,11,393,17],[389,17,394,21],[390,12,395,20],[391,12,396,20],[391,16,396,24],[391,17,396,25,"bump"],[391,21,396,29],[391,22,396,30],[391,23,396,31],[392,12,397,20],[393,10,398,16],[394,8,399,12],[394,9,399,13],[394,15,400,17],[395,10,401,16,"codePoints"],[395,20,401,26],[395,21,401,27,"push"],[395,25,401,31],[395,26,401,32,"ch"],[395,28,401,34],[395,29,401,35],[396,8,402,12],[397,8,403,12],[397,12,403,16],[397,13,403,17,"bump"],[397,17,403,21],[397,18,403,22],[397,19,403,23],[398,6,404,8],[399,6,405,8],[399,13,405,15,"fromCodePoint"],[399,26,405,28],[399,27,405,29,"apply"],[399,32,405,34],[399,33,405,35],[399,38,405,40],[399,39,405,41],[399,41,405,43,"codePoints"],[399,51,405,53],[399,52,405,54],[400,4,406,4],[400,5,406,5],[401,4,407,4,"Parser"],[401,10,407,10],[401,11,407,11,"prototype"],[401,20,407,20],[401,21,407,21,"tryParseUnquoted"],[401,37,407,37],[401,40,407,40],[401,50,407,50,"nestingLevel"],[401,62,407,62],[401,64,407,64,"parentArgType"],[401,77,407,77],[401,79,407,79],[402,6,408,8],[402,10,408,12],[402,14,408,16],[402,15,408,17,"isEOF"],[402,20,408,22],[402,21,408,23],[402,22,408,24],[402,24,408,26],[403,8,409,12],[403,15,409,19],[403,19,409,23],[404,6,410,8],[405,6,411,8],[405,10,411,12,"ch"],[405,12,411,14],[405,15,411,17],[405,19,411,21],[405,20,411,22,"char"],[405,24,411,26],[405,25,411,27],[405,26,411,28],[406,6,412,8],[406,10,412,12,"ch"],[406,12,412,14],[406,17,412,19],[406,19,412,21],[406,20,412,22],[406,33,413,12,"ch"],[406,35,413,14],[406,40,413,19],[406,43,413,22],[406,44,413,23],[406,57,414,13,"ch"],[406,59,414,15],[406,64,414,20],[406,66,414,22],[406,67,414,23],[406,81,415,17,"parentArgType"],[406,94,415,30],[406,99,415,35],[406,107,415,43],[406,111,415,47,"parentArgType"],[406,124,415,60],[406,129,415,65],[406,144,415,80],[406,145,415,82],[406,149,416,13,"ch"],[406,151,416,15],[406,156,416,20],[406,159,416,23],[406,160,416,24],[406,173,416,37,"nestingLevel"],[406,185,416,49],[406,188,416,52],[406,189,416,54],[406,191,416,56],[407,8,417,12],[407,15,417,19],[407,19,417,23],[408,6,418,8],[408,7,418,9],[408,13,419,13],[409,8,420,12],[409,12,420,16],[409,13,420,17,"bump"],[409,17,420,21],[409,18,420,22],[409,19,420,23],[410,8,421,12],[410,15,421,19,"fromCodePoint"],[410,28,421,32],[410,29,421,33,"ch"],[410,31,421,35],[410,32,421,36],[411,6,422,8],[412,4,423,4],[412,5,423,5],[413,4,424,4,"Parser"],[413,10,424,10],[413,11,424,11,"prototype"],[413,20,424,20],[413,21,424,21,"parseArgument"],[413,34,424,34],[413,37,424,37],[413,47,424,47,"nestingLevel"],[413,59,424,59],[413,61,424,61,"expectingCloseTag"],[413,78,424,78],[413,80,424,80],[414,6,425,8],[414,10,425,12,"openingBracePosition"],[414,30,425,32],[414,33,425,35],[414,37,425,39],[414,38,425,40,"clonePosition"],[414,51,425,53],[414,52,425,54],[414,53,425,55],[415,6,426,8],[415,10,426,12],[415,11,426,13,"bump"],[415,15,426,17],[415,16,426,18],[415,17,426,19],[415,18,426,20],[415,19,426,21],[416,6,427,8],[416,10,427,12],[416,11,427,13,"bumpSpace"],[416,20,427,22],[416,21,427,23],[416,22,427,24],[417,6,428,8],[417,10,428,12],[417,14,428,16],[417,15,428,17,"isEOF"],[417,20,428,22],[417,21,428,23],[417,22,428,24],[417,24,428,26],[418,8,429,12],[418,15,429,19],[418,19,429,23],[418,20,429,24,"error"],[418,25,429,29],[418,26,429,30,"ErrorKind"],[418,32,429,39],[418,33,429,39,"ErrorKind"],[418,42,429,39],[418,43,429,40,"EXPECT_ARGUMENT_CLOSING_BRACE"],[418,72,429,69],[418,74,429,71,"createLocation"],[418,88,429,85],[418,89,429,86,"openingBracePosition"],[418,109,429,106],[418,111,429,108],[418,115,429,112],[418,116,429,113,"clonePosition"],[418,129,429,126],[418,130,429,127],[418,131,429,128],[418,132,429,129],[418,133,429,130],[419,6,430,8],[420,6,431,8],[420,10,431,12],[420,14,431,16],[420,15,431,17,"char"],[420,19,431,21],[420,20,431,22],[420,21,431,23],[420,26,431,28],[420,29,431,31],[420,30,431,32],[420,41,431,43],[421,8,432,12],[421,12,432,16],[421,13,432,17,"bump"],[421,17,432,21],[421,18,432,22],[421,19,432,23],[422,8,433,12],[422,15,433,19],[422,19,433,23],[422,20,433,24,"error"],[422,25,433,29],[422,26,433,30,"ErrorKind"],[422,32,433,39],[422,33,433,39,"ErrorKind"],[422,42,433,39],[422,43,433,40,"EMPTY_ARGUMENT"],[422,57,433,54],[422,59,433,56,"createLocation"],[422,73,433,70],[422,74,433,71,"openingBracePosition"],[422,94,433,91],[422,96,433,93],[422,100,433,97],[422,101,433,98,"clonePosition"],[422,114,433,111],[422,115,433,112],[422,116,433,113],[422,117,433,114],[422,118,433,115],[423,6,434,8],[424,6,435,8],[425,6,436,8],[425,10,436,12,"value"],[425,15,436,17],[425,18,436,20],[425,22,436,24],[425,23,436,25,"parseIdentifierIfPossible"],[425,48,436,50],[425,49,436,51],[425,50,436,52],[425,51,436,53,"value"],[425,56,436,58],[426,6,437,8],[426,10,437,12],[426,11,437,13,"value"],[426,16,437,18],[426,18,437,20],[427,8,438,12],[427,15,438,19],[427,19,438,23],[427,20,438,24,"error"],[427,25,438,29],[427,26,438,30,"ErrorKind"],[427,32,438,39],[427,33,438,39,"ErrorKind"],[427,42,438,39],[427,43,438,40,"MALFORMED_ARGUMENT"],[427,61,438,58],[427,63,438,60,"createLocation"],[427,77,438,74],[427,78,438,75,"openingBracePosition"],[427,98,438,95],[427,100,438,97],[427,104,438,101],[427,105,438,102,"clonePosition"],[427,118,438,115],[427,119,438,116],[427,120,438,117],[427,121,438,118],[427,122,438,119],[428,6,439,8],[429,6,440,8],[429,10,440,12],[429,11,440,13,"bumpSpace"],[429,20,440,22],[429,21,440,23],[429,22,440,24],[430,6,441,8],[430,10,441,12],[430,14,441,16],[430,15,441,17,"isEOF"],[430,20,441,22],[430,21,441,23],[430,22,441,24],[430,24,441,26],[431,8,442,12],[431,15,442,19],[431,19,442,23],[431,20,442,24,"error"],[431,25,442,29],[431,26,442,30,"ErrorKind"],[431,32,442,39],[431,33,442,39,"ErrorKind"],[431,42,442,39],[431,43,442,40,"EXPECT_ARGUMENT_CLOSING_BRACE"],[431,72,442,69],[431,74,442,71,"createLocation"],[431,88,442,85],[431,89,442,86,"openingBracePosition"],[431,109,442,106],[431,111,442,108],[431,115,442,112],[431,116,442,113,"clonePosition"],[431,129,442,126],[431,130,442,127],[431,131,442,128],[431,132,442,129],[431,133,442,130],[432,6,443,8],[433,6,444,8],[433,14,444,16],[433,18,444,20],[433,19,444,21,"char"],[433,23,444,25],[433,24,444,26],[433,25,444,27],[434,8,445,12],[435,8,446,12],[435,13,446,17],[435,16,446,20],[435,17,446,21],[436,10,446,32],[437,12,447,16],[437,16,447,20],[437,17,447,21,"bump"],[437,21,447,25],[437,22,447,26],[437,23,447,27],[437,24,447,28],[437,25,447,29],[438,12,448,16],[438,19,448,23],[439,14,449,20,"val"],[439,17,449,23],[439,19,449,25],[440,16,450,24,"type"],[440,20,450,28],[440,22,450,30,"TYPE"],[440,28,450,34],[440,29,450,34,"TYPE"],[440,33,450,34],[440,34,450,35,"argument"],[440,42,450,43],[441,16,451,24],[442,16,452,24,"value"],[442,21,452,29],[442,23,452,31,"value"],[442,28,452,36],[443,16,453,24,"location"],[443,24,453,32],[443,26,453,34,"createLocation"],[443,40,453,48],[443,41,453,49,"openingBracePosition"],[443,61,453,69],[443,63,453,71],[443,67,453,75],[443,68,453,76,"clonePosition"],[443,81,453,89],[443,82,453,90],[443,83,453,91],[444,14,454,20],[444,15,454,21],[445,14,455,20,"err"],[445,17,455,23],[445,19,455,25],[446,12,456,16],[446,13,456,17],[447,10,457,12],[448,8,458,12],[449,8,459,12],[449,13,459,17],[449,15,459,19],[449,16,459,20],[450,10,459,31],[451,12,460,16],[451,16,460,20],[451,17,460,21,"bump"],[451,21,460,25],[451,22,460,26],[451,23,460,27],[451,24,460,28],[451,25,460,29],[452,12,461,16],[452,16,461,20],[452,17,461,21,"bumpSpace"],[452,26,461,30],[452,27,461,31],[452,28,461,32],[453,12,462,16],[453,16,462,20],[453,20,462,24],[453,21,462,25,"isEOF"],[453,26,462,30],[453,27,462,31],[453,28,462,32],[453,30,462,34],[454,14,463,20],[454,21,463,27],[454,25,463,31],[454,26,463,32,"error"],[454,31,463,37],[454,32,463,38,"ErrorKind"],[454,38,463,47],[454,39,463,47,"ErrorKind"],[454,48,463,47],[454,49,463,48,"EXPECT_ARGUMENT_CLOSING_BRACE"],[454,78,463,77],[454,80,463,79,"createLocation"],[454,94,463,93],[454,95,463,94,"openingBracePosition"],[454,115,463,114],[454,117,463,116],[454,121,463,120],[454,122,463,121,"clonePosition"],[454,135,463,134],[454,136,463,135],[454,137,463,136],[454,138,463,137],[454,139,463,138],[455,12,464,16],[456,12,465,16],[456,19,465,23],[456,23,465,27],[456,24,465,28,"parseArgumentOptions"],[456,44,465,48],[456,45,465,49,"nestingLevel"],[456,57,465,61],[456,59,465,63,"expectingCloseTag"],[456,76,465,80],[456,78,465,82,"value"],[456,83,465,87],[456,85,465,89,"openingBracePosition"],[456,105,465,109],[456,106,465,110],[457,10,466,12],[458,8,467,12],[459,10,468,16],[459,17,468,23],[459,21,468,27],[459,22,468,28,"error"],[459,27,468,33],[459,28,468,34,"ErrorKind"],[459,34,468,43],[459,35,468,43,"ErrorKind"],[459,44,468,43],[459,45,468,44,"MALFORMED_ARGUMENT"],[459,63,468,62],[459,65,468,64,"createLocation"],[459,79,468,78],[459,80,468,79,"openingBracePosition"],[459,100,468,99],[459,102,468,101],[459,106,468,105],[459,107,468,106,"clonePosition"],[459,120,468,119],[459,121,468,120],[459,122,468,121],[459,123,468,122],[459,124,468,123],[460,6,469,8],[461,4,470,4],[461,5,470,5],[462,4,471,4],[463,0,472,0],[464,0,473,0],[465,0,474,0],[466,4,475,4,"Parser"],[466,10,475,10],[466,11,475,11,"prototype"],[466,20,475,20],[466,21,475,21,"parseIdentifierIfPossible"],[466,46,475,46],[466,49,475,49],[466,61,475,61],[467,6,476,8],[467,10,476,12,"startingPosition"],[467,26,476,28],[467,29,476,31],[467,33,476,35],[467,34,476,36,"clonePosition"],[467,47,476,49],[467,48,476,50],[467,49,476,51],[468,6,477,8],[468,10,477,12,"startOffset"],[468,21,477,23],[468,24,477,26],[468,28,477,30],[468,29,477,31,"offset"],[468,35,477,37],[468,36,477,38],[468,37,477,39],[469,6,478,8],[469,10,478,12,"value"],[469,15,478,17],[469,18,478,20,"matchIdentifierAtIndex"],[469,40,478,42],[469,41,478,43],[469,45,478,47],[469,46,478,48,"message"],[469,53,478,55],[469,55,478,57,"startOffset"],[469,66,478,68],[469,67,478,69],[470,6,479,8],[470,10,479,12,"endOffset"],[470,19,479,21],[470,22,479,24,"startOffset"],[470,33,479,35],[470,36,479,38,"value"],[470,41,479,43],[470,42,479,44,"length"],[470,48,479,50],[471,6,480,8],[471,10,480,12],[471,11,480,13,"bumpTo"],[471,17,480,19],[471,18,480,20,"endOffset"],[471,27,480,29],[471,28,480,30],[472,6,481,8],[472,10,481,12,"endPosition"],[472,21,481,23],[472,24,481,26],[472,28,481,30],[472,29,481,31,"clonePosition"],[472,42,481,44],[472,43,481,45],[472,44,481,46],[473,6,482,8],[473,10,482,12,"location"],[473,18,482,20],[473,21,482,23,"createLocation"],[473,35,482,37],[473,36,482,38,"startingPosition"],[473,52,482,54],[473,54,482,56,"endPosition"],[473,65,482,67],[473,66,482,68],[474,6,483,8],[474,13,483,15],[475,8,483,17,"value"],[475,13,483,22],[475,15,483,24,"value"],[475,20,483,29],[476,8,483,31,"location"],[476,16,483,39],[476,18,483,41,"location"],[477,6,483,50],[477,7,483,51],[478,4,484,4],[478,5,484,5],[479,4,485,4,"Parser"],[479,10,485,10],[479,11,485,11,"prototype"],[479,20,485,20],[479,21,485,21,"parseArgumentOptions"],[479,41,485,41],[479,44,485,44],[479,54,485,54,"nestingLevel"],[479,66,485,66],[479,68,485,68,"expectingCloseTag"],[479,85,485,85],[479,87,485,87,"value"],[479,92,485,92],[479,94,485,94,"openingBracePosition"],[479,114,485,114],[479,116,485,116],[480,6,486,8],[480,10,486,12,"_a"],[480,12,486,14],[481,6,487,8],[482,6,488,8],[483,6,489,8],[484,6,490,8],[484,10,490,12,"typeStartPosition"],[484,27,490,29],[484,30,490,32],[484,34,490,36],[484,35,490,37,"clonePosition"],[484,48,490,50],[484,49,490,51],[484,50,490,52],[485,6,491,8],[485,10,491,12,"argType"],[485,17,491,19],[485,20,491,22],[485,24,491,26],[485,25,491,27,"parseIdentifierIfPossible"],[485,50,491,52],[485,51,491,53],[485,52,491,54],[485,53,491,55,"value"],[485,58,491,60],[486,6,492,8],[486,10,492,12,"typeEndPosition"],[486,25,492,27],[486,28,492,30],[486,32,492,34],[486,33,492,35,"clonePosition"],[486,46,492,48],[486,47,492,49],[486,48,492,50],[487,6,493,8],[487,14,493,16,"argType"],[487,21,493,23],[488,8,494,12],[488,13,494,17],[488,15,494,19],[489,10,495,16],[490,10,496,16],[490,17,496,23],[490,21,496,27],[490,22,496,28,"error"],[490,27,496,33],[490,28,496,34,"ErrorKind"],[490,34,496,43],[490,35,496,43,"ErrorKind"],[490,44,496,43],[490,45,496,44,"EXPECT_ARGUMENT_TYPE"],[490,65,496,64],[490,67,496,66,"createLocation"],[490,81,496,80],[490,82,496,81,"typeStartPosition"],[490,99,496,98],[490,101,496,100,"typeEndPosition"],[490,116,496,115],[490,117,496,116],[490,118,496,117],[491,8,497,12],[491,13,497,17],[491,21,497,25],[492,8,498,12],[492,13,498,17],[492,19,498,23],[493,8,499,12],[493,13,499,17],[493,19,499,23],[494,10,499,25],[495,12,500,16],[496,12,501,16],[497,12,502,16],[498,12,503,16],[498,16,503,20],[498,17,503,21,"bumpSpace"],[498,26,503,30],[498,27,503,31],[498,28,503,32],[499,12,504,16],[499,16,504,20,"styleAndLocation"],[499,32,504,36],[499,35,504,39],[499,39,504,43],[500,12,505,16],[500,16,505,20],[500,20,505,24],[500,21,505,25,"bumpIf"],[500,27,505,31],[500,28,505,32],[500,31,505,35],[500,32,505,36],[500,34,505,38],[501,14,506,20],[501,18,506,24],[501,19,506,25,"bumpSpace"],[501,28,506,34],[501,29,506,35],[501,30,506,36],[502,14,507,20],[502,18,507,24,"styleStartPosition"],[502,36,507,42],[502,39,507,45],[502,43,507,49],[502,44,507,50,"clonePosition"],[502,57,507,63],[502,58,507,64],[502,59,507,65],[503,14,508,20],[503,18,508,24,"result"],[503,24,508,30],[503,27,508,33],[503,31,508,37],[503,32,508,38,"parseSimpleArgStyleIfPossible"],[503,61,508,67],[503,62,508,68],[503,63,508,69],[504,14,509,20],[504,18,509,24,"result"],[504,24,509,30],[504,25,509,31,"err"],[504,28,509,34],[504,30,509,36],[505,16,510,24],[505,23,510,31,"result"],[505,29,510,37],[506,14,511,20],[507,14,512,20],[507,18,512,24,"style"],[507,23,512,29],[507,26,512,32,"trimEnd"],[507,33,512,39],[507,34,512,40,"result"],[507,40,512,46],[507,41,512,47,"val"],[507,44,512,50],[507,45,512,51],[508,14,513,20],[508,18,513,24,"style"],[508,23,513,29],[508,24,513,30,"length"],[508,30,513,36],[508,35,513,41],[508,36,513,42],[508,38,513,44],[509,16,514,24],[509,23,514,31],[509,27,514,35],[509,28,514,36,"error"],[509,33,514,41],[509,34,514,42,"ErrorKind"],[509,40,514,51],[509,41,514,51,"ErrorKind"],[509,50,514,51],[509,51,514,52,"EXPECT_ARGUMENT_STYLE"],[509,72,514,73],[509,74,514,75,"createLocation"],[509,88,514,89],[509,89,514,90],[509,93,514,94],[509,94,514,95,"clonePosition"],[509,107,514,108],[509,108,514,109],[509,109,514,110],[509,111,514,112],[509,115,514,116],[509,116,514,117,"clonePosition"],[509,129,514,130],[509,130,514,131],[509,131,514,132],[509,132,514,133],[509,133,514,134],[510,14,515,20],[511,14,516,20],[511,18,516,24,"styleLocation"],[511,31,516,37],[511,34,516,40,"createLocation"],[511,48,516,54],[511,49,516,55,"styleStartPosition"],[511,67,516,73],[511,69,516,75],[511,73,516,79],[511,74,516,80,"clonePosition"],[511,87,516,93],[511,88,516,94],[511,89,516,95],[511,90,516,96],[512,14,517,20,"styleAndLocation"],[512,30,517,36],[512,33,517,39],[513,16,517,41,"style"],[513,21,517,46],[513,23,517,48,"style"],[513,28,517,53],[514,16,517,55,"styleLocation"],[514,29,517,68],[514,31,517,70,"styleLocation"],[515,14,517,84],[515,15,517,85],[516,12,518,16],[517,12,519,16],[517,16,519,20,"argCloseResult"],[517,30,519,34],[517,33,519,37],[517,37,519,41],[517,38,519,42,"tryParseArgumentClose"],[517,59,519,63],[517,60,519,64,"openingBracePosition"],[517,80,519,84],[517,81,519,85],[518,12,520,16],[518,16,520,20,"argCloseResult"],[518,30,520,34],[518,31,520,35,"err"],[518,34,520,38],[518,36,520,40],[519,14,521,20],[519,21,521,27,"argCloseResult"],[519,35,521,41],[520,12,522,16],[521,12,523,16],[521,16,523,20,"location_1"],[521,26,523,30],[521,29,523,33,"createLocation"],[521,43,523,47],[521,44,523,48,"openingBracePosition"],[521,64,523,68],[521,66,523,70],[521,70,523,74],[521,71,523,75,"clonePosition"],[521,84,523,88],[521,85,523,89],[521,86,523,90],[521,87,523,91],[522,12,524,16],[523,12,525,16],[523,16,525,20,"styleAndLocation"],[523,32,525,36],[523,36,525,40,"startsWith"],[523,46,525,50],[523,47,525,51,"styleAndLocation"],[523,63,525,67],[523,68,525,72],[523,72,525,76],[523,76,525,80,"styleAndLocation"],[523,92,525,96],[523,97,525,101],[523,102,525,106],[523,103,525,107],[523,106,525,110],[523,111,525,115],[523,112,525,116],[523,115,525,119,"styleAndLocation"],[523,131,525,135],[523,132,525,136,"style"],[523,137,525,141],[523,139,525,143],[523,143,525,147],[523,145,525,149],[523,146,525,150],[523,147,525,151],[523,149,525,153],[524,14,526,20],[525,14,527,20],[525,18,527,24,"skeleton"],[525,26,527,32],[525,29,527,35,"trimStart"],[525,38,527,44],[525,39,527,45,"styleAndLocation"],[525,55,527,61],[525,56,527,62,"style"],[525,61,527,67],[525,62,527,68,"slice"],[525,67,527,73],[525,68,527,74],[525,69,527,75],[525,70,527,76],[525,71,527,77],[526,14,528,20],[526,18,528,24,"argType"],[526,25,528,31],[526,30,528,36],[526,38,528,44],[526,40,528,46],[527,16,529,24],[527,20,529,28,"result"],[527,26,529,34],[527,29,529,37],[527,33,529,41],[527,34,529,42,"parseNumberSkeletonFromString"],[527,63,529,71],[527,64,529,72,"skeleton"],[527,72,529,80],[527,74,529,82,"styleAndLocation"],[527,90,529,98],[527,91,529,99,"styleLocation"],[527,104,529,112],[527,105,529,113],[528,16,530,24],[528,20,530,28,"result"],[528,26,530,34],[528,27,530,35,"err"],[528,30,530,38],[528,32,530,40],[529,18,531,28],[529,25,531,35,"result"],[529,31,531,41],[530,16,532,24],[531,16,533,24],[531,23,533,31],[532,18,534,28,"val"],[532,21,534,31],[532,23,534,33],[533,20,534,35,"type"],[533,24,534,39],[533,26,534,41,"TYPE"],[533,32,534,45],[533,33,534,45,"TYPE"],[533,37,534,45],[533,38,534,46,"number"],[533,44,534,52],[534,20,534,54,"value"],[534,25,534,59],[534,27,534,61,"value"],[534,32,534,66],[535,20,534,68,"location"],[535,28,534,76],[535,30,534,78,"location_1"],[535,40,534,88],[536,20,534,90,"style"],[536,25,534,95],[536,27,534,97,"result"],[536,33,534,103],[536,34,534,104,"val"],[537,18,534,108],[537,19,534,109],[538,18,535,28,"err"],[538,21,535,31],[538,23,535,33],[539,16,536,24],[539,17,536,25],[540,14,537,20],[540,15,537,21],[540,21,538,25],[541,16,539,24],[541,20,539,28,"skeleton"],[541,28,539,36],[541,29,539,37,"length"],[541,35,539,43],[541,40,539,48],[541,41,539,49],[541,43,539,51],[542,18,540,28],[542,25,540,35],[542,29,540,39],[542,30,540,40,"error"],[542,35,540,45],[542,36,540,46,"ErrorKind"],[542,42,540,55],[542,43,540,55,"ErrorKind"],[542,52,540,55],[542,53,540,56,"EXPECT_DATE_TIME_SKELETON"],[542,78,540,81],[542,80,540,83,"location_1"],[542,90,540,93],[542,91,540,94],[543,16,541,24],[544,16,542,24],[544,20,542,28,"dateTimePattern"],[544,35,542,43],[544,38,542,46,"skeleton"],[544,46,542,54],[545,16,543,24],[546,16,544,24],[547,16,545,24],[548,16,546,24],[548,20,546,28],[548,24,546,32],[548,25,546,33,"locale"],[548,31,546,39],[548,33,546,41],[549,18,547,28,"dateTimePattern"],[549,33,547,43],[549,36,547,46],[549,40,547,46,"getBestPattern"],[549,65,547,60],[549,66,547,60,"getBestPattern"],[549,80,547,60],[549,82,547,61,"skeleton"],[549,90,547,69],[549,92,547,71],[549,96,547,75],[549,97,547,76,"locale"],[549,103,547,82],[549,104,547,83],[550,16,548,24],[551,16,549,24],[551,20,549,28,"style"],[551,25,549,33],[551,28,549,36],[552,18,550,28,"type"],[552,22,550,32],[552,24,550,34,"SKELETON_TYPE"],[552,30,550,47],[552,31,550,47,"SKELETON_TYPE"],[552,44,550,47],[552,45,550,48,"dateTime"],[552,53,550,56],[553,18,551,28,"pattern"],[553,25,551,35],[553,27,551,37,"dateTimePattern"],[553,42,551,52],[554,18,552,28,"location"],[554,26,552,36],[554,28,552,38,"styleAndLocation"],[554,44,552,54],[554,45,552,55,"styleLocation"],[554,58,552,68],[555,18,553,28,"parsedOptions"],[555,31,553,41],[555,33,553,43],[555,37,553,47],[555,38,553,48,"shouldParseSkeletons"],[555,58,553,68],[555,61,554,34],[555,65,554,34,"parseDateTimeSkeleton"],[555,91,554,55],[555,92,554,55,"parseDateTimeSkeleton"],[555,113,554,55],[555,115,554,56,"dateTimePattern"],[555,130,554,71],[555,131,554,72],[555,134,555,34],[555,135,555,35],[556,16,556,24],[556,17,556,25],[557,16,557,24],[557,20,557,28,"type"],[557,24,557,32],[557,27,557,35,"argType"],[557,34,557,42],[557,39,557,47],[557,45,557,53],[557,48,557,56,"TYPE"],[557,54,557,60],[557,55,557,60,"TYPE"],[557,59,557,60],[557,60,557,61,"date"],[557,64,557,65],[557,67,557,68,"TYPE"],[557,73,557,72],[557,74,557,72,"TYPE"],[557,78,557,72],[557,79,557,73,"time"],[557,83,557,77],[558,16,558,24],[558,23,558,31],[559,18,559,28,"val"],[559,21,559,31],[559,23,559,33],[560,20,559,35,"type"],[560,24,559,39],[560,26,559,41,"type"],[560,30,559,45],[561,20,559,47,"value"],[561,25,559,52],[561,27,559,54,"value"],[561,32,559,59],[562,20,559,61,"location"],[562,28,559,69],[562,30,559,71,"location_1"],[562,40,559,81],[563,20,559,83,"style"],[563,25,559,88],[563,27,559,90,"style"],[564,18,559,96],[564,19,559,97],[565,18,560,28,"err"],[565,21,560,31],[565,23,560,33],[566,16,561,24],[566,17,561,25],[567,14,562,20],[568,12,563,16],[569,12,564,16],[570,12,565,16],[570,19,565,23],[571,14,566,20,"val"],[571,17,566,23],[571,19,566,25],[572,16,567,24,"type"],[572,20,567,28],[572,22,567,30,"argType"],[572,29,567,37],[572,34,567,42],[572,42,567,50],[572,45,568,30,"TYPE"],[572,51,568,34],[572,52,568,34,"TYPE"],[572,56,568,34],[572,57,568,35,"number"],[572,63,568,41],[572,66,569,30,"argType"],[572,73,569,37],[572,78,569,42],[572,84,569,48],[572,87,570,34,"TYPE"],[572,93,570,38],[572,94,570,38,"TYPE"],[572,98,570,38],[572,99,570,39,"date"],[572,103,570,43],[572,106,571,34,"TYPE"],[572,112,571,38],[572,113,571,38,"TYPE"],[572,117,571,38],[572,118,571,39,"time"],[572,122,571,43],[573,16,572,24,"value"],[573,21,572,29],[573,23,572,31,"value"],[573,28,572,36],[574,16,573,24,"location"],[574,24,573,32],[574,26,573,34,"location_1"],[574,36,573,44],[575,16,574,24,"style"],[575,21,574,29],[575,23,574,31],[575,24,574,32,"_a"],[575,26,574,34],[575,29,574,37,"styleAndLocation"],[575,45,574,53],[575,50,574,58],[575,54,574,62],[575,58,574,66,"styleAndLocation"],[575,74,574,82],[575,79,574,87],[575,84,574,92],[575,85,574,93],[575,88,574,96],[575,93,574,101],[575,94,574,102],[575,97,574,105,"styleAndLocation"],[575,113,574,121],[575,114,574,122,"style"],[575,119,574,127],[575,125,574,133],[575,129,574,137],[575,133,574,141,"_a"],[575,135,574,143],[575,140,574,148],[575,145,574,153],[575,146,574,154],[575,149,574,157,"_a"],[575,151,574,159],[575,154,574,162],[576,14,575,20],[576,15,575,21],[577,14,576,20,"err"],[577,17,576,23],[577,19,576,25],[578,12,577,16],[578,13,577,17],[579,10,578,12],[580,8,579,12],[580,13,579,17],[580,21,579,25],[581,8,580,12],[581,13,580,17],[581,28,580,32],[582,8,581,12],[582,13,581,17],[582,21,581,25],[583,10,581,27],[584,12,582,16],[585,12,583,16],[586,12,584,16],[587,12,585,16],[587,16,585,20,"typeEndPosition_1"],[587,33,585,37],[587,36,585,40],[587,40,585,44],[587,41,585,45,"clonePosition"],[587,54,585,58],[587,55,585,59],[587,56,585,60],[588,12,586,16],[588,16,586,20],[588,17,586,21,"bumpSpace"],[588,26,586,30],[588,27,586,31],[588,28,586,32],[589,12,587,16],[589,16,587,20],[589,17,587,21],[589,21,587,25],[589,22,587,26,"bumpIf"],[589,28,587,32],[589,29,587,33],[589,32,587,36],[589,33,587,37],[589,35,587,39],[590,14,588,20],[590,21,588,27],[590,25,588,31],[590,26,588,32,"error"],[590,31,588,37],[590,32,588,38,"ErrorKind"],[590,38,588,47],[590,39,588,47,"ErrorKind"],[590,48,588,47],[590,49,588,48,"EXPECT_SELECT_ARGUMENT_OPTIONS"],[590,79,588,78],[590,81,588,80,"createLocation"],[590,95,588,94],[590,96,588,95,"typeEndPosition_1"],[590,113,588,112],[590,115,588,114],[590,119,588,114,"__assign"],[590,125,588,122],[590,126,588,122,"__assign"],[590,134,588,122],[590,136,588,123],[590,137,588,124],[590,138,588,125],[590,140,588,127,"typeEndPosition_1"],[590,157,588,144],[590,158,588,145],[590,159,588,146],[590,160,588,147],[591,12,589,16],[592,12,590,16],[592,16,590,20],[592,17,590,21,"bumpSpace"],[592,26,590,30],[592,27,590,31],[592,28,590,32],[593,12,591,16],[594,12,592,16],[595,12,593,16],[596,12,594,16],[597,12,595,16],[598,12,596,16],[599,12,597,16],[600,12,598,16],[601,12,599,16],[601,16,599,20,"identifierAndLocation"],[601,37,599,41],[601,40,599,44],[601,44,599,48],[601,45,599,49,"parseIdentifierIfPossible"],[601,70,599,74],[601,71,599,75],[601,72,599,76],[602,12,600,16],[602,16,600,20,"pluralOffset"],[602,28,600,32],[602,31,600,35],[602,32,600,36],[603,12,601,16],[603,16,601,20,"argType"],[603,23,601,27],[603,28,601,32],[603,36,601,40],[603,40,601,44,"identifierAndLocation"],[603,61,601,65],[603,62,601,66,"value"],[603,67,601,71],[603,72,601,76],[603,80,601,84],[603,82,601,86],[604,14,602,20],[604,18,602,24],[604,19,602,25],[604,23,602,29],[604,24,602,30,"bumpIf"],[604,30,602,36],[604,31,602,37],[604,34,602,40],[604,35,602,41],[604,37,602,43],[605,16,603,24],[605,23,603,31],[605,27,603,35],[605,28,603,36,"error"],[605,33,603,41],[605,34,603,42,"ErrorKind"],[605,40,603,51],[605,41,603,51,"ErrorKind"],[605,50,603,51],[605,51,603,52,"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"],[605,86,603,87],[605,88,603,89,"createLocation"],[605,102,603,103],[605,103,603,104],[605,107,603,108],[605,108,603,109,"clonePosition"],[605,121,603,122],[605,122,603,123],[605,123,603,124],[605,125,603,126],[605,129,603,130],[605,130,603,131,"clonePosition"],[605,143,603,144],[605,144,603,145],[605,145,603,146],[605,146,603,147],[605,147,603,148],[606,14,604,20],[607,14,605,20],[607,18,605,24],[607,19,605,25,"bumpSpace"],[607,28,605,34],[607,29,605,35],[607,30,605,36],[608,14,606,20],[608,18,606,24,"result"],[608,24,606,30],[608,27,606,33],[608,31,606,37],[608,32,606,38,"tryParseDecimalInteger"],[608,54,606,60],[608,55,606,61,"ErrorKind"],[608,61,606,70],[608,62,606,70,"ErrorKind"],[608,71,606,70],[608,72,606,71,"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"],[608,107,606,106],[608,109,606,108,"ErrorKind"],[608,115,606,117],[608,116,606,117,"ErrorKind"],[608,125,606,117],[608,126,606,118,"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"],[608,162,606,154],[608,163,606,155],[609,14,607,20],[609,18,607,24,"result"],[609,24,607,30],[609,25,607,31,"err"],[609,28,607,34],[609,30,607,36],[610,16,608,24],[610,23,608,31,"result"],[610,29,608,37],[611,14,609,20],[612,14,610,20],[613,14,611,20],[613,18,611,24],[613,19,611,25,"bumpSpace"],[613,28,611,34],[613,29,611,35],[613,30,611,36],[614,14,612,20,"identifierAndLocation"],[614,35,612,41],[614,38,612,44],[614,42,612,48],[614,43,612,49,"parseIdentifierIfPossible"],[614,68,612,74],[614,69,612,75],[614,70,612,76],[615,14,613,20,"pluralOffset"],[615,26,613,32],[615,29,613,35,"result"],[615,35,613,41],[615,36,613,42,"val"],[615,39,613,45],[616,12,614,16],[617,12,615,16],[617,16,615,20,"optionsResult"],[617,29,615,33],[617,32,615,36],[617,36,615,40],[617,37,615,41,"tryParsePluralOrSelectOptions"],[617,66,615,70],[617,67,615,71,"nestingLevel"],[617,79,615,83],[617,81,615,85,"argType"],[617,88,615,92],[617,90,615,94,"expectingCloseTag"],[617,107,615,111],[617,109,615,113,"identifierAndLocation"],[617,130,615,134],[617,131,615,135],[618,12,616,16],[618,16,616,20,"optionsResult"],[618,29,616,33],[618,30,616,34,"err"],[618,33,616,37],[618,35,616,39],[619,14,617,20],[619,21,617,27,"optionsResult"],[619,34,617,40],[620,12,618,16],[621,12,619,16],[621,16,619,20,"argCloseResult"],[621,30,619,34],[621,33,619,37],[621,37,619,41],[621,38,619,42,"tryParseArgumentClose"],[621,59,619,63],[621,60,619,64,"openingBracePosition"],[621,80,619,84],[621,81,619,85],[622,12,620,16],[622,16,620,20,"argCloseResult"],[622,30,620,34],[622,31,620,35,"err"],[622,34,620,38],[622,36,620,40],[623,14,621,20],[623,21,621,27,"argCloseResult"],[623,35,621,41],[624,12,622,16],[625,12,623,16],[625,16,623,20,"location_2"],[625,26,623,30],[625,29,623,33,"createLocation"],[625,43,623,47],[625,44,623,48,"openingBracePosition"],[625,64,623,68],[625,66,623,70],[625,70,623,74],[625,71,623,75,"clonePosition"],[625,84,623,88],[625,85,623,89],[625,86,623,90],[625,87,623,91],[626,12,624,16],[626,16,624,20,"argType"],[626,23,624,27],[626,28,624,32],[626,36,624,40],[626,38,624,42],[627,14,625,20],[627,21,625,27],[628,16,626,24,"val"],[628,19,626,27],[628,21,626,29],[629,18,627,28,"type"],[629,22,627,32],[629,24,627,34,"TYPE"],[629,30,627,38],[629,31,627,38,"TYPE"],[629,35,627,38],[629,36,627,39,"select"],[629,42,627,45],[630,18,628,28,"value"],[630,23,628,33],[630,25,628,35,"value"],[630,30,628,40],[631,18,629,28,"options"],[631,25,629,35],[631,27,629,37,"fromEntries"],[631,38,629,48],[631,39,629,49,"optionsResult"],[631,52,629,62],[631,53,629,63,"val"],[631,56,629,66],[631,57,629,67],[632,18,630,28,"location"],[632,26,630,36],[632,28,630,38,"location_2"],[633,16,631,24],[633,17,631,25],[634,16,632,24,"err"],[634,19,632,27],[634,21,632,29],[635,14,633,20],[635,15,633,21],[636,12,634,16],[636,13,634,17],[636,19,635,21],[637,14,636,20],[637,21,636,27],[638,16,637,24,"val"],[638,19,637,27],[638,21,637,29],[639,18,638,28,"type"],[639,22,638,32],[639,24,638,34,"TYPE"],[639,30,638,38],[639,31,638,38,"TYPE"],[639,35,638,38],[639,36,638,39,"plural"],[639,42,638,45],[640,18,639,28,"value"],[640,23,639,33],[640,25,639,35,"value"],[640,30,639,40],[641,18,640,28,"options"],[641,25,640,35],[641,27,640,37,"fromEntries"],[641,38,640,48],[641,39,640,49,"optionsResult"],[641,52,640,62],[641,53,640,63,"val"],[641,56,640,66],[641,57,640,67],[642,18,641,28,"offset"],[642,24,641,34],[642,26,641,36,"pluralOffset"],[642,38,641,48],[643,18,642,28,"pluralType"],[643,28,642,38],[643,30,642,40,"argType"],[643,37,642,47],[643,42,642,52],[643,50,642,60],[643,53,642,63],[643,63,642,73],[643,66,642,76],[643,75,642,85],[644,18,643,28,"location"],[644,26,643,36],[644,28,643,38,"location_2"],[645,16,644,24],[645,17,644,25],[646,16,645,24,"err"],[646,19,645,27],[646,21,645,29],[647,14,646,20],[647,15,646,21],[648,12,647,16],[649,10,648,12],[650,8,649,12],[651,10,650,16],[651,17,650,23],[651,21,650,27],[651,22,650,28,"error"],[651,27,650,33],[651,28,650,34,"ErrorKind"],[651,34,650,43],[651,35,650,43,"ErrorKind"],[651,44,650,43],[651,45,650,44,"INVALID_ARGUMENT_TYPE"],[651,66,650,65],[651,68,650,67,"createLocation"],[651,82,650,81],[651,83,650,82,"typeStartPosition"],[651,100,650,99],[651,102,650,101,"typeEndPosition"],[651,117,650,116],[651,118,650,117],[651,119,650,118],[652,6,651,8],[653,4,652,4],[653,5,652,5],[654,4,653,4,"Parser"],[654,10,653,10],[654,11,653,11,"prototype"],[654,20,653,20],[654,21,653,21,"tryParseArgumentClose"],[654,42,653,42],[654,45,653,45],[654,55,653,55,"openingBracePosition"],[654,75,653,75],[654,77,653,77],[655,6,654,8],[656,6,655,8],[657,6,656,8],[657,10,656,12],[657,14,656,16],[657,15,656,17,"isEOF"],[657,20,656,22],[657,21,656,23],[657,22,656,24],[657,26,656,28],[657,30,656,32],[657,31,656,33,"char"],[657,35,656,37],[657,36,656,38],[657,37,656,39],[657,42,656,44],[657,45,656,47],[657,46,656,48],[657,57,656,59],[658,8,657,12],[658,15,657,19],[658,19,657,23],[658,20,657,24,"error"],[658,25,657,29],[658,26,657,30,"ErrorKind"],[658,32,657,39],[658,33,657,39,"ErrorKind"],[658,42,657,39],[658,43,657,40,"EXPECT_ARGUMENT_CLOSING_BRACE"],[658,72,657,69],[658,74,657,71,"createLocation"],[658,88,657,85],[658,89,657,86,"openingBracePosition"],[658,109,657,106],[658,111,657,108],[658,115,657,112],[658,116,657,113,"clonePosition"],[658,129,657,126],[658,130,657,127],[658,131,657,128],[658,132,657,129],[658,133,657,130],[659,6,658,8],[660,6,659,8],[660,10,659,12],[660,11,659,13,"bump"],[660,15,659,17],[660,16,659,18],[660,17,659,19],[660,18,659,20],[660,19,659,21],[661,6,660,8],[661,13,660,15],[662,8,660,17,"val"],[662,11,660,20],[662,13,660,22],[662,17,660,26],[663,8,660,28,"err"],[663,11,660,31],[663,13,660,33],[664,6,660,38],[664,7,660,39],[665,4,661,4],[665,5,661,5],[666,4,662,4],[667,0,663,0],[668,0,664,0],[669,4,665,4,"Parser"],[669,10,665,10],[669,11,665,11,"prototype"],[669,20,665,20],[669,21,665,21,"parseSimpleArgStyleIfPossible"],[669,50,665,50],[669,53,665,53],[669,65,665,65],[670,6,666,8],[670,10,666,12,"nestedBraces"],[670,22,666,24],[670,25,666,27],[670,26,666,28],[671,6,667,8],[671,10,667,12,"startPosition"],[671,23,667,25],[671,26,667,28],[671,30,667,32],[671,31,667,33,"clonePosition"],[671,44,667,46],[671,45,667,47],[671,46,667,48],[672,6,668,8],[672,13,668,15],[672,14,668,16],[672,18,668,20],[672,19,668,21,"isEOF"],[672,24,668,26],[672,25,668,27],[672,26,668,28],[672,28,668,30],[673,8,669,12],[673,12,669,16,"ch"],[673,14,669,18],[673,17,669,21],[673,21,669,25],[673,22,669,26,"char"],[673,26,669,30],[673,27,669,31],[673,28,669,32],[674,8,670,12],[674,16,670,20,"ch"],[674,18,670,22],[675,10,671,16],[675,15,671,21],[675,17,671,23],[675,18,671,24],[676,12,671,35],[677,14,672,20],[678,14,673,20],[679,14,674,20],[679,18,674,24],[679,19,674,25,"bump"],[679,23,674,29],[679,24,674,30],[679,25,674,31],[680,14,675,20],[680,18,675,24,"apostrophePosition"],[680,36,675,42],[680,39,675,45],[680,43,675,49],[680,44,675,50,"clonePosition"],[680,57,675,63],[680,58,675,64],[680,59,675,65],[681,14,676,20],[681,18,676,24],[681,19,676,25],[681,23,676,29],[681,24,676,30,"bumpUntil"],[681,33,676,39],[681,34,676,40],[681,37,676,43],[681,38,676,44],[681,40,676,46],[682,16,677,24],[682,23,677,31],[682,27,677,35],[682,28,677,36,"error"],[682,33,677,41],[682,34,677,42,"ErrorKind"],[682,40,677,51],[682,41,677,51,"ErrorKind"],[682,50,677,51],[682,51,677,52,"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"],[682,83,677,84],[682,85,677,86,"createLocation"],[682,99,677,100],[682,100,677,101,"apostrophePosition"],[682,118,677,119],[682,120,677,121],[682,124,677,125],[682,125,677,126,"clonePosition"],[682,138,677,139],[682,139,677,140],[682,140,677,141],[682,141,677,142],[682,142,677,143],[683,14,678,20],[684,14,679,20],[684,18,679,24],[684,19,679,25,"bump"],[684,23,679,29],[684,24,679,30],[684,25,679,31],[685,14,680,20],[686,12,681,16],[687,10,682,16],[687,15,682,21],[687,18,682,24],[687,19,682,25],[688,12,682,36],[689,14,683,20,"nestedBraces"],[689,26,683,32],[689,30,683,36],[689,31,683,37],[690,14,684,20],[690,18,684,24],[690,19,684,25,"bump"],[690,23,684,29],[690,24,684,30],[690,25,684,31],[691,14,685,20],[692,12,686,16],[693,10,687,16],[693,15,687,21],[693,18,687,24],[693,19,687,25],[694,12,687,36],[695,14,688,20],[695,18,688,24,"nestedBraces"],[695,30,688,36],[695,33,688,39],[695,34,688,40],[695,36,688,42],[696,16,689,24,"nestedBraces"],[696,28,689,36],[696,32,689,40],[696,33,689,41],[697,14,690,20],[697,15,690,21],[697,21,691,25],[698,16,692,24],[698,23,692,31],[699,18,693,28,"val"],[699,21,693,31],[699,23,693,33],[699,27,693,37],[699,28,693,38,"message"],[699,35,693,45],[699,36,693,46,"slice"],[699,41,693,51],[699,42,693,52,"startPosition"],[699,55,693,65],[699,56,693,66,"offset"],[699,62,693,72],[699,64,693,74],[699,68,693,78],[699,69,693,79,"offset"],[699,75,693,85],[699,76,693,86],[699,77,693,87],[699,78,693,88],[700,18,694,28,"err"],[700,21,694,31],[700,23,694,33],[701,16,695,24],[701,17,695,25],[702,14,696,20],[703,14,697,20],[704,12,698,16],[705,10,699,16],[706,12,700,20],[706,16,700,24],[706,17,700,25,"bump"],[706,21,700,29],[706,22,700,30],[706,23,700,31],[707,12,701,20],[708,8,702,12],[709,6,703,8],[710,6,704,8],[710,13,704,15],[711,8,705,12,"val"],[711,11,705,15],[711,13,705,17],[711,17,705,21],[711,18,705,22,"message"],[711,25,705,29],[711,26,705,30,"slice"],[711,31,705,35],[711,32,705,36,"startPosition"],[711,45,705,49],[711,46,705,50,"offset"],[711,52,705,56],[711,54,705,58],[711,58,705,62],[711,59,705,63,"offset"],[711,65,705,69],[711,66,705,70],[711,67,705,71],[711,68,705,72],[712,8,706,12,"err"],[712,11,706,15],[712,13,706,17],[713,6,707,8],[713,7,707,9],[714,4,708,4],[714,5,708,5],[715,4,709,4,"Parser"],[715,10,709,10],[715,11,709,11,"prototype"],[715,20,709,20],[715,21,709,21,"parseNumberSkeletonFromString"],[715,50,709,50],[715,53,709,53],[715,63,709,63,"skeleton"],[715,71,709,71],[715,73,709,73,"location"],[715,81,709,81],[715,83,709,83],[716,6,710,8],[716,10,710,12,"tokens"],[716,16,710,18],[716,19,710,21],[716,21,710,23],[717,6,711,8],[717,10,711,12],[718,8,712,12,"tokens"],[718,14,712,18],[718,17,712,21],[718,21,712,21,"parseNumberSkeletonFromString"],[718,47,712,50],[718,48,712,50,"parseNumberSkeletonFromString"],[718,77,712,50],[718,79,712,51,"skeleton"],[718,87,712,59],[718,88,712,60],[719,6,713,8],[719,7,713,9],[719,8,714,8],[719,15,714,15,"e"],[719,16,714,16],[719,18,714,18],[720,8,715,12],[720,15,715,19],[720,19,715,23],[720,20,715,24,"error"],[720,25,715,29],[720,26,715,30,"ErrorKind"],[720,32,715,39],[720,33,715,39,"ErrorKind"],[720,42,715,39],[720,43,715,40,"INVALID_NUMBER_SKELETON"],[720,66,715,63],[720,68,715,65,"location"],[720,76,715,73],[720,77,715,74],[721,6,716,8],[722,6,717,8],[722,13,717,15],[723,8,718,12,"val"],[723,11,718,15],[723,13,718,17],[724,10,719,16,"type"],[724,14,719,20],[724,16,719,22,"SKELETON_TYPE"],[724,22,719,35],[724,23,719,35,"SKELETON_TYPE"],[724,36,719,35],[724,37,719,36,"number"],[724,43,719,42],[725,10,720,16,"tokens"],[725,16,720,22],[725,18,720,24,"tokens"],[725,24,720,30],[726,10,721,16,"location"],[726,18,721,24],[726,20,721,26,"location"],[726,28,721,34],[727,10,722,16,"parsedOptions"],[727,23,722,29],[727,25,722,31],[727,29,722,35],[727,30,722,36,"shouldParseSkeletons"],[727,50,722,56],[727,53,723,22],[727,57,723,22,"parseNumberSkeleton"],[727,83,723,41],[727,84,723,41,"parseNumberSkeleton"],[727,103,723,41],[727,105,723,42,"tokens"],[727,111,723,48],[727,112,723,49],[727,115,724,22],[727,116,724,23],[728,8,725,12],[728,9,725,13],[729,8,726,12,"err"],[729,11,726,15],[729,13,726,17],[730,6,727,8],[730,7,727,9],[731,4,728,4],[731,5,728,5],[732,4,729,4],[733,0,730,0],[734,0,731,0],[735,0,732,0],[736,0,733,0],[737,0,734,0],[738,0,735,0],[739,0,736,0],[740,0,737,0],[741,0,738,0],[742,4,739,4,"Parser"],[742,10,739,10],[742,11,739,11,"prototype"],[742,20,739,20],[742,21,739,21,"tryParsePluralOrSelectOptions"],[742,50,739,50],[742,53,739,53],[742,63,739,63,"nestingLevel"],[742,75,739,75],[742,77,739,77,"parentArgType"],[742,90,739,90],[742,92,739,92,"expectCloseTag"],[742,106,739,106],[742,108,739,108,"parsedFirstIdentifier"],[742,129,739,129],[742,131,739,131],[743,6,740,8],[743,10,740,12,"_a"],[743,12,740,14],[744,6,741,8],[744,10,741,12,"hasOtherClause"],[744,24,741,26],[744,27,741,29],[744,32,741,34],[745,6,742,8],[745,10,742,12,"options"],[745,17,742,19],[745,20,742,22],[745,22,742,24],[746,6,743,8],[746,10,743,12,"parsedSelectors"],[746,25,743,27],[746,28,743,30],[746,32,743,34,"Set"],[746,35,743,37],[746,36,743,38],[746,37,743,39],[747,6,744,8],[747,10,744,12,"selector"],[747,18,744,20],[747,21,744,23,"parsedFirstIdentifier"],[747,42,744,44],[747,43,744,45,"value"],[747,48,744,50],[748,8,744,52,"selectorLocation"],[748,24,744,68],[748,27,744,71,"parsedFirstIdentifier"],[748,48,744,92],[748,49,744,93,"location"],[748,57,744,101],[749,6,745,8],[750,6,746,8],[751,6,747,8],[752,6,748,8],[752,13,748,15],[752,17,748,19],[752,19,748,21],[753,8,749,12],[753,12,749,16,"selector"],[753,20,749,24],[753,21,749,25,"length"],[753,27,749,31],[753,32,749,36],[753,33,749,37],[753,35,749,39],[754,10,750,16],[754,14,750,20,"startPosition"],[754,27,750,33],[754,30,750,36],[754,34,750,40],[754,35,750,41,"clonePosition"],[754,48,750,54],[754,49,750,55],[754,50,750,56],[755,10,751,16],[755,14,751,20,"parentArgType"],[755,27,751,33],[755,32,751,38],[755,40,751,46],[755,44,751,50],[755,48,751,54],[755,49,751,55,"bumpIf"],[755,55,751,61],[755,56,751,62],[755,59,751,65],[755,60,751,66],[755,62,751,68],[756,12,752,20],[757,12,753,20],[757,16,753,24,"result"],[757,22,753,30],[757,25,753,33],[757,29,753,37],[757,30,753,38,"tryParseDecimalInteger"],[757,52,753,60],[757,53,753,61,"ErrorKind"],[757,59,753,70],[757,60,753,70,"ErrorKind"],[757,69,753,70],[757,70,753,71,"EXPECT_PLURAL_ARGUMENT_SELECTOR"],[757,101,753,102],[757,103,753,104,"ErrorKind"],[757,109,753,113],[757,110,753,113,"ErrorKind"],[757,119,753,113],[757,120,753,114,"INVALID_PLURAL_ARGUMENT_SELECTOR"],[757,152,753,146],[757,153,753,147],[758,12,754,20],[758,16,754,24,"result"],[758,22,754,30],[758,23,754,31,"err"],[758,26,754,34],[758,28,754,36],[759,14,755,24],[759,21,755,31,"result"],[759,27,755,37],[760,12,756,20],[761,12,757,20,"selectorLocation"],[761,28,757,36],[761,31,757,39,"createLocation"],[761,45,757,53],[761,46,757,54,"startPosition"],[761,59,757,67],[761,61,757,69],[761,65,757,73],[761,66,757,74,"clonePosition"],[761,79,757,87],[761,80,757,88],[761,81,757,89],[761,82,757,90],[762,12,758,20,"selector"],[762,20,758,28],[762,23,758,31],[762,27,758,35],[762,28,758,36,"message"],[762,35,758,43],[762,36,758,44,"slice"],[762,41,758,49],[762,42,758,50,"startPosition"],[762,55,758,63],[762,56,758,64,"offset"],[762,62,758,70],[762,64,758,72],[762,68,758,76],[762,69,758,77,"offset"],[762,75,758,83],[762,76,758,84],[762,77,758,85],[762,78,758,86],[763,10,759,16],[763,11,759,17],[763,17,760,21],[764,12,761,20],[765,10,762,16],[766,8,763,12],[767,8,764,12],[768,8,765,12],[768,12,765,16,"parsedSelectors"],[768,27,765,31],[768,28,765,32,"has"],[768,31,765,35],[768,32,765,36,"selector"],[768,40,765,44],[768,41,765,45],[768,43,765,47],[769,10,766,16],[769,17,766,23],[769,21,766,27],[769,22,766,28,"error"],[769,27,766,33],[769,28,766,34,"parentArgType"],[769,41,766,47],[769,46,766,52],[769,54,766,60],[769,57,767,22,"ErrorKind"],[769,63,767,31],[769,64,767,31,"ErrorKind"],[769,73,767,31],[769,74,767,32,"DUPLICATE_SELECT_ARGUMENT_SELECTOR"],[769,108,767,66],[769,111,768,22,"ErrorKind"],[769,117,768,31],[769,118,768,31,"ErrorKind"],[769,127,768,31],[769,128,768,32,"DUPLICATE_PLURAL_ARGUMENT_SELECTOR"],[769,162,768,66],[769,164,768,68,"selectorLocation"],[769,180,768,84],[769,181,768,85],[770,8,769,12],[771,8,770,12],[771,12,770,16,"selector"],[771,20,770,24],[771,25,770,29],[771,32,770,36],[771,34,770,38],[772,10,771,16,"hasOtherClause"],[772,24,771,30],[772,27,771,33],[772,31,771,37],[773,8,772,12],[774,8,773,12],[775,8,774,12],[776,8,775,12],[777,8,776,12],[777,12,776,16],[777,13,776,17,"bumpSpace"],[777,22,776,26],[777,23,776,27],[777,24,776,28],[778,8,777,12],[778,12,777,16,"openingBracePosition"],[778,32,777,36],[778,35,777,39],[778,39,777,43],[778,40,777,44,"clonePosition"],[778,53,777,57],[778,54,777,58],[778,55,777,59],[779,8,778,12],[779,12,778,16],[779,13,778,17],[779,17,778,21],[779,18,778,22,"bumpIf"],[779,24,778,28],[779,25,778,29],[779,28,778,32],[779,29,778,33],[779,31,778,35],[780,10,779,16],[780,17,779,23],[780,21,779,27],[780,22,779,28,"error"],[780,27,779,33],[780,28,779,34,"parentArgType"],[780,41,779,47],[780,46,779,52],[780,54,779,60],[780,57,780,22,"ErrorKind"],[780,63,780,31],[780,64,780,31,"ErrorKind"],[780,73,780,31],[780,74,780,32,"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"],[780,114,780,72],[780,117,781,22,"ErrorKind"],[780,123,781,31],[780,124,781,31,"ErrorKind"],[780,133,781,31],[780,134,781,32,"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"],[780,174,781,72],[780,176,781,74,"createLocation"],[780,190,781,88],[780,191,781,89],[780,195,781,93],[780,196,781,94,"clonePosition"],[780,209,781,107],[780,210,781,108],[780,211,781,109],[780,213,781,111],[780,217,781,115],[780,218,781,116,"clonePosition"],[780,231,781,129],[780,232,781,130],[780,233,781,131],[780,234,781,132],[780,235,781,133],[781,8,782,12],[782,8,783,12],[782,12,783,16,"fragmentResult"],[782,26,783,30],[782,29,783,33],[782,33,783,37],[782,34,783,38,"parseMessage"],[782,46,783,50],[782,47,783,51,"nestingLevel"],[782,59,783,63],[782,62,783,66],[782,63,783,67],[782,65,783,69,"parentArgType"],[782,78,783,82],[782,80,783,84,"expectCloseTag"],[782,94,783,98],[782,95,783,99],[783,8,784,12],[783,12,784,16,"fragmentResult"],[783,26,784,30],[783,27,784,31,"err"],[783,30,784,34],[783,32,784,36],[784,10,785,16],[784,17,785,23,"fragmentResult"],[784,31,785,37],[785,8,786,12],[786,8,787,12],[786,12,787,16,"argCloseResult"],[786,26,787,30],[786,29,787,33],[786,33,787,37],[786,34,787,38,"tryParseArgumentClose"],[786,55,787,59],[786,56,787,60,"openingBracePosition"],[786,76,787,80],[786,77,787,81],[787,8,788,12],[787,12,788,16,"argCloseResult"],[787,26,788,30],[787,27,788,31,"err"],[787,30,788,34],[787,32,788,36],[788,10,789,16],[788,17,789,23,"argCloseResult"],[788,31,789,37],[789,8,790,12],[790,8,791,12,"options"],[790,15,791,19],[790,16,791,20,"push"],[790,20,791,24],[790,21,791,25],[790,22,792,16,"selector"],[790,30,792,24],[790,32,793,16],[791,10,794,20,"value"],[791,15,794,25],[791,17,794,27,"fragmentResult"],[791,31,794,41],[791,32,794,42,"val"],[791,35,794,45],[792,10,795,20,"location"],[792,18,795,28],[792,20,795,30,"createLocation"],[792,34,795,44],[792,35,795,45,"openingBracePosition"],[792,55,795,65],[792,57,795,67],[792,61,795,71],[792,62,795,72,"clonePosition"],[792,75,795,85],[792,76,795,86],[792,77,795,87],[793,8,796,16],[793,9,796,17],[793,10,797,13],[793,11,797,14],[794,8,798,12],[795,8,799,12,"parsedSelectors"],[795,23,799,27],[795,24,799,28,"add"],[795,27,799,31],[795,28,799,32,"selector"],[795,36,799,40],[795,37,799,41],[796,8,800,12],[797,8,801,12],[797,12,801,16],[797,13,801,17,"bumpSpace"],[797,22,801,26],[797,23,801,27],[797,24,801,28],[798,8,802,13,"_a"],[798,10,802,15],[798,13,802,18],[798,17,802,22],[798,18,802,23,"parseIdentifierIfPossible"],[798,43,802,48],[798,44,802,49],[798,45,802,50],[798,47,802,52,"selector"],[798,55,802,60],[798,58,802,63,"_a"],[798,60,802,65],[798,61,802,66,"value"],[798,66,802,71],[798,68,802,73,"selectorLocation"],[798,84,802,89],[798,87,802,92,"_a"],[798,89,802,94],[798,90,802,95,"location"],[798,98,802,103],[799,6,803,8],[800,6,804,8],[800,10,804,12,"options"],[800,17,804,19],[800,18,804,20,"length"],[800,24,804,26],[800,29,804,31],[800,30,804,32],[800,32,804,34],[801,8,805,12],[801,15,805,19],[801,19,805,23],[801,20,805,24,"error"],[801,25,805,29],[801,26,805,30,"parentArgType"],[801,39,805,43],[801,44,805,48],[801,52,805,56],[801,55,806,18,"ErrorKind"],[801,61,806,27],[801,62,806,27,"ErrorKind"],[801,71,806,27],[801,72,806,28,"EXPECT_SELECT_ARGUMENT_SELECTOR"],[801,103,806,59],[801,106,807,18,"ErrorKind"],[801,112,807,27],[801,113,807,27,"ErrorKind"],[801,122,807,27],[801,123,807,28,"EXPECT_PLURAL_ARGUMENT_SELECTOR"],[801,154,807,59],[801,156,807,61,"createLocation"],[801,170,807,75],[801,171,807,76],[801,175,807,80],[801,176,807,81,"clonePosition"],[801,189,807,94],[801,190,807,95],[801,191,807,96],[801,193,807,98],[801,197,807,102],[801,198,807,103,"clonePosition"],[801,211,807,116],[801,212,807,117],[801,213,807,118],[801,214,807,119],[801,215,807,120],[802,6,808,8],[803,6,809,8],[803,10,809,12],[803,14,809,16],[803,15,809,17,"requiresOtherClause"],[803,34,809,36],[803,38,809,40],[803,39,809,41,"hasOtherClause"],[803,53,809,55],[803,55,809,57],[804,8,810,12],[804,15,810,19],[804,19,810,23],[804,20,810,24,"error"],[804,25,810,29],[804,26,810,30,"ErrorKind"],[804,32,810,39],[804,33,810,39,"ErrorKind"],[804,42,810,39],[804,43,810,40,"MISSING_OTHER_CLAUSE"],[804,63,810,60],[804,65,810,62,"createLocation"],[804,79,810,76],[804,80,810,77],[804,84,810,81],[804,85,810,82,"clonePosition"],[804,98,810,95],[804,99,810,96],[804,100,810,97],[804,102,810,99],[804,106,810,103],[804,107,810,104,"clonePosition"],[804,120,810,117],[804,121,810,118],[804,122,810,119],[804,123,810,120],[804,124,810,121],[805,6,811,8],[806,6,812,8],[806,13,812,15],[807,8,812,17,"val"],[807,11,812,20],[807,13,812,22,"options"],[807,20,812,29],[808,8,812,31,"err"],[808,11,812,34],[808,13,812,36],[809,6,812,41],[809,7,812,42],[810,4,813,4],[810,5,813,5],[811,4,814,4,"Parser"],[811,10,814,10],[811,11,814,11,"prototype"],[811,20,814,20],[811,21,814,21,"tryParseDecimalInteger"],[811,43,814,43],[811,46,814,46],[811,56,814,56,"expectNumberError"],[811,73,814,73],[811,75,814,75,"invalidNumberError"],[811,93,814,93],[811,95,814,95],[812,6,815,8],[812,10,815,12,"sign"],[812,14,815,16],[812,17,815,19],[812,18,815,20],[813,6,816,8],[813,10,816,12,"startingPosition"],[813,26,816,28],[813,29,816,31],[813,33,816,35],[813,34,816,36,"clonePosition"],[813,47,816,49],[813,48,816,50],[813,49,816,51],[814,6,817,8],[814,10,817,12],[814,14,817,16],[814,15,817,17,"bumpIf"],[814,21,817,23],[814,22,817,24],[814,25,817,27],[814,26,817,28],[814,28,817,30],[814,29,818,8],[814,30,818,9],[814,36,819,13],[814,40,819,17],[814,44,819,21],[814,45,819,22,"bumpIf"],[814,51,819,28],[814,52,819,29],[814,55,819,32],[814,56,819,33],[814,58,819,35],[815,8,820,12,"sign"],[815,12,820,16],[815,15,820,19],[815,16,820,20],[815,17,820,21],[816,6,821,8],[817,6,822,8],[817,10,822,12,"hasDigits"],[817,19,822,21],[817,22,822,24],[817,27,822,29],[818,6,823,8],[818,10,823,12,"decimal"],[818,17,823,19],[818,20,823,22],[818,21,823,23],[819,6,824,8],[819,13,824,15],[819,14,824,16],[819,18,824,20],[819,19,824,21,"isEOF"],[819,24,824,26],[819,25,824,27],[819,26,824,28],[819,28,824,30],[820,8,825,12],[820,12,825,16,"ch"],[820,14,825,18],[820,17,825,21],[820,21,825,25],[820,22,825,26,"char"],[820,26,825,30],[820,27,825,31],[820,28,825,32],[821,8,826,12],[821,12,826,16,"ch"],[821,14,826,18],[821,18,826,22],[821,20,826,24],[821,21,826,25],[821,34,826,38,"ch"],[821,36,826,40],[821,40,826,44],[821,42,826,46],[821,43,826,47],[821,54,826,58],[822,10,827,16,"hasDigits"],[822,19,827,25],[822,22,827,28],[822,26,827,32],[823,10,828,16,"decimal"],[823,17,828,23],[823,20,828,26,"decimal"],[823,27,828,33],[823,30,828,36],[823,32,828,38],[823,36,828,42,"ch"],[823,38,828,44],[823,41,828,47],[823,43,828,49],[823,44,828,50],[824,10,829,16],[824,14,829,20],[824,15,829,21,"bump"],[824,19,829,25],[824,20,829,26],[824,21,829,27],[825,8,830,12],[825,9,830,13],[825,15,831,17],[826,10,832,16],[827,8,833,12],[828,6,834,8],[829,6,835,8],[829,10,835,12,"location"],[829,18,835,20],[829,21,835,23,"createLocation"],[829,35,835,37],[829,36,835,38,"startingPosition"],[829,52,835,54],[829,54,835,56],[829,58,835,60],[829,59,835,61,"clonePosition"],[829,72,835,74],[829,73,835,75],[829,74,835,76],[829,75,835,77],[830,6,836,8],[830,10,836,12],[830,11,836,13,"hasDigits"],[830,20,836,22],[830,22,836,24],[831,8,837,12],[831,15,837,19],[831,19,837,23],[831,20,837,24,"error"],[831,25,837,29],[831,26,837,30,"expectNumberError"],[831,43,837,47],[831,45,837,49,"location"],[831,53,837,57],[831,54,837,58],[832,6,838,8],[833,6,839,8,"decimal"],[833,13,839,15],[833,17,839,19,"sign"],[833,21,839,23],[834,6,840,8],[834,10,840,12],[834,11,840,13,"isSafeInteger"],[834,24,840,26],[834,25,840,27,"decimal"],[834,32,840,34],[834,33,840,35],[834,35,840,37],[835,8,841,12],[835,15,841,19],[835,19,841,23],[835,20,841,24,"error"],[835,25,841,29],[835,26,841,30,"invalidNumberError"],[835,44,841,48],[835,46,841,50,"location"],[835,54,841,58],[835,55,841,59],[836,6,842,8],[837,6,843,8],[837,13,843,15],[838,8,843,17,"val"],[838,11,843,20],[838,13,843,22,"decimal"],[838,20,843,29],[839,8,843,31,"err"],[839,11,843,34],[839,13,843,36],[840,6,843,41],[840,7,843,42],[841,4,844,4],[841,5,844,5],[842,4,845,4,"Parser"],[842,10,845,10],[842,11,845,11,"prototype"],[842,20,845,20],[842,21,845,21,"offset"],[842,27,845,27],[842,30,845,30],[842,42,845,42],[843,6,846,8],[843,13,846,15],[843,17,846,19],[843,18,846,20,"position"],[843,26,846,28],[843,27,846,29,"offset"],[843,33,846,35],[844,4,847,4],[844,5,847,5],[845,4,848,4,"Parser"],[845,10,848,10],[845,11,848,11,"prototype"],[845,20,848,20],[845,21,848,21,"isEOF"],[845,26,848,26],[845,29,848,29],[845,41,848,41],[846,6,849,8],[846,13,849,15],[846,17,849,19],[846,18,849,20,"offset"],[846,24,849,26],[846,25,849,27],[846,26,849,28],[846,31,849,33],[846,35,849,37],[846,36,849,38,"message"],[846,43,849,45],[846,44,849,46,"length"],[846,50,849,52],[847,4,850,4],[847,5,850,5],[848,4,851,4,"Parser"],[848,10,851,10],[848,11,851,11,"prototype"],[848,20,851,20],[848,21,851,21,"clonePosition"],[848,34,851,34],[848,37,851,37],[848,49,851,49],[849,6,852,8],[850,6,853,8],[850,13,853,15],[851,8,854,12,"offset"],[851,14,854,18],[851,16,854,20],[851,20,854,24],[851,21,854,25,"position"],[851,29,854,33],[851,30,854,34,"offset"],[851,36,854,40],[852,8,855,12,"line"],[852,12,855,16],[852,14,855,18],[852,18,855,22],[852,19,855,23,"position"],[852,27,855,31],[852,28,855,32,"line"],[852,32,855,36],[853,8,856,12,"column"],[853,14,856,18],[853,16,856,20],[853,20,856,24],[853,21,856,25,"position"],[853,29,856,33],[853,30,856,34,"column"],[854,6,857,8],[854,7,857,9],[855,4,858,4],[855,5,858,5],[856,4,859,4],[857,0,860,0],[858,0,861,0],[859,0,862,0],[860,4,863,4,"Parser"],[860,10,863,10],[860,11,863,11,"prototype"],[860,20,863,20],[860,21,863,21,"char"],[860,25,863,25],[860,28,863,28],[860,40,863,40],[861,6,864,8],[861,10,864,12,"offset"],[861,16,864,18],[861,19,864,21],[861,23,864,25],[861,24,864,26,"position"],[861,32,864,34],[861,33,864,35,"offset"],[861,39,864,41],[862,6,865,8],[862,10,865,12,"offset"],[862,16,865,18],[862,20,865,22],[862,24,865,26],[862,25,865,27,"message"],[862,32,865,34],[862,33,865,35,"length"],[862,39,865,41],[862,41,865,43],[863,8,866,12],[863,14,866,18,"Error"],[863,19,866,23],[863,20,866,24],[863,34,866,38],[863,35,866,39],[864,6,867,8],[865,6,868,8],[865,10,868,12,"code"],[865,14,868,16],[865,17,868,19,"codePointAt"],[865,28,868,30],[865,29,868,31],[865,33,868,35],[865,34,868,36,"message"],[865,41,868,43],[865,43,868,45,"offset"],[865,49,868,51],[865,50,868,52],[866,6,869,8],[866,10,869,12,"code"],[866,14,869,16],[866,19,869,21,"undefined"],[866,28,869,30],[866,30,869,32],[867,8,870,12],[867,14,870,18,"Error"],[867,19,870,23],[867,20,870,24],[867,29,870,33],[867,30,870,34,"concat"],[867,36,870,40],[867,37,870,41,"offset"],[867,43,870,47],[867,45,870,49],[867,87,870,91],[867,88,870,92],[867,89,870,93],[868,6,871,8],[869,6,872,8],[869,13,872,15,"code"],[869,17,872,19],[870,4,873,4],[870,5,873,5],[871,4,874,4,"Parser"],[871,10,874,10],[871,11,874,11,"prototype"],[871,20,874,20],[871,21,874,21,"error"],[871,26,874,26],[871,29,874,29],[871,39,874,39,"kind"],[871,43,874,43],[871,45,874,45,"location"],[871,53,874,53],[871,55,874,55],[872,6,875,8],[872,13,875,15],[873,8,876,12,"val"],[873,11,876,15],[873,13,876,17],[873,17,876,21],[874,8,877,12,"err"],[874,11,877,15],[874,13,877,17],[875,10,878,16,"kind"],[875,14,878,20],[875,16,878,22,"kind"],[875,20,878,26],[876,10,879,16,"message"],[876,17,879,23],[876,19,879,25],[876,23,879,29],[876,24,879,30,"message"],[876,31,879,37],[877,10,880,16,"location"],[877,18,880,24],[877,20,880,26,"location"],[878,8,881,12],[879,6,882,8],[879,7,882,9],[880,4,883,4],[880,5,883,5],[881,4,884,4],[882,4,885,4,"Parser"],[882,10,885,10],[882,11,885,11,"prototype"],[882,20,885,20],[882,21,885,21,"bump"],[882,25,885,25],[882,28,885,28],[882,40,885,40],[883,6,886,8],[883,10,886,12],[883,14,886,16],[883,15,886,17,"isEOF"],[883,20,886,22],[883,21,886,23],[883,22,886,24],[883,24,886,26],[884,8,887,12],[885,6,888,8],[886,6,889,8],[886,10,889,12,"code"],[886,14,889,16],[886,17,889,19],[886,21,889,23],[886,22,889,24,"char"],[886,26,889,28],[886,27,889,29],[886,28,889,30],[887,6,890,8],[887,10,890,12,"code"],[887,14,890,16],[887,19,890,21],[887,21,890,23],[887,22,890,24],[887,34,890,36],[888,8,891,12],[888,12,891,16],[888,13,891,17,"position"],[888,21,891,25],[888,22,891,26,"line"],[888,26,891,30],[888,30,891,34],[888,31,891,35],[889,8,892,12],[889,12,892,16],[889,13,892,17,"position"],[889,21,892,25],[889,22,892,26,"column"],[889,28,892,32],[889,31,892,35],[889,32,892,36],[890,8,893,12],[890,12,893,16],[890,13,893,17,"position"],[890,21,893,25],[890,22,893,26,"offset"],[890,28,893,32],[890,32,893,36],[890,33,893,37],[891,6,894,8],[891,7,894,9],[891,13,895,13],[892,8,896,12],[892,12,896,16],[892,13,896,17,"position"],[892,21,896,25],[892,22,896,26,"column"],[892,28,896,32],[892,32,896,36],[892,33,896,37],[893,8,897,12],[894,8,898,12],[894,12,898,16],[894,13,898,17,"position"],[894,21,898,25],[894,22,898,26,"offset"],[894,28,898,32],[894,32,898,36,"code"],[894,36,898,40],[894,39,898,43],[894,46,898,50],[894,49,898,53],[894,50,898,54],[894,53,898,57],[894,54,898,58],[895,6,899,8],[896,4,900,4],[896,5,900,5],[897,4,901,4],[898,0,902,0],[899,0,903,0],[900,0,904,0],[901,0,905,0],[902,0,906,0],[903,4,907,4,"Parser"],[903,10,907,10],[903,11,907,11,"prototype"],[903,20,907,20],[903,21,907,21,"bumpIf"],[903,27,907,27],[903,30,907,30],[903,40,907,40,"prefix"],[903,46,907,46],[903,48,907,48],[904,6,908,8],[904,10,908,12,"startsWith"],[904,20,908,22],[904,21,908,23],[904,25,908,27],[904,26,908,28,"message"],[904,33,908,35],[904,35,908,37,"prefix"],[904,41,908,43],[904,43,908,45],[904,47,908,49],[904,48,908,50,"offset"],[904,54,908,56],[904,55,908,57],[904,56,908,58],[904,57,908,59],[904,59,908,61],[905,8,909,12],[905,13,909,17],[905,17,909,21,"i"],[905,18,909,22],[905,21,909,25],[905,22,909,26],[905,24,909,28,"i"],[905,25,909,29],[905,28,909,32,"prefix"],[905,34,909,38],[905,35,909,39,"length"],[905,41,909,45],[905,43,909,47,"i"],[905,44,909,48],[905,46,909,50],[905,48,909,52],[906,10,910,16],[906,14,910,20],[906,15,910,21,"bump"],[906,19,910,25],[906,20,910,26],[906,21,910,27],[907,8,911,12],[908,8,912,12],[908,15,912,19],[908,19,912,23],[909,6,913,8],[910,6,914,8],[910,13,914,15],[910,18,914,20],[911,4,915,4],[911,5,915,5],[912,4,916,4],[913,0,917,0],[914,0,918,0],[915,0,919,0],[916,4,920,4,"Parser"],[916,10,920,10],[916,11,920,11,"prototype"],[916,20,920,20],[916,21,920,21,"bumpUntil"],[916,30,920,30],[916,33,920,33],[916,43,920,43,"pattern"],[916,50,920,50],[916,52,920,52],[917,6,921,8],[917,10,921,12,"currentOffset"],[917,23,921,25],[917,26,921,28],[917,30,921,32],[917,31,921,33,"offset"],[917,37,921,39],[917,38,921,40],[917,39,921,41],[918,6,922,8],[918,10,922,12,"index"],[918,15,922,17],[918,18,922,20],[918,22,922,24],[918,23,922,25,"message"],[918,30,922,32],[918,31,922,33,"indexOf"],[918,38,922,40],[918,39,922,41,"pattern"],[918,46,922,48],[918,48,922,50,"currentOffset"],[918,61,922,63],[918,62,922,64],[919,6,923,8],[919,10,923,12,"index"],[919,15,923,17],[919,19,923,21],[919,20,923,22],[919,22,923,24],[920,8,924,12],[920,12,924,16],[920,13,924,17,"bumpTo"],[920,19,924,23],[920,20,924,24,"index"],[920,25,924,29],[920,26,924,30],[921,8,925,12],[921,15,925,19],[921,19,925,23],[922,6,926,8],[922,7,926,9],[922,13,927,13],[923,8,928,12],[923,12,928,16],[923,13,928,17,"bumpTo"],[923,19,928,23],[923,20,928,24],[923,24,928,28],[923,25,928,29,"message"],[923,32,928,36],[923,33,928,37,"length"],[923,39,928,43],[923,40,928,44],[924,8,929,12],[924,15,929,19],[924,20,929,24],[925,6,930,8],[926,4,931,4],[926,5,931,5],[927,4,932,4],[928,0,933,0],[929,0,934,0],[930,0,935,0],[931,4,936,4,"Parser"],[931,10,936,10],[931,11,936,11,"prototype"],[931,20,936,20],[931,21,936,21,"bumpTo"],[931,27,936,27],[931,30,936,30],[931,40,936,40,"targetOffset"],[931,52,936,52],[931,54,936,54],[932,6,937,8],[932,10,937,12],[932,14,937,16],[932,15,937,17,"offset"],[932,21,937,23],[932,22,937,24],[932,23,937,25],[932,26,937,28,"targetOffset"],[932,38,937,40],[932,40,937,42],[933,8,938,12],[933,14,938,18,"Error"],[933,19,938,23],[933,20,938,24],[933,35,938,39],[933,36,938,40,"concat"],[933,42,938,46],[933,43,938,47,"targetOffset"],[933,55,938,59],[933,57,938,61],[933,112,938,116],[933,113,938,117],[933,114,938,118,"concat"],[933,120,938,124],[933,121,938,125],[933,125,938,129],[933,126,938,130,"offset"],[933,132,938,136],[933,133,938,137],[933,134,938,138],[933,135,938,139],[933,136,938,140],[934,6,939,8],[935,6,940,8,"targetOffset"],[935,18,940,20],[935,21,940,23,"Math"],[935,25,940,27],[935,26,940,28,"min"],[935,29,940,31],[935,30,940,32,"targetOffset"],[935,42,940,44],[935,44,940,46],[935,48,940,50],[935,49,940,51,"message"],[935,56,940,58],[935,57,940,59,"length"],[935,63,940,65],[935,64,940,66],[936,6,941,8],[936,13,941,15],[936,17,941,19],[936,19,941,21],[937,8,942,12],[937,12,942,16,"offset"],[937,18,942,22],[937,21,942,25],[937,25,942,29],[937,26,942,30,"offset"],[937,32,942,36],[937,33,942,37],[937,34,942,38],[938,8,943,12],[938,12,943,16,"offset"],[938,18,943,22],[938,23,943,27,"targetOffset"],[938,35,943,39],[938,37,943,41],[939,10,944,16],[940,8,945,12],[941,8,946,12],[941,12,946,16,"offset"],[941,18,946,22],[941,21,946,25,"targetOffset"],[941,33,946,37],[941,35,946,39],[942,10,947,16],[942,16,947,22,"Error"],[942,21,947,27],[942,22,947,28],[942,37,947,43],[942,38,947,44,"concat"],[942,44,947,50],[942,45,947,51,"targetOffset"],[942,57,947,63],[942,59,947,65],[942,101,947,107],[942,102,947,108],[942,103,947,109],[943,8,948,12],[944,8,949,12],[944,12,949,16],[944,13,949,17,"bump"],[944,17,949,21],[944,18,949,22],[944,19,949,23],[945,8,950,12],[945,12,950,16],[945,16,950,20],[945,17,950,21,"isEOF"],[945,22,950,26],[945,23,950,27],[945,24,950,28],[945,26,950,30],[946,10,951,16],[947,8,952,12],[948,6,953,8],[949,4,954,4],[949,5,954,5],[950,4,955,4],[951,4,956,4,"Parser"],[951,10,956,10],[951,11,956,11,"prototype"],[951,20,956,20],[951,21,956,21,"bumpSpace"],[951,30,956,30],[951,33,956,33],[951,45,956,45],[952,6,957,8],[952,13,957,15],[952,14,957,16],[952,18,957,20],[952,19,957,21,"isEOF"],[952,24,957,26],[952,25,957,27],[952,26,957,28],[952,30,957,32,"_isWhiteSpace"],[952,43,957,45],[952,44,957,46],[952,48,957,50],[952,49,957,51,"char"],[952,53,957,55],[952,54,957,56],[952,55,957,57],[952,56,957,58],[952,58,957,60],[953,8,958,12],[953,12,958,16],[953,13,958,17,"bump"],[953,17,958,21],[953,18,958,22],[953,19,958,23],[954,6,959,8],[955,4,960,4],[955,5,960,5],[956,4,961,4],[957,0,962,0],[958,0,963,0],[959,0,964,0],[960,4,965,4,"Parser"],[960,10,965,10],[960,11,965,11,"prototype"],[960,20,965,20],[960,21,965,21,"peek"],[960,25,965,25],[960,28,965,28],[960,40,965,40],[961,6,966,8],[961,10,966,12],[961,14,966,16],[961,15,966,17,"isEOF"],[961,20,966,22],[961,21,966,23],[961,22,966,24],[961,24,966,26],[962,8,967,12],[962,15,967,19],[962,19,967,23],[963,6,968,8],[964,6,969,8],[964,10,969,12,"code"],[964,14,969,16],[964,17,969,19],[964,21,969,23],[964,22,969,24,"char"],[964,26,969,28],[964,27,969,29],[964,28,969,30],[965,6,970,8],[965,10,970,12,"offset"],[965,16,970,18],[965,19,970,21],[965,23,970,25],[965,24,970,26,"offset"],[965,30,970,32],[965,31,970,33],[965,32,970,34],[966,6,971,8],[966,10,971,12,"nextCode"],[966,18,971,20],[966,21,971,23],[966,25,971,27],[966,26,971,28,"message"],[966,33,971,35],[966,34,971,36,"charCodeAt"],[966,44,971,46],[966,45,971,47,"offset"],[966,51,971,53],[966,55,971,57,"code"],[966,59,971,61],[966,63,971,65],[966,70,971,72],[966,73,971,75],[966,74,971,76],[966,77,971,79],[966,78,971,80],[966,79,971,81],[966,80,971,82],[967,6,972,8],[967,13,972,15,"nextCode"],[967,21,972,23],[967,26,972,28],[967,30,972,32],[967,34,972,36,"nextCode"],[967,42,972,44],[967,47,972,49],[967,52,972,54],[967,53,972,55],[967,56,972,58,"nextCode"],[967,64,972,66],[967,67,972,69],[967,71,972,73],[968,4,973,4],[968,5,973,5],[969,4,974,4],[969,11,974,11,"Parser"],[969,17,974,17],[970,2,975,0],[970,3,975,1],[970,4,975,2],[970,5,975,4],[971,2,977,0],[972,0,978,0],[973,0,979,0],[974,0,980,0],[975,0,981,0],[976,2,982,0],[976,11,982,9,"_isAlpha"],[976,19,982,17,"_isAlpha"],[976,20,982,18,"codepoint"],[976,29,982,27],[976,31,982,29],[977,4,983,4],[977,11,983,13,"codepoint"],[977,20,983,22],[977,24,983,26],[977,26,983,28],[977,30,983,32,"codepoint"],[977,39,983,41],[977,43,983,45],[977,46,983,48],[977,50,984,9,"codepoint"],[977,59,984,18],[977,63,984,22],[977,65,984,24],[977,69,984,28,"codepoint"],[977,78,984,37],[977,82,984,41],[977,84,984,44],[978,2,985,0],[979,2,986,0],[979,11,986,9,"_isAlphaOrSlash"],[979,26,986,24,"_isAlphaOrSlash"],[979,27,986,25,"codepoint"],[979,36,986,34],[979,38,986,36],[980,4,987,4],[980,11,987,11,"_isAlpha"],[980,19,987,19],[980,20,987,20,"codepoint"],[980,29,987,29],[980,30,987,30],[980,34,987,34,"codepoint"],[980,43,987,43],[980,48,987,48],[980,50,987,50],[980,51,987,51],[980,52,987,52],[981,2,988,0],[982,2,989,0],[983,2,990,0],[983,11,990,9,"_isPotentialElementNameChar"],[983,38,990,36,"_isPotentialElementNameChar"],[983,39,990,37,"c"],[983,40,990,38],[983,42,990,40],[984,4,991,4],[984,11,991,12,"c"],[984,12,991,13],[984,17,991,18],[984,19,991,20],[984,20,991,21],[984,33,992,8,"c"],[984,34,992,9],[984,39,992,14],[984,41,992,16],[984,42,992,17],[984,55,993,9,"c"],[984,56,993,10],[984,60,993,14],[984,62,993,16],[984,66,993,20,"c"],[984,67,993,21],[984,71,993,25],[984,73,993,28],[984,74,993,29],[984,88,994,8,"c"],[984,89,994,9],[984,94,994,14],[984,96,994,16],[984,97,994,17],[984,110,995,9,"c"],[984,111,995,10],[984,115,995,14],[984,117,995,16],[984,121,995,20,"c"],[984,122,995,21],[984,126,995,25],[984,129,995,29],[984,130,995,30],[984,145,996,9,"c"],[984,146,996,10],[984,150,996,14],[984,152,996,16],[984,156,996,20,"c"],[984,157,996,21],[984,161,996,25],[984,163,996,28],[984,164,996,29],[984,178,997,8,"c"],[984,179,997,9],[984,183,997,13],[984,187,997,17],[984,191,998,9,"c"],[984,192,998,10],[984,196,998,14],[984,200,998,18],[984,204,998,22,"c"],[984,205,998,23],[984,209,998,27],[984,213,998,32],[984,217,999,9,"c"],[984,218,999,10],[984,222,999,14],[984,226,999,18],[984,230,999,22,"c"],[984,231,999,23],[984,235,999,27],[984,239,999,32],[984,243,1000,9,"c"],[984,244,1000,10],[984,248,1000,14],[984,252,1000,18],[984,256,1000,22,"c"],[984,257,1000,23],[984,261,1000,27],[984,266,1000,33],[984,270,1001,9,"c"],[984,271,1001,10],[984,275,1001,14],[984,280,1001,19],[984,284,1001,23,"c"],[984,285,1001,24],[984,289,1001,28],[984,295,1001,35],[984,299,1002,9,"c"],[984,300,1002,10],[984,304,1002,14],[984,310,1002,20],[984,314,1002,24,"c"],[984,315,1002,25],[984,319,1002,29],[984,325,1002,36],[984,329,1003,9,"c"],[984,330,1003,10],[984,334,1003,14],[984,340,1003,20],[984,344,1003,24,"c"],[984,345,1003,25],[984,349,1003,29],[984,355,1003,36],[984,359,1004,9,"c"],[984,360,1004,10],[984,364,1004,14],[984,370,1004,20],[984,374,1004,24,"c"],[984,375,1004,25],[984,379,1004,29],[984,385,1004,36],[984,389,1005,9,"c"],[984,390,1005,10],[984,394,1005,14],[984,400,1005,20],[984,404,1005,24,"c"],[984,405,1005,25],[984,409,1005,29],[984,415,1005,36],[984,419,1006,9,"c"],[984,420,1006,10],[984,424,1006,14],[984,430,1006,20],[984,434,1006,24,"c"],[984,435,1006,25],[984,439,1006,29],[984,445,1006,36],[984,449,1007,9,"c"],[984,450,1007,10],[984,454,1007,14],[984,460,1007,20],[984,464,1007,24,"c"],[984,465,1007,25],[984,469,1007,29],[984,475,1007,36],[984,479,1008,9,"c"],[984,480,1008,10],[984,484,1008,14],[984,490,1008,20],[984,494,1008,24,"c"],[984,495,1008,25],[984,499,1008,29],[984,505,1008,36],[984,509,1009,9,"c"],[984,510,1009,10],[984,514,1009,14],[984,521,1009,21],[984,525,1009,25,"c"],[984,526,1009,26],[984,530,1009,30],[984,537,1009,38],[985,2,1010,0],[986,2,1011,0],[987,0,1012,0],[988,0,1013,0],[989,0,1014,0],[990,2,1015,0],[990,11,1015,9,"_isWhiteSpace"],[990,24,1015,22,"_isWhiteSpace"],[990,25,1015,23,"c"],[990,26,1015,24],[990,28,1015,26],[991,4,1016,4],[991,11,1016,13,"c"],[991,12,1016,14],[991,16,1016,18],[991,22,1016,24],[991,26,1016,28,"c"],[991,27,1016,29],[991,31,1016,33],[991,37,1016,39],[991,41,1017,8,"c"],[991,42,1017,9],[991,47,1017,14],[991,53,1017,20],[991,57,1018,8,"c"],[991,58,1018,9],[991,63,1018,14],[991,69,1018,20],[991,73,1019,9,"c"],[991,74,1019,10],[991,78,1019,14],[991,84,1019,20],[991,88,1019,24,"c"],[991,89,1019,25],[991,93,1019,29],[991,99,1019,36],[991,103,1020,8,"c"],[991,104,1020,9],[991,109,1020,14],[991,115,1020,20],[991,119,1021,8,"c"],[991,120,1021,9],[991,125,1021,14],[991,131,1021,20],[992,2,1022,0],[993,2,1023,0],[994,0,1024,0],[995,0,1025,0],[996,0,1026,0],[997,2,1027,0],[997,11,1027,9,"_isPatternSyntax"],[997,27,1027,25,"_isPatternSyntax"],[997,28,1027,26,"c"],[997,29,1027,27],[997,31,1027,29],[998,4,1028,4],[998,11,1028,13,"c"],[998,12,1028,14],[998,16,1028,18],[998,22,1028,24],[998,26,1028,28,"c"],[998,27,1028,29],[998,31,1028,33],[998,37,1028,39],[998,41,1029,8,"c"],[998,42,1029,9],[998,47,1029,14],[998,53,1029,20],[998,57,1030,9,"c"],[998,58,1030,10],[998,62,1030,14],[998,68,1030,20],[998,72,1030,24,"c"],[998,73,1030,25],[998,77,1030,29],[998,83,1030,36],[998,87,1031,8,"c"],[998,88,1031,9],[998,93,1031,14],[998,99,1031,20],[998,103,1032,8,"c"],[998,104,1032,9],[998,109,1032,14],[998,115,1032,20],[998,119,1033,8,"c"],[998,120,1033,9],[998,125,1033,14],[998,131,1033,20],[998,135,1034,8,"c"],[998,136,1034,9],[998,141,1034,14],[998,147,1034,20],[998,151,1035,8,"c"],[998,152,1035,9],[998,157,1035,14],[998,163,1035,20],[998,167,1036,8,"c"],[998,168,1036,9],[998,173,1036,14],[998,179,1036,20],[998,183,1037,9,"c"],[998,184,1037,10],[998,188,1037,14],[998,194,1037,20],[998,198,1037,24,"c"],[998,199,1037,25],[998,203,1037,29],[998,209,1037,36],[998,213,1038,9,"c"],[998,214,1038,10],[998,218,1038,14],[998,224,1038,20],[998,228,1038,24,"c"],[998,229,1038,25],[998,233,1038,29],[998,239,1038,36],[998,243,1039,9,"c"],[998,244,1039,10],[998,248,1039,14],[998,254,1039,20],[998,258,1039,24,"c"],[998,259,1039,25],[998,263,1039,29],[998,269,1039,36],[998,273,1040,9,"c"],[998,274,1040,10],[998,278,1040,14],[998,284,1040,20],[998,288,1040,24,"c"],[998,289,1040,25],[998,293,1040,29],[998,299,1040,36],[998,303,1041,8,"c"],[998,304,1041,9],[998,309,1041,14],[998,315,1041,20],[998,319,1042,8,"c"],[998,320,1042,9],[998,325,1042,14],[998,331,1042,20],[998,335,1043,8,"c"],[998,336,1043,9],[998,341,1043,14],[998,347,1043,20],[998,351,1044,8,"c"],[998,352,1044,9],[998,357,1044,14],[998,363,1044,20],[998,367,1045,8,"c"],[998,368,1045,9],[998,373,1045,14],[998,379,1045,20],[998,383,1046,8,"c"],[998,384,1046,9],[998,389,1046,14],[998,395,1046,20],[998,399,1047,8,"c"],[998,400,1047,9],[998,405,1047,14],[998,411,1047,20],[998,415,1048,8,"c"],[998,416,1048,9],[998,421,1048,14],[998,427,1048,20],[998,431,1049,8,"c"],[998,432,1049,9],[998,437,1049,14],[998,443,1049,20],[998,447,1050,8,"c"],[998,448,1050,9],[998,453,1050,14],[998,459,1050,20],[998,463,1051,9,"c"],[998,464,1051,10],[998,468,1051,14],[998,474,1051,20],[998,478,1051,24,"c"],[998,479,1051,25],[998,483,1051,29],[998,489,1051,36],[998,493,1052,8,"c"],[998,494,1052,9],[998,499,1052,14],[998,505,1052,20],[998,509,1053,8,"c"],[998,510,1053,9],[998,515,1053,14],[998,521,1053,20],[998,525,1054,8,"c"],[998,526,1054,9],[998,531,1054,14],[998,537,1054,20],[998,541,1055,8,"c"],[998,542,1055,9],[998,547,1055,14],[998,553,1055,20],[998,557,1056,8,"c"],[998,558,1056,9],[998,563,1056,14],[998,569,1056,20],[998,573,1057,8,"c"],[998,574,1057,9],[998,579,1057,14],[998,585,1057,20],[998,589,1058,8,"c"],[998,590,1058,9],[998,595,1058,14],[998,601,1058,20],[998,605,1059,8,"c"],[998,606,1059,9],[998,611,1059,14],[998,617,1059,20],[998,621,1060,8,"c"],[998,622,1060,9],[998,627,1060,14],[998,633,1060,20],[998,637,1061,8,"c"],[998,638,1061,9],[998,643,1061,14],[998,649,1061,20],[998,653,1062,8,"c"],[998,654,1062,9],[998,659,1062,14],[998,665,1062,20],[998,669,1063,8,"c"],[998,670,1063,9],[998,675,1063,14],[998,681,1063,20],[998,685,1064,8,"c"],[998,686,1064,9],[998,691,1064,14],[998,697,1064,20],[998,701,1065,9,"c"],[998,702,1065,10],[998,706,1065,14],[998,712,1065,20],[998,716,1065,24,"c"],[998,717,1065,25],[998,721,1065,29],[998,727,1065,36],[998,731,1066,9,"c"],[998,732,1066,10],[998,736,1066,14],[998,742,1066,20],[998,746,1066,24,"c"],[998,747,1066,25],[998,751,1066,29],[998,757,1066,36],[998,761,1067,8,"c"],[998,762,1067,9],[998,767,1067,14],[998,773,1067,20],[998,777,1068,8,"c"],[998,778,1068,9],[998,783,1068,14],[998,789,1068,20],[998,793,1069,8,"c"],[998,794,1069,9],[998,799,1069,14],[998,805,1069,20],[998,809,1070,9,"c"],[998,810,1070,10],[998,814,1070,14],[998,820,1070,20],[998,824,1070,24,"c"],[998,825,1070,25],[998,829,1070,29],[998,835,1070,36],[998,839,1071,8,"c"],[998,840,1071,9],[998,845,1071,14],[998,851,1071,20],[998,855,1072,8,"c"],[998,856,1072,9],[998,861,1072,14],[998,867,1072,20],[998,871,1073,8,"c"],[998,872,1073,9],[998,877,1073,14],[998,883,1073,20],[998,887,1074,9,"c"],[998,888,1074,10],[998,892,1074,14],[998,898,1074,20],[998,902,1074,24,"c"],[998,903,1074,25],[998,907,1074,29],[998,913,1074,36],[998,917,1075,9,"c"],[998,918,1075,10],[998,922,1075,14],[998,928,1075,20],[998,932,1075,24,"c"],[998,933,1075,25],[998,937,1075,29],[998,943,1075,36],[998,947,1076,8,"c"],[998,948,1076,9],[998,953,1076,14],[998,959,1076,20],[998,963,1077,8,"c"],[998,964,1077,9],[998,969,1077,14],[998,975,1077,20],[998,979,1078,9,"c"],[998,980,1078,10],[998,984,1078,14],[998,990,1078,20],[998,994,1078,24,"c"],[998,995,1078,25],[998,999,1078,29],[998,1005,1078,36],[998,1009,1079,9,"c"],[998,1010,1079,10],[998,1014,1079,14],[998,1020,1079,20],[998,1024,1079,24,"c"],[998,1025,1079,25],[998,1029,1079,29],[998,1035,1079,36],[998,1039,1080,8,"c"],[998,1040,1080,9],[998,1045,1080,14],[998,1051,1080,20],[998,1055,1081,8,"c"],[998,1056,1081,9],[998,1061,1081,14],[998,1067,1081,20],[998,1071,1082,8,"c"],[998,1072,1082,9],[998,1077,1082,14],[998,1083,1082,20],[998,1087,1083,9,"c"],[998,1088,1083,10],[998,1092,1083,14],[998,1098,1083,20],[998,1102,1083,24,"c"],[998,1103,1083,25],[998,1107,1083,29],[998,1113,1083,36],[998,1117,1084,8,"c"],[998,1118,1084,9],[998,1123,1084,14],[998,1129,1084,20],[998,1133,1085,8,"c"],[998,1134,1085,9],[998,1139,1085,14],[998,1145,1085,20],[998,1149,1086,9,"c"],[998,1150,1086,10],[998,1154,1086,14],[998,1160,1086,20],[998,1164,1086,24,"c"],[998,1165,1086,25],[998,1169,1086,29],[998,1175,1086,36],[998,1179,1087,9,"c"],[998,1180,1087,10],[998,1184,1087,14],[998,1190,1087,20],[998,1194,1087,24,"c"],[998,1195,1087,25],[998,1199,1087,29],[998,1205,1087,36],[998,1209,1088,9,"c"],[998,1210,1088,10],[998,1214,1088,14],[998,1220,1088,20],[998,1224,1088,24,"c"],[998,1225,1088,25],[998,1229,1088,29],[998,1235,1088,36],[998,1239,1089,9,"c"],[998,1240,1089,10],[998,1244,1089,14],[998,1250,1089,20],[998,1254,1089,24,"c"],[998,1255,1089,25],[998,1259,1089,29],[998,1265,1089,36],[998,1269,1090,9,"c"],[998,1270,1090,10],[998,1274,1090,14],[998,1280,1090,20],[998,1284,1090,24,"c"],[998,1285,1090,25],[998,1289,1090,29],[998,1295,1090,36],[998,1299,1091,8,"c"],[998,1300,1091,9],[998,1305,1091,14],[998,1311,1091,20],[998,1315,1092,9,"c"],[998,1316,1092,10],[998,1320,1092,14],[998,1326,1092,20],[998,1330,1092,24,"c"],[998,1331,1092,25],[998,1335,1092,29],[998,1341,1092,36],[998,1345,1093,8,"c"],[998,1346,1093,9],[998,1351,1093,14],[998,1357,1093,20],[998,1361,1094,9,"c"],[998,1362,1094,10],[998,1366,1094,14],[998,1372,1094,20],[998,1376,1094,24,"c"],[998,1377,1094,25],[998,1381,1094,29],[998,1387,1094,36],[998,1391,1095,8,"c"],[998,1392,1095,9],[998,1397,1095,14],[998,1403,1095,20],[998,1407,1096,9,"c"],[998,1408,1096,10],[998,1412,1096,14],[998,1418,1096,20],[998,1422,1096,24,"c"],[998,1423,1096,25],[998,1427,1096,29],[998,1433,1096,36],[998,1437,1097,8,"c"],[998,1438,1097,9],[998,1443,1097,14],[998,1449,1097,20],[998,1453,1098,9,"c"],[998,1454,1098,10],[998,1458,1098,14],[998,1464,1098,20],[998,1468,1098,24,"c"],[998,1469,1098,25],[998,1473,1098,29],[998,1479,1098,36],[998,1483,1099,9,"c"],[998,1484,1099,10],[998,1488,1099,14],[998,1494,1099,20],[998,1498,1099,24,"c"],[998,1499,1099,25],[998,1503,1099,29],[998,1509,1099,36],[998,1513,1100,9,"c"],[998,1514,1100,10],[998,1518,1100,14],[998,1524,1100,20],[998,1528,1100,24,"c"],[998,1529,1100,25],[998,1533,1100,29],[998,1539,1100,36],[998,1543,1101,8,"c"],[998,1544,1101,9],[998,1549,1101,14],[998,1555,1101,20],[998,1559,1102,8,"c"],[998,1560,1102,9],[998,1565,1102,14],[998,1571,1102,20],[998,1575,1103,8,"c"],[998,1576,1103,9],[998,1581,1103,14],[998,1587,1103,20],[998,1591,1104,9,"c"],[998,1592,1104,10],[998,1596,1104,14],[998,1602,1104,20],[998,1606,1104,24,"c"],[998,1607,1104,25],[998,1611,1104,29],[998,1617,1104,36],[998,1621,1105,9,"c"],[998,1622,1105,10],[998,1626,1105,14],[998,1632,1105,20],[998,1636,1105,24,"c"],[998,1637,1105,25],[998,1641,1105,29],[998,1647,1105,36],[998,1651,1106,9,"c"],[998,1652,1106,10],[998,1656,1106,14],[998,1662,1106,20],[998,1666,1106,24,"c"],[998,1667,1106,25],[998,1671,1106,29],[998,1677,1106,36],[998,1681,1107,8,"c"],[998,1682,1107,9],[998,1687,1107,14],[998,1693,1107,20],[998,1697,1108,8,"c"],[998,1698,1108,9],[998,1703,1108,14],[998,1709,1108,20],[998,1713,1109,8,"c"],[998,1714,1109,9],[998,1719,1109,14],[998,1725,1109,20],[998,1729,1110,8,"c"],[998,1730,1110,9],[998,1735,1110,14],[998,1741,1110,20],[998,1745,1111,9,"c"],[998,1746,1111,10],[998,1750,1111,14],[998,1756,1111,20],[998,1760,1111,24,"c"],[998,1761,1111,25],[998,1765,1111,29],[998,1771,1111,36],[998,1775,1112,9,"c"],[998,1776,1112,10],[998,1780,1112,14],[998,1786,1112,20],[998,1790,1112,24,"c"],[998,1791,1112,25],[998,1795,1112,29],[998,1801,1112,36],[998,1805,1113,9,"c"],[998,1806,1113,10],[998,1810,1113,14],[998,1816,1113,20],[998,1820,1113,24,"c"],[998,1821,1113,25],[998,1825,1113,29],[998,1831,1113,36],[998,1835,1114,8,"c"],[998,1836,1114,9],[998,1841,1114,14],[998,1847,1114,20],[998,1851,1115,8,"c"],[998,1852,1115,9],[998,1857,1115,14],[998,1863,1115,20],[998,1867,1116,9,"c"],[998,1868,1116,10],[998,1872,1116,14],[998,1878,1116,20],[998,1882,1116,24,"c"],[998,1883,1116,25],[998,1887,1116,29],[998,1893,1116,36],[998,1897,1117,8,"c"],[998,1898,1117,9],[998,1903,1117,14],[998,1909,1117,20],[998,1913,1118,9,"c"],[998,1914,1118,10],[998,1918,1118,14],[998,1924,1118,20],[998,1928,1118,24,"c"],[998,1929,1118,25],[998,1933,1118,29],[998,1939,1118,36],[998,1943,1119,9,"c"],[998,1944,1119,10],[998,1948,1119,14],[998,1954,1119,20],[998,1958,1119,24,"c"],[998,1959,1119,25],[998,1963,1119,29],[998,1969,1119,36],[998,1973,1120,9,"c"],[998,1974,1120,10],[998,1978,1120,14],[998,1984,1120,20],[998,1988,1120,24,"c"],[998,1989,1120,25],[998,1993,1120,29],[998,1999,1120,36],[998,2003,1121,9,"c"],[998,2004,1121,10],[998,2008,1121,14],[998,2014,1121,20],[998,2018,1121,24,"c"],[998,2019,1121,25],[998,2023,1121,29],[998,2029,1121,36],[998,2033,1122,9,"c"],[998,2034,1122,10],[998,2038,1122,14],[998,2044,1122,20],[998,2048,1122,24,"c"],[998,2049,1122,25],[998,2053,1122,29],[998,2059,1122,36],[998,2063,1123,9,"c"],[998,2064,1123,10],[998,2068,1123,14],[998,2074,1123,20],[998,2078,1123,24,"c"],[998,2079,1123,25],[998,2083,1123,29],[998,2089,1123,36],[998,2093,1124,9,"c"],[998,2094,1124,10],[998,2098,1124,14],[998,2104,1124,20],[998,2108,1124,24,"c"],[998,2109,1124,25],[998,2113,1124,29],[998,2119,1124,36],[998,2123,1125,9,"c"],[998,2124,1125,10],[998,2128,1125,14],[998,2134,1125,20],[998,2138,1125,24,"c"],[998,2139,1125,25],[998,2143,1125,29],[998,2149,1125,36],[998,2153,1126,9,"c"],[998,2154,1126,10],[998,2158,1126,14],[998,2164,1126,20],[998,2168,1126,24,"c"],[998,2169,1126,25],[998,2173,1126,29],[998,2179,1126,36],[998,2183,1127,8,"c"],[998,2184,1127,9],[998,2189,1127,14],[998,2195,1127,20],[998,2199,1128,9,"c"],[998,2200,1128,10],[998,2204,1128,14],[998,2210,1128,20],[998,2214,1128,24,"c"],[998,2215,1128,25],[998,2219,1128,29],[998,2225,1128,36],[998,2229,1129,8,"c"],[998,2230,1129,9],[998,2235,1129,14],[998,2241,1129,20],[998,2245,1130,9,"c"],[998,2246,1130,10],[998,2250,1130,14],[998,2256,1130,20],[998,2260,1130,24,"c"],[998,2261,1130,25],[998,2265,1130,29],[998,2271,1130,36],[998,2275,1131,9,"c"],[998,2276,1131,10],[998,2280,1131,14],[998,2286,1131,20],[998,2290,1131,24,"c"],[998,2291,1131,25],[998,2295,1131,29],[998,2301,1131,36],[998,2305,1132,9,"c"],[998,2306,1132,10],[998,2310,1132,14],[998,2316,1132,20],[998,2320,1132,24,"c"],[998,2321,1132,25],[998,2325,1132,29],[998,2331,1132,36],[998,2335,1133,8,"c"],[998,2336,1133,9],[998,2341,1133,14],[998,2347,1133,20],[998,2351,1134,9,"c"],[998,2352,1134,10],[998,2356,1134,14],[998,2362,1134,20],[998,2366,1134,24,"c"],[998,2367,1134,25],[998,2371,1134,29],[998,2377,1134,36],[998,2381,1135,8,"c"],[998,2382,1135,9],[998,2387,1135,14],[998,2393,1135,20],[998,2397,1136,8,"c"],[998,2398,1136,9],[998,2403,1136,14],[998,2409,1136,20],[998,2413,1137,8,"c"],[998,2414,1137,9],[998,2419,1137,14],[998,2425,1137,20],[998,2429,1138,8,"c"],[998,2430,1138,9],[998,2435,1138,14],[998,2441,1138,20],[998,2445,1139,8,"c"],[998,2446,1139,9],[998,2451,1139,14],[998,2457,1139,20],[998,2461,1140,8,"c"],[998,2462,1140,9],[998,2467,1140,14],[998,2473,1140,20],[998,2477,1141,8,"c"],[998,2478,1141,9],[998,2483,1141,14],[998,2489,1141,20],[998,2493,1142,8,"c"],[998,2494,1142,9],[998,2499,1142,14],[998,2505,1142,20],[998,2509,1143,8,"c"],[998,2510,1143,9],[998,2515,1143,14],[998,2521,1143,20],[998,2525,1144,8,"c"],[998,2526,1144,9],[998,2531,1144,14],[998,2537,1144,20],[998,2541,1145,8,"c"],[998,2542,1145,9],[998,2547,1145,14],[998,2553,1145,20],[998,2557,1146,8,"c"],[998,2558,1146,9],[998,2563,1146,14],[998,2569,1146,20],[998,2573,1147,8,"c"],[998,2574,1147,9],[998,2579,1147,14],[998,2585,1147,20],[998,2589,1148,8,"c"],[998,2590,1148,9],[998,2595,1148,14],[998,2601,1148,20],[998,2605,1149,9,"c"],[998,2606,1149,10],[998,2610,1149,14],[998,2616,1149,20],[998,2620,1149,24,"c"],[998,2621,1149,25],[998,2625,1149,29],[998,2631,1149,36],[998,2635,1150,9,"c"],[998,2636,1150,10],[998,2640,1150,14],[998,2646,1150,20],[998,2650,1150,24,"c"],[998,2651,1150,25],[998,2655,1150,29],[998,2661,1150,36],[998,2665,1151,8,"c"],[998,2666,1151,9],[998,2671,1151,14],[998,2677,1151,20],[998,2681,1152,8,"c"],[998,2682,1152,9],[998,2687,1152,14],[998,2693,1152,20],[998,2697,1153,9,"c"],[998,2698,1153,10],[998,2702,1153,14],[998,2708,1153,20],[998,2712,1153,24,"c"],[998,2713,1153,25],[998,2717,1153,29],[998,2723,1153,36],[998,2727,1154,8,"c"],[998,2728,1154,9],[998,2733,1154,14],[998,2739,1154,20],[998,2743,1155,8,"c"],[998,2744,1155,9],[998,2749,1155,14],[998,2755,1155,20],[998,2759,1156,8,"c"],[998,2760,1156,9],[998,2765,1156,14],[998,2771,1156,20],[998,2775,1157,8,"c"],[998,2776,1157,9],[998,2781,1157,14],[998,2787,1157,20],[998,2791,1158,8,"c"],[998,2792,1158,9],[998,2797,1158,14],[998,2803,1158,20],[998,2807,1159,8,"c"],[998,2808,1159,9],[998,2813,1159,14],[998,2819,1159,20],[998,2823,1160,8,"c"],[998,2824,1160,9],[998,2829,1160,14],[998,2835,1160,20],[998,2839,1161,8,"c"],[998,2840,1161,9],[998,2845,1161,14],[998,2851,1161,20],[998,2855,1162,8,"c"],[998,2856,1162,9],[998,2861,1162,14],[998,2867,1162,20],[998,2871,1163,8,"c"],[998,2872,1163,9],[998,2877,1163,14],[998,2883,1163,20],[998,2887,1164,9,"c"],[998,2888,1164,10],[998,2892,1164,14],[998,2898,1164,20],[998,2902,1164,24,"c"],[998,2903,1164,25],[998,2907,1164,29],[998,2913,1164,36],[998,2917,1165,9,"c"],[998,2918,1165,10],[998,2922,1165,14],[998,2928,1165,20],[998,2932,1165,24,"c"],[998,2933,1165,25],[998,2937,1165,29],[998,2943,1165,36],[998,2947,1166,9,"c"],[998,2948,1166,10],[998,2952,1166,14],[998,2958,1166,20],[998,2962,1166,24,"c"],[998,2963,1166,25],[998,2967,1166,29],[998,2973,1166,36],[998,2977,1167,8,"c"],[998,2978,1167,9],[998,2983,1167,14],[998,2989,1167,20],[998,2993,1168,8,"c"],[998,2994,1168,9],[998,2999,1168,14],[998,3005,1168,20],[998,3009,1169,8,"c"],[998,3010,1169,9],[998,3015,1169,14],[998,3021,1169,20],[998,3025,1170,8,"c"],[998,3026,1170,9],[998,3031,1170,14],[998,3037,1170,20],[998,3041,1171,8,"c"],[998,3042,1171,9],[998,3047,1171,14],[998,3053,1171,20],[998,3057,1172,8,"c"],[998,3058,1172,9],[998,3063,1172,14],[998,3069,1172,20],[998,3073,1173,8,"c"],[998,3074,1173,9],[998,3079,1173,14],[998,3085,1173,20],[998,3089,1174,8,"c"],[998,3090,1174,9],[998,3095,1174,14],[998,3101,1174,20],[998,3105,1175,8,"c"],[998,3106,1175,9],[998,3111,1175,14],[998,3117,1175,20],[998,3121,1176,8,"c"],[998,3122,1176,9],[998,3127,1176,14],[998,3133,1176,20],[998,3137,1177,8,"c"],[998,3138,1177,9],[998,3143,1177,14],[998,3149,1177,20],[998,3153,1178,8,"c"],[998,3154,1178,9],[998,3159,1178,14],[998,3165,1178,20],[998,3169,1179,8,"c"],[998,3170,1179,9],[998,3175,1179,14],[998,3181,1179,20],[998,3185,1180,8,"c"],[998,3186,1180,9],[998,3191,1180,14],[998,3197,1180,20],[998,3201,1181,8,"c"],[998,3202,1181,9],[998,3207,1181,14],[998,3213,1181,20],[998,3217,1182,8,"c"],[998,3218,1182,9],[998,3223,1182,14],[998,3229,1182,20],[998,3233,1183,8,"c"],[998,3234,1183,9],[998,3239,1183,14],[998,3245,1183,20],[998,3249,1184,8,"c"],[998,3250,1184,9],[998,3255,1184,14],[998,3261,1184,20],[998,3265,1185,8,"c"],[998,3266,1185,9],[998,3271,1185,14],[998,3277,1185,20],[998,3281,1186,8,"c"],[998,3282,1186,9],[998,3287,1186,14],[998,3293,1186,20],[998,3297,1187,8,"c"],[998,3298,1187,9],[998,3303,1187,14],[998,3309,1187,20],[998,3313,1188,8,"c"],[998,3314,1188,9],[998,3319,1188,14],[998,3325,1188,20],[998,3329,1189,9,"c"],[998,3330,1189,10],[998,3334,1189,14],[998,3340,1189,20],[998,3344,1189,24,"c"],[998,3345,1189,25],[998,3349,1189,29],[998,3355,1189,36],[998,3359,1190,8,"c"],[998,3360,1190,9],[998,3365,1190,14],[998,3371,1190,20],[998,3375,1191,8,"c"],[998,3376,1191,9],[998,3381,1191,14],[998,3387,1191,20],[998,3391,1192,8,"c"],[998,3392,1192,9],[998,3397,1192,14],[998,3403,1192,20],[998,3407,1193,8,"c"],[998,3408,1193,9],[998,3413,1193,14],[998,3419,1193,20],[998,3423,1194,9,"c"],[998,3424,1194,10],[998,3428,1194,14],[998,3434,1194,20],[998,3438,1194,24,"c"],[998,3439,1194,25],[998,3443,1194,29],[998,3449,1194,36],[998,3453,1195,8,"c"],[998,3454,1195,9],[998,3459,1195,14],[998,3465,1195,20],[998,3469,1196,8,"c"],[998,3470,1196,9],[998,3475,1196,14],[998,3481,1196,20],[998,3485,1197,9,"c"],[998,3486,1197,10],[998,3490,1197,14],[998,3496,1197,20],[998,3500,1197,24,"c"],[998,3501,1197,25],[998,3505,1197,29],[998,3511,1197,36],[998,3515,1198,9,"c"],[998,3516,1198,10],[998,3520,1198,14],[998,3526,1198,20],[998,3530,1198,24,"c"],[998,3531,1198,25],[998,3535,1198,29],[998,3541,1198,36],[998,3545,1199,9,"c"],[998,3546,1199,10],[998,3550,1199,14],[998,3556,1199,20],[998,3560,1199,24,"c"],[998,3561,1199,25],[998,3565,1199,29],[998,3571,1199,36],[998,3575,1200,9,"c"],[998,3576,1200,10],[998,3580,1200,14],[998,3586,1200,20],[998,3590,1200,24,"c"],[998,3591,1200,25],[998,3595,1200,29],[998,3601,1200,36],[998,3605,1201,9,"c"],[998,3606,1201,10],[998,3610,1201,14],[998,3616,1201,20],[998,3620,1201,24,"c"],[998,3621,1201,25],[998,3625,1201,29],[998,3631,1201,36],[998,3635,1202,9,"c"],[998,3636,1202,10],[998,3640,1202,14],[998,3646,1202,20],[998,3650,1202,24,"c"],[998,3651,1202,25],[998,3655,1202,29],[998,3661,1202,36],[998,3665,1203,9,"c"],[998,3666,1203,10],[998,3670,1203,14],[998,3676,1203,20],[998,3680,1203,24,"c"],[998,3681,1203,25],[998,3685,1203,29],[998,3691,1203,36],[998,3695,1204,9,"c"],[998,3696,1204,10],[998,3700,1204,14],[998,3706,1204,20],[998,3710,1204,24,"c"],[998,3711,1204,25],[998,3715,1204,29],[998,3721,1204,36],[998,3725,1205,8,"c"],[998,3726,1205,9],[998,3731,1205,14],[998,3737,1205,20],[998,3741,1206,9,"c"],[998,3742,1206,10],[998,3746,1206,14],[998,3752,1206,20],[998,3756,1206,24,"c"],[998,3757,1206,25],[998,3761,1206,29],[998,3767,1206,36],[998,3771,1207,9,"c"],[998,3772,1207,10],[998,3776,1207,14],[998,3782,1207,20],[998,3786,1207,24,"c"],[998,3787,1207,25],[998,3791,1207,29],[998,3797,1207,36],[998,3801,1208,8,"c"],[998,3802,1208,9],[998,3807,1208,14],[998,3813,1208,20],[998,3817,1209,8,"c"],[998,3818,1209,9],[998,3823,1209,14],[998,3829,1209,20],[998,3833,1210,8,"c"],[998,3834,1210,9],[998,3839,1210,14],[998,3845,1210,20],[998,3849,1211,8,"c"],[998,3850,1211,9],[998,3855,1211,14],[998,3861,1211,20],[998,3865,1212,9,"c"],[998,3866,1212,10],[998,3870,1212,14],[998,3876,1212,20],[998,3880,1212,24,"c"],[998,3881,1212,25],[998,3885,1212,29],[998,3891,1212,36],[998,3895,1213,8,"c"],[998,3896,1213,9],[998,3901,1213,14],[998,3907,1213,20],[998,3911,1214,8,"c"],[998,3912,1214,9],[998,3917,1214,14],[998,3923,1214,20],[998,3927,1215,8,"c"],[998,3928,1215,9],[998,3933,1215,14],[998,3939,1215,20],[998,3943,1216,8,"c"],[998,3944,1216,9],[998,3949,1216,14],[998,3955,1216,20],[998,3959,1217,8,"c"],[998,3960,1217,9],[998,3965,1217,14],[998,3971,1217,20],[998,3975,1218,9,"c"],[998,3976,1218,10],[998,3980,1218,14],[998,3986,1218,20],[998,3990,1218,24,"c"],[998,3991,1218,25],[998,3995,1218,29],[998,4001,1218,36],[998,4005,1219,8,"c"],[998,4006,1219,9],[998,4011,1219,14],[998,4017,1219,20],[998,4021,1220,9,"c"],[998,4022,1220,10],[998,4026,1220,14],[998,4032,1220,20],[998,4036,1220,24,"c"],[998,4037,1220,25],[998,4041,1220,29],[998,4047,1220,36],[998,4051,1221,8,"c"],[998,4052,1221,9],[998,4057,1221,14],[998,4063,1221,20],[998,4067,1222,8,"c"],[998,4068,1222,9],[998,4073,1222,14],[998,4079,1222,20],[998,4083,1223,8,"c"],[998,4084,1223,9],[998,4089,1223,14],[998,4095,1223,20],[998,4099,1224,8,"c"],[998,4100,1224,9],[998,4105,1224,14],[998,4111,1224,20],[998,4115,1225,9,"c"],[998,4116,1225,10],[998,4120,1225,14],[998,4126,1225,20],[998,4130,1225,24,"c"],[998,4131,1225,25],[998,4135,1225,29],[998,4141,1225,36],[998,4145,1226,8,"c"],[998,4146,1226,9],[998,4151,1226,14],[998,4157,1226,20],[998,4161,1227,8,"c"],[998,4162,1227,9],[998,4167,1227,14],[998,4173,1227,20],[998,4177,1228,8,"c"],[998,4178,1228,9],[998,4183,1228,14],[998,4189,1228,20],[998,4193,1229,8,"c"],[998,4194,1229,9],[998,4199,1229,14],[998,4205,1229,20],[998,4209,1230,8,"c"],[998,4210,1230,9],[998,4215,1230,14],[998,4221,1230,20],[998,4225,1231,8,"c"],[998,4226,1231,9],[998,4231,1231,14],[998,4237,1231,20],[998,4241,1232,8,"c"],[998,4242,1232,9],[998,4247,1232,14],[998,4253,1232,20],[998,4257,1233,8,"c"],[998,4258,1233,9],[998,4263,1233,14],[998,4269,1233,20],[998,4273,1234,8,"c"],[998,4274,1234,9],[998,4279,1234,14],[998,4285,1234,20],[998,4289,1235,8,"c"],[998,4290,1235,9],[998,4295,1235,14],[998,4301,1235,20],[998,4305,1236,9,"c"],[998,4306,1236,10],[998,4310,1236,14],[998,4316,1236,20],[998,4320,1236,24,"c"],[998,4321,1236,25],[998,4325,1236,29],[998,4331,1236,36],[998,4335,1237,8,"c"],[998,4336,1237,9],[998,4341,1237,14],[998,4347,1237,20],[998,4351,1238,9,"c"],[998,4352,1238,10],[998,4356,1238,14],[998,4362,1238,20],[998,4366,1238,24,"c"],[998,4367,1238,25],[998,4371,1238,29],[998,4377,1238,36],[998,4381,1239,9,"c"],[998,4382,1239,10],[998,4386,1239,14],[998,4392,1239,20],[998,4396,1239,24,"c"],[998,4397,1239,25],[998,4401,1239,29],[998,4407,1239,36],[998,4411,1240,9,"c"],[998,4412,1240,10],[998,4416,1240,14],[998,4422,1240,20],[998,4426,1240,24,"c"],[998,4427,1240,25],[998,4431,1240,29],[998,4437,1240,36],[998,4441,1241,8,"c"],[998,4442,1241,9],[998,4447,1241,14],[998,4453,1241,20],[998,4457,1242,8,"c"],[998,4458,1242,9],[998,4463,1242,14],[998,4469,1242,20],[998,4473,1243,8,"c"],[998,4474,1243,9],[998,4479,1243,14],[998,4485,1243,20],[998,4489,1244,9,"c"],[998,4490,1244,10],[998,4494,1244,14],[998,4500,1244,20],[998,4504,1244,24,"c"],[998,4505,1244,25],[998,4509,1244,29],[998,4515,1244,36],[998,4519,1245,9,"c"],[998,4520,1245,10],[998,4524,1245,14],[998,4530,1245,20],[998,4534,1245,24,"c"],[998,4535,1245,25],[998,4539,1245,29],[998,4545,1245,36],[998,4549,1246,8,"c"],[998,4550,1246,9],[998,4555,1246,14],[998,4561,1246,20],[998,4565,1247,9,"c"],[998,4566,1247,10],[998,4570,1247,14],[998,4576,1247,20],[998,4580,1247,24,"c"],[998,4581,1247,25],[998,4585,1247,29],[998,4591,1247,36],[998,4595,1248,9,"c"],[998,4596,1248,10],[998,4600,1248,14],[998,4606,1248,20],[998,4610,1248,24,"c"],[998,4611,1248,25],[998,4615,1248,29],[998,4621,1248,36],[998,4625,1249,8,"c"],[998,4626,1249,9],[998,4631,1249,14],[998,4637,1249,20],[998,4641,1250,8,"c"],[998,4642,1250,9],[998,4647,1250,14],[998,4653,1250,20],[998,4657,1251,8,"c"],[998,4658,1251,9],[998,4663,1251,14],[998,4669,1251,20],[998,4673,1252,8,"c"],[998,4674,1252,9],[998,4679,1252,14],[998,4685,1252,20],[998,4689,1253,8,"c"],[998,4690,1253,9],[998,4695,1253,14],[998,4701,1253,20],[998,4705,1254,8,"c"],[998,4706,1254,9],[998,4711,1254,14],[998,4717,1254,20],[998,4721,1255,8,"c"],[998,4722,1255,9],[998,4727,1255,14],[998,4733,1255,20],[998,4737,1256,8,"c"],[998,4738,1256,9],[998,4743,1256,14],[998,4749,1256,20],[998,4753,1257,8,"c"],[998,4754,1257,9],[998,4759,1257,14],[998,4765,1257,20],[998,4769,1258,8,"c"],[998,4770,1258,9],[998,4775,1258,14],[998,4781,1258,20],[998,4785,1259,9,"c"],[998,4786,1259,10],[998,4790,1259,14],[998,4796,1259,20],[998,4800,1259,24,"c"],[998,4801,1259,25],[998,4805,1259,29],[998,4811,1259,36],[998,4815,1260,8,"c"],[998,4816,1260,9],[998,4821,1260,14],[998,4827,1260,20],[998,4831,1261,8,"c"],[998,4832,1261,9],[998,4837,1261,14],[998,4843,1261,20],[998,4847,1262,8,"c"],[998,4848,1262,9],[998,4853,1262,14],[998,4859,1262,20],[998,4863,1263,8,"c"],[998,4864,1263,9],[998,4869,1263,14],[998,4875,1263,20],[998,4879,1264,8,"c"],[998,4880,1264,9],[998,4885,1264,14],[998,4891,1264,20],[998,4895,1265,8,"c"],[998,4896,1265,9],[998,4901,1265,14],[998,4907,1265,20],[998,4911,1266,8,"c"],[998,4912,1266,9],[998,4917,1266,14],[998,4923,1266,20],[998,4927,1267,8,"c"],[998,4928,1267,9],[998,4933,1267,14],[998,4939,1267,20],[998,4943,1268,8,"c"],[998,4944,1268,9],[998,4949,1268,14],[998,4955,1268,20],[998,4959,1269,8,"c"],[998,4960,1269,9],[998,4965,1269,14],[998,4971,1269,20],[998,4975,1270,9,"c"],[998,4976,1270,10],[998,4980,1270,14],[998,4986,1270,20],[998,4990,1270,24,"c"],[998,4991,1270,25],[998,4995,1270,29],[998,5001,1270,36],[998,5005,1271,8,"c"],[998,5006,1271,9],[998,5011,1271,14],[998,5017,1271,20],[998,5021,1272,8,"c"],[998,5022,1272,9],[998,5027,1272,14],[998,5033,1272,20],[998,5037,1273,8,"c"],[998,5038,1273,9],[998,5043,1273,14],[998,5049,1273,20],[998,5053,1274,8,"c"],[998,5054,1274,9],[998,5059,1274,14],[998,5065,1274,20],[998,5069,1275,9,"c"],[998,5070,1275,10],[998,5074,1275,14],[998,5080,1275,20],[998,5084,1275,24,"c"],[998,5085,1275,25],[998,5089,1275,29],[998,5095,1275,36],[999,2,1276,0],[1000,0,1276,1],[1000,3]],"functionMap":{"names":["<global>","createLocation","<anonymous>","startsWith","fromCodePoint","fromEntries","codePointAt","trimStart","trimEnd","RE","matchIdentifierAtIndex","Parser","Parser.prototype.parse","Parser.prototype.parseMessage","Parser.prototype.parseTag","Parser.prototype.parseTagName","Parser.prototype.parseLiteral","Parser.prototype.tryParseLeftAngleBracket","Parser.prototype.tryParseQuote","Parser.prototype.tryParseUnquoted","Parser.prototype.parseArgument","Parser.prototype.parseIdentifierIfPossible","Parser.prototype.parseArgumentOptions","Parser.prototype.tryParseArgumentClose","Parser.prototype.parseSimpleArgStyleIfPossible","Parser.prototype.parseNumberSkeletonFromString","Parser.prototype.tryParsePluralOrSelectOptions","Parser.prototype.tryParseDecimalInteger","Parser.prototype.offset","Parser.prototype.isEOF","Parser.prototype.clonePosition","Parser.prototype.char","Parser.prototype.error","Parser.prototype.bump","Parser.prototype.bumpIf","Parser.prototype.bumpUntil","Parser.prototype.bumpTo","Parser.prototype.bumpSpace","Parser.prototype.peek","_isAlpha","_isAlphaOrSlash","_isPotentialElementNameChar","_isWhiteSpace","_isPatternSyntax"],"mappings":"AAA;ACS;CDE;MEY;KFK;QGkB;SHE;QGE;SHE;QII;SJmB;QKM;SLO;QMG;SNE;QME;SNc;QOG;SPE;QOE;SPE;QQG;SRE;QQE;SRE;ASE;CTE;6BUM;KVK;6BUI;KVW;4BEE;ISC;KTQ;6BUC;KVK;oCWC;KXoD;gCYmB;KZsD;oCaI;KbO;oCcC;Kd0B;gDeC;KfU;qCgBM;KhBkD;wCiBC;KjBgB;qCkBC;KlB8C;iDmBK;KnBS;4CoBC;KpBuK;6CqBC;KrBQ;qDsBI;KtB2C;qDuBC;KvBmB;qDwBW;KxB0E;8CyBC;KzB8B;8B0BC;K1BE;6B2BC;K3BE;qC4BC;K5BO;4B6BK;K7BU;6B8BC;K9BS;4B+BE;K/Be;8BgCO;KhCQ;iCiCK;KjCW;8BkCK;KlCkB;iCmCE;KnCI;4BoCK;KpCQ;CFE;AuCO;CvCG;AwCC;CxCE;AyCE;CzCoB;A0CK;C1CO;A2CK;C3CyP"},"hasCjsExports":false},"type":"js/module"}]}