{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":124},"end":{"line":5,"column":30,"index":140}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"],"imports":1}},{"name":"./error","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":156},"end":{"line":6,"column":32,"index":174}}],"key":"ABL1W5lBwNEqpjG9q/KVa7squiQ=","exportNames":["*"],"imports":1}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":14,"index":190},"end":{"line":7,"column":32,"index":208}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo=","exportNames":["*"],"imports":1}},{"name":"./regex.generated","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":24,"index":234},"end":{"line":8,"column":52,"index":262}}],"key":"IlrU7zwS/GKMdBfghS/ElP5M0IU=","exportNames":["*"],"imports":1}},{"name":"@formatjs/icu-skeleton-parser","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":28,"index":292},"end":{"line":9,"column":68,"index":332}}],"key":"9v2WKMRmJicfuzCzmoHOskw0alI=","exportNames":["*"],"imports":1}},{"name":"./date-time-pattern-generator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":36,"index":370},"end":{"line":10,"column":76,"index":410}}],"key":"2P078uC1HD1FyPnn1nCjmjOBxy0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _a;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Parser = void 0;\n  var tslib_1 = require(_dependencyMap[0], \"tslib\");\n  var error_1 = require(_dependencyMap[1], \"./error\");\n  var types_1 = require(_dependencyMap[2], \"./types\");\n  var regex_generated_1 = require(_dependencyMap[3], \"./regex.generated\");\n  var icu_skeleton_parser_1 = require(_dependencyMap[4], \"@formatjs/icu-skeleton-parser\");\n  var date_time_pattern_generator_1 = require(_dependencyMap[5], \"./date-time-pattern-generator\");\n  var SPACE_SEPARATOR_START_REGEX = new RegExp(\"^\".concat(regex_generated_1.SPACE_SEPARATOR_REGEX.source, \"*\"));\n  var SPACE_SEPARATOR_END_REGEX = new RegExp(\"\".concat(regex_generated_1.SPACE_SEPARATOR_REGEX.source, \"*$\"));\n  function createLocation(start, end) {\n    return {\n      start: start,\n      end: end\n    };\n  }\n  // #region Ponyfills\n  // Consolidate these variables up top for easier toggling during debugging\n  var hasNativeStartsWith = !!String.prototype.startsWith && '_a'.startsWith('a', 1);\n  var hasNativeFromCodePoint = !!String.fromCodePoint;\n  var hasNativeFromEntries = !!Object.fromEntries;\n  var hasNativeCodePointAt = !!String.prototype.codePointAt;\n  var hasTrimStart = !!String.prototype.trimStart;\n  var hasTrimEnd = !!String.prototype.trimEnd;\n  var hasNativeIsSafeInteger = !!Number.isSafeInteger;\n  var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function (n) {\n    return typeof n === 'number' && isFinite(n) && Math.floor(n) === n && Math.abs(n) <= 0x1fffffffffffff;\n  };\n  // IE11 does not support y and u.\n  var REGEX_SUPPORTS_U_AND_Y = true;\n  try {\n    var re = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    /**\n     * legacy Edge or Xbox One browser\n     * Unicode flag support: supported\n     * Pattern_Syntax support: not supported\n     * See https://github.com/formatjs/formatjs/issues/2822\n     */\n    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';\n  } catch (_) {\n    REGEX_SUPPORTS_U_AND_Y = false;\n  }\n  var startsWith = hasNativeStartsWith ?\n  // Native\n  function startsWith(s, search, position) {\n    return s.startsWith(search, position);\n  } :\n  // For IE11\n  function startsWith(s, search, position) {\n    return s.slice(position, position + search.length) === search;\n  };\n  var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint :\n  // IE11\n  function fromCodePoint() {\n    var codePoints = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      codePoints[_i] = arguments[_i];\n    }\n    var elements = '';\n    var length = codePoints.length;\n    var i = 0;\n    var code;\n    while (length > i) {\n      code = codePoints[i++];\n      if (code > 0x10ffff) throw RangeError(code + ' is not a valid code point');\n      elements += code < 0x10000 ? String.fromCharCode(code) : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00);\n    }\n    return elements;\n  };\n  var fromEntries =\n  // native\n  hasNativeFromEntries ? Object.fromEntries :\n  // Ponyfill\n  function fromEntries(entries) {\n    var obj = {};\n    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n      var _a = entries_1[_i],\n        k = _a[0],\n        v = _a[1];\n      obj[k] = v;\n    }\n    return obj;\n  };\n  var codePointAt = hasNativeCodePointAt ?\n  // Native\n  function codePointAt(s, index) {\n    return s.codePointAt(index);\n  } :\n  // IE 11\n  function codePointAt(s, index) {\n    var size = s.length;\n    if (index < 0 || index >= size) {\n      return undefined;\n    }\n    var first = s.charCodeAt(index);\n    var second;\n    return first < 0xd800 || first > 0xdbff || index + 1 === size || (second = s.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? first : (first - 0xd800 << 10) + (second - 0xdc00) + 0x10000;\n  };\n  var trimStart = hasTrimStart ?\n  // Native\n  function trimStart(s) {\n    return s.trimStart();\n  } :\n  // Ponyfill\n  function trimStart(s) {\n    return s.replace(SPACE_SEPARATOR_START_REGEX, '');\n  };\n  var trimEnd = hasTrimEnd ?\n  // Native\n  function trimEnd(s) {\n    return s.trimEnd();\n  } :\n  // Ponyfill\n  function trimEnd(s) {\n    return s.replace(SPACE_SEPARATOR_END_REGEX, '');\n  };\n  // Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.\n  function RE(s, flag) {\n    return new RegExp(s, flag);\n  }\n  // #endregion\n  var matchIdentifierAtIndex;\n  if (REGEX_SUPPORTS_U_AND_Y) {\n    // Native\n    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n      var _a;\n      IDENTIFIER_PREFIX_RE_1.lastIndex = index;\n      var match = IDENTIFIER_PREFIX_RE_1.exec(s);\n      return (_a = match[1]) !== null && _a !== void 0 ? _a : '';\n    };\n  } else {\n    // IE11\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n      var match = [];\n      while (true) {\n        var c = codePointAt(s, index);\n        if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {\n          break;\n        }\n        match.push(c);\n        index += c >= 0x10000 ? 2 : 1;\n      }\n      return fromCodePoint.apply(void 0, match);\n    };\n  }\n  var Parser = /** @class */function () {\n    function Parser(message, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      this.message = message;\n      this.position = {\n        offset: 0,\n        line: 1,\n        column: 1\n      };\n      this.ignoreTag = !!options.ignoreTag;\n      this.locale = options.locale;\n      this.requiresOtherClause = !!options.requiresOtherClause;\n      this.shouldParseSkeletons = !!options.shouldParseSkeletons;\n    }\n    Parser.prototype.parse = function () {\n      if (this.offset() !== 0) {\n        throw Error('parser can only be used once');\n      }\n      return this.parseMessage(0, '', false);\n    };\n    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {\n      var elements = [];\n      while (!this.isEOF()) {\n        var char = this.char();\n        if (char === 123 /* `{` */) {\n          var result = this.parseArgument(nestingLevel, expectingCloseTag);\n          if (result.err) {\n            return result;\n          }\n          elements.push(result.val);\n        } else if (char === 125 /* `}` */ && nestingLevel > 0) {\n          break;\n        } else if (char === 35 /* `#` */ && (parentArgType === 'plural' || parentArgType === 'selectordinal')) {\n          var position = this.clonePosition();\n          this.bump();\n          elements.push({\n            type: types_1.TYPE.pound,\n            location: createLocation(position, this.clonePosition())\n          });\n        } else if (char === 60 /* `<` */ && !this.ignoreTag && this.peek() === 47 // char code for '/'\n        ) {\n          if (expectingCloseTag) {\n            break;\n          } else {\n            return this.error(error_1.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\n          }\n        } else if (char === 60 /* `<` */ && !this.ignoreTag && _isAlpha(this.peek() || 0)) {\n          var result = this.parseTag(nestingLevel, parentArgType);\n          if (result.err) {\n            return result;\n          }\n          elements.push(result.val);\n        } else {\n          var result = this.parseLiteral(nestingLevel, parentArgType);\n          if (result.err) {\n            return result;\n          }\n          elements.push(result.val);\n        }\n      }\n      return {\n        val: elements,\n        err: null\n      };\n    };\n    /**\n     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the\n     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters\n     * are accepted:\n     *\n     * ```\n     * tag ::= \"<\" tagName (whitespace)* \"/>\" | \"<\" tagName (whitespace)* \">\" message \"</\" tagName (whitespace)* \">\"\n     * tagName ::= [a-z] (PENChar)*\n     * PENChar ::=\n     *     \"-\" | \".\" | [0-9] | \"_\" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |\n     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |\n     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n     * ```\n     *\n     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do\n     * since other tag-based engines like React allow it\n     */\n    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {\n      var startPosition = this.clonePosition();\n      this.bump(); // `<`\n      var tagName = this.parseTagName();\n      this.bumpSpace();\n      if (this.bumpIf('/>')) {\n        // Self closing tag\n        return {\n          val: {\n            type: types_1.TYPE.literal,\n            value: \"<\".concat(tagName, \"/>\"),\n            location: createLocation(startPosition, this.clonePosition())\n          },\n          err: null\n        };\n      } else if (this.bumpIf('>')) {\n        var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\n        if (childrenResult.err) {\n          return childrenResult;\n        }\n        var children = childrenResult.val;\n        // Expecting a close tag\n        var endTagStartPosition = this.clonePosition();\n        if (this.bumpIf('</')) {\n          if (this.isEOF() || !_isAlpha(this.char())) {\n            return this.error(error_1.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n          }\n          var closingTagNameStartPosition = this.clonePosition();\n          var closingTagName = this.parseTagName();\n          if (tagName !== closingTagName) {\n            return this.error(error_1.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\n          }\n          this.bumpSpace();\n          if (!this.bumpIf('>')) {\n            return this.error(error_1.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n          }\n          return {\n            val: {\n              type: types_1.TYPE.tag,\n              value: tagName,\n              children: children,\n              location: createLocation(startPosition, this.clonePosition())\n            },\n            err: null\n          };\n        } else {\n          return this.error(error_1.ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\n        }\n      } else {\n        return this.error(error_1.ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\n      }\n    };\n    /**\n     * This method assumes that the caller has peeked ahead for the first tag character.\n     */\n    Parser.prototype.parseTagName = function () {\n      var startOffset = this.offset();\n      this.bump(); // the first tag name character\n      while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\n        this.bump();\n      }\n      return this.message.slice(startOffset, this.offset());\n    };\n    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {\n      var start = this.clonePosition();\n      var value = '';\n      while (true) {\n        var parseQuoteResult = this.tryParseQuote(parentArgType);\n        if (parseQuoteResult) {\n          value += parseQuoteResult;\n          continue;\n        }\n        var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\n        if (parseUnquotedResult) {\n          value += parseUnquotedResult;\n          continue;\n        }\n        var parseLeftAngleResult = this.tryParseLeftAngleBracket();\n        if (parseLeftAngleResult) {\n          value += parseLeftAngleResult;\n          continue;\n        }\n        break;\n      }\n      var location = createLocation(start, this.clonePosition());\n      return {\n        val: {\n          type: types_1.TYPE.literal,\n          value: value,\n          location: location\n        },\n        err: null\n      };\n    };\n    Parser.prototype.tryParseLeftAngleBracket = function () {\n      if (!this.isEOF() && this.char() === 60 /* `<` */ && (this.ignoreTag ||\n      // If at the opening tag or closing tag position, bail.\n      !_isAlphaOrSlash(this.peek() || 0))) {\n        this.bump(); // `<`\n        return '<';\n      }\n      return null;\n    };\n    /**\n     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes\n     * a character that requires quoting (that is, \"only where needed\"), and works the same in\n     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.\n     */\n    Parser.prototype.tryParseQuote = function (parentArgType) {\n      if (this.isEOF() || this.char() !== 39 /* `'` */) {\n        return null;\n      }\n      // Parse escaped char following the apostrophe, or early return if there is no escaped char.\n      // Check if is valid escaped character\n      switch (this.peek()) {\n        case 39 /* `'` */:\n          // double quote, should return as a single quote.\n          this.bump();\n          this.bump();\n          return \"'\";\n        // '{', '<', '>', '}'\n        case 123:\n        case 60:\n        case 62:\n        case 125:\n          break;\n        case 35:\n          // '#'\n          if (parentArgType === 'plural' || parentArgType === 'selectordinal') {\n            break;\n          }\n          return null;\n        default:\n          return null;\n      }\n      this.bump(); // apostrophe\n      var codePoints = [this.char()]; // escaped char\n      this.bump();\n      // read chars until the optional closing apostrophe is found\n      while (!this.isEOF()) {\n        var ch = this.char();\n        if (ch === 39 /* `'` */) {\n          if (this.peek() === 39 /* `'` */) {\n            codePoints.push(39);\n            // Bump one more time because we need to skip 2 characters.\n            this.bump();\n          } else {\n            // Optional closing apostrophe.\n            this.bump();\n            break;\n          }\n        } else {\n          codePoints.push(ch);\n        }\n        this.bump();\n      }\n      return fromCodePoint.apply(void 0, codePoints);\n    };\n    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {\n      if (this.isEOF()) {\n        return null;\n      }\n      var ch = this.char();\n      if (ch === 60 /* `<` */ || ch === 123 /* `{` */ || ch === 35 /* `#` */ && (parentArgType === 'plural' || parentArgType === 'selectordinal') || ch === 125 /* `}` */ && nestingLevel > 0) {\n        return null;\n      } else {\n        this.bump();\n        return fromCodePoint(ch);\n      }\n    };\n    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {\n      var openingBracePosition = this.clonePosition();\n      this.bump(); // `{`\n      this.bumpSpace();\n      if (this.isEOF()) {\n        return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      if (this.char() === 125 /* `}` */) {\n        this.bump();\n        return this.error(error_1.ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      // argument name\n      var value = this.parseIdentifierIfPossible().value;\n      if (!value) {\n        return this.error(error_1.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      this.bumpSpace();\n      if (this.isEOF()) {\n        return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      switch (this.char()) {\n        // Simple argument: `{name}`\n        case 125 /* `}` */:\n          {\n            this.bump(); // `}`\n            return {\n              val: {\n                type: types_1.TYPE.argument,\n                // value does not include the opening and closing braces.\n                value: value,\n                location: createLocation(openingBracePosition, this.clonePosition())\n              },\n              err: null\n            };\n          }\n        // Argument with options: `{name, format, ...}`\n        case 44 /* `,` */:\n          {\n            this.bump(); // `,`\n            this.bumpSpace();\n            if (this.isEOF()) {\n              return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n            }\n            return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\n          }\n        default:\n          return this.error(error_1.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n      }\n    };\n    /**\n     * Advance the parser until the end of the identifier, if it is currently on\n     * an identifier character. Return an empty string otherwise.\n     */\n    Parser.prototype.parseIdentifierIfPossible = function () {\n      var startingPosition = this.clonePosition();\n      var startOffset = this.offset();\n      var value = matchIdentifierAtIndex(this.message, startOffset);\n      var endOffset = startOffset + value.length;\n      this.bumpTo(endOffset);\n      var endPosition = this.clonePosition();\n      var location = createLocation(startingPosition, endPosition);\n      return {\n        value: value,\n        location: location\n      };\n    };\n    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {\n      var _a;\n      // Parse this range:\n      // {name, type, style}\n      //        ^---^\n      var typeStartPosition = this.clonePosition();\n      var argType = this.parseIdentifierIfPossible().value;\n      var typeEndPosition = this.clonePosition();\n      switch (argType) {\n        case '':\n          // Expecting a style string number, date, time, plural, selectordinal, or select.\n          return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n        case 'number':\n        case 'date':\n        case 'time':\n          {\n            // Parse this range:\n            // {name, number, style}\n            //              ^-------^\n            this.bumpSpace();\n            var styleAndLocation = null;\n            if (this.bumpIf(',')) {\n              this.bumpSpace();\n              var styleStartPosition = this.clonePosition();\n              var result = this.parseSimpleArgStyleIfPossible();\n              if (result.err) {\n                return result;\n              }\n              var style = trimEnd(result.val);\n              if (style.length === 0) {\n                return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\n              }\n              var styleLocation = createLocation(styleStartPosition, this.clonePosition());\n              styleAndLocation = {\n                style: style,\n                styleLocation: styleLocation\n              };\n            }\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n            if (argCloseResult.err) {\n              return argCloseResult;\n            }\n            var location_1 = createLocation(openingBracePosition, this.clonePosition());\n            // Extract style or skeleton\n            if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {\n              // Skeleton starts with `::`.\n              var skeleton = trimStart(styleAndLocation.style.slice(2));\n              if (argType === 'number') {\n                var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\n                if (result.err) {\n                  return result;\n                }\n                return {\n                  val: {\n                    type: types_1.TYPE.number,\n                    value: value,\n                    location: location_1,\n                    style: result.val\n                  },\n                  err: null\n                };\n              } else {\n                if (skeleton.length === 0) {\n                  return this.error(error_1.ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\n                }\n                var dateTimePattern = skeleton;\n                // Get \"best match\" pattern only if locale is passed, if not, let it\n                // pass as-is where `parseDateTimeSkeleton()` will throw an error\n                // for unsupported patterns.\n                if (this.locale) {\n                  dateTimePattern = (0, date_time_pattern_generator_1.getBestPattern)(skeleton, this.locale);\n                }\n                var style = {\n                  type: types_1.SKELETON_TYPE.dateTime,\n                  pattern: dateTimePattern,\n                  location: styleAndLocation.styleLocation,\n                  parsedOptions: this.shouldParseSkeletons ? (0, icu_skeleton_parser_1.parseDateTimeSkeleton)(dateTimePattern) : {}\n                };\n                var type = argType === 'date' ? types_1.TYPE.date : types_1.TYPE.time;\n                return {\n                  val: {\n                    type: type,\n                    value: value,\n                    location: location_1,\n                    style: style\n                  },\n                  err: null\n                };\n              }\n            }\n            // Regular style or no style.\n            return {\n              val: {\n                type: argType === 'number' ? types_1.TYPE.number : argType === 'date' ? types_1.TYPE.date : types_1.TYPE.time,\n                value: value,\n                location: location_1,\n                style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null\n              },\n              err: null\n            };\n          }\n        case 'plural':\n        case 'selectordinal':\n        case 'select':\n          {\n            // Parse this range:\n            // {name, plural, options}\n            //              ^---------^\n            var typeEndPosition_1 = this.clonePosition();\n            this.bumpSpace();\n            if (!this.bumpIf(',')) {\n              return this.error(error_1.ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, tslib_1.__assign({}, typeEndPosition_1)));\n            }\n            this.bumpSpace();\n            // Parse offset:\n            // {name, plural, offset:1, options}\n            //                ^-----^\n            //\n            // or the first option:\n            //\n            // {name, plural, one {...} other {...}}\n            //                ^--^\n            var identifierAndLocation = this.parseIdentifierIfPossible();\n            var pluralOffset = 0;\n            if (argType !== 'select' && identifierAndLocation.value === 'offset') {\n              if (!this.bumpIf(':')) {\n                return this.error(error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\n              }\n              this.bumpSpace();\n              var result = this.tryParseDecimalInteger(error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, error_1.ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\n              if (result.err) {\n                return result;\n              }\n              // Parse another identifier for option parsing\n              this.bumpSpace();\n              identifierAndLocation = this.parseIdentifierIfPossible();\n              pluralOffset = result.val;\n            }\n            var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\n            if (optionsResult.err) {\n              return optionsResult;\n            }\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n            if (argCloseResult.err) {\n              return argCloseResult;\n            }\n            var location_2 = createLocation(openingBracePosition, this.clonePosition());\n            if (argType === 'select') {\n              return {\n                val: {\n                  type: types_1.TYPE.select,\n                  value: value,\n                  options: fromEntries(optionsResult.val),\n                  location: location_2\n                },\n                err: null\n              };\n            } else {\n              return {\n                val: {\n                  type: types_1.TYPE.plural,\n                  value: value,\n                  options: fromEntries(optionsResult.val),\n                  offset: pluralOffset,\n                  pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',\n                  location: location_2\n                },\n                err: null\n              };\n            }\n          }\n        default:\n          return this.error(error_1.ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n      }\n    };\n    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {\n      // Parse: {value, number, ::currency/GBP }\n      //\n      if (this.isEOF() || this.char() !== 125 /* `}` */) {\n        return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n      }\n      this.bump(); // `}`\n      return {\n        val: true,\n        err: null\n      };\n    };\n    /**\n     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659\n     */\n    Parser.prototype.parseSimpleArgStyleIfPossible = function () {\n      var nestedBraces = 0;\n      var startPosition = this.clonePosition();\n      while (!this.isEOF()) {\n        var ch = this.char();\n        switch (ch) {\n          case 39 /* `'` */:\n            {\n              // Treat apostrophe as quoting but include it in the style part.\n              // Find the end of the quoted literal text.\n              this.bump();\n              var apostrophePosition = this.clonePosition();\n              if (!this.bumpUntil(\"'\")) {\n                return this.error(error_1.ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\n              }\n              this.bump();\n              break;\n            }\n          case 123 /* `{` */:\n            {\n              nestedBraces += 1;\n              this.bump();\n              break;\n            }\n          case 125 /* `}` */:\n            {\n              if (nestedBraces > 0) {\n                nestedBraces -= 1;\n              } else {\n                return {\n                  val: this.message.slice(startPosition.offset, this.offset()),\n                  err: null\n                };\n              }\n              break;\n            }\n          default:\n            this.bump();\n            break;\n        }\n      }\n      return {\n        val: this.message.slice(startPosition.offset, this.offset()),\n        err: null\n      };\n    };\n    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {\n      var tokens = [];\n      try {\n        tokens = (0, icu_skeleton_parser_1.parseNumberSkeletonFromString)(skeleton);\n      } catch (e) {\n        return this.error(error_1.ErrorKind.INVALID_NUMBER_SKELETON, location);\n      }\n      return {\n        val: {\n          type: types_1.SKELETON_TYPE.number,\n          tokens: tokens,\n          location: location,\n          parsedOptions: this.shouldParseSkeletons ? (0, icu_skeleton_parser_1.parseNumberSkeleton)(tokens) : {}\n        },\n        err: null\n      };\n    };\n    /**\n     * @param nesting_level The current nesting level of messages.\n     *     This can be positive when parsing message fragment in select or plural argument options.\n     * @param parent_arg_type The parent argument's type.\n     * @param parsed_first_identifier If provided, this is the first identifier-like selector of\n     *     the argument. It is a by-product of a previous parsing attempt.\n     * @param expecting_close_tag If true, this message is directly or indirectly nested inside\n     *     between a pair of opening and closing tags. The nested message will not parse beyond\n     *     the closing tag boundary.\n     */\n    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\n      var _a;\n      var hasOtherClause = false;\n      var options = [];\n      var parsedSelectors = new Set();\n      var selector = parsedFirstIdentifier.value,\n        selectorLocation = parsedFirstIdentifier.location;\n      // Parse:\n      // one {one apple}\n      // ^--^\n      while (true) {\n        if (selector.length === 0) {\n          var startPosition = this.clonePosition();\n          if (parentArgType !== 'select' && this.bumpIf('=')) {\n            // Try parse `={number}` selector\n            var result = this.tryParseDecimalInteger(error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, error_1.ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\n            if (result.err) {\n              return result;\n            }\n            selectorLocation = createLocation(startPosition, this.clonePosition());\n            selector = this.message.slice(startPosition.offset, this.offset());\n          } else {\n            break;\n          }\n        }\n        // Duplicate selector clauses\n        if (parsedSelectors.has(selector)) {\n          return this.error(parentArgType === 'select' ? error_1.ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : error_1.ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\n        }\n        if (selector === 'other') {\n          hasOtherClause = true;\n        }\n        // Parse:\n        // one {one apple}\n        //     ^----------^\n        this.bumpSpace();\n        var openingBracePosition = this.clonePosition();\n        if (!this.bumpIf('{')) {\n          return this.error(parentArgType === 'select' ? error_1.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\n        if (fragmentResult.err) {\n          return fragmentResult;\n        }\n        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n        if (argCloseResult.err) {\n          return argCloseResult;\n        }\n        options.push([selector, {\n          value: fragmentResult.val,\n          location: createLocation(openingBracePosition, this.clonePosition())\n        }]);\n        // Keep track of the existing selectors\n        parsedSelectors.add(selector);\n        // Prep next selector clause.\n        this.bumpSpace();\n        _a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location;\n      }\n      if (options.length === 0) {\n        return this.error(parentArgType === 'select' ? error_1.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\n      }\n      if (this.requiresOtherClause && !hasOtherClause) {\n        return this.error(error_1.ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\n      }\n      return {\n        val: options,\n        err: null\n      };\n    };\n    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {\n      var sign = 1;\n      var startingPosition = this.clonePosition();\n      if (this.bumpIf('+')) {} else if (this.bumpIf('-')) {\n        sign = -1;\n      }\n      var hasDigits = false;\n      var decimal = 0;\n      while (!this.isEOF()) {\n        var ch = this.char();\n        if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {\n          hasDigits = true;\n          decimal = decimal * 10 + (ch - 48);\n          this.bump();\n        } else {\n          break;\n        }\n      }\n      var location = createLocation(startingPosition, this.clonePosition());\n      if (!hasDigits) {\n        return this.error(expectNumberError, location);\n      }\n      decimal *= sign;\n      if (!isSafeInteger(decimal)) {\n        return this.error(invalidNumberError, location);\n      }\n      return {\n        val: decimal,\n        err: null\n      };\n    };\n    Parser.prototype.offset = function () {\n      return this.position.offset;\n    };\n    Parser.prototype.isEOF = function () {\n      return this.offset() === this.message.length;\n    };\n    Parser.prototype.clonePosition = function () {\n      // This is much faster than `Object.assign` or spread.\n      return {\n        offset: this.position.offset,\n        line: this.position.line,\n        column: this.position.column\n      };\n    };\n    /**\n     * Return the code point at the current position of the parser.\n     * Throws if the index is out of bound.\n     */\n    Parser.prototype.char = function () {\n      var offset = this.position.offset;\n      if (offset >= this.message.length) {\n        throw Error('out of bound');\n      }\n      var code = codePointAt(this.message, offset);\n      if (code === undefined) {\n        throw Error(\"Offset \".concat(offset, \" is at invalid UTF-16 code unit boundary\"));\n      }\n      return code;\n    };\n    Parser.prototype.error = function (kind, location) {\n      return {\n        val: null,\n        err: {\n          kind: kind,\n          message: this.message,\n          location: location\n        }\n      };\n    };\n    /** Bump the parser to the next UTF-16 code unit. */\n    Parser.prototype.bump = function () {\n      if (this.isEOF()) {\n        return;\n      }\n      var code = this.char();\n      if (code === 10 /* '\\n' */) {\n        this.position.line += 1;\n        this.position.column = 1;\n        this.position.offset += 1;\n      } else {\n        this.position.column += 1;\n        // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.\n        this.position.offset += code < 0x10000 ? 1 : 2;\n      }\n    };\n    /**\n     * If the substring starting at the current position of the parser has\n     * the given prefix, then bump the parser to the character immediately\n     * following the prefix and return true. Otherwise, don't bump the parser\n     * and return false.\n     */\n    Parser.prototype.bumpIf = function (prefix) {\n      if (startsWith(this.message, prefix, this.offset())) {\n        for (var i = 0; i < prefix.length; i++) {\n          this.bump();\n        }\n        return true;\n      }\n      return false;\n    };\n    /**\n     * Bump the parser until the pattern character is found and return `true`.\n     * Otherwise bump to the end of the file and return `false`.\n     */\n    Parser.prototype.bumpUntil = function (pattern) {\n      var currentOffset = this.offset();\n      var index = this.message.indexOf(pattern, currentOffset);\n      if (index >= 0) {\n        this.bumpTo(index);\n        return true;\n      } else {\n        this.bumpTo(this.message.length);\n        return false;\n      }\n    };\n    /**\n     * Bump the parser to the target offset.\n     * If target offset is beyond the end of the input, bump the parser to the end of the input.\n     */\n    Parser.prototype.bumpTo = function (targetOffset) {\n      if (this.offset() > targetOffset) {\n        throw Error(\"targetOffset \".concat(targetOffset, \" must be greater than or equal to the current offset \").concat(this.offset()));\n      }\n      targetOffset = Math.min(targetOffset, this.message.length);\n      while (true) {\n        var offset = this.offset();\n        if (offset === targetOffset) {\n          break;\n        }\n        if (offset > targetOffset) {\n          throw Error(\"targetOffset \".concat(targetOffset, \" is at invalid UTF-16 code unit boundary\"));\n        }\n        this.bump();\n        if (this.isEOF()) {\n          break;\n        }\n      }\n    };\n    /** advance the parser through all whitespace to the next non-whitespace code unit. */\n    Parser.prototype.bumpSpace = function () {\n      while (!this.isEOF() && _isWhiteSpace(this.char())) {\n        this.bump();\n      }\n    };\n    /**\n     * Peek at the *next* Unicode codepoint in the input without advancing the parser.\n     * If the input has been exhausted, then this returns null.\n     */\n    Parser.prototype.peek = function () {\n      if (this.isEOF()) {\n        return null;\n      }\n      var code = this.char();\n      var offset = this.offset();\n      var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));\n      return nextCode !== null && nextCode !== void 0 ? nextCode : null;\n    };\n    return Parser;\n  }();\n  exports.Parser = Parser;\n  /**\n   * This check if codepoint is alphabet (lower & uppercase)\n   * @param codepoint\n   * @returns\n   */\n  function _isAlpha(codepoint) {\n    return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;\n  }\n  function _isAlphaOrSlash(codepoint) {\n    return _isAlpha(codepoint) || codepoint === 47; /* '/' */\n  }\n  /** See `parseTag` function docs. */\n  function _isPotentialElementNameChar(c) {\n    return c === 45 /* '-' */ || c === 46 /* '.' */ || c >= 48 && c <= 57 /* 0..9 */ || c === 95 /* '_' */ || c >= 97 && c <= 122 /** a..z */ || c >= 65 && c <= 90 /* A..Z */ || c == 0xb7 || c >= 0xc0 && c <= 0xd6 || c >= 0xd8 && c <= 0xf6 || c >= 0xf8 && c <= 0x37d || c >= 0x37f && c <= 0x1fff || c >= 0x200c && c <= 0x200d || c >= 0x203f && c <= 0x2040 || c >= 0x2070 && c <= 0x218f || c >= 0x2c00 && c <= 0x2fef || c >= 0x3001 && c <= 0xd7ff || c >= 0xf900 && c <= 0xfdcf || c >= 0xfdf0 && c <= 0xfffd || c >= 0x10000 && c <= 0xeffff;\n  }\n  /**\n   * Code point equivalent of regex `\\p{White_Space}`.\n   * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n   */\n  function _isWhiteSpace(c) {\n    return c >= 0x0009 && c <= 0x000d || c === 0x0020 || c === 0x0085 || c >= 0x200e && c <= 0x200f || c === 0x2028 || c === 0x2029;\n  }\n  /**\n   * Code point equivalent of regex `\\p{Pattern_Syntax}`.\n   * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n   */\n  function _isPatternSyntax(c) {\n    return c >= 0x0021 && c <= 0x0023 || c === 0x0024 || c >= 0x0025 && c <= 0x0027 || c === 0x0028 || c === 0x0029 || c === 0x002a || c === 0x002b || c === 0x002c || c === 0x002d || c >= 0x002e && c <= 0x002f || c >= 0x003a && c <= 0x003b || c >= 0x003c && c <= 0x003e || c >= 0x003f && c <= 0x0040 || c === 0x005b || c === 0x005c || c === 0x005d || c === 0x005e || c === 0x0060 || c === 0x007b || c === 0x007c || c === 0x007d || c === 0x007e || c === 0x00a1 || c >= 0x00a2 && c <= 0x00a5 || c === 0x00a6 || c === 0x00a7 || c === 0x00a9 || c === 0x00ab || c === 0x00ac || c === 0x00ae || c === 0x00b0 || c === 0x00b1 || c === 0x00b6 || c === 0x00bb || c === 0x00bf || c === 0x00d7 || c === 0x00f7 || c >= 0x2010 && c <= 0x2015 || c >= 0x2016 && c <= 0x2017 || c === 0x2018 || c === 0x2019 || c === 0x201a || c >= 0x201b && c <= 0x201c || c === 0x201d || c === 0x201e || c === 0x201f || c >= 0x2020 && c <= 0x2027 || c >= 0x2030 && c <= 0x2038 || c === 0x2039 || c === 0x203a || c >= 0x203b && c <= 0x203e || c >= 0x2041 && c <= 0x2043 || c === 0x2044 || c === 0x2045 || c === 0x2046 || c >= 0x2047 && c <= 0x2051 || c === 0x2052 || c === 0x2053 || c >= 0x2055 && c <= 0x205e || c >= 0x2190 && c <= 0x2194 || c >= 0x2195 && c <= 0x2199 || c >= 0x219a && c <= 0x219b || c >= 0x219c && c <= 0x219f || c === 0x21a0 || c >= 0x21a1 && c <= 0x21a2 || c === 0x21a3 || c >= 0x21a4 && c <= 0x21a5 || c === 0x21a6 || c >= 0x21a7 && c <= 0x21ad || c === 0x21ae || c >= 0x21af && c <= 0x21cd || c >= 0x21ce && c <= 0x21cf || c >= 0x21d0 && c <= 0x21d1 || c === 0x21d2 || c === 0x21d3 || c === 0x21d4 || c >= 0x21d5 && c <= 0x21f3 || c >= 0x21f4 && c <= 0x22ff || c >= 0x2300 && c <= 0x2307 || c === 0x2308 || c === 0x2309 || c === 0x230a || c === 0x230b || c >= 0x230c && c <= 0x231f || c >= 0x2320 && c <= 0x2321 || c >= 0x2322 && c <= 0x2328 || c === 0x2329 || c === 0x232a || c >= 0x232b && c <= 0x237b || c === 0x237c || c >= 0x237d && c <= 0x239a || c >= 0x239b && c <= 0x23b3 || c >= 0x23b4 && c <= 0x23db || c >= 0x23dc && c <= 0x23e1 || c >= 0x23e2 && c <= 0x2426 || c >= 0x2427 && c <= 0x243f || c >= 0x2440 && c <= 0x244a || c >= 0x244b && c <= 0x245f || c >= 0x2500 && c <= 0x25b6 || c === 0x25b7 || c >= 0x25b8 && c <= 0x25c0 || c === 0x25c1 || c >= 0x25c2 && c <= 0x25f7 || c >= 0x25f8 && c <= 0x25ff || c >= 0x2600 && c <= 0x266e || c === 0x266f || c >= 0x2670 && c <= 0x2767 || c === 0x2768 || c === 0x2769 || c === 0x276a || c === 0x276b || c === 0x276c || c === 0x276d || c === 0x276e || c === 0x276f || c === 0x2770 || c === 0x2771 || c === 0x2772 || c === 0x2773 || c === 0x2774 || c === 0x2775 || c >= 0x2794 && c <= 0x27bf || c >= 0x27c0 && c <= 0x27c4 || c === 0x27c5 || c === 0x27c6 || c >= 0x27c7 && c <= 0x27e5 || c === 0x27e6 || c === 0x27e7 || c === 0x27e8 || c === 0x27e9 || c === 0x27ea || c === 0x27eb || c === 0x27ec || c === 0x27ed || c === 0x27ee || c === 0x27ef || c >= 0x27f0 && c <= 0x27ff || c >= 0x2800 && c <= 0x28ff || c >= 0x2900 && c <= 0x2982 || c === 0x2983 || c === 0x2984 || c === 0x2985 || c === 0x2986 || c === 0x2987 || c === 0x2988 || c === 0x2989 || c === 0x298a || c === 0x298b || c === 0x298c || c === 0x298d || c === 0x298e || c === 0x298f || c === 0x2990 || c === 0x2991 || c === 0x2992 || c === 0x2993 || c === 0x2994 || c === 0x2995 || c === 0x2996 || c === 0x2997 || c === 0x2998 || c >= 0x2999 && c <= 0x29d7 || c === 0x29d8 || c === 0x29d9 || c === 0x29da || c === 0x29db || c >= 0x29dc && c <= 0x29fb || c === 0x29fc || c === 0x29fd || c >= 0x29fe && c <= 0x2aff || c >= 0x2b00 && c <= 0x2b2f || c >= 0x2b30 && c <= 0x2b44 || c >= 0x2b45 && c <= 0x2b46 || c >= 0x2b47 && c <= 0x2b4c || c >= 0x2b4d && c <= 0x2b73 || c >= 0x2b74 && c <= 0x2b75 || c >= 0x2b76 && c <= 0x2b95 || c === 0x2b96 || c >= 0x2b97 && c <= 0x2bff || c >= 0x2e00 && c <= 0x2e01 || c === 0x2e02 || c === 0x2e03 || c === 0x2e04 || c === 0x2e05 || c >= 0x2e06 && c <= 0x2e08 || c === 0x2e09 || c === 0x2e0a || c === 0x2e0b || c === 0x2e0c || c === 0x2e0d || c >= 0x2e0e && c <= 0x2e16 || c === 0x2e17 || c >= 0x2e18 && c <= 0x2e19 || c === 0x2e1a || c === 0x2e1b || c === 0x2e1c || c === 0x2e1d || c >= 0x2e1e && c <= 0x2e1f || c === 0x2e20 || c === 0x2e21 || c === 0x2e22 || c === 0x2e23 || c === 0x2e24 || c === 0x2e25 || c === 0x2e26 || c === 0x2e27 || c === 0x2e28 || c === 0x2e29 || c >= 0x2e2a && c <= 0x2e2e || c === 0x2e2f || c >= 0x2e30 && c <= 0x2e39 || c >= 0x2e3a && c <= 0x2e3b || c >= 0x2e3c && c <= 0x2e3f || c === 0x2e40 || c === 0x2e41 || c === 0x2e42 || c >= 0x2e43 && c <= 0x2e4f || c >= 0x2e50 && c <= 0x2e51 || c === 0x2e52 || c >= 0x2e53 && c <= 0x2e7f || c >= 0x3001 && c <= 0x3003 || c === 0x3008 || c === 0x3009 || c === 0x300a || c === 0x300b || c === 0x300c || c === 0x300d || c === 0x300e || c === 0x300f || c === 0x3010 || c === 0x3011 || c >= 0x3012 && c <= 0x3013 || c === 0x3014 || c === 0x3015 || c === 0x3016 || c === 0x3017 || c === 0x3018 || c === 0x3019 || c === 0x301a || c === 0x301b || c === 0x301c || c === 0x301d || c >= 0x301e && c <= 0x301f || c === 0x3020 || c === 0x3030 || c === 0xfd3e || c === 0xfd3f || c >= 0xfe45 && c <= 0xfe46;\n  }\n});","lineCount":996,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"_a"],[4,8,2,6],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"Parser"],[8,16,4,14],[8,19,4,17],[8,24,4,22],[8,25,4,23],[9,2,5,0],[9,6,5,4,"tslib_1"],[9,13,5,11],[9,16,5,14,"require"],[9,23,5,21],[9,24,5,21,"_dependencyMap"],[9,38,5,21],[9,50,5,29],[9,51,5,30],[10,2,6,0],[10,6,6,4,"error_1"],[10,13,6,11],[10,16,6,14,"require"],[10,23,6,21],[10,24,6,21,"_dependencyMap"],[10,38,6,21],[10,52,6,31],[10,53,6,32],[11,2,7,0],[11,6,7,4,"types_1"],[11,13,7,11],[11,16,7,14,"require"],[11,23,7,21],[11,24,7,21,"_dependencyMap"],[11,38,7,21],[11,52,7,31],[11,53,7,32],[12,2,8,0],[12,6,8,4,"regex_generated_1"],[12,23,8,21],[12,26,8,24,"require"],[12,33,8,31],[12,34,8,31,"_dependencyMap"],[12,48,8,31],[12,72,8,51],[12,73,8,52],[13,2,9,0],[13,6,9,4,"icu_skeleton_parser_1"],[13,27,9,25],[13,30,9,28,"require"],[13,37,9,35],[13,38,9,35,"_dependencyMap"],[13,52,9,35],[13,88,9,67],[13,89,9,68],[14,2,10,0],[14,6,10,4,"date_time_pattern_generator_1"],[14,35,10,33],[14,38,10,36,"require"],[14,45,10,43],[14,46,10,43,"_dependencyMap"],[14,60,10,43],[14,96,10,75],[14,97,10,76],[15,2,11,0],[15,6,11,4,"SPACE_SEPARATOR_START_REGEX"],[15,33,11,31],[15,36,11,34],[15,40,11,38,"RegExp"],[15,46,11,44],[15,47,11,45],[15,50,11,48],[15,51,11,49,"concat"],[15,57,11,55],[15,58,11,56,"regex_generated_1"],[15,75,11,73],[15,76,11,74,"SPACE_SEPARATOR_REGEX"],[15,97,11,95],[15,98,11,96,"source"],[15,104,11,102],[15,106,11,104],[15,109,11,107],[15,110,11,108],[15,111,11,109],[16,2,12,0],[16,6,12,4,"SPACE_SEPARATOR_END_REGEX"],[16,31,12,29],[16,34,12,32],[16,38,12,36,"RegExp"],[16,44,12,42],[16,45,12,43],[16,47,12,45],[16,48,12,46,"concat"],[16,54,12,52],[16,55,12,53,"regex_generated_1"],[16,72,12,70],[16,73,12,71,"SPACE_SEPARATOR_REGEX"],[16,94,12,92],[16,95,12,93,"source"],[16,101,12,99],[16,103,12,101],[16,107,12,105],[16,108,12,106],[16,109,12,107],[17,2,13,0],[17,11,13,9,"createLocation"],[17,25,13,23,"createLocation"],[17,26,13,24,"start"],[17,31,13,29],[17,33,13,31,"end"],[17,36,13,34],[17,38,13,36],[18,4,14,4],[18,11,14,11],[19,6,14,13,"start"],[19,11,14,18],[19,13,14,20,"start"],[19,18,14,25],[20,6,14,27,"end"],[20,9,14,30],[20,11,14,32,"end"],[21,4,14,36],[21,5,14,37],[22,2,15,0],[23,2,16,0],[24,2,17,0],[25,2,18,0],[25,6,18,4,"hasNativeStartsWith"],[25,25,18,23],[25,28,18,26],[25,29,18,27],[25,30,18,28,"String"],[25,36,18,34],[25,37,18,35,"prototype"],[25,46,18,44],[25,47,18,45,"startsWith"],[25,57,18,55],[25,61,18,59],[25,65,18,63],[25,66,18,64,"startsWith"],[25,76,18,74],[25,77,18,75],[25,80,18,78],[25,82,18,80],[25,83,18,81],[25,84,18,82],[26,2,19,0],[26,6,19,4,"hasNativeFromCodePoint"],[26,28,19,26],[26,31,19,29],[26,32,19,30],[26,33,19,31,"String"],[26,39,19,37],[26,40,19,38,"fromCodePoint"],[26,53,19,51],[27,2,20,0],[27,6,20,4,"hasNativeFromEntries"],[27,26,20,24],[27,29,20,27],[27,30,20,28],[27,31,20,29,"Object"],[27,37,20,35],[27,38,20,36,"fromEntries"],[27,49,20,47],[28,2,21,0],[28,6,21,4,"hasNativeCodePointAt"],[28,26,21,24],[28,29,21,27],[28,30,21,28],[28,31,21,29,"String"],[28,37,21,35],[28,38,21,36,"prototype"],[28,47,21,45],[28,48,21,46,"codePointAt"],[28,59,21,57],[29,2,22,0],[29,6,22,4,"hasTrimStart"],[29,18,22,16],[29,21,22,19],[29,22,22,20],[29,23,22,21,"String"],[29,29,22,27],[29,30,22,28,"prototype"],[29,39,22,37],[29,40,22,38,"trimStart"],[29,49,22,47],[30,2,23,0],[30,6,23,4,"hasTrimEnd"],[30,16,23,14],[30,19,23,17],[30,20,23,18],[30,21,23,19,"String"],[30,27,23,25],[30,28,23,26,"prototype"],[30,37,23,35],[30,38,23,36,"trimEnd"],[30,45,23,43],[31,2,24,0],[31,6,24,4,"hasNativeIsSafeInteger"],[31,28,24,26],[31,31,24,29],[31,32,24,30],[31,33,24,31,"Number"],[31,39,24,37],[31,40,24,38,"isSafeInteger"],[31,53,24,51],[32,2,25,0],[32,6,25,4,"isSafeInteger"],[32,19,25,17],[32,22,25,20,"hasNativeIsSafeInteger"],[32,44,25,42],[32,47,26,6,"Number"],[32,53,26,12],[32,54,26,13,"isSafeInteger"],[32,67,26,26],[32,70,27,6],[32,80,27,16,"n"],[32,81,27,17],[32,83,27,19],[33,4,28,8],[33,11,28,16],[33,18,28,23,"n"],[33,19,28,24],[33,24,28,29],[33,32,28,37],[33,36,29,12,"isFinite"],[33,44,29,20],[33,45,29,21,"n"],[33,46,29,22],[33,47,29,23],[33,51,30,12,"Math"],[33,55,30,16],[33,56,30,17,"floor"],[33,61,30,22],[33,62,30,23,"n"],[33,63,30,24],[33,64,30,25],[33,69,30,30,"n"],[33,70,30,31],[33,74,31,12,"Math"],[33,78,31,16],[33,79,31,17,"abs"],[33,82,31,20],[33,83,31,21,"n"],[33,84,31,22],[33,85,31,23],[33,89,31,27],[33,105,31,43],[34,2,32,4],[34,3,32,5],[35,2,33,0],[36,2,34,0],[36,6,34,4,"REGEX_SUPPORTS_U_AND_Y"],[36,28,34,26],[36,31,34,29],[36,35,34,33],[37,2,35,0],[37,6,35,4],[38,4,36,4],[38,8,36,8,"re"],[38,10,36,10],[38,13,36,13,"RE"],[38,15,36,15],[38,16,36,16],[38,59,36,59],[38,61,36,61],[38,65,36,65],[38,66,36,66],[39,4,37,4],[40,0,38,0],[41,0,39,0],[42,0,40,0],[43,0,41,0],[44,0,42,0],[45,4,43,4,"REGEX_SUPPORTS_U_AND_Y"],[45,26,43,26],[45,29,43,29],[45,30,43,30],[45,31,43,31,"_a"],[45,33,43,33],[45,36,43,36,"re"],[45,38,43,38],[45,39,43,39,"exec"],[45,43,43,43],[45,44,43,44],[45,47,43,47],[45,48,43,48],[45,54,43,54],[45,58,43,58],[45,62,43,62,"_a"],[45,64,43,64],[45,69,43,69],[45,74,43,74],[45,75,43,75],[45,78,43,78],[45,83,43,83],[45,84,43,84],[45,87,43,87,"_a"],[45,89,43,89],[45,90,43,90],[45,91,43,91],[45,92,43,92],[45,98,43,98],[45,101,43,101],[46,2,44,0],[46,3,44,1],[46,4,45,0],[46,11,45,7,"_"],[46,12,45,8],[46,14,45,10],[47,4,46,4,"REGEX_SUPPORTS_U_AND_Y"],[47,26,46,26],[47,29,46,29],[47,34,46,34],[48,2,47,0],[49,2,48,0],[49,6,48,4,"startsWith"],[49,16,48,14],[49,19,48,17,"hasNativeStartsWith"],[49,38,48,36],[50,2,49,6],[51,2,50,8],[51,11,50,17,"startsWith"],[51,21,50,27,"startsWith"],[51,22,50,28,"s"],[51,23,50,29],[51,25,50,31,"search"],[51,31,50,37],[51,33,50,39,"position"],[51,41,50,47],[51,43,50,49],[52,4,51,12],[52,11,51,19,"s"],[52,12,51,20],[52,13,51,21,"startsWith"],[52,23,51,31],[52,24,51,32,"search"],[52,30,51,38],[52,32,51,40,"position"],[52,40,51,48],[52,41,51,49],[53,2,52,8],[53,3,52,9],[54,2,53,6],[55,2,54,8],[55,11,54,17,"startsWith"],[55,21,54,27,"startsWith"],[55,22,54,28,"s"],[55,23,54,29],[55,25,54,31,"search"],[55,31,54,37],[55,33,54,39,"position"],[55,41,54,47],[55,43,54,49],[56,4,55,12],[56,11,55,19,"s"],[56,12,55,20],[56,13,55,21,"slice"],[56,18,55,26],[56,19,55,27,"position"],[56,27,55,35],[56,29,55,37,"position"],[56,37,55,45],[56,40,55,48,"search"],[56,46,55,54],[56,47,55,55,"length"],[56,53,55,61],[56,54,55,62],[56,59,55,67,"search"],[56,65,55,73],[57,2,56,8],[57,3,56,9],[58,2,57,0],[58,6,57,4,"fromCodePoint"],[58,19,57,17],[58,22,57,20,"hasNativeFromCodePoint"],[58,44,57,42],[58,47,58,6,"String"],[58,53,58,12],[58,54,58,13,"fromCodePoint"],[58,67,58,26],[59,2,59,6],[60,2,60,8],[60,11,60,17,"fromCodePoint"],[60,24,60,30,"fromCodePoint"],[60,25,60,30],[60,27,60,33],[61,4,61,12],[61,8,61,16,"codePoints"],[61,18,61,26],[61,21,61,29],[61,23,61,31],[62,4,62,12],[62,9,62,17],[62,13,62,21,"_i"],[62,15,62,23],[62,18,62,26],[62,19,62,27],[62,21,62,29,"_i"],[62,23,62,31],[62,26,62,34,"arguments"],[62,35,62,43],[62,36,62,44,"length"],[62,42,62,50],[62,44,62,52,"_i"],[62,46,62,54],[62,48,62,56],[62,50,62,58],[63,6,63,16,"codePoints"],[63,16,63,26],[63,17,63,27,"_i"],[63,19,63,29],[63,20,63,30],[63,23,63,33,"arguments"],[63,32,63,42],[63,33,63,43,"_i"],[63,35,63,45],[63,36,63,46],[64,4,64,12],[65,4,65,12],[65,8,65,16,"elements"],[65,16,65,24],[65,19,65,27],[65,21,65,29],[66,4,66,12],[66,8,66,16,"length"],[66,14,66,22],[66,17,66,25,"codePoints"],[66,27,66,35],[66,28,66,36,"length"],[66,34,66,42],[67,4,67,12],[67,8,67,16,"i"],[67,9,67,17],[67,12,67,20],[67,13,67,21],[68,4,68,12],[68,8,68,16,"code"],[68,12,68,20],[69,4,69,12],[69,11,69,19,"length"],[69,17,69,25],[69,20,69,28,"i"],[69,21,69,29],[69,23,69,31],[70,6,70,16,"code"],[70,10,70,20],[70,13,70,23,"codePoints"],[70,23,70,33],[70,24,70,34,"i"],[70,25,70,35],[70,27,70,37],[70,28,70,38],[71,6,71,16],[71,10,71,20,"code"],[71,14,71,24],[71,17,71,27],[71,25,71,35],[71,27,72,20],[71,33,72,26,"RangeError"],[71,43,72,36],[71,44,72,37,"code"],[71,48,72,41],[71,51,72,44],[71,79,72,72],[71,80,72,73],[72,6,73,16,"elements"],[72,14,73,24],[72,18,74,20,"code"],[72,22,74,24],[72,25,74,27],[72,32,74,34],[72,35,75,26,"String"],[72,41,75,32],[72,42,75,33,"fromCharCode"],[72,54,75,45],[72,55,75,46,"code"],[72,59,75,50],[72,60,75,51],[72,63,76,26,"String"],[72,69,76,32],[72,70,76,33,"fromCharCode"],[72,82,76,45],[72,83,76,46],[72,84,76,47],[72,85,76,48,"code"],[72,89,76,52],[72,93,76,56],[72,100,76,63],[72,105,76,68],[72,107,76,70],[72,111,76,74],[72,117,76,80],[72,119,76,83,"code"],[72,123,76,87],[72,126,76,90],[72,131,76,95],[72,134,76,99],[72,140,76,105],[72,141,76,106],[73,4,77,12],[74,4,78,12],[74,11,78,19,"elements"],[74,19,78,27],[75,2,79,8],[75,3,79,9],[76,2,80,0],[76,6,80,4,"fromEntries"],[76,17,80,15],[77,2,81,0],[78,2,82,0,"hasNativeFromEntries"],[78,22,82,20],[78,25,83,6,"Object"],[78,31,83,12],[78,32,83,13,"fromEntries"],[78,43,83,24],[79,2,84,6],[80,2,85,8],[80,11,85,17,"fromEntries"],[80,22,85,28,"fromEntries"],[80,23,85,29,"entries"],[80,30,85,36],[80,32,85,38],[81,4,86,12],[81,8,86,16,"obj"],[81,11,86,19],[81,14,86,22],[81,15,86,23],[81,16,86,24],[82,4,87,12],[82,9,87,17],[82,13,87,21,"_i"],[82,15,87,23],[82,18,87,26],[82,19,87,27],[82,21,87,29,"entries_1"],[82,30,87,38],[82,33,87,41,"entries"],[82,40,87,48],[82,42,87,50,"_i"],[82,44,87,52],[82,47,87,55,"entries_1"],[82,56,87,64],[82,57,87,65,"length"],[82,63,87,71],[82,65,87,73,"_i"],[82,67,87,75],[82,69,87,77],[82,71,87,79],[83,6,88,16],[83,10,88,20,"_a"],[83,12,88,22],[83,15,88,25,"entries_1"],[83,24,88,34],[83,25,88,35,"_i"],[83,27,88,37],[83,28,88,38],[84,8,88,40,"k"],[84,9,88,41],[84,12,88,44,"_a"],[84,14,88,46],[84,15,88,47],[84,16,88,48],[84,17,88,49],[85,8,88,51,"v"],[85,9,88,52],[85,12,88,55,"_a"],[85,14,88,57],[85,15,88,58],[85,16,88,59],[85,17,88,60],[86,6,89,16,"obj"],[86,9,89,19],[86,10,89,20,"k"],[86,11,89,21],[86,12,89,22],[86,15,89,25,"v"],[86,16,89,26],[87,4,90,12],[88,4,91,12],[88,11,91,19,"obj"],[88,14,91,22],[89,2,92,8],[89,3,92,9],[90,2,93,0],[90,6,93,4,"codePointAt"],[90,17,93,15],[90,20,93,18,"hasNativeCodePointAt"],[90,40,93,38],[91,2,94,6],[92,2,95,8],[92,11,95,17,"codePointAt"],[92,22,95,28,"codePointAt"],[92,23,95,29,"s"],[92,24,95,30],[92,26,95,32,"index"],[92,31,95,37],[92,33,95,39],[93,4,96,12],[93,11,96,19,"s"],[93,12,96,20],[93,13,96,21,"codePointAt"],[93,24,96,32],[93,25,96,33,"index"],[93,30,96,38],[93,31,96,39],[94,2,97,8],[94,3,97,9],[95,2,98,6],[96,2,99,8],[96,11,99,17,"codePointAt"],[96,22,99,28,"codePointAt"],[96,23,99,29,"s"],[96,24,99,30],[96,26,99,32,"index"],[96,31,99,37],[96,33,99,39],[97,4,100,12],[97,8,100,16,"size"],[97,12,100,20],[97,15,100,23,"s"],[97,16,100,24],[97,17,100,25,"length"],[97,23,100,31],[98,4,101,12],[98,8,101,16,"index"],[98,13,101,21],[98,16,101,24],[98,17,101,25],[98,21,101,29,"index"],[98,26,101,34],[98,30,101,38,"size"],[98,34,101,42],[98,36,101,44],[99,6,102,16],[99,13,102,23,"undefined"],[99,22,102,32],[100,4,103,12],[101,4,104,12],[101,8,104,16,"first"],[101,13,104,21],[101,16,104,24,"s"],[101,17,104,25],[101,18,104,26,"charCodeAt"],[101,28,104,36],[101,29,104,37,"index"],[101,34,104,42],[101,35,104,43],[102,4,105,12],[102,8,105,16,"second"],[102,14,105,22],[103,4,106,12],[103,11,106,19,"first"],[103,16,106,24],[103,19,106,27],[103,25,106,33],[103,29,107,16,"first"],[103,34,107,21],[103,37,107,24],[103,43,107,30],[103,47,108,16,"index"],[103,52,108,21],[103,55,108,24],[103,56,108,25],[103,61,108,30,"size"],[103,65,108,34],[103,69,109,16],[103,70,109,17,"second"],[103,76,109,23],[103,79,109,26,"s"],[103,80,109,27],[103,81,109,28,"charCodeAt"],[103,91,109,38],[103,92,109,39,"index"],[103,97,109,44],[103,100,109,47],[103,101,109,48],[103,102,109,49],[103,106,109,53],[103,112,109,59],[103,116,110,16,"second"],[103,122,110,22],[103,125,110,25],[103,131,110,31],[103,134,111,18,"first"],[103,139,111,23],[103,142,112,18],[103,143,112,20,"first"],[103,148,112,25],[103,151,112,28],[103,157,112,34],[103,161,112,39],[103,163,112,41],[103,168,112,46,"second"],[103,174,112,52],[103,177,112,55],[103,183,112,61],[103,184,112,62],[103,187,112,65],[103,194,112,72],[104,2,113,8],[104,3,113,9],[105,2,114,0],[105,6,114,4,"trimStart"],[105,15,114,13],[105,18,114,16,"hasTrimStart"],[105,30,114,28],[106,2,115,6],[107,2,116,8],[107,11,116,17,"trimStart"],[107,20,116,26,"trimStart"],[107,21,116,27,"s"],[107,22,116,28],[107,24,116,30],[108,4,117,12],[108,11,117,19,"s"],[108,12,117,20],[108,13,117,21,"trimStart"],[108,22,117,30],[108,23,117,31],[108,24,117,32],[109,2,118,8],[109,3,118,9],[110,2,119,6],[111,2,120,8],[111,11,120,17,"trimStart"],[111,20,120,26,"trimStart"],[111,21,120,27,"s"],[111,22,120,28],[111,24,120,30],[112,4,121,12],[112,11,121,19,"s"],[112,12,121,20],[112,13,121,21,"replace"],[112,20,121,28],[112,21,121,29,"SPACE_SEPARATOR_START_REGEX"],[112,48,121,56],[112,50,121,58],[112,52,121,60],[112,53,121,61],[113,2,122,8],[113,3,122,9],[114,2,123,0],[114,6,123,4,"trimEnd"],[114,13,123,11],[114,16,123,14,"hasTrimEnd"],[114,26,123,24],[115,2,124,6],[116,2,125,8],[116,11,125,17,"trimEnd"],[116,18,125,24,"trimEnd"],[116,19,125,25,"s"],[116,20,125,26],[116,22,125,28],[117,4,126,12],[117,11,126,19,"s"],[117,12,126,20],[117,13,126,21,"trimEnd"],[117,20,126,28],[117,21,126,29],[117,22,126,30],[118,2,127,8],[118,3,127,9],[119,2,128,6],[120,2,129,8],[120,11,129,17,"trimEnd"],[120,18,129,24,"trimEnd"],[120,19,129,25,"s"],[120,20,129,26],[120,22,129,28],[121,4,130,12],[121,11,130,19,"s"],[121,12,130,20],[121,13,130,21,"replace"],[121,20,130,28],[121,21,130,29,"SPACE_SEPARATOR_END_REGEX"],[121,46,130,54],[121,48,130,56],[121,50,130,58],[121,51,130,59],[122,2,131,8],[122,3,131,9],[123,2,132,0],[124,2,133,0],[124,11,133,9,"RE"],[124,13,133,11,"RE"],[124,14,133,12,"s"],[124,15,133,13],[124,17,133,15,"flag"],[124,21,133,19],[124,23,133,21],[125,4,134,4],[125,11,134,11],[125,15,134,15,"RegExp"],[125,21,134,21],[125,22,134,22,"s"],[125,23,134,23],[125,25,134,25,"flag"],[125,29,134,29],[125,30,134,30],[126,2,135,0],[127,2,136,0],[128,2,137,0],[128,6,137,4,"matchIdentifierAtIndex"],[128,28,137,26],[129,2,138,0],[129,6,138,4,"REGEX_SUPPORTS_U_AND_Y"],[129,28,138,26],[129,30,138,28],[130,4,139,4],[131,4,140,4],[131,8,140,8,"IDENTIFIER_PREFIX_RE_1"],[131,30,140,30],[131,33,140,33,"RE"],[131,35,140,35],[131,36,140,36],[131,79,140,79],[131,81,140,81],[131,85,140,85],[131,86,140,86],[132,4,141,4,"matchIdentifierAtIndex"],[132,26,141,26],[132,29,141,29],[132,38,141,38,"matchIdentifierAtIndex"],[132,60,141,60,"matchIdentifierAtIndex"],[132,61,141,61,"s"],[132,62,141,62],[132,64,141,64,"index"],[132,69,141,69],[132,71,141,71],[133,6,142,8],[133,10,142,12,"_a"],[133,12,142,14],[134,6,143,8,"IDENTIFIER_PREFIX_RE_1"],[134,28,143,30],[134,29,143,31,"lastIndex"],[134,38,143,40],[134,41,143,43,"index"],[134,46,143,48],[135,6,144,8],[135,10,144,12,"match"],[135,15,144,17],[135,18,144,20,"IDENTIFIER_PREFIX_RE_1"],[135,40,144,42],[135,41,144,43,"exec"],[135,45,144,47],[135,46,144,48,"s"],[135,47,144,49],[135,48,144,50],[136,6,145,8],[136,13,145,15],[136,14,145,16,"_a"],[136,16,145,18],[136,19,145,21,"match"],[136,24,145,26],[136,25,145,27],[136,26,145,28],[136,27,145,29],[136,33,145,35],[136,37,145,39],[136,41,145,43,"_a"],[136,43,145,45],[136,48,145,50],[136,53,145,55],[136,54,145,56],[136,57,145,59,"_a"],[136,59,145,61],[136,62,145,64],[136,64,145,66],[137,4,146,4],[137,5,146,5],[138,2,147,0],[138,3,147,1],[138,9,148,5],[139,4,149,4],[140,4,150,4,"matchIdentifierAtIndex"],[140,26,150,26],[140,29,150,29],[140,38,150,38,"matchIdentifierAtIndex"],[140,60,150,60,"matchIdentifierAtIndex"],[140,61,150,61,"s"],[140,62,150,62],[140,64,150,64,"index"],[140,69,150,69],[140,71,150,71],[141,6,151,8],[141,10,151,12,"match"],[141,15,151,17],[141,18,151,20],[141,20,151,22],[142,6,152,8],[142,13,152,15],[142,17,152,19],[142,19,152,21],[143,8,153,12],[143,12,153,16,"c"],[143,13,153,17],[143,16,153,20,"codePointAt"],[143,27,153,31],[143,28,153,32,"s"],[143,29,153,33],[143,31,153,35,"index"],[143,36,153,40],[143,37,153,41],[144,8,154,12],[144,12,154,16,"c"],[144,13,154,17],[144,18,154,22,"undefined"],[144,27,154,31],[144,31,154,35,"_isWhiteSpace"],[144,44,154,48],[144,45,154,49,"c"],[144,46,154,50],[144,47,154,51],[144,51,154,55,"_isPatternSyntax"],[144,67,154,71],[144,68,154,72,"c"],[144,69,154,73],[144,70,154,74],[144,72,154,76],[145,10,155,16],[146,8,156,12],[147,8,157,12,"match"],[147,13,157,17],[147,14,157,18,"push"],[147,18,157,22],[147,19,157,23,"c"],[147,20,157,24],[147,21,157,25],[148,8,158,12,"index"],[148,13,158,17],[148,17,158,21,"c"],[148,18,158,22],[148,22,158,26],[148,29,158,33],[148,32,158,36],[148,33,158,37],[148,36,158,40],[148,37,158,41],[149,6,159,8],[150,6,160,8],[150,13,160,15,"fromCodePoint"],[150,26,160,28],[150,27,160,29,"apply"],[150,32,160,34],[150,33,160,35],[150,38,160,40],[150,39,160,41],[150,41,160,43,"match"],[150,46,160,48],[150,47,160,49],[151,4,161,4],[151,5,161,5],[152,2,162,0],[153,2,163,0],[153,6,163,4,"Parser"],[153,12,163,10],[153,15,163,13],[153,28,163,28],[153,40,163,40],[154,4,164,4],[154,13,164,13,"Parser"],[154,19,164,19,"Parser"],[154,20,164,20,"message"],[154,27,164,27],[154,29,164,29,"options"],[154,36,164,36],[154,38,164,38],[155,6,165,8],[155,10,165,12,"options"],[155,17,165,19],[155,22,165,24],[155,27,165,29],[155,28,165,30],[155,30,165,32],[156,8,165,34,"options"],[156,15,165,41],[156,18,165,44],[156,19,165,45],[156,20,165,46],[157,6,165,48],[158,6,166,8],[158,10,166,12],[158,11,166,13,"message"],[158,18,166,20],[158,21,166,23,"message"],[158,28,166,30],[159,6,167,8],[159,10,167,12],[159,11,167,13,"position"],[159,19,167,21],[159,22,167,24],[160,8,167,26,"offset"],[160,14,167,32],[160,16,167,34],[160,17,167,35],[161,8,167,37,"line"],[161,12,167,41],[161,14,167,43],[161,15,167,44],[162,8,167,46,"column"],[162,14,167,52],[162,16,167,54],[163,6,167,56],[163,7,167,57],[164,6,168,8],[164,10,168,12],[164,11,168,13,"ignoreTag"],[164,20,168,22],[164,23,168,25],[164,24,168,26],[164,25,168,27,"options"],[164,32,168,34],[164,33,168,35,"ignoreTag"],[164,42,168,44],[165,6,169,8],[165,10,169,12],[165,11,169,13,"locale"],[165,17,169,19],[165,20,169,22,"options"],[165,27,169,29],[165,28,169,30,"locale"],[165,34,169,36],[166,6,170,8],[166,10,170,12],[166,11,170,13,"requiresOtherClause"],[166,30,170,32],[166,33,170,35],[166,34,170,36],[166,35,170,37,"options"],[166,42,170,44],[166,43,170,45,"requiresOtherClause"],[166,62,170,64],[167,6,171,8],[167,10,171,12],[167,11,171,13,"shouldParseSkeletons"],[167,31,171,33],[167,34,171,36],[167,35,171,37],[167,36,171,38,"options"],[167,43,171,45],[167,44,171,46,"shouldParseSkeletons"],[167,64,171,66],[168,4,172,4],[169,4,173,4,"Parser"],[169,10,173,10],[169,11,173,11,"prototype"],[169,20,173,20],[169,21,173,21,"parse"],[169,26,173,26],[169,29,173,29],[169,41,173,41],[170,6,174,8],[170,10,174,12],[170,14,174,16],[170,15,174,17,"offset"],[170,21,174,23],[170,22,174,24],[170,23,174,25],[170,28,174,30],[170,29,174,31],[170,31,174,33],[171,8,175,12],[171,14,175,18,"Error"],[171,19,175,23],[171,20,175,24],[171,50,175,54],[171,51,175,55],[172,6,176,8],[173,6,177,8],[173,13,177,15],[173,17,177,19],[173,18,177,20,"parseMessage"],[173,30,177,32],[173,31,177,33],[173,32,177,34],[173,34,177,36],[173,36,177,38],[173,38,177,40],[173,43,177,45],[173,44,177,46],[174,4,178,4],[174,5,178,5],[175,4,179,4,"Parser"],[175,10,179,10],[175,11,179,11,"prototype"],[175,20,179,20],[175,21,179,21,"parseMessage"],[175,33,179,33],[175,36,179,36],[175,46,179,46,"nestingLevel"],[175,58,179,58],[175,60,179,60,"parentArgType"],[175,73,179,73],[175,75,179,75,"expectingCloseTag"],[175,92,179,92],[175,94,179,94],[176,6,180,8],[176,10,180,12,"elements"],[176,18,180,20],[176,21,180,23],[176,23,180,25],[177,6,181,8],[177,13,181,15],[177,14,181,16],[177,18,181,20],[177,19,181,21,"isEOF"],[177,24,181,26],[177,25,181,27],[177,26,181,28],[177,28,181,30],[178,8,182,12],[178,12,182,16,"char"],[178,16,182,20],[178,19,182,23],[178,23,182,27],[178,24,182,28,"char"],[178,28,182,32],[178,29,182,33],[178,30,182,34],[179,8,183,12],[179,12,183,16,"char"],[179,16,183,20],[179,21,183,25],[179,24,183,28],[179,25,183,29],[179,36,183,40],[180,10,184,16],[180,14,184,20,"result"],[180,20,184,26],[180,23,184,29],[180,27,184,33],[180,28,184,34,"parseArgument"],[180,41,184,47],[180,42,184,48,"nestingLevel"],[180,54,184,60],[180,56,184,62,"expectingCloseTag"],[180,73,184,79],[180,74,184,80],[181,10,185,16],[181,14,185,20,"result"],[181,20,185,26],[181,21,185,27,"err"],[181,24,185,30],[181,26,185,32],[182,12,186,20],[182,19,186,27,"result"],[182,25,186,33],[183,10,187,16],[184,10,188,16,"elements"],[184,18,188,24],[184,19,188,25,"push"],[184,23,188,29],[184,24,188,30,"result"],[184,30,188,36],[184,31,188,37,"val"],[184,34,188,40],[184,35,188,41],[185,8,189,12],[185,9,189,13],[185,15,190,17],[185,19,190,21,"char"],[185,23,190,25],[185,28,190,30],[185,31,190,33],[185,32,190,34],[185,45,190,47,"nestingLevel"],[185,57,190,59],[185,60,190,62],[185,61,190,63],[185,63,190,65],[186,10,191,16],[187,8,192,12],[187,9,192,13],[187,15,193,17],[187,19,193,21,"char"],[187,23,193,25],[187,28,193,30],[187,30,193,32],[187,31,193,33],[187,45,194,17,"parentArgType"],[187,58,194,30],[187,63,194,35],[187,71,194,43],[187,75,194,47,"parentArgType"],[187,88,194,60],[187,93,194,65],[187,108,194,80],[187,109,194,81],[187,111,194,83],[188,10,195,16],[188,14,195,20,"position"],[188,22,195,28],[188,25,195,31],[188,29,195,35],[188,30,195,36,"clonePosition"],[188,43,195,49],[188,44,195,50],[188,45,195,51],[189,10,196,16],[189,14,196,20],[189,15,196,21,"bump"],[189,19,196,25],[189,20,196,26],[189,21,196,27],[190,10,197,16,"elements"],[190,18,197,24],[190,19,197,25,"push"],[190,23,197,29],[190,24,197,30],[191,12,198,20,"type"],[191,16,198,24],[191,18,198,26,"types_1"],[191,25,198,33],[191,26,198,34,"TYPE"],[191,30,198,38],[191,31,198,39,"pound"],[191,36,198,44],[192,12,199,20,"location"],[192,20,199,28],[192,22,199,30,"createLocation"],[192,36,199,44],[192,37,199,45,"position"],[192,45,199,53],[192,47,199,55],[192,51,199,59],[192,52,199,60,"clonePosition"],[192,65,199,73],[192,66,199,74],[192,67,199,75],[193,10,200,16],[193,11,200,17],[193,12,200,18],[194,8,201,12],[194,9,201,13],[194,15,202,17],[194,19,202,21,"char"],[194,23,202,25],[194,28,202,30],[194,30,202,32],[194,31,202,33],[194,44,203,16],[194,45,203,17],[194,49,203,21],[194,50,203,22,"ignoreTag"],[194,59,203,31],[194,63,204,16],[194,67,204,20],[194,68,204,21,"peek"],[194,72,204,25],[194,73,204,26],[194,74,204,27],[194,79,204,32],[194,81,204,34],[194,82,204,35],[195,8,204,35],[195,10,205,14],[196,10,206,16],[196,14,206,20,"expectingCloseTag"],[196,31,206,37],[196,33,206,39],[197,12,207,20],[198,10,208,16],[198,11,208,17],[198,17,209,21],[199,12,210,20],[199,19,210,27],[199,23,210,31],[199,24,210,32,"error"],[199,29,210,37],[199,30,210,38,"error_1"],[199,37,210,45],[199,38,210,46,"ErrorKind"],[199,47,210,55],[199,48,210,56,"UNMATCHED_CLOSING_TAG"],[199,69,210,77],[199,71,210,79,"createLocation"],[199,85,210,93],[199,86,210,94],[199,90,210,98],[199,91,210,99,"clonePosition"],[199,104,210,112],[199,105,210,113],[199,106,210,114],[199,108,210,116],[199,112,210,120],[199,113,210,121,"clonePosition"],[199,126,210,134],[199,127,210,135],[199,128,210,136],[199,129,210,137],[199,130,210,138],[200,10,211,16],[201,8,212,12],[201,9,212,13],[201,15,213,17],[201,19,213,21,"char"],[201,23,213,25],[201,28,213,30],[201,30,213,32],[201,31,213,33],[201,44,214,16],[201,45,214,17],[201,49,214,21],[201,50,214,22,"ignoreTag"],[201,59,214,31],[201,63,215,16,"_isAlpha"],[201,71,215,24],[201,72,215,25],[201,76,215,29],[201,77,215,30,"peek"],[201,81,215,34],[201,82,215,35],[201,83,215,36],[201,87,215,40],[201,88,215,41],[201,89,215,42],[201,91,215,44],[202,10,216,16],[202,14,216,20,"result"],[202,20,216,26],[202,23,216,29],[202,27,216,33],[202,28,216,34,"parseTag"],[202,36,216,42],[202,37,216,43,"nestingLevel"],[202,49,216,55],[202,51,216,57,"parentArgType"],[202,64,216,70],[202,65,216,71],[203,10,217,16],[203,14,217,20,"result"],[203,20,217,26],[203,21,217,27,"err"],[203,24,217,30],[203,26,217,32],[204,12,218,20],[204,19,218,27,"result"],[204,25,218,33],[205,10,219,16],[206,10,220,16,"elements"],[206,18,220,24],[206,19,220,25,"push"],[206,23,220,29],[206,24,220,30,"result"],[206,30,220,36],[206,31,220,37,"val"],[206,34,220,40],[206,35,220,41],[207,8,221,12],[207,9,221,13],[207,15,222,17],[208,10,223,16],[208,14,223,20,"result"],[208,20,223,26],[208,23,223,29],[208,27,223,33],[208,28,223,34,"parseLiteral"],[208,40,223,46],[208,41,223,47,"nestingLevel"],[208,53,223,59],[208,55,223,61,"parentArgType"],[208,68,223,74],[208,69,223,75],[209,10,224,16],[209,14,224,20,"result"],[209,20,224,26],[209,21,224,27,"err"],[209,24,224,30],[209,26,224,32],[210,12,225,20],[210,19,225,27,"result"],[210,25,225,33],[211,10,226,16],[212,10,227,16,"elements"],[212,18,227,24],[212,19,227,25,"push"],[212,23,227,29],[212,24,227,30,"result"],[212,30,227,36],[212,31,227,37,"val"],[212,34,227,40],[212,35,227,41],[213,8,228,12],[214,6,229,8],[215,6,230,8],[215,13,230,15],[216,8,230,17,"val"],[216,11,230,20],[216,13,230,22,"elements"],[216,21,230,30],[217,8,230,32,"err"],[217,11,230,35],[217,13,230,37],[218,6,230,42],[218,7,230,43],[219,4,231,4],[219,5,231,5],[220,4,232,4],[221,0,233,0],[222,0,234,0],[223,0,235,0],[224,0,236,0],[225,0,237,0],[226,0,238,0],[227,0,239,0],[228,0,240,0],[229,0,241,0],[230,0,242,0],[231,0,243,0],[232,0,244,0],[233,0,245,0],[234,0,246,0],[235,0,247,0],[236,0,248,0],[237,0,249,0],[238,4,250,4,"Parser"],[238,10,250,10],[238,11,250,11,"prototype"],[238,20,250,20],[238,21,250,21,"parseTag"],[238,29,250,29],[238,32,250,32],[238,42,250,42,"nestingLevel"],[238,54,250,54],[238,56,250,56,"parentArgType"],[238,69,250,69],[238,71,250,71],[239,6,251,8],[239,10,251,12,"startPosition"],[239,23,251,25],[239,26,251,28],[239,30,251,32],[239,31,251,33,"clonePosition"],[239,44,251,46],[239,45,251,47],[239,46,251,48],[240,6,252,8],[240,10,252,12],[240,11,252,13,"bump"],[240,15,252,17],[240,16,252,18],[240,17,252,19],[240,18,252,20],[240,19,252,21],[241,6,253,8],[241,10,253,12,"tagName"],[241,17,253,19],[241,20,253,22],[241,24,253,26],[241,25,253,27,"parseTagName"],[241,37,253,39],[241,38,253,40],[241,39,253,41],[242,6,254,8],[242,10,254,12],[242,11,254,13,"bumpSpace"],[242,20,254,22],[242,21,254,23],[242,22,254,24],[243,6,255,8],[243,10,255,12],[243,14,255,16],[243,15,255,17,"bumpIf"],[243,21,255,23],[243,22,255,24],[243,26,255,28],[243,27,255,29],[243,29,255,31],[244,8,256,12],[245,8,257,12],[245,15,257,19],[246,10,258,16,"val"],[246,13,258,19],[246,15,258,21],[247,12,259,20,"type"],[247,16,259,24],[247,18,259,26,"types_1"],[247,25,259,33],[247,26,259,34,"TYPE"],[247,30,259,38],[247,31,259,39,"literal"],[247,38,259,46],[248,12,260,20,"value"],[248,17,260,25],[248,19,260,27],[248,22,260,30],[248,23,260,31,"concat"],[248,29,260,37],[248,30,260,38,"tagName"],[248,37,260,45],[248,39,260,47],[248,43,260,51],[248,44,260,52],[249,12,261,20,"location"],[249,20,261,28],[249,22,261,30,"createLocation"],[249,36,261,44],[249,37,261,45,"startPosition"],[249,50,261,58],[249,52,261,60],[249,56,261,64],[249,57,261,65,"clonePosition"],[249,70,261,78],[249,71,261,79],[249,72,261,80],[250,10,262,16],[250,11,262,17],[251,10,263,16,"err"],[251,13,263,19],[251,15,263,21],[252,8,264,12],[252,9,264,13],[253,6,265,8],[253,7,265,9],[253,13,266,13],[253,17,266,17],[253,21,266,21],[253,22,266,22,"bumpIf"],[253,28,266,28],[253,29,266,29],[253,32,266,32],[253,33,266,33],[253,35,266,35],[254,8,267,12],[254,12,267,16,"childrenResult"],[254,26,267,30],[254,29,267,33],[254,33,267,37],[254,34,267,38,"parseMessage"],[254,46,267,50],[254,47,267,51,"nestingLevel"],[254,59,267,63],[254,62,267,66],[254,63,267,67],[254,65,267,69,"parentArgType"],[254,78,267,82],[254,80,267,84],[254,84,267,88],[254,85,267,89],[255,8,268,12],[255,12,268,16,"childrenResult"],[255,26,268,30],[255,27,268,31,"err"],[255,30,268,34],[255,32,268,36],[256,10,269,16],[256,17,269,23,"childrenResult"],[256,31,269,37],[257,8,270,12],[258,8,271,12],[258,12,271,16,"children"],[258,20,271,24],[258,23,271,27,"childrenResult"],[258,37,271,41],[258,38,271,42,"val"],[258,41,271,45],[259,8,272,12],[260,8,273,12],[260,12,273,16,"endTagStartPosition"],[260,31,273,35],[260,34,273,38],[260,38,273,42],[260,39,273,43,"clonePosition"],[260,52,273,56],[260,53,273,57],[260,54,273,58],[261,8,274,12],[261,12,274,16],[261,16,274,20],[261,17,274,21,"bumpIf"],[261,23,274,27],[261,24,274,28],[261,28,274,32],[261,29,274,33],[261,31,274,35],[262,10,275,16],[262,14,275,20],[262,18,275,24],[262,19,275,25,"isEOF"],[262,24,275,30],[262,25,275,31],[262,26,275,32],[262,30,275,36],[262,31,275,37,"_isAlpha"],[262,39,275,45],[262,40,275,46],[262,44,275,50],[262,45,275,51,"char"],[262,49,275,55],[262,50,275,56],[262,51,275,57],[262,52,275,58],[262,54,275,60],[263,12,276,20],[263,19,276,27],[263,23,276,31],[263,24,276,32,"error"],[263,29,276,37],[263,30,276,38,"error_1"],[263,37,276,45],[263,38,276,46,"ErrorKind"],[263,47,276,55],[263,48,276,56,"INVALID_TAG"],[263,59,276,67],[263,61,276,69,"createLocation"],[263,75,276,83],[263,76,276,84,"endTagStartPosition"],[263,95,276,103],[263,97,276,105],[263,101,276,109],[263,102,276,110,"clonePosition"],[263,115,276,123],[263,116,276,124],[263,117,276,125],[263,118,276,126],[263,119,276,127],[264,10,277,16],[265,10,278,16],[265,14,278,20,"closingTagNameStartPosition"],[265,41,278,47],[265,44,278,50],[265,48,278,54],[265,49,278,55,"clonePosition"],[265,62,278,68],[265,63,278,69],[265,64,278,70],[266,10,279,16],[266,14,279,20,"closingTagName"],[266,28,279,34],[266,31,279,37],[266,35,279,41],[266,36,279,42,"parseTagName"],[266,48,279,54],[266,49,279,55],[266,50,279,56],[267,10,280,16],[267,14,280,20,"tagName"],[267,21,280,27],[267,26,280,32,"closingTagName"],[267,40,280,46],[267,42,280,48],[268,12,281,20],[268,19,281,27],[268,23,281,31],[268,24,281,32,"error"],[268,29,281,37],[268,30,281,38,"error_1"],[268,37,281,45],[268,38,281,46,"ErrorKind"],[268,47,281,55],[268,48,281,56,"UNMATCHED_CLOSING_TAG"],[268,69,281,77],[268,71,281,79,"createLocation"],[268,85,281,93],[268,86,281,94,"closingTagNameStartPosition"],[268,113,281,121],[268,115,281,123],[268,119,281,127],[268,120,281,128,"clonePosition"],[268,133,281,141],[268,134,281,142],[268,135,281,143],[268,136,281,144],[268,137,281,145],[269,10,282,16],[270,10,283,16],[270,14,283,20],[270,15,283,21,"bumpSpace"],[270,24,283,30],[270,25,283,31],[270,26,283,32],[271,10,284,16],[271,14,284,20],[271,15,284,21],[271,19,284,25],[271,20,284,26,"bumpIf"],[271,26,284,32],[271,27,284,33],[271,30,284,36],[271,31,284,37],[271,33,284,39],[272,12,285,20],[272,19,285,27],[272,23,285,31],[272,24,285,32,"error"],[272,29,285,37],[272,30,285,38,"error_1"],[272,37,285,45],[272,38,285,46,"ErrorKind"],[272,47,285,55],[272,48,285,56,"INVALID_TAG"],[272,59,285,67],[272,61,285,69,"createLocation"],[272,75,285,83],[272,76,285,84,"endTagStartPosition"],[272,95,285,103],[272,97,285,105],[272,101,285,109],[272,102,285,110,"clonePosition"],[272,115,285,123],[272,116,285,124],[272,117,285,125],[272,118,285,126],[272,119,285,127],[273,10,286,16],[274,10,287,16],[274,17,287,23],[275,12,288,20,"val"],[275,15,288,23],[275,17,288,25],[276,14,289,24,"type"],[276,18,289,28],[276,20,289,30,"types_1"],[276,27,289,37],[276,28,289,38,"TYPE"],[276,32,289,42],[276,33,289,43,"tag"],[276,36,289,46],[277,14,290,24,"value"],[277,19,290,29],[277,21,290,31,"tagName"],[277,28,290,38],[278,14,291,24,"children"],[278,22,291,32],[278,24,291,34,"children"],[278,32,291,42],[279,14,292,24,"location"],[279,22,292,32],[279,24,292,34,"createLocation"],[279,38,292,48],[279,39,292,49,"startPosition"],[279,52,292,62],[279,54,292,64],[279,58,292,68],[279,59,292,69,"clonePosition"],[279,72,292,82],[279,73,292,83],[279,74,292,84],[280,12,293,20],[280,13,293,21],[281,12,294,20,"err"],[281,15,294,23],[281,17,294,25],[282,10,295,16],[282,11,295,17],[283,8,296,12],[283,9,296,13],[283,15,297,17],[284,10,298,16],[284,17,298,23],[284,21,298,27],[284,22,298,28,"error"],[284,27,298,33],[284,28,298,34,"error_1"],[284,35,298,41],[284,36,298,42,"ErrorKind"],[284,45,298,51],[284,46,298,52,"UNCLOSED_TAG"],[284,58,298,64],[284,60,298,66,"createLocation"],[284,74,298,80],[284,75,298,81,"startPosition"],[284,88,298,94],[284,90,298,96],[284,94,298,100],[284,95,298,101,"clonePosition"],[284,108,298,114],[284,109,298,115],[284,110,298,116],[284,111,298,117],[284,112,298,118],[285,8,299,12],[286,6,300,8],[286,7,300,9],[286,13,301,13],[287,8,302,12],[287,15,302,19],[287,19,302,23],[287,20,302,24,"error"],[287,25,302,29],[287,26,302,30,"error_1"],[287,33,302,37],[287,34,302,38,"ErrorKind"],[287,43,302,47],[287,44,302,48,"INVALID_TAG"],[287,55,302,59],[287,57,302,61,"createLocation"],[287,71,302,75],[287,72,302,76,"startPosition"],[287,85,302,89],[287,87,302,91],[287,91,302,95],[287,92,302,96,"clonePosition"],[287,105,302,109],[287,106,302,110],[287,107,302,111],[287,108,302,112],[287,109,302,113],[288,6,303,8],[289,4,304,4],[289,5,304,5],[290,4,305,4],[291,0,306,0],[292,0,307,0],[293,4,308,4,"Parser"],[293,10,308,10],[293,11,308,11,"prototype"],[293,20,308,20],[293,21,308,21,"parseTagName"],[293,33,308,33],[293,36,308,36],[293,48,308,48],[294,6,309,8],[294,10,309,12,"startOffset"],[294,21,309,23],[294,24,309,26],[294,28,309,30],[294,29,309,31,"offset"],[294,35,309,37],[294,36,309,38],[294,37,309,39],[295,6,310,8],[295,10,310,12],[295,11,310,13,"bump"],[295,15,310,17],[295,16,310,18],[295,17,310,19],[295,18,310,20],[295,19,310,21],[296,6,311,8],[296,13,311,15],[296,14,311,16],[296,18,311,20],[296,19,311,21,"isEOF"],[296,24,311,26],[296,25,311,27],[296,26,311,28],[296,30,311,32,"_isPotentialElementNameChar"],[296,57,311,59],[296,58,311,60],[296,62,311,64],[296,63,311,65,"char"],[296,67,311,69],[296,68,311,70],[296,69,311,71],[296,70,311,72],[296,72,311,74],[297,8,312,12],[297,12,312,16],[297,13,312,17,"bump"],[297,17,312,21],[297,18,312,22],[297,19,312,23],[298,6,313,8],[299,6,314,8],[299,13,314,15],[299,17,314,19],[299,18,314,20,"message"],[299,25,314,27],[299,26,314,28,"slice"],[299,31,314,33],[299,32,314,34,"startOffset"],[299,43,314,45],[299,45,314,47],[299,49,314,51],[299,50,314,52,"offset"],[299,56,314,58],[299,57,314,59],[299,58,314,60],[299,59,314,61],[300,4,315,4],[300,5,315,5],[301,4,316,4,"Parser"],[301,10,316,10],[301,11,316,11,"prototype"],[301,20,316,20],[301,21,316,21,"parseLiteral"],[301,33,316,33],[301,36,316,36],[301,46,316,46,"nestingLevel"],[301,58,316,58],[301,60,316,60,"parentArgType"],[301,73,316,73],[301,75,316,75],[302,6,317,8],[302,10,317,12,"start"],[302,15,317,17],[302,18,317,20],[302,22,317,24],[302,23,317,25,"clonePosition"],[302,36,317,38],[302,37,317,39],[302,38,317,40],[303,6,318,8],[303,10,318,12,"value"],[303,15,318,17],[303,18,318,20],[303,20,318,22],[304,6,319,8],[304,13,319,15],[304,17,319,19],[304,19,319,21],[305,8,320,12],[305,12,320,16,"parseQuoteResult"],[305,28,320,32],[305,31,320,35],[305,35,320,39],[305,36,320,40,"tryParseQuote"],[305,49,320,53],[305,50,320,54,"parentArgType"],[305,63,320,67],[305,64,320,68],[306,8,321,12],[306,12,321,16,"parseQuoteResult"],[306,28,321,32],[306,30,321,34],[307,10,322,16,"value"],[307,15,322,21],[307,19,322,25,"parseQuoteResult"],[307,35,322,41],[308,10,323,16],[309,8,324,12],[310,8,325,12],[310,12,325,16,"parseUnquotedResult"],[310,31,325,35],[310,34,325,38],[310,38,325,42],[310,39,325,43,"tryParseUnquoted"],[310,55,325,59],[310,56,325,60,"nestingLevel"],[310,68,325,72],[310,70,325,74,"parentArgType"],[310,83,325,87],[310,84,325,88],[311,8,326,12],[311,12,326,16,"parseUnquotedResult"],[311,31,326,35],[311,33,326,37],[312,10,327,16,"value"],[312,15,327,21],[312,19,327,25,"parseUnquotedResult"],[312,38,327,44],[313,10,328,16],[314,8,329,12],[315,8,330,12],[315,12,330,16,"parseLeftAngleResult"],[315,32,330,36],[315,35,330,39],[315,39,330,43],[315,40,330,44,"tryParseLeftAngleBracket"],[315,64,330,68],[315,65,330,69],[315,66,330,70],[316,8,331,12],[316,12,331,16,"parseLeftAngleResult"],[316,32,331,36],[316,34,331,38],[317,10,332,16,"value"],[317,15,332,21],[317,19,332,25,"parseLeftAngleResult"],[317,39,332,45],[318,10,333,16],[319,8,334,12],[320,8,335,12],[321,6,336,8],[322,6,337,8],[322,10,337,12,"location"],[322,18,337,20],[322,21,337,23,"createLocation"],[322,35,337,37],[322,36,337,38,"start"],[322,41,337,43],[322,43,337,45],[322,47,337,49],[322,48,337,50,"clonePosition"],[322,61,337,63],[322,62,337,64],[322,63,337,65],[322,64,337,66],[323,6,338,8],[323,13,338,15],[324,8,339,12,"val"],[324,11,339,15],[324,13,339,17],[325,10,339,19,"type"],[325,14,339,23],[325,16,339,25,"types_1"],[325,23,339,32],[325,24,339,33,"TYPE"],[325,28,339,37],[325,29,339,38,"literal"],[325,36,339,45],[326,10,339,47,"value"],[326,15,339,52],[326,17,339,54,"value"],[326,22,339,59],[327,10,339,61,"location"],[327,18,339,69],[327,20,339,71,"location"],[328,8,339,80],[328,9,339,81],[329,8,340,12,"err"],[329,11,340,15],[329,13,340,17],[330,6,341,8],[330,7,341,9],[331,4,342,4],[331,5,342,5],[332,4,343,4,"Parser"],[332,10,343,10],[332,11,343,11,"prototype"],[332,20,343,20],[332,21,343,21,"tryParseLeftAngleBracket"],[332,45,343,45],[332,48,343,48],[332,60,343,60],[333,6,344,8],[333,10,344,12],[333,11,344,13],[333,15,344,17],[333,16,344,18,"isEOF"],[333,21,344,23],[333,22,344,24],[333,23,344,25],[333,27,345,12],[333,31,345,16],[333,32,345,17,"char"],[333,36,345,21],[333,37,345,22],[333,38,345,23],[333,43,345,28],[333,45,345,30],[333,46,345,31],[333,60,346,13],[333,64,346,17],[333,65,346,18,"ignoreTag"],[333,74,346,27],[334,6,347,16],[335,6,348,16],[335,7,348,17,"_isAlphaOrSlash"],[335,22,348,32],[335,23,348,33],[335,27,348,37],[335,28,348,38,"peek"],[335,32,348,42],[335,33,348,43],[335,34,348,44],[335,38,348,48],[335,39,348,49],[335,40,348,50],[335,41,348,51],[335,43,348,53],[336,8,349,12],[336,12,349,16],[336,13,349,17,"bump"],[336,17,349,21],[336,18,349,22],[336,19,349,23],[336,20,349,24],[336,21,349,25],[337,8,350,12],[337,15,350,19],[337,18,350,22],[338,6,351,8],[339,6,352,8],[339,13,352,15],[339,17,352,19],[340,4,353,4],[340,5,353,5],[341,4,354,4],[342,0,355,0],[343,0,356,0],[344,0,357,0],[345,0,358,0],[346,4,359,4,"Parser"],[346,10,359,10],[346,11,359,11,"prototype"],[346,20,359,20],[346,21,359,21,"tryParseQuote"],[346,34,359,34],[346,37,359,37],[346,47,359,47,"parentArgType"],[346,60,359,60],[346,62,359,62],[347,6,360,8],[347,10,360,12],[347,14,360,16],[347,15,360,17,"isEOF"],[347,20,360,22],[347,21,360,23],[347,22,360,24],[347,26,360,28],[347,30,360,32],[347,31,360,33,"char"],[347,35,360,37],[347,36,360,38],[347,37,360,39],[347,42,360,44],[347,44,360,46],[347,45,360,47],[347,56,360,58],[348,8,361,12],[348,15,361,19],[348,19,361,23],[349,6,362,8],[350,6,363,8],[351,6,364,8],[352,6,365,8],[352,14,365,16],[352,18,365,20],[352,19,365,21,"peek"],[352,23,365,25],[352,24,365,26],[352,25,365,27],[353,8,366,12],[353,13,366,17],[353,15,366,19],[353,16,366,20],[354,10,367,16],[355,10,368,16],[355,14,368,20],[355,15,368,21,"bump"],[355,19,368,25],[355,20,368,26],[355,21,368,27],[356,10,369,16],[356,14,369,20],[356,15,369,21,"bump"],[356,19,369,25],[356,20,369,26],[356,21,369,27],[357,10,370,16],[357,17,370,23],[357,20,370,26],[358,8,371,12],[359,8,372,12],[359,13,372,17],[359,16,372,20],[360,8,373,12],[360,13,373,17],[360,15,373,19],[361,8,374,12],[361,13,374,17],[361,15,374,19],[362,8,375,12],[362,13,375,17],[362,16,375,20],[363,10,376,16],[364,8,377,12],[364,13,377,17],[364,15,377,19],[365,10,377,21],[366,10,378,16],[366,14,378,20,"parentArgType"],[366,27,378,33],[366,32,378,38],[366,40,378,46],[366,44,378,50,"parentArgType"],[366,57,378,63],[366,62,378,68],[366,77,378,83],[366,79,378,85],[367,12,379,20],[368,10,380,16],[369,10,381,16],[369,17,381,23],[369,21,381,27],[370,8,382,12],[371,10,383,16],[371,17,383,23],[371,21,383,27],[372,6,384,8],[373,6,385,8],[373,10,385,12],[373,11,385,13,"bump"],[373,15,385,17],[373,16,385,18],[373,17,385,19],[373,18,385,20],[373,19,385,21],[374,6,386,8],[374,10,386,12,"codePoints"],[374,20,386,22],[374,23,386,25],[374,24,386,26],[374,28,386,30],[374,29,386,31,"char"],[374,33,386,35],[374,34,386,36],[374,35,386,37],[374,36,386,38],[374,37,386,39],[374,38,386,40],[375,6,387,8],[375,10,387,12],[375,11,387,13,"bump"],[375,15,387,17],[375,16,387,18],[375,17,387,19],[376,6,388,8],[377,6,389,8],[377,13,389,15],[377,14,389,16],[377,18,389,20],[377,19,389,21,"isEOF"],[377,24,389,26],[377,25,389,27],[377,26,389,28],[377,28,389,30],[378,8,390,12],[378,12,390,16,"ch"],[378,14,390,18],[378,17,390,21],[378,21,390,25],[378,22,390,26,"char"],[378,26,390,30],[378,27,390,31],[378,28,390,32],[379,8,391,12],[379,12,391,16,"ch"],[379,14,391,18],[379,19,391,23],[379,21,391,25],[379,22,391,26],[379,33,391,37],[380,10,392,16],[380,14,392,20],[380,18,392,24],[380,19,392,25,"peek"],[380,23,392,29],[380,24,392,30],[380,25,392,31],[380,30,392,36],[380,32,392,38],[380,33,392,39],[380,44,392,50],[381,12,393,20,"codePoints"],[381,22,393,30],[381,23,393,31,"push"],[381,27,393,35],[381,28,393,36],[381,30,393,38],[381,31,393,39],[382,12,394,20],[383,12,395,20],[383,16,395,24],[383,17,395,25,"bump"],[383,21,395,29],[383,22,395,30],[383,23,395,31],[384,10,396,16],[384,11,396,17],[384,17,397,21],[385,12,398,20],[386,12,399,20],[386,16,399,24],[386,17,399,25,"bump"],[386,21,399,29],[386,22,399,30],[386,23,399,31],[387,12,400,20],[388,10,401,16],[389,8,402,12],[389,9,402,13],[389,15,403,17],[390,10,404,16,"codePoints"],[390,20,404,26],[390,21,404,27,"push"],[390,25,404,31],[390,26,404,32,"ch"],[390,28,404,34],[390,29,404,35],[391,8,405,12],[392,8,406,12],[392,12,406,16],[392,13,406,17,"bump"],[392,17,406,21],[392,18,406,22],[392,19,406,23],[393,6,407,8],[394,6,408,8],[394,13,408,15,"fromCodePoint"],[394,26,408,28],[394,27,408,29,"apply"],[394,32,408,34],[394,33,408,35],[394,38,408,40],[394,39,408,41],[394,41,408,43,"codePoints"],[394,51,408,53],[394,52,408,54],[395,4,409,4],[395,5,409,5],[396,4,410,4,"Parser"],[396,10,410,10],[396,11,410,11,"prototype"],[396,20,410,20],[396,21,410,21,"tryParseUnquoted"],[396,37,410,37],[396,40,410,40],[396,50,410,50,"nestingLevel"],[396,62,410,62],[396,64,410,64,"parentArgType"],[396,77,410,77],[396,79,410,79],[397,6,411,8],[397,10,411,12],[397,14,411,16],[397,15,411,17,"isEOF"],[397,20,411,22],[397,21,411,23],[397,22,411,24],[397,24,411,26],[398,8,412,12],[398,15,412,19],[398,19,412,23],[399,6,413,8],[400,6,414,8],[400,10,414,12,"ch"],[400,12,414,14],[400,15,414,17],[400,19,414,21],[400,20,414,22,"char"],[400,24,414,26],[400,25,414,27],[400,26,414,28],[401,6,415,8],[401,10,415,12,"ch"],[401,12,415,14],[401,17,415,19],[401,19,415,21],[401,20,415,22],[401,33,416,12,"ch"],[401,35,416,14],[401,40,416,19],[401,43,416,22],[401,44,416,23],[401,57,417,13,"ch"],[401,59,417,15],[401,64,417,20],[401,66,417,22],[401,67,417,23],[401,81,418,17,"parentArgType"],[401,94,418,30],[401,99,418,35],[401,107,418,43],[401,111,418,47,"parentArgType"],[401,124,418,60],[401,129,418,65],[401,144,418,80],[401,145,418,82],[401,149,419,13,"ch"],[401,151,419,15],[401,156,419,20],[401,159,419,23],[401,160,419,24],[401,173,419,37,"nestingLevel"],[401,185,419,49],[401,188,419,52],[401,189,419,54],[401,191,419,56],[402,8,420,12],[402,15,420,19],[402,19,420,23],[403,6,421,8],[403,7,421,9],[403,13,422,13],[404,8,423,12],[404,12,423,16],[404,13,423,17,"bump"],[404,17,423,21],[404,18,423,22],[404,19,423,23],[405,8,424,12],[405,15,424,19,"fromCodePoint"],[405,28,424,32],[405,29,424,33,"ch"],[405,31,424,35],[405,32,424,36],[406,6,425,8],[407,4,426,4],[407,5,426,5],[408,4,427,4,"Parser"],[408,10,427,10],[408,11,427,11,"prototype"],[408,20,427,20],[408,21,427,21,"parseArgument"],[408,34,427,34],[408,37,427,37],[408,47,427,47,"nestingLevel"],[408,59,427,59],[408,61,427,61,"expectingCloseTag"],[408,78,427,78],[408,80,427,80],[409,6,428,8],[409,10,428,12,"openingBracePosition"],[409,30,428,32],[409,33,428,35],[409,37,428,39],[409,38,428,40,"clonePosition"],[409,51,428,53],[409,52,428,54],[409,53,428,55],[410,6,429,8],[410,10,429,12],[410,11,429,13,"bump"],[410,15,429,17],[410,16,429,18],[410,17,429,19],[410,18,429,20],[410,19,429,21],[411,6,430,8],[411,10,430,12],[411,11,430,13,"bumpSpace"],[411,20,430,22],[411,21,430,23],[411,22,430,24],[412,6,431,8],[412,10,431,12],[412,14,431,16],[412,15,431,17,"isEOF"],[412,20,431,22],[412,21,431,23],[412,22,431,24],[412,24,431,26],[413,8,432,12],[413,15,432,19],[413,19,432,23],[413,20,432,24,"error"],[413,25,432,29],[413,26,432,30,"error_1"],[413,33,432,37],[413,34,432,38,"ErrorKind"],[413,43,432,47],[413,44,432,48,"EXPECT_ARGUMENT_CLOSING_BRACE"],[413,73,432,77],[413,75,432,79,"createLocation"],[413,89,432,93],[413,90,432,94,"openingBracePosition"],[413,110,432,114],[413,112,432,116],[413,116,432,120],[413,117,432,121,"clonePosition"],[413,130,432,134],[413,131,432,135],[413,132,432,136],[413,133,432,137],[413,134,432,138],[414,6,433,8],[415,6,434,8],[415,10,434,12],[415,14,434,16],[415,15,434,17,"char"],[415,19,434,21],[415,20,434,22],[415,21,434,23],[415,26,434,28],[415,29,434,31],[415,30,434,32],[415,41,434,43],[416,8,435,12],[416,12,435,16],[416,13,435,17,"bump"],[416,17,435,21],[416,18,435,22],[416,19,435,23],[417,8,436,12],[417,15,436,19],[417,19,436,23],[417,20,436,24,"error"],[417,25,436,29],[417,26,436,30,"error_1"],[417,33,436,37],[417,34,436,38,"ErrorKind"],[417,43,436,47],[417,44,436,48,"EMPTY_ARGUMENT"],[417,58,436,62],[417,60,436,64,"createLocation"],[417,74,436,78],[417,75,436,79,"openingBracePosition"],[417,95,436,99],[417,97,436,101],[417,101,436,105],[417,102,436,106,"clonePosition"],[417,115,436,119],[417,116,436,120],[417,117,436,121],[417,118,436,122],[417,119,436,123],[418,6,437,8],[419,6,438,8],[420,6,439,8],[420,10,439,12,"value"],[420,15,439,17],[420,18,439,20],[420,22,439,24],[420,23,439,25,"parseIdentifierIfPossible"],[420,48,439,50],[420,49,439,51],[420,50,439,52],[420,51,439,53,"value"],[420,56,439,58],[421,6,440,8],[421,10,440,12],[421,11,440,13,"value"],[421,16,440,18],[421,18,440,20],[422,8,441,12],[422,15,441,19],[422,19,441,23],[422,20,441,24,"error"],[422,25,441,29],[422,26,441,30,"error_1"],[422,33,441,37],[422,34,441,38,"ErrorKind"],[422,43,441,47],[422,44,441,48,"MALFORMED_ARGUMENT"],[422,62,441,66],[422,64,441,68,"createLocation"],[422,78,441,82],[422,79,441,83,"openingBracePosition"],[422,99,441,103],[422,101,441,105],[422,105,441,109],[422,106,441,110,"clonePosition"],[422,119,441,123],[422,120,441,124],[422,121,441,125],[422,122,441,126],[422,123,441,127],[423,6,442,8],[424,6,443,8],[424,10,443,12],[424,11,443,13,"bumpSpace"],[424,20,443,22],[424,21,443,23],[424,22,443,24],[425,6,444,8],[425,10,444,12],[425,14,444,16],[425,15,444,17,"isEOF"],[425,20,444,22],[425,21,444,23],[425,22,444,24],[425,24,444,26],[426,8,445,12],[426,15,445,19],[426,19,445,23],[426,20,445,24,"error"],[426,25,445,29],[426,26,445,30,"error_1"],[426,33,445,37],[426,34,445,38,"ErrorKind"],[426,43,445,47],[426,44,445,48,"EXPECT_ARGUMENT_CLOSING_BRACE"],[426,73,445,77],[426,75,445,79,"createLocation"],[426,89,445,93],[426,90,445,94,"openingBracePosition"],[426,110,445,114],[426,112,445,116],[426,116,445,120],[426,117,445,121,"clonePosition"],[426,130,445,134],[426,131,445,135],[426,132,445,136],[426,133,445,137],[426,134,445,138],[427,6,446,8],[428,6,447,8],[428,14,447,16],[428,18,447,20],[428,19,447,21,"char"],[428,23,447,25],[428,24,447,26],[428,25,447,27],[429,8,448,12],[430,8,449,12],[430,13,449,17],[430,16,449,20],[430,17,449,21],[431,10,449,32],[432,12,450,16],[432,16,450,20],[432,17,450,21,"bump"],[432,21,450,25],[432,22,450,26],[432,23,450,27],[432,24,450,28],[432,25,450,29],[433,12,451,16],[433,19,451,23],[434,14,452,20,"val"],[434,17,452,23],[434,19,452,25],[435,16,453,24,"type"],[435,20,453,28],[435,22,453,30,"types_1"],[435,29,453,37],[435,30,453,38,"TYPE"],[435,34,453,42],[435,35,453,43,"argument"],[435,43,453,51],[436,16,454,24],[437,16,455,24,"value"],[437,21,455,29],[437,23,455,31,"value"],[437,28,455,36],[438,16,456,24,"location"],[438,24,456,32],[438,26,456,34,"createLocation"],[438,40,456,48],[438,41,456,49,"openingBracePosition"],[438,61,456,69],[438,63,456,71],[438,67,456,75],[438,68,456,76,"clonePosition"],[438,81,456,89],[438,82,456,90],[438,83,456,91],[439,14,457,20],[439,15,457,21],[440,14,458,20,"err"],[440,17,458,23],[440,19,458,25],[441,12,459,16],[441,13,459,17],[442,10,460,12],[443,8,461,12],[444,8,462,12],[444,13,462,17],[444,15,462,19],[444,16,462,20],[445,10,462,31],[446,12,463,16],[446,16,463,20],[446,17,463,21,"bump"],[446,21,463,25],[446,22,463,26],[446,23,463,27],[446,24,463,28],[446,25,463,29],[447,12,464,16],[447,16,464,20],[447,17,464,21,"bumpSpace"],[447,26,464,30],[447,27,464,31],[447,28,464,32],[448,12,465,16],[448,16,465,20],[448,20,465,24],[448,21,465,25,"isEOF"],[448,26,465,30],[448,27,465,31],[448,28,465,32],[448,30,465,34],[449,14,466,20],[449,21,466,27],[449,25,466,31],[449,26,466,32,"error"],[449,31,466,37],[449,32,466,38,"error_1"],[449,39,466,45],[449,40,466,46,"ErrorKind"],[449,49,466,55],[449,50,466,56,"EXPECT_ARGUMENT_CLOSING_BRACE"],[449,79,466,85],[449,81,466,87,"createLocation"],[449,95,466,101],[449,96,466,102,"openingBracePosition"],[449,116,466,122],[449,118,466,124],[449,122,466,128],[449,123,466,129,"clonePosition"],[449,136,466,142],[449,137,466,143],[449,138,466,144],[449,139,466,145],[449,140,466,146],[450,12,467,16],[451,12,468,16],[451,19,468,23],[451,23,468,27],[451,24,468,28,"parseArgumentOptions"],[451,44,468,48],[451,45,468,49,"nestingLevel"],[451,57,468,61],[451,59,468,63,"expectingCloseTag"],[451,76,468,80],[451,78,468,82,"value"],[451,83,468,87],[451,85,468,89,"openingBracePosition"],[451,105,468,109],[451,106,468,110],[452,10,469,12],[453,8,470,12],[454,10,471,16],[454,17,471,23],[454,21,471,27],[454,22,471,28,"error"],[454,27,471,33],[454,28,471,34,"error_1"],[454,35,471,41],[454,36,471,42,"ErrorKind"],[454,45,471,51],[454,46,471,52,"MALFORMED_ARGUMENT"],[454,64,471,70],[454,66,471,72,"createLocation"],[454,80,471,86],[454,81,471,87,"openingBracePosition"],[454,101,471,107],[454,103,471,109],[454,107,471,113],[454,108,471,114,"clonePosition"],[454,121,471,127],[454,122,471,128],[454,123,471,129],[454,124,471,130],[454,125,471,131],[455,6,472,8],[456,4,473,4],[456,5,473,5],[457,4,474,4],[458,0,475,0],[459,0,476,0],[460,0,477,0],[461,4,478,4,"Parser"],[461,10,478,10],[461,11,478,11,"prototype"],[461,20,478,20],[461,21,478,21,"parseIdentifierIfPossible"],[461,46,478,46],[461,49,478,49],[461,61,478,61],[462,6,479,8],[462,10,479,12,"startingPosition"],[462,26,479,28],[462,29,479,31],[462,33,479,35],[462,34,479,36,"clonePosition"],[462,47,479,49],[462,48,479,50],[462,49,479,51],[463,6,480,8],[463,10,480,12,"startOffset"],[463,21,480,23],[463,24,480,26],[463,28,480,30],[463,29,480,31,"offset"],[463,35,480,37],[463,36,480,38],[463,37,480,39],[464,6,481,8],[464,10,481,12,"value"],[464,15,481,17],[464,18,481,20,"matchIdentifierAtIndex"],[464,40,481,42],[464,41,481,43],[464,45,481,47],[464,46,481,48,"message"],[464,53,481,55],[464,55,481,57,"startOffset"],[464,66,481,68],[464,67,481,69],[465,6,482,8],[465,10,482,12,"endOffset"],[465,19,482,21],[465,22,482,24,"startOffset"],[465,33,482,35],[465,36,482,38,"value"],[465,41,482,43],[465,42,482,44,"length"],[465,48,482,50],[466,6,483,8],[466,10,483,12],[466,11,483,13,"bumpTo"],[466,17,483,19],[466,18,483,20,"endOffset"],[466,27,483,29],[466,28,483,30],[467,6,484,8],[467,10,484,12,"endPosition"],[467,21,484,23],[467,24,484,26],[467,28,484,30],[467,29,484,31,"clonePosition"],[467,42,484,44],[467,43,484,45],[467,44,484,46],[468,6,485,8],[468,10,485,12,"location"],[468,18,485,20],[468,21,485,23,"createLocation"],[468,35,485,37],[468,36,485,38,"startingPosition"],[468,52,485,54],[468,54,485,56,"endPosition"],[468,65,485,67],[468,66,485,68],[469,6,486,8],[469,13,486,15],[470,8,486,17,"value"],[470,13,486,22],[470,15,486,24,"value"],[470,20,486,29],[471,8,486,31,"location"],[471,16,486,39],[471,18,486,41,"location"],[472,6,486,50],[472,7,486,51],[473,4,487,4],[473,5,487,5],[474,4,488,4,"Parser"],[474,10,488,10],[474,11,488,11,"prototype"],[474,20,488,20],[474,21,488,21,"parseArgumentOptions"],[474,41,488,41],[474,44,488,44],[474,54,488,54,"nestingLevel"],[474,66,488,66],[474,68,488,68,"expectingCloseTag"],[474,85,488,85],[474,87,488,87,"value"],[474,92,488,92],[474,94,488,94,"openingBracePosition"],[474,114,488,114],[474,116,488,116],[475,6,489,8],[475,10,489,12,"_a"],[475,12,489,14],[476,6,490,8],[477,6,491,8],[478,6,492,8],[479,6,493,8],[479,10,493,12,"typeStartPosition"],[479,27,493,29],[479,30,493,32],[479,34,493,36],[479,35,493,37,"clonePosition"],[479,48,493,50],[479,49,493,51],[479,50,493,52],[480,6,494,8],[480,10,494,12,"argType"],[480,17,494,19],[480,20,494,22],[480,24,494,26],[480,25,494,27,"parseIdentifierIfPossible"],[480,50,494,52],[480,51,494,53],[480,52,494,54],[480,53,494,55,"value"],[480,58,494,60],[481,6,495,8],[481,10,495,12,"typeEndPosition"],[481,25,495,27],[481,28,495,30],[481,32,495,34],[481,33,495,35,"clonePosition"],[481,46,495,48],[481,47,495,49],[481,48,495,50],[482,6,496,8],[482,14,496,16,"argType"],[482,21,496,23],[483,8,497,12],[483,13,497,17],[483,15,497,19],[484,10,498,16],[485,10,499,16],[485,17,499,23],[485,21,499,27],[485,22,499,28,"error"],[485,27,499,33],[485,28,499,34,"error_1"],[485,35,499,41],[485,36,499,42,"ErrorKind"],[485,45,499,51],[485,46,499,52,"EXPECT_ARGUMENT_TYPE"],[485,66,499,72],[485,68,499,74,"createLocation"],[485,82,499,88],[485,83,499,89,"typeStartPosition"],[485,100,499,106],[485,102,499,108,"typeEndPosition"],[485,117,499,123],[485,118,499,124],[485,119,499,125],[486,8,500,12],[486,13,500,17],[486,21,500,25],[487,8,501,12],[487,13,501,17],[487,19,501,23],[488,8,502,12],[488,13,502,17],[488,19,502,23],[489,10,502,25],[490,12,503,16],[491,12,504,16],[492,12,505,16],[493,12,506,16],[493,16,506,20],[493,17,506,21,"bumpSpace"],[493,26,506,30],[493,27,506,31],[493,28,506,32],[494,12,507,16],[494,16,507,20,"styleAndLocation"],[494,32,507,36],[494,35,507,39],[494,39,507,43],[495,12,508,16],[495,16,508,20],[495,20,508,24],[495,21,508,25,"bumpIf"],[495,27,508,31],[495,28,508,32],[495,31,508,35],[495,32,508,36],[495,34,508,38],[496,14,509,20],[496,18,509,24],[496,19,509,25,"bumpSpace"],[496,28,509,34],[496,29,509,35],[496,30,509,36],[497,14,510,20],[497,18,510,24,"styleStartPosition"],[497,36,510,42],[497,39,510,45],[497,43,510,49],[497,44,510,50,"clonePosition"],[497,57,510,63],[497,58,510,64],[497,59,510,65],[498,14,511,20],[498,18,511,24,"result"],[498,24,511,30],[498,27,511,33],[498,31,511,37],[498,32,511,38,"parseSimpleArgStyleIfPossible"],[498,61,511,67],[498,62,511,68],[498,63,511,69],[499,14,512,20],[499,18,512,24,"result"],[499,24,512,30],[499,25,512,31,"err"],[499,28,512,34],[499,30,512,36],[500,16,513,24],[500,23,513,31,"result"],[500,29,513,37],[501,14,514,20],[502,14,515,20],[502,18,515,24,"style"],[502,23,515,29],[502,26,515,32,"trimEnd"],[502,33,515,39],[502,34,515,40,"result"],[502,40,515,46],[502,41,515,47,"val"],[502,44,515,50],[502,45,515,51],[503,14,516,20],[503,18,516,24,"style"],[503,23,516,29],[503,24,516,30,"length"],[503,30,516,36],[503,35,516,41],[503,36,516,42],[503,38,516,44],[504,16,517,24],[504,23,517,31],[504,27,517,35],[504,28,517,36,"error"],[504,33,517,41],[504,34,517,42,"error_1"],[504,41,517,49],[504,42,517,50,"ErrorKind"],[504,51,517,59],[504,52,517,60,"EXPECT_ARGUMENT_STYLE"],[504,73,517,81],[504,75,517,83,"createLocation"],[504,89,517,97],[504,90,517,98],[504,94,517,102],[504,95,517,103,"clonePosition"],[504,108,517,116],[504,109,517,117],[504,110,517,118],[504,112,517,120],[504,116,517,124],[504,117,517,125,"clonePosition"],[504,130,517,138],[504,131,517,139],[504,132,517,140],[504,133,517,141],[504,134,517,142],[505,14,518,20],[506,14,519,20],[506,18,519,24,"styleLocation"],[506,31,519,37],[506,34,519,40,"createLocation"],[506,48,519,54],[506,49,519,55,"styleStartPosition"],[506,67,519,73],[506,69,519,75],[506,73,519,79],[506,74,519,80,"clonePosition"],[506,87,519,93],[506,88,519,94],[506,89,519,95],[506,90,519,96],[507,14,520,20,"styleAndLocation"],[507,30,520,36],[507,33,520,39],[508,16,520,41,"style"],[508,21,520,46],[508,23,520,48,"style"],[508,28,520,53],[509,16,520,55,"styleLocation"],[509,29,520,68],[509,31,520,70,"styleLocation"],[510,14,520,84],[510,15,520,85],[511,12,521,16],[512,12,522,16],[512,16,522,20,"argCloseResult"],[512,30,522,34],[512,33,522,37],[512,37,522,41],[512,38,522,42,"tryParseArgumentClose"],[512,59,522,63],[512,60,522,64,"openingBracePosition"],[512,80,522,84],[512,81,522,85],[513,12,523,16],[513,16,523,20,"argCloseResult"],[513,30,523,34],[513,31,523,35,"err"],[513,34,523,38],[513,36,523,40],[514,14,524,20],[514,21,524,27,"argCloseResult"],[514,35,524,41],[515,12,525,16],[516,12,526,16],[516,16,526,20,"location_1"],[516,26,526,30],[516,29,526,33,"createLocation"],[516,43,526,47],[516,44,526,48,"openingBracePosition"],[516,64,526,68],[516,66,526,70],[516,70,526,74],[516,71,526,75,"clonePosition"],[516,84,526,88],[516,85,526,89],[516,86,526,90],[516,87,526,91],[517,12,527,16],[518,12,528,16],[518,16,528,20,"styleAndLocation"],[518,32,528,36],[518,36,528,40,"startsWith"],[518,46,528,50],[518,47,528,51,"styleAndLocation"],[518,63,528,67],[518,68,528,72],[518,72,528,76],[518,76,528,80,"styleAndLocation"],[518,92,528,96],[518,97,528,101],[518,102,528,106],[518,103,528,107],[518,106,528,110],[518,111,528,115],[518,112,528,116],[518,115,528,119,"styleAndLocation"],[518,131,528,135],[518,132,528,136,"style"],[518,137,528,141],[518,139,528,143],[518,143,528,147],[518,145,528,149],[518,146,528,150],[518,147,528,151],[518,149,528,153],[519,14,529,20],[520,14,530,20],[520,18,530,24,"skeleton"],[520,26,530,32],[520,29,530,35,"trimStart"],[520,38,530,44],[520,39,530,45,"styleAndLocation"],[520,55,530,61],[520,56,530,62,"style"],[520,61,530,67],[520,62,530,68,"slice"],[520,67,530,73],[520,68,530,74],[520,69,530,75],[520,70,530,76],[520,71,530,77],[521,14,531,20],[521,18,531,24,"argType"],[521,25,531,31],[521,30,531,36],[521,38,531,44],[521,40,531,46],[522,16,532,24],[522,20,532,28,"result"],[522,26,532,34],[522,29,532,37],[522,33,532,41],[522,34,532,42,"parseNumberSkeletonFromString"],[522,63,532,71],[522,64,532,72,"skeleton"],[522,72,532,80],[522,74,532,82,"styleAndLocation"],[522,90,532,98],[522,91,532,99,"styleLocation"],[522,104,532,112],[522,105,532,113],[523,16,533,24],[523,20,533,28,"result"],[523,26,533,34],[523,27,533,35,"err"],[523,30,533,38],[523,32,533,40],[524,18,534,28],[524,25,534,35,"result"],[524,31,534,41],[525,16,535,24],[526,16,536,24],[526,23,536,31],[527,18,537,28,"val"],[527,21,537,31],[527,23,537,33],[528,20,537,35,"type"],[528,24,537,39],[528,26,537,41,"types_1"],[528,33,537,48],[528,34,537,49,"TYPE"],[528,38,537,53],[528,39,537,54,"number"],[528,45,537,60],[529,20,537,62,"value"],[529,25,537,67],[529,27,537,69,"value"],[529,32,537,74],[530,20,537,76,"location"],[530,28,537,84],[530,30,537,86,"location_1"],[530,40,537,96],[531,20,537,98,"style"],[531,25,537,103],[531,27,537,105,"result"],[531,33,537,111],[531,34,537,112,"val"],[532,18,537,116],[532,19,537,117],[533,18,538,28,"err"],[533,21,538,31],[533,23,538,33],[534,16,539,24],[534,17,539,25],[535,14,540,20],[535,15,540,21],[535,21,541,25],[536,16,542,24],[536,20,542,28,"skeleton"],[536,28,542,36],[536,29,542,37,"length"],[536,35,542,43],[536,40,542,48],[536,41,542,49],[536,43,542,51],[537,18,543,28],[537,25,543,35],[537,29,543,39],[537,30,543,40,"error"],[537,35,543,45],[537,36,543,46,"error_1"],[537,43,543,53],[537,44,543,54,"ErrorKind"],[537,53,543,63],[537,54,543,64,"EXPECT_DATE_TIME_SKELETON"],[537,79,543,89],[537,81,543,91,"location_1"],[537,91,543,101],[537,92,543,102],[538,16,544,24],[539,16,545,24],[539,20,545,28,"dateTimePattern"],[539,35,545,43],[539,38,545,46,"skeleton"],[539,46,545,54],[540,16,546,24],[541,16,547,24],[542,16,548,24],[543,16,549,24],[543,20,549,28],[543,24,549,32],[543,25,549,33,"locale"],[543,31,549,39],[543,33,549,41],[544,18,550,28,"dateTimePattern"],[544,33,550,43],[544,36,550,46],[544,37,550,47],[544,38,550,48],[544,40,550,50,"date_time_pattern_generator_1"],[544,69,550,79],[544,70,550,80,"getBestPattern"],[544,84,550,94],[544,86,550,96,"skeleton"],[544,94,550,104],[544,96,550,106],[544,100,550,110],[544,101,550,111,"locale"],[544,107,550,117],[544,108,550,118],[545,16,551,24],[546,16,552,24],[546,20,552,28,"style"],[546,25,552,33],[546,28,552,36],[547,18,553,28,"type"],[547,22,553,32],[547,24,553,34,"types_1"],[547,31,553,41],[547,32,553,42,"SKELETON_TYPE"],[547,45,553,55],[547,46,553,56,"dateTime"],[547,54,553,64],[548,18,554,28,"pattern"],[548,25,554,35],[548,27,554,37,"dateTimePattern"],[548,42,554,52],[549,18,555,28,"location"],[549,26,555,36],[549,28,555,38,"styleAndLocation"],[549,44,555,54],[549,45,555,55,"styleLocation"],[549,58,555,68],[550,18,556,28,"parsedOptions"],[550,31,556,41],[550,33,556,43],[550,37,556,47],[550,38,556,48,"shouldParseSkeletons"],[550,58,556,68],[550,61,557,34],[550,62,557,35],[550,63,557,36],[550,65,557,38,"icu_skeleton_parser_1"],[550,86,557,59],[550,87,557,60,"parseDateTimeSkeleton"],[550,108,557,81],[550,110,557,83,"dateTimePattern"],[550,125,557,98],[550,126,557,99],[550,129,558,34],[550,130,558,35],[551,16,559,24],[551,17,559,25],[552,16,560,24],[552,20,560,28,"type"],[552,24,560,32],[552,27,560,35,"argType"],[552,34,560,42],[552,39,560,47],[552,45,560,53],[552,48,560,56,"types_1"],[552,55,560,63],[552,56,560,64,"TYPE"],[552,60,560,68],[552,61,560,69,"date"],[552,65,560,73],[552,68,560,76,"types_1"],[552,75,560,83],[552,76,560,84,"TYPE"],[552,80,560,88],[552,81,560,89,"time"],[552,85,560,93],[553,16,561,24],[553,23,561,31],[554,18,562,28,"val"],[554,21,562,31],[554,23,562,33],[555,20,562,35,"type"],[555,24,562,39],[555,26,562,41,"type"],[555,30,562,45],[556,20,562,47,"value"],[556,25,562,52],[556,27,562,54,"value"],[556,32,562,59],[557,20,562,61,"location"],[557,28,562,69],[557,30,562,71,"location_1"],[557,40,562,81],[558,20,562,83,"style"],[558,25,562,88],[558,27,562,90,"style"],[559,18,562,96],[559,19,562,97],[560,18,563,28,"err"],[560,21,563,31],[560,23,563,33],[561,16,564,24],[561,17,564,25],[562,14,565,20],[563,12,566,16],[564,12,567,16],[565,12,568,16],[565,19,568,23],[566,14,569,20,"val"],[566,17,569,23],[566,19,569,25],[567,16,570,24,"type"],[567,20,570,28],[567,22,570,30,"argType"],[567,29,570,37],[567,34,570,42],[567,42,570,50],[567,45,571,30,"types_1"],[567,52,571,37],[567,53,571,38,"TYPE"],[567,57,571,42],[567,58,571,43,"number"],[567,64,571,49],[567,67,572,30,"argType"],[567,74,572,37],[567,79,572,42],[567,85,572,48],[567,88,573,34,"types_1"],[567,95,573,41],[567,96,573,42,"TYPE"],[567,100,573,46],[567,101,573,47,"date"],[567,105,573,51],[567,108,574,34,"types_1"],[567,115,574,41],[567,116,574,42,"TYPE"],[567,120,574,46],[567,121,574,47,"time"],[567,125,574,51],[568,16,575,24,"value"],[568,21,575,29],[568,23,575,31,"value"],[568,28,575,36],[569,16,576,24,"location"],[569,24,576,32],[569,26,576,34,"location_1"],[569,36,576,44],[570,16,577,24,"style"],[570,21,577,29],[570,23,577,31],[570,24,577,32,"_a"],[570,26,577,34],[570,29,577,37,"styleAndLocation"],[570,45,577,53],[570,50,577,58],[570,54,577,62],[570,58,577,66,"styleAndLocation"],[570,74,577,82],[570,79,577,87],[570,84,577,92],[570,85,577,93],[570,88,577,96],[570,93,577,101],[570,94,577,102],[570,97,577,105,"styleAndLocation"],[570,113,577,121],[570,114,577,122,"style"],[570,119,577,127],[570,125,577,133],[570,129,577,137],[570,133,577,141,"_a"],[570,135,577,143],[570,140,577,148],[570,145,577,153],[570,146,577,154],[570,149,577,157,"_a"],[570,151,577,159],[570,154,577,162],[571,14,578,20],[571,15,578,21],[572,14,579,20,"err"],[572,17,579,23],[572,19,579,25],[573,12,580,16],[573,13,580,17],[574,10,581,12],[575,8,582,12],[575,13,582,17],[575,21,582,25],[576,8,583,12],[576,13,583,17],[576,28,583,32],[577,8,584,12],[577,13,584,17],[577,21,584,25],[578,10,584,27],[579,12,585,16],[580,12,586,16],[581,12,587,16],[582,12,588,16],[582,16,588,20,"typeEndPosition_1"],[582,33,588,37],[582,36,588,40],[582,40,588,44],[582,41,588,45,"clonePosition"],[582,54,588,58],[582,55,588,59],[582,56,588,60],[583,12,589,16],[583,16,589,20],[583,17,589,21,"bumpSpace"],[583,26,589,30],[583,27,589,31],[583,28,589,32],[584,12,590,16],[584,16,590,20],[584,17,590,21],[584,21,590,25],[584,22,590,26,"bumpIf"],[584,28,590,32],[584,29,590,33],[584,32,590,36],[584,33,590,37],[584,35,590,39],[585,14,591,20],[585,21,591,27],[585,25,591,31],[585,26,591,32,"error"],[585,31,591,37],[585,32,591,38,"error_1"],[585,39,591,45],[585,40,591,46,"ErrorKind"],[585,49,591,55],[585,50,591,56,"EXPECT_SELECT_ARGUMENT_OPTIONS"],[585,80,591,86],[585,82,591,88,"createLocation"],[585,96,591,102],[585,97,591,103,"typeEndPosition_1"],[585,114,591,120],[585,116,591,122,"tslib_1"],[585,123,591,129],[585,124,591,130,"__assign"],[585,132,591,138],[585,133,591,139],[585,134,591,140],[585,135,591,141],[585,137,591,143,"typeEndPosition_1"],[585,154,591,160],[585,155,591,161],[585,156,591,162],[585,157,591,163],[586,12,592,16],[587,12,593,16],[587,16,593,20],[587,17,593,21,"bumpSpace"],[587,26,593,30],[587,27,593,31],[587,28,593,32],[588,12,594,16],[589,12,595,16],[590,12,596,16],[591,12,597,16],[592,12,598,16],[593,12,599,16],[594,12,600,16],[595,12,601,16],[596,12,602,16],[596,16,602,20,"identifierAndLocation"],[596,37,602,41],[596,40,602,44],[596,44,602,48],[596,45,602,49,"parseIdentifierIfPossible"],[596,70,602,74],[596,71,602,75],[596,72,602,76],[597,12,603,16],[597,16,603,20,"pluralOffset"],[597,28,603,32],[597,31,603,35],[597,32,603,36],[598,12,604,16],[598,16,604,20,"argType"],[598,23,604,27],[598,28,604,32],[598,36,604,40],[598,40,604,44,"identifierAndLocation"],[598,61,604,65],[598,62,604,66,"value"],[598,67,604,71],[598,72,604,76],[598,80,604,84],[598,82,604,86],[599,14,605,20],[599,18,605,24],[599,19,605,25],[599,23,605,29],[599,24,605,30,"bumpIf"],[599,30,605,36],[599,31,605,37],[599,34,605,40],[599,35,605,41],[599,37,605,43],[600,16,606,24],[600,23,606,31],[600,27,606,35],[600,28,606,36,"error"],[600,33,606,41],[600,34,606,42,"error_1"],[600,41,606,49],[600,42,606,50,"ErrorKind"],[600,51,606,59],[600,52,606,60,"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"],[600,87,606,95],[600,89,606,97,"createLocation"],[600,103,606,111],[600,104,606,112],[600,108,606,116],[600,109,606,117,"clonePosition"],[600,122,606,130],[600,123,606,131],[600,124,606,132],[600,126,606,134],[600,130,606,138],[600,131,606,139,"clonePosition"],[600,144,606,152],[600,145,606,153],[600,146,606,154],[600,147,606,155],[600,148,606,156],[601,14,607,20],[602,14,608,20],[602,18,608,24],[602,19,608,25,"bumpSpace"],[602,28,608,34],[602,29,608,35],[602,30,608,36],[603,14,609,20],[603,18,609,24,"result"],[603,24,609,30],[603,27,609,33],[603,31,609,37],[603,32,609,38,"tryParseDecimalInteger"],[603,54,609,60],[603,55,609,61,"error_1"],[603,62,609,68],[603,63,609,69,"ErrorKind"],[603,72,609,78],[603,73,609,79,"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"],[603,108,609,114],[603,110,609,116,"error_1"],[603,117,609,123],[603,118,609,124,"ErrorKind"],[603,127,609,133],[603,128,609,134,"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"],[603,164,609,170],[603,165,609,171],[604,14,610,20],[604,18,610,24,"result"],[604,24,610,30],[604,25,610,31,"err"],[604,28,610,34],[604,30,610,36],[605,16,611,24],[605,23,611,31,"result"],[605,29,611,37],[606,14,612,20],[607,14,613,20],[608,14,614,20],[608,18,614,24],[608,19,614,25,"bumpSpace"],[608,28,614,34],[608,29,614,35],[608,30,614,36],[609,14,615,20,"identifierAndLocation"],[609,35,615,41],[609,38,615,44],[609,42,615,48],[609,43,615,49,"parseIdentifierIfPossible"],[609,68,615,74],[609,69,615,75],[609,70,615,76],[610,14,616,20,"pluralOffset"],[610,26,616,32],[610,29,616,35,"result"],[610,35,616,41],[610,36,616,42,"val"],[610,39,616,45],[611,12,617,16],[612,12,618,16],[612,16,618,20,"optionsResult"],[612,29,618,33],[612,32,618,36],[612,36,618,40],[612,37,618,41,"tryParsePluralOrSelectOptions"],[612,66,618,70],[612,67,618,71,"nestingLevel"],[612,79,618,83],[612,81,618,85,"argType"],[612,88,618,92],[612,90,618,94,"expectingCloseTag"],[612,107,618,111],[612,109,618,113,"identifierAndLocation"],[612,130,618,134],[612,131,618,135],[613,12,619,16],[613,16,619,20,"optionsResult"],[613,29,619,33],[613,30,619,34,"err"],[613,33,619,37],[613,35,619,39],[614,14,620,20],[614,21,620,27,"optionsResult"],[614,34,620,40],[615,12,621,16],[616,12,622,16],[616,16,622,20,"argCloseResult"],[616,30,622,34],[616,33,622,37],[616,37,622,41],[616,38,622,42,"tryParseArgumentClose"],[616,59,622,63],[616,60,622,64,"openingBracePosition"],[616,80,622,84],[616,81,622,85],[617,12,623,16],[617,16,623,20,"argCloseResult"],[617,30,623,34],[617,31,623,35,"err"],[617,34,623,38],[617,36,623,40],[618,14,624,20],[618,21,624,27,"argCloseResult"],[618,35,624,41],[619,12,625,16],[620,12,626,16],[620,16,626,20,"location_2"],[620,26,626,30],[620,29,626,33,"createLocation"],[620,43,626,47],[620,44,626,48,"openingBracePosition"],[620,64,626,68],[620,66,626,70],[620,70,626,74],[620,71,626,75,"clonePosition"],[620,84,626,88],[620,85,626,89],[620,86,626,90],[620,87,626,91],[621,12,627,16],[621,16,627,20,"argType"],[621,23,627,27],[621,28,627,32],[621,36,627,40],[621,38,627,42],[622,14,628,20],[622,21,628,27],[623,16,629,24,"val"],[623,19,629,27],[623,21,629,29],[624,18,630,28,"type"],[624,22,630,32],[624,24,630,34,"types_1"],[624,31,630,41],[624,32,630,42,"TYPE"],[624,36,630,46],[624,37,630,47,"select"],[624,43,630,53],[625,18,631,28,"value"],[625,23,631,33],[625,25,631,35,"value"],[625,30,631,40],[626,18,632,28,"options"],[626,25,632,35],[626,27,632,37,"fromEntries"],[626,38,632,48],[626,39,632,49,"optionsResult"],[626,52,632,62],[626,53,632,63,"val"],[626,56,632,66],[626,57,632,67],[627,18,633,28,"location"],[627,26,633,36],[627,28,633,38,"location_2"],[628,16,634,24],[628,17,634,25],[629,16,635,24,"err"],[629,19,635,27],[629,21,635,29],[630,14,636,20],[630,15,636,21],[631,12,637,16],[631,13,637,17],[631,19,638,21],[632,14,639,20],[632,21,639,27],[633,16,640,24,"val"],[633,19,640,27],[633,21,640,29],[634,18,641,28,"type"],[634,22,641,32],[634,24,641,34,"types_1"],[634,31,641,41],[634,32,641,42,"TYPE"],[634,36,641,46],[634,37,641,47,"plural"],[634,43,641,53],[635,18,642,28,"value"],[635,23,642,33],[635,25,642,35,"value"],[635,30,642,40],[636,18,643,28,"options"],[636,25,643,35],[636,27,643,37,"fromEntries"],[636,38,643,48],[636,39,643,49,"optionsResult"],[636,52,643,62],[636,53,643,63,"val"],[636,56,643,66],[636,57,643,67],[637,18,644,28,"offset"],[637,24,644,34],[637,26,644,36,"pluralOffset"],[637,38,644,48],[638,18,645,28,"pluralType"],[638,28,645,38],[638,30,645,40,"argType"],[638,37,645,47],[638,42,645,52],[638,50,645,60],[638,53,645,63],[638,63,645,73],[638,66,645,76],[638,75,645,85],[639,18,646,28,"location"],[639,26,646,36],[639,28,646,38,"location_2"],[640,16,647,24],[640,17,647,25],[641,16,648,24,"err"],[641,19,648,27],[641,21,648,29],[642,14,649,20],[642,15,649,21],[643,12,650,16],[644,10,651,12],[645,8,652,12],[646,10,653,16],[646,17,653,23],[646,21,653,27],[646,22,653,28,"error"],[646,27,653,33],[646,28,653,34,"error_1"],[646,35,653,41],[646,36,653,42,"ErrorKind"],[646,45,653,51],[646,46,653,52,"INVALID_ARGUMENT_TYPE"],[646,67,653,73],[646,69,653,75,"createLocation"],[646,83,653,89],[646,84,653,90,"typeStartPosition"],[646,101,653,107],[646,103,653,109,"typeEndPosition"],[646,118,653,124],[646,119,653,125],[646,120,653,126],[647,6,654,8],[648,4,655,4],[648,5,655,5],[649,4,656,4,"Parser"],[649,10,656,10],[649,11,656,11,"prototype"],[649,20,656,20],[649,21,656,21,"tryParseArgumentClose"],[649,42,656,42],[649,45,656,45],[649,55,656,55,"openingBracePosition"],[649,75,656,75],[649,77,656,77],[650,6,657,8],[651,6,658,8],[652,6,659,8],[652,10,659,12],[652,14,659,16],[652,15,659,17,"isEOF"],[652,20,659,22],[652,21,659,23],[652,22,659,24],[652,26,659,28],[652,30,659,32],[652,31,659,33,"char"],[652,35,659,37],[652,36,659,38],[652,37,659,39],[652,42,659,44],[652,45,659,47],[652,46,659,48],[652,57,659,59],[653,8,660,12],[653,15,660,19],[653,19,660,23],[653,20,660,24,"error"],[653,25,660,29],[653,26,660,30,"error_1"],[653,33,660,37],[653,34,660,38,"ErrorKind"],[653,43,660,47],[653,44,660,48,"EXPECT_ARGUMENT_CLOSING_BRACE"],[653,73,660,77],[653,75,660,79,"createLocation"],[653,89,660,93],[653,90,660,94,"openingBracePosition"],[653,110,660,114],[653,112,660,116],[653,116,660,120],[653,117,660,121,"clonePosition"],[653,130,660,134],[653,131,660,135],[653,132,660,136],[653,133,660,137],[653,134,660,138],[654,6,661,8],[655,6,662,8],[655,10,662,12],[655,11,662,13,"bump"],[655,15,662,17],[655,16,662,18],[655,17,662,19],[655,18,662,20],[655,19,662,21],[656,6,663,8],[656,13,663,15],[657,8,663,17,"val"],[657,11,663,20],[657,13,663,22],[657,17,663,26],[658,8,663,28,"err"],[658,11,663,31],[658,13,663,33],[659,6,663,38],[659,7,663,39],[660,4,664,4],[660,5,664,5],[661,4,665,4],[662,0,666,0],[663,0,667,0],[664,4,668,4,"Parser"],[664,10,668,10],[664,11,668,11,"prototype"],[664,20,668,20],[664,21,668,21,"parseSimpleArgStyleIfPossible"],[664,50,668,50],[664,53,668,53],[664,65,668,65],[665,6,669,8],[665,10,669,12,"nestedBraces"],[665,22,669,24],[665,25,669,27],[665,26,669,28],[666,6,670,8],[666,10,670,12,"startPosition"],[666,23,670,25],[666,26,670,28],[666,30,670,32],[666,31,670,33,"clonePosition"],[666,44,670,46],[666,45,670,47],[666,46,670,48],[667,6,671,8],[667,13,671,15],[667,14,671,16],[667,18,671,20],[667,19,671,21,"isEOF"],[667,24,671,26],[667,25,671,27],[667,26,671,28],[667,28,671,30],[668,8,672,12],[668,12,672,16,"ch"],[668,14,672,18],[668,17,672,21],[668,21,672,25],[668,22,672,26,"char"],[668,26,672,30],[668,27,672,31],[668,28,672,32],[669,8,673,12],[669,16,673,20,"ch"],[669,18,673,22],[670,10,674,16],[670,15,674,21],[670,17,674,23],[670,18,674,24],[671,12,674,35],[672,14,675,20],[673,14,676,20],[674,14,677,20],[674,18,677,24],[674,19,677,25,"bump"],[674,23,677,29],[674,24,677,30],[674,25,677,31],[675,14,678,20],[675,18,678,24,"apostrophePosition"],[675,36,678,42],[675,39,678,45],[675,43,678,49],[675,44,678,50,"clonePosition"],[675,57,678,63],[675,58,678,64],[675,59,678,65],[676,14,679,20],[676,18,679,24],[676,19,679,25],[676,23,679,29],[676,24,679,30,"bumpUntil"],[676,33,679,39],[676,34,679,40],[676,37,679,43],[676,38,679,44],[676,40,679,46],[677,16,680,24],[677,23,680,31],[677,27,680,35],[677,28,680,36,"error"],[677,33,680,41],[677,34,680,42,"error_1"],[677,41,680,49],[677,42,680,50,"ErrorKind"],[677,51,680,59],[677,52,680,60,"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"],[677,84,680,92],[677,86,680,94,"createLocation"],[677,100,680,108],[677,101,680,109,"apostrophePosition"],[677,119,680,127],[677,121,680,129],[677,125,680,133],[677,126,680,134,"clonePosition"],[677,139,680,147],[677,140,680,148],[677,141,680,149],[677,142,680,150],[677,143,680,151],[678,14,681,20],[679,14,682,20],[679,18,682,24],[679,19,682,25,"bump"],[679,23,682,29],[679,24,682,30],[679,25,682,31],[680,14,683,20],[681,12,684,16],[682,10,685,16],[682,15,685,21],[682,18,685,24],[682,19,685,25],[683,12,685,36],[684,14,686,20,"nestedBraces"],[684,26,686,32],[684,30,686,36],[684,31,686,37],[685,14,687,20],[685,18,687,24],[685,19,687,25,"bump"],[685,23,687,29],[685,24,687,30],[685,25,687,31],[686,14,688,20],[687,12,689,16],[688,10,690,16],[688,15,690,21],[688,18,690,24],[688,19,690,25],[689,12,690,36],[690,14,691,20],[690,18,691,24,"nestedBraces"],[690,30,691,36],[690,33,691,39],[690,34,691,40],[690,36,691,42],[691,16,692,24,"nestedBraces"],[691,28,692,36],[691,32,692,40],[691,33,692,41],[692,14,693,20],[692,15,693,21],[692,21,694,25],[693,16,695,24],[693,23,695,31],[694,18,696,28,"val"],[694,21,696,31],[694,23,696,33],[694,27,696,37],[694,28,696,38,"message"],[694,35,696,45],[694,36,696,46,"slice"],[694,41,696,51],[694,42,696,52,"startPosition"],[694,55,696,65],[694,56,696,66,"offset"],[694,62,696,72],[694,64,696,74],[694,68,696,78],[694,69,696,79,"offset"],[694,75,696,85],[694,76,696,86],[694,77,696,87],[694,78,696,88],[695,18,697,28,"err"],[695,21,697,31],[695,23,697,33],[696,16,698,24],[696,17,698,25],[697,14,699,20],[698,14,700,20],[699,12,701,16],[700,10,702,16],[701,12,703,20],[701,16,703,24],[701,17,703,25,"bump"],[701,21,703,29],[701,22,703,30],[701,23,703,31],[702,12,704,20],[703,8,705,12],[704,6,706,8],[705,6,707,8],[705,13,707,15],[706,8,708,12,"val"],[706,11,708,15],[706,13,708,17],[706,17,708,21],[706,18,708,22,"message"],[706,25,708,29],[706,26,708,30,"slice"],[706,31,708,35],[706,32,708,36,"startPosition"],[706,45,708,49],[706,46,708,50,"offset"],[706,52,708,56],[706,54,708,58],[706,58,708,62],[706,59,708,63,"offset"],[706,65,708,69],[706,66,708,70],[706,67,708,71],[706,68,708,72],[707,8,709,12,"err"],[707,11,709,15],[707,13,709,17],[708,6,710,8],[708,7,710,9],[709,4,711,4],[709,5,711,5],[710,4,712,4,"Parser"],[710,10,712,10],[710,11,712,11,"prototype"],[710,20,712,20],[710,21,712,21,"parseNumberSkeletonFromString"],[710,50,712,50],[710,53,712,53],[710,63,712,63,"skeleton"],[710,71,712,71],[710,73,712,73,"location"],[710,81,712,81],[710,83,712,83],[711,6,713,8],[711,10,713,12,"tokens"],[711,16,713,18],[711,19,713,21],[711,21,713,23],[712,6,714,8],[712,10,714,12],[713,8,715,12,"tokens"],[713,14,715,18],[713,17,715,21],[713,18,715,22],[713,19,715,23],[713,21,715,25,"icu_skeleton_parser_1"],[713,42,715,46],[713,43,715,47,"parseNumberSkeletonFromString"],[713,72,715,76],[713,74,715,78,"skeleton"],[713,82,715,86],[713,83,715,87],[714,6,716,8],[714,7,716,9],[714,8,717,8],[714,15,717,15,"e"],[714,16,717,16],[714,18,717,18],[715,8,718,12],[715,15,718,19],[715,19,718,23],[715,20,718,24,"error"],[715,25,718,29],[715,26,718,30,"error_1"],[715,33,718,37],[715,34,718,38,"ErrorKind"],[715,43,718,47],[715,44,718,48,"INVALID_NUMBER_SKELETON"],[715,67,718,71],[715,69,718,73,"location"],[715,77,718,81],[715,78,718,82],[716,6,719,8],[717,6,720,8],[717,13,720,15],[718,8,721,12,"val"],[718,11,721,15],[718,13,721,17],[719,10,722,16,"type"],[719,14,722,20],[719,16,722,22,"types_1"],[719,23,722,29],[719,24,722,30,"SKELETON_TYPE"],[719,37,722,43],[719,38,722,44,"number"],[719,44,722,50],[720,10,723,16,"tokens"],[720,16,723,22],[720,18,723,24,"tokens"],[720,24,723,30],[721,10,724,16,"location"],[721,18,724,24],[721,20,724,26,"location"],[721,28,724,34],[722,10,725,16,"parsedOptions"],[722,23,725,29],[722,25,725,31],[722,29,725,35],[722,30,725,36,"shouldParseSkeletons"],[722,50,725,56],[722,53,726,22],[722,54,726,23],[722,55,726,24],[722,57,726,26,"icu_skeleton_parser_1"],[722,78,726,47],[722,79,726,48,"parseNumberSkeleton"],[722,98,726,67],[722,100,726,69,"tokens"],[722,106,726,75],[722,107,726,76],[722,110,727,22],[722,111,727,23],[723,8,728,12],[723,9,728,13],[724,8,729,12,"err"],[724,11,729,15],[724,13,729,17],[725,6,730,8],[725,7,730,9],[726,4,731,4],[726,5,731,5],[727,4,732,4],[728,0,733,0],[729,0,734,0],[730,0,735,0],[731,0,736,0],[732,0,737,0],[733,0,738,0],[734,0,739,0],[735,0,740,0],[736,0,741,0],[737,4,742,4,"Parser"],[737,10,742,10],[737,11,742,11,"prototype"],[737,20,742,20],[737,21,742,21,"tryParsePluralOrSelectOptions"],[737,50,742,50],[737,53,742,53],[737,63,742,63,"nestingLevel"],[737,75,742,75],[737,77,742,77,"parentArgType"],[737,90,742,90],[737,92,742,92,"expectCloseTag"],[737,106,742,106],[737,108,742,108,"parsedFirstIdentifier"],[737,129,742,129],[737,131,742,131],[738,6,743,8],[738,10,743,12,"_a"],[738,12,743,14],[739,6,744,8],[739,10,744,12,"hasOtherClause"],[739,24,744,26],[739,27,744,29],[739,32,744,34],[740,6,745,8],[740,10,745,12,"options"],[740,17,745,19],[740,20,745,22],[740,22,745,24],[741,6,746,8],[741,10,746,12,"parsedSelectors"],[741,25,746,27],[741,28,746,30],[741,32,746,34,"Set"],[741,35,746,37],[741,36,746,38],[741,37,746,39],[742,6,747,8],[742,10,747,12,"selector"],[742,18,747,20],[742,21,747,23,"parsedFirstIdentifier"],[742,42,747,44],[742,43,747,45,"value"],[742,48,747,50],[743,8,747,52,"selectorLocation"],[743,24,747,68],[743,27,747,71,"parsedFirstIdentifier"],[743,48,747,92],[743,49,747,93,"location"],[743,57,747,101],[744,6,748,8],[745,6,749,8],[746,6,750,8],[747,6,751,8],[747,13,751,15],[747,17,751,19],[747,19,751,21],[748,8,752,12],[748,12,752,16,"selector"],[748,20,752,24],[748,21,752,25,"length"],[748,27,752,31],[748,32,752,36],[748,33,752,37],[748,35,752,39],[749,10,753,16],[749,14,753,20,"startPosition"],[749,27,753,33],[749,30,753,36],[749,34,753,40],[749,35,753,41,"clonePosition"],[749,48,753,54],[749,49,753,55],[749,50,753,56],[750,10,754,16],[750,14,754,20,"parentArgType"],[750,27,754,33],[750,32,754,38],[750,40,754,46],[750,44,754,50],[750,48,754,54],[750,49,754,55,"bumpIf"],[750,55,754,61],[750,56,754,62],[750,59,754,65],[750,60,754,66],[750,62,754,68],[751,12,755,20],[752,12,756,20],[752,16,756,24,"result"],[752,22,756,30],[752,25,756,33],[752,29,756,37],[752,30,756,38,"tryParseDecimalInteger"],[752,52,756,60],[752,53,756,61,"error_1"],[752,60,756,68],[752,61,756,69,"ErrorKind"],[752,70,756,78],[752,71,756,79,"EXPECT_PLURAL_ARGUMENT_SELECTOR"],[752,102,756,110],[752,104,756,112,"error_1"],[752,111,756,119],[752,112,756,120,"ErrorKind"],[752,121,756,129],[752,122,756,130,"INVALID_PLURAL_ARGUMENT_SELECTOR"],[752,154,756,162],[752,155,756,163],[753,12,757,20],[753,16,757,24,"result"],[753,22,757,30],[753,23,757,31,"err"],[753,26,757,34],[753,28,757,36],[754,14,758,24],[754,21,758,31,"result"],[754,27,758,37],[755,12,759,20],[756,12,760,20,"selectorLocation"],[756,28,760,36],[756,31,760,39,"createLocation"],[756,45,760,53],[756,46,760,54,"startPosition"],[756,59,760,67],[756,61,760,69],[756,65,760,73],[756,66,760,74,"clonePosition"],[756,79,760,87],[756,80,760,88],[756,81,760,89],[756,82,760,90],[757,12,761,20,"selector"],[757,20,761,28],[757,23,761,31],[757,27,761,35],[757,28,761,36,"message"],[757,35,761,43],[757,36,761,44,"slice"],[757,41,761,49],[757,42,761,50,"startPosition"],[757,55,761,63],[757,56,761,64,"offset"],[757,62,761,70],[757,64,761,72],[757,68,761,76],[757,69,761,77,"offset"],[757,75,761,83],[757,76,761,84],[757,77,761,85],[757,78,761,86],[758,10,762,16],[758,11,762,17],[758,17,763,21],[759,12,764,20],[760,10,765,16],[761,8,766,12],[762,8,767,12],[763,8,768,12],[763,12,768,16,"parsedSelectors"],[763,27,768,31],[763,28,768,32,"has"],[763,31,768,35],[763,32,768,36,"selector"],[763,40,768,44],[763,41,768,45],[763,43,768,47],[764,10,769,16],[764,17,769,23],[764,21,769,27],[764,22,769,28,"error"],[764,27,769,33],[764,28,769,34,"parentArgType"],[764,41,769,47],[764,46,769,52],[764,54,769,60],[764,57,770,22,"error_1"],[764,64,770,29],[764,65,770,30,"ErrorKind"],[764,74,770,39],[764,75,770,40,"DUPLICATE_SELECT_ARGUMENT_SELECTOR"],[764,109,770,74],[764,112,771,22,"error_1"],[764,119,771,29],[764,120,771,30,"ErrorKind"],[764,129,771,39],[764,130,771,40,"DUPLICATE_PLURAL_ARGUMENT_SELECTOR"],[764,164,771,74],[764,166,771,76,"selectorLocation"],[764,182,771,92],[764,183,771,93],[765,8,772,12],[766,8,773,12],[766,12,773,16,"selector"],[766,20,773,24],[766,25,773,29],[766,32,773,36],[766,34,773,38],[767,10,774,16,"hasOtherClause"],[767,24,774,30],[767,27,774,33],[767,31,774,37],[768,8,775,12],[769,8,776,12],[770,8,777,12],[771,8,778,12],[772,8,779,12],[772,12,779,16],[772,13,779,17,"bumpSpace"],[772,22,779,26],[772,23,779,27],[772,24,779,28],[773,8,780,12],[773,12,780,16,"openingBracePosition"],[773,32,780,36],[773,35,780,39],[773,39,780,43],[773,40,780,44,"clonePosition"],[773,53,780,57],[773,54,780,58],[773,55,780,59],[774,8,781,12],[774,12,781,16],[774,13,781,17],[774,17,781,21],[774,18,781,22,"bumpIf"],[774,24,781,28],[774,25,781,29],[774,28,781,32],[774,29,781,33],[774,31,781,35],[775,10,782,16],[775,17,782,23],[775,21,782,27],[775,22,782,28,"error"],[775,27,782,33],[775,28,782,34,"parentArgType"],[775,41,782,47],[775,46,782,52],[775,54,782,60],[775,57,783,22,"error_1"],[775,64,783,29],[775,65,783,30,"ErrorKind"],[775,74,783,39],[775,75,783,40,"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"],[775,115,783,80],[775,118,784,22,"error_1"],[775,125,784,29],[775,126,784,30,"ErrorKind"],[775,135,784,39],[775,136,784,40,"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"],[775,176,784,80],[775,178,784,82,"createLocation"],[775,192,784,96],[775,193,784,97],[775,197,784,101],[775,198,784,102,"clonePosition"],[775,211,784,115],[775,212,784,116],[775,213,784,117],[775,215,784,119],[775,219,784,123],[775,220,784,124,"clonePosition"],[775,233,784,137],[775,234,784,138],[775,235,784,139],[775,236,784,140],[775,237,784,141],[776,8,785,12],[777,8,786,12],[777,12,786,16,"fragmentResult"],[777,26,786,30],[777,29,786,33],[777,33,786,37],[777,34,786,38,"parseMessage"],[777,46,786,50],[777,47,786,51,"nestingLevel"],[777,59,786,63],[777,62,786,66],[777,63,786,67],[777,65,786,69,"parentArgType"],[777,78,786,82],[777,80,786,84,"expectCloseTag"],[777,94,786,98],[777,95,786,99],[778,8,787,12],[778,12,787,16,"fragmentResult"],[778,26,787,30],[778,27,787,31,"err"],[778,30,787,34],[778,32,787,36],[779,10,788,16],[779,17,788,23,"fragmentResult"],[779,31,788,37],[780,8,789,12],[781,8,790,12],[781,12,790,16,"argCloseResult"],[781,26,790,30],[781,29,790,33],[781,33,790,37],[781,34,790,38,"tryParseArgumentClose"],[781,55,790,59],[781,56,790,60,"openingBracePosition"],[781,76,790,80],[781,77,790,81],[782,8,791,12],[782,12,791,16,"argCloseResult"],[782,26,791,30],[782,27,791,31,"err"],[782,30,791,34],[782,32,791,36],[783,10,792,16],[783,17,792,23,"argCloseResult"],[783,31,792,37],[784,8,793,12],[785,8,794,12,"options"],[785,15,794,19],[785,16,794,20,"push"],[785,20,794,24],[785,21,794,25],[785,22,795,16,"selector"],[785,30,795,24],[785,32,796,16],[786,10,797,20,"value"],[786,15,797,25],[786,17,797,27,"fragmentResult"],[786,31,797,41],[786,32,797,42,"val"],[786,35,797,45],[787,10,798,20,"location"],[787,18,798,28],[787,20,798,30,"createLocation"],[787,34,798,44],[787,35,798,45,"openingBracePosition"],[787,55,798,65],[787,57,798,67],[787,61,798,71],[787,62,798,72,"clonePosition"],[787,75,798,85],[787,76,798,86],[787,77,798,87],[788,8,799,16],[788,9,799,17],[788,10,800,13],[788,11,800,14],[789,8,801,12],[790,8,802,12,"parsedSelectors"],[790,23,802,27],[790,24,802,28,"add"],[790,27,802,31],[790,28,802,32,"selector"],[790,36,802,40],[790,37,802,41],[791,8,803,12],[792,8,804,12],[792,12,804,16],[792,13,804,17,"bumpSpace"],[792,22,804,26],[792,23,804,27],[792,24,804,28],[793,8,805,13,"_a"],[793,10,805,15],[793,13,805,18],[793,17,805,22],[793,18,805,23,"parseIdentifierIfPossible"],[793,43,805,48],[793,44,805,49],[793,45,805,50],[793,47,805,52,"selector"],[793,55,805,60],[793,58,805,63,"_a"],[793,60,805,65],[793,61,805,66,"value"],[793,66,805,71],[793,68,805,73,"selectorLocation"],[793,84,805,89],[793,87,805,92,"_a"],[793,89,805,94],[793,90,805,95,"location"],[793,98,805,103],[794,6,806,8],[795,6,807,8],[795,10,807,12,"options"],[795,17,807,19],[795,18,807,20,"length"],[795,24,807,26],[795,29,807,31],[795,30,807,32],[795,32,807,34],[796,8,808,12],[796,15,808,19],[796,19,808,23],[796,20,808,24,"error"],[796,25,808,29],[796,26,808,30,"parentArgType"],[796,39,808,43],[796,44,808,48],[796,52,808,56],[796,55,809,18,"error_1"],[796,62,809,25],[796,63,809,26,"ErrorKind"],[796,72,809,35],[796,73,809,36,"EXPECT_SELECT_ARGUMENT_SELECTOR"],[796,104,809,67],[796,107,810,18,"error_1"],[796,114,810,25],[796,115,810,26,"ErrorKind"],[796,124,810,35],[796,125,810,36,"EXPECT_PLURAL_ARGUMENT_SELECTOR"],[796,156,810,67],[796,158,810,69,"createLocation"],[796,172,810,83],[796,173,810,84],[796,177,810,88],[796,178,810,89,"clonePosition"],[796,191,810,102],[796,192,810,103],[796,193,810,104],[796,195,810,106],[796,199,810,110],[796,200,810,111,"clonePosition"],[796,213,810,124],[796,214,810,125],[796,215,810,126],[796,216,810,127],[796,217,810,128],[797,6,811,8],[798,6,812,8],[798,10,812,12],[798,14,812,16],[798,15,812,17,"requiresOtherClause"],[798,34,812,36],[798,38,812,40],[798,39,812,41,"hasOtherClause"],[798,53,812,55],[798,55,812,57],[799,8,813,12],[799,15,813,19],[799,19,813,23],[799,20,813,24,"error"],[799,25,813,29],[799,26,813,30,"error_1"],[799,33,813,37],[799,34,813,38,"ErrorKind"],[799,43,813,47],[799,44,813,48,"MISSING_OTHER_CLAUSE"],[799,64,813,68],[799,66,813,70,"createLocation"],[799,80,813,84],[799,81,813,85],[799,85,813,89],[799,86,813,90,"clonePosition"],[799,99,813,103],[799,100,813,104],[799,101,813,105],[799,103,813,107],[799,107,813,111],[799,108,813,112,"clonePosition"],[799,121,813,125],[799,122,813,126],[799,123,813,127],[799,124,813,128],[799,125,813,129],[800,6,814,8],[801,6,815,8],[801,13,815,15],[802,8,815,17,"val"],[802,11,815,20],[802,13,815,22,"options"],[802,20,815,29],[803,8,815,31,"err"],[803,11,815,34],[803,13,815,36],[804,6,815,41],[804,7,815,42],[805,4,816,4],[805,5,816,5],[806,4,817,4,"Parser"],[806,10,817,10],[806,11,817,11,"prototype"],[806,20,817,20],[806,21,817,21,"tryParseDecimalInteger"],[806,43,817,43],[806,46,817,46],[806,56,817,56,"expectNumberError"],[806,73,817,73],[806,75,817,75,"invalidNumberError"],[806,93,817,93],[806,95,817,95],[807,6,818,8],[807,10,818,12,"sign"],[807,14,818,16],[807,17,818,19],[807,18,818,20],[808,6,819,8],[808,10,819,12,"startingPosition"],[808,26,819,28],[808,29,819,31],[808,33,819,35],[808,34,819,36,"clonePosition"],[808,47,819,49],[808,48,819,50],[808,49,819,51],[809,6,820,8],[809,10,820,12],[809,14,820,16],[809,15,820,17,"bumpIf"],[809,21,820,23],[809,22,820,24],[809,25,820,27],[809,26,820,28],[809,28,820,30],[809,29,821,8],[809,30,821,9],[809,36,822,13],[809,40,822,17],[809,44,822,21],[809,45,822,22,"bumpIf"],[809,51,822,28],[809,52,822,29],[809,55,822,32],[809,56,822,33],[809,58,822,35],[810,8,823,12,"sign"],[810,12,823,16],[810,15,823,19],[810,16,823,20],[810,17,823,21],[811,6,824,8],[812,6,825,8],[812,10,825,12,"hasDigits"],[812,19,825,21],[812,22,825,24],[812,27,825,29],[813,6,826,8],[813,10,826,12,"decimal"],[813,17,826,19],[813,20,826,22],[813,21,826,23],[814,6,827,8],[814,13,827,15],[814,14,827,16],[814,18,827,20],[814,19,827,21,"isEOF"],[814,24,827,26],[814,25,827,27],[814,26,827,28],[814,28,827,30],[815,8,828,12],[815,12,828,16,"ch"],[815,14,828,18],[815,17,828,21],[815,21,828,25],[815,22,828,26,"char"],[815,26,828,30],[815,27,828,31],[815,28,828,32],[816,8,829,12],[816,12,829,16,"ch"],[816,14,829,18],[816,18,829,22],[816,20,829,24],[816,21,829,25],[816,34,829,38,"ch"],[816,36,829,40],[816,40,829,44],[816,42,829,46],[816,43,829,47],[816,54,829,58],[817,10,830,16,"hasDigits"],[817,19,830,25],[817,22,830,28],[817,26,830,32],[818,10,831,16,"decimal"],[818,17,831,23],[818,20,831,26,"decimal"],[818,27,831,33],[818,30,831,36],[818,32,831,38],[818,36,831,42,"ch"],[818,38,831,44],[818,41,831,47],[818,43,831,49],[818,44,831,50],[819,10,832,16],[819,14,832,20],[819,15,832,21,"bump"],[819,19,832,25],[819,20,832,26],[819,21,832,27],[820,8,833,12],[820,9,833,13],[820,15,834,17],[821,10,835,16],[822,8,836,12],[823,6,837,8],[824,6,838,8],[824,10,838,12,"location"],[824,18,838,20],[824,21,838,23,"createLocation"],[824,35,838,37],[824,36,838,38,"startingPosition"],[824,52,838,54],[824,54,838,56],[824,58,838,60],[824,59,838,61,"clonePosition"],[824,72,838,74],[824,73,838,75],[824,74,838,76],[824,75,838,77],[825,6,839,8],[825,10,839,12],[825,11,839,13,"hasDigits"],[825,20,839,22],[825,22,839,24],[826,8,840,12],[826,15,840,19],[826,19,840,23],[826,20,840,24,"error"],[826,25,840,29],[826,26,840,30,"expectNumberError"],[826,43,840,47],[826,45,840,49,"location"],[826,53,840,57],[826,54,840,58],[827,6,841,8],[828,6,842,8,"decimal"],[828,13,842,15],[828,17,842,19,"sign"],[828,21,842,23],[829,6,843,8],[829,10,843,12],[829,11,843,13,"isSafeInteger"],[829,24,843,26],[829,25,843,27,"decimal"],[829,32,843,34],[829,33,843,35],[829,35,843,37],[830,8,844,12],[830,15,844,19],[830,19,844,23],[830,20,844,24,"error"],[830,25,844,29],[830,26,844,30,"invalidNumberError"],[830,44,844,48],[830,46,844,50,"location"],[830,54,844,58],[830,55,844,59],[831,6,845,8],[832,6,846,8],[832,13,846,15],[833,8,846,17,"val"],[833,11,846,20],[833,13,846,22,"decimal"],[833,20,846,29],[834,8,846,31,"err"],[834,11,846,34],[834,13,846,36],[835,6,846,41],[835,7,846,42],[836,4,847,4],[836,5,847,5],[837,4,848,4,"Parser"],[837,10,848,10],[837,11,848,11,"prototype"],[837,20,848,20],[837,21,848,21,"offset"],[837,27,848,27],[837,30,848,30],[837,42,848,42],[838,6,849,8],[838,13,849,15],[838,17,849,19],[838,18,849,20,"position"],[838,26,849,28],[838,27,849,29,"offset"],[838,33,849,35],[839,4,850,4],[839,5,850,5],[840,4,851,4,"Parser"],[840,10,851,10],[840,11,851,11,"prototype"],[840,20,851,20],[840,21,851,21,"isEOF"],[840,26,851,26],[840,29,851,29],[840,41,851,41],[841,6,852,8],[841,13,852,15],[841,17,852,19],[841,18,852,20,"offset"],[841,24,852,26],[841,25,852,27],[841,26,852,28],[841,31,852,33],[841,35,852,37],[841,36,852,38,"message"],[841,43,852,45],[841,44,852,46,"length"],[841,50,852,52],[842,4,853,4],[842,5,853,5],[843,4,854,4,"Parser"],[843,10,854,10],[843,11,854,11,"prototype"],[843,20,854,20],[843,21,854,21,"clonePosition"],[843,34,854,34],[843,37,854,37],[843,49,854,49],[844,6,855,8],[845,6,856,8],[845,13,856,15],[846,8,857,12,"offset"],[846,14,857,18],[846,16,857,20],[846,20,857,24],[846,21,857,25,"position"],[846,29,857,33],[846,30,857,34,"offset"],[846,36,857,40],[847,8,858,12,"line"],[847,12,858,16],[847,14,858,18],[847,18,858,22],[847,19,858,23,"position"],[847,27,858,31],[847,28,858,32,"line"],[847,32,858,36],[848,8,859,12,"column"],[848,14,859,18],[848,16,859,20],[848,20,859,24],[848,21,859,25,"position"],[848,29,859,33],[848,30,859,34,"column"],[849,6,860,8],[849,7,860,9],[850,4,861,4],[850,5,861,5],[851,4,862,4],[852,0,863,0],[853,0,864,0],[854,0,865,0],[855,4,866,4,"Parser"],[855,10,866,10],[855,11,866,11,"prototype"],[855,20,866,20],[855,21,866,21,"char"],[855,25,866,25],[855,28,866,28],[855,40,866,40],[856,6,867,8],[856,10,867,12,"offset"],[856,16,867,18],[856,19,867,21],[856,23,867,25],[856,24,867,26,"position"],[856,32,867,34],[856,33,867,35,"offset"],[856,39,867,41],[857,6,868,8],[857,10,868,12,"offset"],[857,16,868,18],[857,20,868,22],[857,24,868,26],[857,25,868,27,"message"],[857,32,868,34],[857,33,868,35,"length"],[857,39,868,41],[857,41,868,43],[858,8,869,12],[858,14,869,18,"Error"],[858,19,869,23],[858,20,869,24],[858,34,869,38],[858,35,869,39],[859,6,870,8],[860,6,871,8],[860,10,871,12,"code"],[860,14,871,16],[860,17,871,19,"codePointAt"],[860,28,871,30],[860,29,871,31],[860,33,871,35],[860,34,871,36,"message"],[860,41,871,43],[860,43,871,45,"offset"],[860,49,871,51],[860,50,871,52],[861,6,872,8],[861,10,872,12,"code"],[861,14,872,16],[861,19,872,21,"undefined"],[861,28,872,30],[861,30,872,32],[862,8,873,12],[862,14,873,18,"Error"],[862,19,873,23],[862,20,873,24],[862,29,873,33],[862,30,873,34,"concat"],[862,36,873,40],[862,37,873,41,"offset"],[862,43,873,47],[862,45,873,49],[862,87,873,91],[862,88,873,92],[862,89,873,93],[863,6,874,8],[864,6,875,8],[864,13,875,15,"code"],[864,17,875,19],[865,4,876,4],[865,5,876,5],[866,4,877,4,"Parser"],[866,10,877,10],[866,11,877,11,"prototype"],[866,20,877,20],[866,21,877,21,"error"],[866,26,877,26],[866,29,877,29],[866,39,877,39,"kind"],[866,43,877,43],[866,45,877,45,"location"],[866,53,877,53],[866,55,877,55],[867,6,878,8],[867,13,878,15],[868,8,879,12,"val"],[868,11,879,15],[868,13,879,17],[868,17,879,21],[869,8,880,12,"err"],[869,11,880,15],[869,13,880,17],[870,10,881,16,"kind"],[870,14,881,20],[870,16,881,22,"kind"],[870,20,881,26],[871,10,882,16,"message"],[871,17,882,23],[871,19,882,25],[871,23,882,29],[871,24,882,30,"message"],[871,31,882,37],[872,10,883,16,"location"],[872,18,883,24],[872,20,883,26,"location"],[873,8,884,12],[874,6,885,8],[874,7,885,9],[875,4,886,4],[875,5,886,5],[876,4,887,4],[877,4,888,4,"Parser"],[877,10,888,10],[877,11,888,11,"prototype"],[877,20,888,20],[877,21,888,21,"bump"],[877,25,888,25],[877,28,888,28],[877,40,888,40],[878,6,889,8],[878,10,889,12],[878,14,889,16],[878,15,889,17,"isEOF"],[878,20,889,22],[878,21,889,23],[878,22,889,24],[878,24,889,26],[879,8,890,12],[880,6,891,8],[881,6,892,8],[881,10,892,12,"code"],[881,14,892,16],[881,17,892,19],[881,21,892,23],[881,22,892,24,"char"],[881,26,892,28],[881,27,892,29],[881,28,892,30],[882,6,893,8],[882,10,893,12,"code"],[882,14,893,16],[882,19,893,21],[882,21,893,23],[882,22,893,24],[882,34,893,36],[883,8,894,12],[883,12,894,16],[883,13,894,17,"position"],[883,21,894,25],[883,22,894,26,"line"],[883,26,894,30],[883,30,894,34],[883,31,894,35],[884,8,895,12],[884,12,895,16],[884,13,895,17,"position"],[884,21,895,25],[884,22,895,26,"column"],[884,28,895,32],[884,31,895,35],[884,32,895,36],[885,8,896,12],[885,12,896,16],[885,13,896,17,"position"],[885,21,896,25],[885,22,896,26,"offset"],[885,28,896,32],[885,32,896,36],[885,33,896,37],[886,6,897,8],[886,7,897,9],[886,13,898,13],[887,8,899,12],[887,12,899,16],[887,13,899,17,"position"],[887,21,899,25],[887,22,899,26,"column"],[887,28,899,32],[887,32,899,36],[887,33,899,37],[888,8,900,12],[889,8,901,12],[889,12,901,16],[889,13,901,17,"position"],[889,21,901,25],[889,22,901,26,"offset"],[889,28,901,32],[889,32,901,36,"code"],[889,36,901,40],[889,39,901,43],[889,46,901,50],[889,49,901,53],[889,50,901,54],[889,53,901,57],[889,54,901,58],[890,6,902,8],[891,4,903,4],[891,5,903,5],[892,4,904,4],[893,0,905,0],[894,0,906,0],[895,0,907,0],[896,0,908,0],[897,0,909,0],[898,4,910,4,"Parser"],[898,10,910,10],[898,11,910,11,"prototype"],[898,20,910,20],[898,21,910,21,"bumpIf"],[898,27,910,27],[898,30,910,30],[898,40,910,40,"prefix"],[898,46,910,46],[898,48,910,48],[899,6,911,8],[899,10,911,12,"startsWith"],[899,20,911,22],[899,21,911,23],[899,25,911,27],[899,26,911,28,"message"],[899,33,911,35],[899,35,911,37,"prefix"],[899,41,911,43],[899,43,911,45],[899,47,911,49],[899,48,911,50,"offset"],[899,54,911,56],[899,55,911,57],[899,56,911,58],[899,57,911,59],[899,59,911,61],[900,8,912,12],[900,13,912,17],[900,17,912,21,"i"],[900,18,912,22],[900,21,912,25],[900,22,912,26],[900,24,912,28,"i"],[900,25,912,29],[900,28,912,32,"prefix"],[900,34,912,38],[900,35,912,39,"length"],[900,41,912,45],[900,43,912,47,"i"],[900,44,912,48],[900,46,912,50],[900,48,912,52],[901,10,913,16],[901,14,913,20],[901,15,913,21,"bump"],[901,19,913,25],[901,20,913,26],[901,21,913,27],[902,8,914,12],[903,8,915,12],[903,15,915,19],[903,19,915,23],[904,6,916,8],[905,6,917,8],[905,13,917,15],[905,18,917,20],[906,4,918,4],[906,5,918,5],[907,4,919,4],[908,0,920,0],[909,0,921,0],[910,0,922,0],[911,4,923,4,"Parser"],[911,10,923,10],[911,11,923,11,"prototype"],[911,20,923,20],[911,21,923,21,"bumpUntil"],[911,30,923,30],[911,33,923,33],[911,43,923,43,"pattern"],[911,50,923,50],[911,52,923,52],[912,6,924,8],[912,10,924,12,"currentOffset"],[912,23,924,25],[912,26,924,28],[912,30,924,32],[912,31,924,33,"offset"],[912,37,924,39],[912,38,924,40],[912,39,924,41],[913,6,925,8],[913,10,925,12,"index"],[913,15,925,17],[913,18,925,20],[913,22,925,24],[913,23,925,25,"message"],[913,30,925,32],[913,31,925,33,"indexOf"],[913,38,925,40],[913,39,925,41,"pattern"],[913,46,925,48],[913,48,925,50,"currentOffset"],[913,61,925,63],[913,62,925,64],[914,6,926,8],[914,10,926,12,"index"],[914,15,926,17],[914,19,926,21],[914,20,926,22],[914,22,926,24],[915,8,927,12],[915,12,927,16],[915,13,927,17,"bumpTo"],[915,19,927,23],[915,20,927,24,"index"],[915,25,927,29],[915,26,927,30],[916,8,928,12],[916,15,928,19],[916,19,928,23],[917,6,929,8],[917,7,929,9],[917,13,930,13],[918,8,931,12],[918,12,931,16],[918,13,931,17,"bumpTo"],[918,19,931,23],[918,20,931,24],[918,24,931,28],[918,25,931,29,"message"],[918,32,931,36],[918,33,931,37,"length"],[918,39,931,43],[918,40,931,44],[919,8,932,12],[919,15,932,19],[919,20,932,24],[920,6,933,8],[921,4,934,4],[921,5,934,5],[922,4,935,4],[923,0,936,0],[924,0,937,0],[925,0,938,0],[926,4,939,4,"Parser"],[926,10,939,10],[926,11,939,11,"prototype"],[926,20,939,20],[926,21,939,21,"bumpTo"],[926,27,939,27],[926,30,939,30],[926,40,939,40,"targetOffset"],[926,52,939,52],[926,54,939,54],[927,6,940,8],[927,10,940,12],[927,14,940,16],[927,15,940,17,"offset"],[927,21,940,23],[927,22,940,24],[927,23,940,25],[927,26,940,28,"targetOffset"],[927,38,940,40],[927,40,940,42],[928,8,941,12],[928,14,941,18,"Error"],[928,19,941,23],[928,20,941,24],[928,35,941,39],[928,36,941,40,"concat"],[928,42,941,46],[928,43,941,47,"targetOffset"],[928,55,941,59],[928,57,941,61],[928,112,941,116],[928,113,941,117],[928,114,941,118,"concat"],[928,120,941,124],[928,121,941,125],[928,125,941,129],[928,126,941,130,"offset"],[928,132,941,136],[928,133,941,137],[928,134,941,138],[928,135,941,139],[928,136,941,140],[929,6,942,8],[930,6,943,8,"targetOffset"],[930,18,943,20],[930,21,943,23,"Math"],[930,25,943,27],[930,26,943,28,"min"],[930,29,943,31],[930,30,943,32,"targetOffset"],[930,42,943,44],[930,44,943,46],[930,48,943,50],[930,49,943,51,"message"],[930,56,943,58],[930,57,943,59,"length"],[930,63,943,65],[930,64,943,66],[931,6,944,8],[931,13,944,15],[931,17,944,19],[931,19,944,21],[932,8,945,12],[932,12,945,16,"offset"],[932,18,945,22],[932,21,945,25],[932,25,945,29],[932,26,945,30,"offset"],[932,32,945,36],[932,33,945,37],[932,34,945,38],[933,8,946,12],[933,12,946,16,"offset"],[933,18,946,22],[933,23,946,27,"targetOffset"],[933,35,946,39],[933,37,946,41],[934,10,947,16],[935,8,948,12],[936,8,949,12],[936,12,949,16,"offset"],[936,18,949,22],[936,21,949,25,"targetOffset"],[936,33,949,37],[936,35,949,39],[937,10,950,16],[937,16,950,22,"Error"],[937,21,950,27],[937,22,950,28],[937,37,950,43],[937,38,950,44,"concat"],[937,44,950,50],[937,45,950,51,"targetOffset"],[937,57,950,63],[937,59,950,65],[937,101,950,107],[937,102,950,108],[937,103,950,109],[938,8,951,12],[939,8,952,12],[939,12,952,16],[939,13,952,17,"bump"],[939,17,952,21],[939,18,952,22],[939,19,952,23],[940,8,953,12],[940,12,953,16],[940,16,953,20],[940,17,953,21,"isEOF"],[940,22,953,26],[940,23,953,27],[940,24,953,28],[940,26,953,30],[941,10,954,16],[942,8,955,12],[943,6,956,8],[944,4,957,4],[944,5,957,5],[945,4,958,4],[946,4,959,4,"Parser"],[946,10,959,10],[946,11,959,11,"prototype"],[946,20,959,20],[946,21,959,21,"bumpSpace"],[946,30,959,30],[946,33,959,33],[946,45,959,45],[947,6,960,8],[947,13,960,15],[947,14,960,16],[947,18,960,20],[947,19,960,21,"isEOF"],[947,24,960,26],[947,25,960,27],[947,26,960,28],[947,30,960,32,"_isWhiteSpace"],[947,43,960,45],[947,44,960,46],[947,48,960,50],[947,49,960,51,"char"],[947,53,960,55],[947,54,960,56],[947,55,960,57],[947,56,960,58],[947,58,960,60],[948,8,961,12],[948,12,961,16],[948,13,961,17,"bump"],[948,17,961,21],[948,18,961,22],[948,19,961,23],[949,6,962,8],[950,4,963,4],[950,5,963,5],[951,4,964,4],[952,0,965,0],[953,0,966,0],[954,0,967,0],[955,4,968,4,"Parser"],[955,10,968,10],[955,11,968,11,"prototype"],[955,20,968,20],[955,21,968,21,"peek"],[955,25,968,25],[955,28,968,28],[955,40,968,40],[956,6,969,8],[956,10,969,12],[956,14,969,16],[956,15,969,17,"isEOF"],[956,20,969,22],[956,21,969,23],[956,22,969,24],[956,24,969,26],[957,8,970,12],[957,15,970,19],[957,19,970,23],[958,6,971,8],[959,6,972,8],[959,10,972,12,"code"],[959,14,972,16],[959,17,972,19],[959,21,972,23],[959,22,972,24,"char"],[959,26,972,28],[959,27,972,29],[959,28,972,30],[960,6,973,8],[960,10,973,12,"offset"],[960,16,973,18],[960,19,973,21],[960,23,973,25],[960,24,973,26,"offset"],[960,30,973,32],[960,31,973,33],[960,32,973,34],[961,6,974,8],[961,10,974,12,"nextCode"],[961,18,974,20],[961,21,974,23],[961,25,974,27],[961,26,974,28,"message"],[961,33,974,35],[961,34,974,36,"charCodeAt"],[961,44,974,46],[961,45,974,47,"offset"],[961,51,974,53],[961,55,974,57,"code"],[961,59,974,61],[961,63,974,65],[961,70,974,72],[961,73,974,75],[961,74,974,76],[961,77,974,79],[961,78,974,80],[961,79,974,81],[961,80,974,82],[962,6,975,8],[962,13,975,15,"nextCode"],[962,21,975,23],[962,26,975,28],[962,30,975,32],[962,34,975,36,"nextCode"],[962,42,975,44],[962,47,975,49],[962,52,975,54],[962,53,975,55],[962,56,975,58,"nextCode"],[962,64,975,66],[962,67,975,69],[962,71,975,73],[963,4,976,4],[963,5,976,5],[964,4,977,4],[964,11,977,11,"Parser"],[964,17,977,17],[965,2,978,0],[965,3,978,1],[965,4,978,2],[965,5,978,4],[966,2,979,0,"exports"],[966,9,979,7],[966,10,979,8,"Parser"],[966,16,979,14],[966,19,979,17,"Parser"],[966,25,979,23],[967,2,980,0],[968,0,981,0],[969,0,982,0],[970,0,983,0],[971,0,984,0],[972,2,985,0],[972,11,985,9,"_isAlpha"],[972,19,985,17,"_isAlpha"],[972,20,985,18,"codepoint"],[972,29,985,27],[972,31,985,29],[973,4,986,4],[973,11,986,13,"codepoint"],[973,20,986,22],[973,24,986,26],[973,26,986,28],[973,30,986,32,"codepoint"],[973,39,986,41],[973,43,986,45],[973,46,986,48],[973,50,987,9,"codepoint"],[973,59,987,18],[973,63,987,22],[973,65,987,24],[973,69,987,28,"codepoint"],[973,78,987,37],[973,82,987,41],[973,84,987,44],[974,2,988,0],[975,2,989,0],[975,11,989,9,"_isAlphaOrSlash"],[975,26,989,24,"_isAlphaOrSlash"],[975,27,989,25,"codepoint"],[975,36,989,34],[975,38,989,36],[976,4,990,4],[976,11,990,11,"_isAlpha"],[976,19,990,19],[976,20,990,20,"codepoint"],[976,29,990,29],[976,30,990,30],[976,34,990,34,"codepoint"],[976,43,990,43],[976,48,990,48],[976,50,990,50],[976,51,990,51],[976,52,990,52],[977,2,991,0],[978,2,992,0],[979,2,993,0],[979,11,993,9,"_isPotentialElementNameChar"],[979,38,993,36,"_isPotentialElementNameChar"],[979,39,993,37,"c"],[979,40,993,38],[979,42,993,40],[980,4,994,4],[980,11,994,12,"c"],[980,12,994,13],[980,17,994,18],[980,19,994,20],[980,20,994,21],[980,33,995,8,"c"],[980,34,995,9],[980,39,995,14],[980,41,995,16],[980,42,995,17],[980,55,996,9,"c"],[980,56,996,10],[980,60,996,14],[980,62,996,16],[980,66,996,20,"c"],[980,67,996,21],[980,71,996,25],[980,73,996,28],[980,74,996,29],[980,88,997,8,"c"],[980,89,997,9],[980,94,997,14],[980,96,997,16],[980,97,997,17],[980,110,998,9,"c"],[980,111,998,10],[980,115,998,14],[980,117,998,16],[980,121,998,20,"c"],[980,122,998,21],[980,126,998,25],[980,129,998,29],[980,130,998,30],[980,145,999,9,"c"],[980,146,999,10],[980,150,999,14],[980,152,999,16],[980,156,999,20,"c"],[980,157,999,21],[980,161,999,25],[980,163,999,28],[980,164,999,29],[980,178,1000,8,"c"],[980,179,1000,9],[980,183,1000,13],[980,187,1000,17],[980,191,1001,9,"c"],[980,192,1001,10],[980,196,1001,14],[980,200,1001,18],[980,204,1001,22,"c"],[980,205,1001,23],[980,209,1001,27],[980,213,1001,32],[980,217,1002,9,"c"],[980,218,1002,10],[980,222,1002,14],[980,226,1002,18],[980,230,1002,22,"c"],[980,231,1002,23],[980,235,1002,27],[980,239,1002,32],[980,243,1003,9,"c"],[980,244,1003,10],[980,248,1003,14],[980,252,1003,18],[980,256,1003,22,"c"],[980,257,1003,23],[980,261,1003,27],[980,266,1003,33],[980,270,1004,9,"c"],[980,271,1004,10],[980,275,1004,14],[980,280,1004,19],[980,284,1004,23,"c"],[980,285,1004,24],[980,289,1004,28],[980,295,1004,35],[980,299,1005,9,"c"],[980,300,1005,10],[980,304,1005,14],[980,310,1005,20],[980,314,1005,24,"c"],[980,315,1005,25],[980,319,1005,29],[980,325,1005,36],[980,329,1006,9,"c"],[980,330,1006,10],[980,334,1006,14],[980,340,1006,20],[980,344,1006,24,"c"],[980,345,1006,25],[980,349,1006,29],[980,355,1006,36],[980,359,1007,9,"c"],[980,360,1007,10],[980,364,1007,14],[980,370,1007,20],[980,374,1007,24,"c"],[980,375,1007,25],[980,379,1007,29],[980,385,1007,36],[980,389,1008,9,"c"],[980,390,1008,10],[980,394,1008,14],[980,400,1008,20],[980,404,1008,24,"c"],[980,405,1008,25],[980,409,1008,29],[980,415,1008,36],[980,419,1009,9,"c"],[980,420,1009,10],[980,424,1009,14],[980,430,1009,20],[980,434,1009,24,"c"],[980,435,1009,25],[980,439,1009,29],[980,445,1009,36],[980,449,1010,9,"c"],[980,450,1010,10],[980,454,1010,14],[980,460,1010,20],[980,464,1010,24,"c"],[980,465,1010,25],[980,469,1010,29],[980,475,1010,36],[980,479,1011,9,"c"],[980,480,1011,10],[980,484,1011,14],[980,490,1011,20],[980,494,1011,24,"c"],[980,495,1011,25],[980,499,1011,29],[980,505,1011,36],[980,509,1012,9,"c"],[980,510,1012,10],[980,514,1012,14],[980,521,1012,21],[980,525,1012,25,"c"],[980,526,1012,26],[980,530,1012,30],[980,537,1012,38],[981,2,1013,0],[982,2,1014,0],[983,0,1015,0],[984,0,1016,0],[985,0,1017,0],[986,2,1018,0],[986,11,1018,9,"_isWhiteSpace"],[986,24,1018,22,"_isWhiteSpace"],[986,25,1018,23,"c"],[986,26,1018,24],[986,28,1018,26],[987,4,1019,4],[987,11,1019,13,"c"],[987,12,1019,14],[987,16,1019,18],[987,22,1019,24],[987,26,1019,28,"c"],[987,27,1019,29],[987,31,1019,33],[987,37,1019,39],[987,41,1020,8,"c"],[987,42,1020,9],[987,47,1020,14],[987,53,1020,20],[987,57,1021,8,"c"],[987,58,1021,9],[987,63,1021,14],[987,69,1021,20],[987,73,1022,9,"c"],[987,74,1022,10],[987,78,1022,14],[987,84,1022,20],[987,88,1022,24,"c"],[987,89,1022,25],[987,93,1022,29],[987,99,1022,36],[987,103,1023,8,"c"],[987,104,1023,9],[987,109,1023,14],[987,115,1023,20],[987,119,1024,8,"c"],[987,120,1024,9],[987,125,1024,14],[987,131,1024,20],[988,2,1025,0],[989,2,1026,0],[990,0,1027,0],[991,0,1028,0],[992,0,1029,0],[993,2,1030,0],[993,11,1030,9,"_isPatternSyntax"],[993,27,1030,25,"_isPatternSyntax"],[993,28,1030,26,"c"],[993,29,1030,27],[993,31,1030,29],[994,4,1031,4],[994,11,1031,13,"c"],[994,12,1031,14],[994,16,1031,18],[994,22,1031,24],[994,26,1031,28,"c"],[994,27,1031,29],[994,31,1031,33],[994,37,1031,39],[994,41,1032,8,"c"],[994,42,1032,9],[994,47,1032,14],[994,53,1032,20],[994,57,1033,9,"c"],[994,58,1033,10],[994,62,1033,14],[994,68,1033,20],[994,72,1033,24,"c"],[994,73,1033,25],[994,77,1033,29],[994,83,1033,36],[994,87,1034,8,"c"],[994,88,1034,9],[994,93,1034,14],[994,99,1034,20],[994,103,1035,8,"c"],[994,104,1035,9],[994,109,1035,14],[994,115,1035,20],[994,119,1036,8,"c"],[994,120,1036,9],[994,125,1036,14],[994,131,1036,20],[994,135,1037,8,"c"],[994,136,1037,9],[994,141,1037,14],[994,147,1037,20],[994,151,1038,8,"c"],[994,152,1038,9],[994,157,1038,14],[994,163,1038,20],[994,167,1039,8,"c"],[994,168,1039,9],[994,173,1039,14],[994,179,1039,20],[994,183,1040,9,"c"],[994,184,1040,10],[994,188,1040,14],[994,194,1040,20],[994,198,1040,24,"c"],[994,199,1040,25],[994,203,1040,29],[994,209,1040,36],[994,213,1041,9,"c"],[994,214,1041,10],[994,218,1041,14],[994,224,1041,20],[994,228,1041,24,"c"],[994,229,1041,25],[994,233,1041,29],[994,239,1041,36],[994,243,1042,9,"c"],[994,244,1042,10],[994,248,1042,14],[994,254,1042,20],[994,258,1042,24,"c"],[994,259,1042,25],[994,263,1042,29],[994,269,1042,36],[994,273,1043,9,"c"],[994,274,1043,10],[994,278,1043,14],[994,284,1043,20],[994,288,1043,24,"c"],[994,289,1043,25],[994,293,1043,29],[994,299,1043,36],[994,303,1044,8,"c"],[994,304,1044,9],[994,309,1044,14],[994,315,1044,20],[994,319,1045,8,"c"],[994,320,1045,9],[994,325,1045,14],[994,331,1045,20],[994,335,1046,8,"c"],[994,336,1046,9],[994,341,1046,14],[994,347,1046,20],[994,351,1047,8,"c"],[994,352,1047,9],[994,357,1047,14],[994,363,1047,20],[994,367,1048,8,"c"],[994,368,1048,9],[994,373,1048,14],[994,379,1048,20],[994,383,1049,8,"c"],[994,384,1049,9],[994,389,1049,14],[994,395,1049,20],[994,399,1050,8,"c"],[994,400,1050,9],[994,405,1050,14],[994,411,1050,20],[994,415,1051,8,"c"],[994,416,1051,9],[994,421,1051,14],[994,427,1051,20],[994,431,1052,8,"c"],[994,432,1052,9],[994,437,1052,14],[994,443,1052,20],[994,447,1053,8,"c"],[994,448,1053,9],[994,453,1053,14],[994,459,1053,20],[994,463,1054,9,"c"],[994,464,1054,10],[994,468,1054,14],[994,474,1054,20],[994,478,1054,24,"c"],[994,479,1054,25],[994,483,1054,29],[994,489,1054,36],[994,493,1055,8,"c"],[994,494,1055,9],[994,499,1055,14],[994,505,1055,20],[994,509,1056,8,"c"],[994,510,1056,9],[994,515,1056,14],[994,521,1056,20],[994,525,1057,8,"c"],[994,526,1057,9],[994,531,1057,14],[994,537,1057,20],[994,541,1058,8,"c"],[994,542,1058,9],[994,547,1058,14],[994,553,1058,20],[994,557,1059,8,"c"],[994,558,1059,9],[994,563,1059,14],[994,569,1059,20],[994,573,1060,8,"c"],[994,574,1060,9],[994,579,1060,14],[994,585,1060,20],[994,589,1061,8,"c"],[994,590,1061,9],[994,595,1061,14],[994,601,1061,20],[994,605,1062,8,"c"],[994,606,1062,9],[994,611,1062,14],[994,617,1062,20],[994,621,1063,8,"c"],[994,622,1063,9],[994,627,1063,14],[994,633,1063,20],[994,637,1064,8,"c"],[994,638,1064,9],[994,643,1064,14],[994,649,1064,20],[994,653,1065,8,"c"],[994,654,1065,9],[994,659,1065,14],[994,665,1065,20],[994,669,1066,8,"c"],[994,670,1066,9],[994,675,1066,14],[994,681,1066,20],[994,685,1067,8,"c"],[994,686,1067,9],[994,691,1067,14],[994,697,1067,20],[994,701,1068,9,"c"],[994,702,1068,10],[994,706,1068,14],[994,712,1068,20],[994,716,1068,24,"c"],[994,717,1068,25],[994,721,1068,29],[994,727,1068,36],[994,731,1069,9,"c"],[994,732,1069,10],[994,736,1069,14],[994,742,1069,20],[994,746,1069,24,"c"],[994,747,1069,25],[994,751,1069,29],[994,757,1069,36],[994,761,1070,8,"c"],[994,762,1070,9],[994,767,1070,14],[994,773,1070,20],[994,777,1071,8,"c"],[994,778,1071,9],[994,783,1071,14],[994,789,1071,20],[994,793,1072,8,"c"],[994,794,1072,9],[994,799,1072,14],[994,805,1072,20],[994,809,1073,9,"c"],[994,810,1073,10],[994,814,1073,14],[994,820,1073,20],[994,824,1073,24,"c"],[994,825,1073,25],[994,829,1073,29],[994,835,1073,36],[994,839,1074,8,"c"],[994,840,1074,9],[994,845,1074,14],[994,851,1074,20],[994,855,1075,8,"c"],[994,856,1075,9],[994,861,1075,14],[994,867,1075,20],[994,871,1076,8,"c"],[994,872,1076,9],[994,877,1076,14],[994,883,1076,20],[994,887,1077,9,"c"],[994,888,1077,10],[994,892,1077,14],[994,898,1077,20],[994,902,1077,24,"c"],[994,903,1077,25],[994,907,1077,29],[994,913,1077,36],[994,917,1078,9,"c"],[994,918,1078,10],[994,922,1078,14],[994,928,1078,20],[994,932,1078,24,"c"],[994,933,1078,25],[994,937,1078,29],[994,943,1078,36],[994,947,1079,8,"c"],[994,948,1079,9],[994,953,1079,14],[994,959,1079,20],[994,963,1080,8,"c"],[994,964,1080,9],[994,969,1080,14],[994,975,1080,20],[994,979,1081,9,"c"],[994,980,1081,10],[994,984,1081,14],[994,990,1081,20],[994,994,1081,24,"c"],[994,995,1081,25],[994,999,1081,29],[994,1005,1081,36],[994,1009,1082,9,"c"],[994,1010,1082,10],[994,1014,1082,14],[994,1020,1082,20],[994,1024,1082,24,"c"],[994,1025,1082,25],[994,1029,1082,29],[994,1035,1082,36],[994,1039,1083,8,"c"],[994,1040,1083,9],[994,1045,1083,14],[994,1051,1083,20],[994,1055,1084,8,"c"],[994,1056,1084,9],[994,1061,1084,14],[994,1067,1084,20],[994,1071,1085,8,"c"],[994,1072,1085,9],[994,1077,1085,14],[994,1083,1085,20],[994,1087,1086,9,"c"],[994,1088,1086,10],[994,1092,1086,14],[994,1098,1086,20],[994,1102,1086,24,"c"],[994,1103,1086,25],[994,1107,1086,29],[994,1113,1086,36],[994,1117,1087,8,"c"],[994,1118,1087,9],[994,1123,1087,14],[994,1129,1087,20],[994,1133,1088,8,"c"],[994,1134,1088,9],[994,1139,1088,14],[994,1145,1088,20],[994,1149,1089,9,"c"],[994,1150,1089,10],[994,1154,1089,14],[994,1160,1089,20],[994,1164,1089,24,"c"],[994,1165,1089,25],[994,1169,1089,29],[994,1175,1089,36],[994,1179,1090,9,"c"],[994,1180,1090,10],[994,1184,1090,14],[994,1190,1090,20],[994,1194,1090,24,"c"],[994,1195,1090,25],[994,1199,1090,29],[994,1205,1090,36],[994,1209,1091,9,"c"],[994,1210,1091,10],[994,1214,1091,14],[994,1220,1091,20],[994,1224,1091,24,"c"],[994,1225,1091,25],[994,1229,1091,29],[994,1235,1091,36],[994,1239,1092,9,"c"],[994,1240,1092,10],[994,1244,1092,14],[994,1250,1092,20],[994,1254,1092,24,"c"],[994,1255,1092,25],[994,1259,1092,29],[994,1265,1092,36],[994,1269,1093,9,"c"],[994,1270,1093,10],[994,1274,1093,14],[994,1280,1093,20],[994,1284,1093,24,"c"],[994,1285,1093,25],[994,1289,1093,29],[994,1295,1093,36],[994,1299,1094,8,"c"],[994,1300,1094,9],[994,1305,1094,14],[994,1311,1094,20],[994,1315,1095,9,"c"],[994,1316,1095,10],[994,1320,1095,14],[994,1326,1095,20],[994,1330,1095,24,"c"],[994,1331,1095,25],[994,1335,1095,29],[994,1341,1095,36],[994,1345,1096,8,"c"],[994,1346,1096,9],[994,1351,1096,14],[994,1357,1096,20],[994,1361,1097,9,"c"],[994,1362,1097,10],[994,1366,1097,14],[994,1372,1097,20],[994,1376,1097,24,"c"],[994,1377,1097,25],[994,1381,1097,29],[994,1387,1097,36],[994,1391,1098,8,"c"],[994,1392,1098,9],[994,1397,1098,14],[994,1403,1098,20],[994,1407,1099,9,"c"],[994,1408,1099,10],[994,1412,1099,14],[994,1418,1099,20],[994,1422,1099,24,"c"],[994,1423,1099,25],[994,1427,1099,29],[994,1433,1099,36],[994,1437,1100,8,"c"],[994,1438,1100,9],[994,1443,1100,14],[994,1449,1100,20],[994,1453,1101,9,"c"],[994,1454,1101,10],[994,1458,1101,14],[994,1464,1101,20],[994,1468,1101,24,"c"],[994,1469,1101,25],[994,1473,1101,29],[994,1479,1101,36],[994,1483,1102,9,"c"],[994,1484,1102,10],[994,1488,1102,14],[994,1494,1102,20],[994,1498,1102,24,"c"],[994,1499,1102,25],[994,1503,1102,29],[994,1509,1102,36],[994,1513,1103,9,"c"],[994,1514,1103,10],[994,1518,1103,14],[994,1524,1103,20],[994,1528,1103,24,"c"],[994,1529,1103,25],[994,1533,1103,29],[994,1539,1103,36],[994,1543,1104,8,"c"],[994,1544,1104,9],[994,1549,1104,14],[994,1555,1104,20],[994,1559,1105,8,"c"],[994,1560,1105,9],[994,1565,1105,14],[994,1571,1105,20],[994,1575,1106,8,"c"],[994,1576,1106,9],[994,1581,1106,14],[994,1587,1106,20],[994,1591,1107,9,"c"],[994,1592,1107,10],[994,1596,1107,14],[994,1602,1107,20],[994,1606,1107,24,"c"],[994,1607,1107,25],[994,1611,1107,29],[994,1617,1107,36],[994,1621,1108,9,"c"],[994,1622,1108,10],[994,1626,1108,14],[994,1632,1108,20],[994,1636,1108,24,"c"],[994,1637,1108,25],[994,1641,1108,29],[994,1647,1108,36],[994,1651,1109,9,"c"],[994,1652,1109,10],[994,1656,1109,14],[994,1662,1109,20],[994,1666,1109,24,"c"],[994,1667,1109,25],[994,1671,1109,29],[994,1677,1109,36],[994,1681,1110,8,"c"],[994,1682,1110,9],[994,1687,1110,14],[994,1693,1110,20],[994,1697,1111,8,"c"],[994,1698,1111,9],[994,1703,1111,14],[994,1709,1111,20],[994,1713,1112,8,"c"],[994,1714,1112,9],[994,1719,1112,14],[994,1725,1112,20],[994,1729,1113,8,"c"],[994,1730,1113,9],[994,1735,1113,14],[994,1741,1113,20],[994,1745,1114,9,"c"],[994,1746,1114,10],[994,1750,1114,14],[994,1756,1114,20],[994,1760,1114,24,"c"],[994,1761,1114,25],[994,1765,1114,29],[994,1771,1114,36],[994,1775,1115,9,"c"],[994,1776,1115,10],[994,1780,1115,14],[994,1786,1115,20],[994,1790,1115,24,"c"],[994,1791,1115,25],[994,1795,1115,29],[994,1801,1115,36],[994,1805,1116,9,"c"],[994,1806,1116,10],[994,1810,1116,14],[994,1816,1116,20],[994,1820,1116,24,"c"],[994,1821,1116,25],[994,1825,1116,29],[994,1831,1116,36],[994,1835,1117,8,"c"],[994,1836,1117,9],[994,1841,1117,14],[994,1847,1117,20],[994,1851,1118,8,"c"],[994,1852,1118,9],[994,1857,1118,14],[994,1863,1118,20],[994,1867,1119,9,"c"],[994,1868,1119,10],[994,1872,1119,14],[994,1878,1119,20],[994,1882,1119,24,"c"],[994,1883,1119,25],[994,1887,1119,29],[994,1893,1119,36],[994,1897,1120,8,"c"],[994,1898,1120,9],[994,1903,1120,14],[994,1909,1120,20],[994,1913,1121,9,"c"],[994,1914,1121,10],[994,1918,1121,14],[994,1924,1121,20],[994,1928,1121,24,"c"],[994,1929,1121,25],[994,1933,1121,29],[994,1939,1121,36],[994,1943,1122,9,"c"],[994,1944,1122,10],[994,1948,1122,14],[994,1954,1122,20],[994,1958,1122,24,"c"],[994,1959,1122,25],[994,1963,1122,29],[994,1969,1122,36],[994,1973,1123,9,"c"],[994,1974,1123,10],[994,1978,1123,14],[994,1984,1123,20],[994,1988,1123,24,"c"],[994,1989,1123,25],[994,1993,1123,29],[994,1999,1123,36],[994,2003,1124,9,"c"],[994,2004,1124,10],[994,2008,1124,14],[994,2014,1124,20],[994,2018,1124,24,"c"],[994,2019,1124,25],[994,2023,1124,29],[994,2029,1124,36],[994,2033,1125,9,"c"],[994,2034,1125,10],[994,2038,1125,14],[994,2044,1125,20],[994,2048,1125,24,"c"],[994,2049,1125,25],[994,2053,1125,29],[994,2059,1125,36],[994,2063,1126,9,"c"],[994,2064,1126,10],[994,2068,1126,14],[994,2074,1126,20],[994,2078,1126,24,"c"],[994,2079,1126,25],[994,2083,1126,29],[994,2089,1126,36],[994,2093,1127,9,"c"],[994,2094,1127,10],[994,2098,1127,14],[994,2104,1127,20],[994,2108,1127,24,"c"],[994,2109,1127,25],[994,2113,1127,29],[994,2119,1127,36],[994,2123,1128,9,"c"],[994,2124,1128,10],[994,2128,1128,14],[994,2134,1128,20],[994,2138,1128,24,"c"],[994,2139,1128,25],[994,2143,1128,29],[994,2149,1128,36],[994,2153,1129,9,"c"],[994,2154,1129,10],[994,2158,1129,14],[994,2164,1129,20],[994,2168,1129,24,"c"],[994,2169,1129,25],[994,2173,1129,29],[994,2179,1129,36],[994,2183,1130,8,"c"],[994,2184,1130,9],[994,2189,1130,14],[994,2195,1130,20],[994,2199,1131,9,"c"],[994,2200,1131,10],[994,2204,1131,14],[994,2210,1131,20],[994,2214,1131,24,"c"],[994,2215,1131,25],[994,2219,1131,29],[994,2225,1131,36],[994,2229,1132,8,"c"],[994,2230,1132,9],[994,2235,1132,14],[994,2241,1132,20],[994,2245,1133,9,"c"],[994,2246,1133,10],[994,2250,1133,14],[994,2256,1133,20],[994,2260,1133,24,"c"],[994,2261,1133,25],[994,2265,1133,29],[994,2271,1133,36],[994,2275,1134,9,"c"],[994,2276,1134,10],[994,2280,1134,14],[994,2286,1134,20],[994,2290,1134,24,"c"],[994,2291,1134,25],[994,2295,1134,29],[994,2301,1134,36],[994,2305,1135,9,"c"],[994,2306,1135,10],[994,2310,1135,14],[994,2316,1135,20],[994,2320,1135,24,"c"],[994,2321,1135,25],[994,2325,1135,29],[994,2331,1135,36],[994,2335,1136,8,"c"],[994,2336,1136,9],[994,2341,1136,14],[994,2347,1136,20],[994,2351,1137,9,"c"],[994,2352,1137,10],[994,2356,1137,14],[994,2362,1137,20],[994,2366,1137,24,"c"],[994,2367,1137,25],[994,2371,1137,29],[994,2377,1137,36],[994,2381,1138,8,"c"],[994,2382,1138,9],[994,2387,1138,14],[994,2393,1138,20],[994,2397,1139,8,"c"],[994,2398,1139,9],[994,2403,1139,14],[994,2409,1139,20],[994,2413,1140,8,"c"],[994,2414,1140,9],[994,2419,1140,14],[994,2425,1140,20],[994,2429,1141,8,"c"],[994,2430,1141,9],[994,2435,1141,14],[994,2441,1141,20],[994,2445,1142,8,"c"],[994,2446,1142,9],[994,2451,1142,14],[994,2457,1142,20],[994,2461,1143,8,"c"],[994,2462,1143,9],[994,2467,1143,14],[994,2473,1143,20],[994,2477,1144,8,"c"],[994,2478,1144,9],[994,2483,1144,14],[994,2489,1144,20],[994,2493,1145,8,"c"],[994,2494,1145,9],[994,2499,1145,14],[994,2505,1145,20],[994,2509,1146,8,"c"],[994,2510,1146,9],[994,2515,1146,14],[994,2521,1146,20],[994,2525,1147,8,"c"],[994,2526,1147,9],[994,2531,1147,14],[994,2537,1147,20],[994,2541,1148,8,"c"],[994,2542,1148,9],[994,2547,1148,14],[994,2553,1148,20],[994,2557,1149,8,"c"],[994,2558,1149,9],[994,2563,1149,14],[994,2569,1149,20],[994,2573,1150,8,"c"],[994,2574,1150,9],[994,2579,1150,14],[994,2585,1150,20],[994,2589,1151,8,"c"],[994,2590,1151,9],[994,2595,1151,14],[994,2601,1151,20],[994,2605,1152,9,"c"],[994,2606,1152,10],[994,2610,1152,14],[994,2616,1152,20],[994,2620,1152,24,"c"],[994,2621,1152,25],[994,2625,1152,29],[994,2631,1152,36],[994,2635,1153,9,"c"],[994,2636,1153,10],[994,2640,1153,14],[994,2646,1153,20],[994,2650,1153,24,"c"],[994,2651,1153,25],[994,2655,1153,29],[994,2661,1153,36],[994,2665,1154,8,"c"],[994,2666,1154,9],[994,2671,1154,14],[994,2677,1154,20],[994,2681,1155,8,"c"],[994,2682,1155,9],[994,2687,1155,14],[994,2693,1155,20],[994,2697,1156,9,"c"],[994,2698,1156,10],[994,2702,1156,14],[994,2708,1156,20],[994,2712,1156,24,"c"],[994,2713,1156,25],[994,2717,1156,29],[994,2723,1156,36],[994,2727,1157,8,"c"],[994,2728,1157,9],[994,2733,1157,14],[994,2739,1157,20],[994,2743,1158,8,"c"],[994,2744,1158,9],[994,2749,1158,14],[994,2755,1158,20],[994,2759,1159,8,"c"],[994,2760,1159,9],[994,2765,1159,14],[994,2771,1159,20],[994,2775,1160,8,"c"],[994,2776,1160,9],[994,2781,1160,14],[994,2787,1160,20],[994,2791,1161,8,"c"],[994,2792,1161,9],[994,2797,1161,14],[994,2803,1161,20],[994,2807,1162,8,"c"],[994,2808,1162,9],[994,2813,1162,14],[994,2819,1162,20],[994,2823,1163,8,"c"],[994,2824,1163,9],[994,2829,1163,14],[994,2835,1163,20],[994,2839,1164,8,"c"],[994,2840,1164,9],[994,2845,1164,14],[994,2851,1164,20],[994,2855,1165,8,"c"],[994,2856,1165,9],[994,2861,1165,14],[994,2867,1165,20],[994,2871,1166,8,"c"],[994,2872,1166,9],[994,2877,1166,14],[994,2883,1166,20],[994,2887,1167,9,"c"],[994,2888,1167,10],[994,2892,1167,14],[994,2898,1167,20],[994,2902,1167,24,"c"],[994,2903,1167,25],[994,2907,1167,29],[994,2913,1167,36],[994,2917,1168,9,"c"],[994,2918,1168,10],[994,2922,1168,14],[994,2928,1168,20],[994,2932,1168,24,"c"],[994,2933,1168,25],[994,2937,1168,29],[994,2943,1168,36],[994,2947,1169,9,"c"],[994,2948,1169,10],[994,2952,1169,14],[994,2958,1169,20],[994,2962,1169,24,"c"],[994,2963,1169,25],[994,2967,1169,29],[994,2973,1169,36],[994,2977,1170,8,"c"],[994,2978,1170,9],[994,2983,1170,14],[994,2989,1170,20],[994,2993,1171,8,"c"],[994,2994,1171,9],[994,2999,1171,14],[994,3005,1171,20],[994,3009,1172,8,"c"],[994,3010,1172,9],[994,3015,1172,14],[994,3021,1172,20],[994,3025,1173,8,"c"],[994,3026,1173,9],[994,3031,1173,14],[994,3037,1173,20],[994,3041,1174,8,"c"],[994,3042,1174,9],[994,3047,1174,14],[994,3053,1174,20],[994,3057,1175,8,"c"],[994,3058,1175,9],[994,3063,1175,14],[994,3069,1175,20],[994,3073,1176,8,"c"],[994,3074,1176,9],[994,3079,1176,14],[994,3085,1176,20],[994,3089,1177,8,"c"],[994,3090,1177,9],[994,3095,1177,14],[994,3101,1177,20],[994,3105,1178,8,"c"],[994,3106,1178,9],[994,3111,1178,14],[994,3117,1178,20],[994,3121,1179,8,"c"],[994,3122,1179,9],[994,3127,1179,14],[994,3133,1179,20],[994,3137,1180,8,"c"],[994,3138,1180,9],[994,3143,1180,14],[994,3149,1180,20],[994,3153,1181,8,"c"],[994,3154,1181,9],[994,3159,1181,14],[994,3165,1181,20],[994,3169,1182,8,"c"],[994,3170,1182,9],[994,3175,1182,14],[994,3181,1182,20],[994,3185,1183,8,"c"],[994,3186,1183,9],[994,3191,1183,14],[994,3197,1183,20],[994,3201,1184,8,"c"],[994,3202,1184,9],[994,3207,1184,14],[994,3213,1184,20],[994,3217,1185,8,"c"],[994,3218,1185,9],[994,3223,1185,14],[994,3229,1185,20],[994,3233,1186,8,"c"],[994,3234,1186,9],[994,3239,1186,14],[994,3245,1186,20],[994,3249,1187,8,"c"],[994,3250,1187,9],[994,3255,1187,14],[994,3261,1187,20],[994,3265,1188,8,"c"],[994,3266,1188,9],[994,3271,1188,14],[994,3277,1188,20],[994,3281,1189,8,"c"],[994,3282,1189,9],[994,3287,1189,14],[994,3293,1189,20],[994,3297,1190,8,"c"],[994,3298,1190,9],[994,3303,1190,14],[994,3309,1190,20],[994,3313,1191,8,"c"],[994,3314,1191,9],[994,3319,1191,14],[994,3325,1191,20],[994,3329,1192,9,"c"],[994,3330,1192,10],[994,3334,1192,14],[994,3340,1192,20],[994,3344,1192,24,"c"],[994,3345,1192,25],[994,3349,1192,29],[994,3355,1192,36],[994,3359,1193,8,"c"],[994,3360,1193,9],[994,3365,1193,14],[994,3371,1193,20],[994,3375,1194,8,"c"],[994,3376,1194,9],[994,3381,1194,14],[994,3387,1194,20],[994,3391,1195,8,"c"],[994,3392,1195,9],[994,3397,1195,14],[994,3403,1195,20],[994,3407,1196,8,"c"],[994,3408,1196,9],[994,3413,1196,14],[994,3419,1196,20],[994,3423,1197,9,"c"],[994,3424,1197,10],[994,3428,1197,14],[994,3434,1197,20],[994,3438,1197,24,"c"],[994,3439,1197,25],[994,3443,1197,29],[994,3449,1197,36],[994,3453,1198,8,"c"],[994,3454,1198,9],[994,3459,1198,14],[994,3465,1198,20],[994,3469,1199,8,"c"],[994,3470,1199,9],[994,3475,1199,14],[994,3481,1199,20],[994,3485,1200,9,"c"],[994,3486,1200,10],[994,3490,1200,14],[994,3496,1200,20],[994,3500,1200,24,"c"],[994,3501,1200,25],[994,3505,1200,29],[994,3511,1200,36],[994,3515,1201,9,"c"],[994,3516,1201,10],[994,3520,1201,14],[994,3526,1201,20],[994,3530,1201,24,"c"],[994,3531,1201,25],[994,3535,1201,29],[994,3541,1201,36],[994,3545,1202,9,"c"],[994,3546,1202,10],[994,3550,1202,14],[994,3556,1202,20],[994,3560,1202,24,"c"],[994,3561,1202,25],[994,3565,1202,29],[994,3571,1202,36],[994,3575,1203,9,"c"],[994,3576,1203,10],[994,3580,1203,14],[994,3586,1203,20],[994,3590,1203,24,"c"],[994,3591,1203,25],[994,3595,1203,29],[994,3601,1203,36],[994,3605,1204,9,"c"],[994,3606,1204,10],[994,3610,1204,14],[994,3616,1204,20],[994,3620,1204,24,"c"],[994,3621,1204,25],[994,3625,1204,29],[994,3631,1204,36],[994,3635,1205,9,"c"],[994,3636,1205,10],[994,3640,1205,14],[994,3646,1205,20],[994,3650,1205,24,"c"],[994,3651,1205,25],[994,3655,1205,29],[994,3661,1205,36],[994,3665,1206,9,"c"],[994,3666,1206,10],[994,3670,1206,14],[994,3676,1206,20],[994,3680,1206,24,"c"],[994,3681,1206,25],[994,3685,1206,29],[994,3691,1206,36],[994,3695,1207,9,"c"],[994,3696,1207,10],[994,3700,1207,14],[994,3706,1207,20],[994,3710,1207,24,"c"],[994,3711,1207,25],[994,3715,1207,29],[994,3721,1207,36],[994,3725,1208,8,"c"],[994,3726,1208,9],[994,3731,1208,14],[994,3737,1208,20],[994,3741,1209,9,"c"],[994,3742,1209,10],[994,3746,1209,14],[994,3752,1209,20],[994,3756,1209,24,"c"],[994,3757,1209,25],[994,3761,1209,29],[994,3767,1209,36],[994,3771,1210,9,"c"],[994,3772,1210,10],[994,3776,1210,14],[994,3782,1210,20],[994,3786,1210,24,"c"],[994,3787,1210,25],[994,3791,1210,29],[994,3797,1210,36],[994,3801,1211,8,"c"],[994,3802,1211,9],[994,3807,1211,14],[994,3813,1211,20],[994,3817,1212,8,"c"],[994,3818,1212,9],[994,3823,1212,14],[994,3829,1212,20],[994,3833,1213,8,"c"],[994,3834,1213,9],[994,3839,1213,14],[994,3845,1213,20],[994,3849,1214,8,"c"],[994,3850,1214,9],[994,3855,1214,14],[994,3861,1214,20],[994,3865,1215,9,"c"],[994,3866,1215,10],[994,3870,1215,14],[994,3876,1215,20],[994,3880,1215,24,"c"],[994,3881,1215,25],[994,3885,1215,29],[994,3891,1215,36],[994,3895,1216,8,"c"],[994,3896,1216,9],[994,3901,1216,14],[994,3907,1216,20],[994,3911,1217,8,"c"],[994,3912,1217,9],[994,3917,1217,14],[994,3923,1217,20],[994,3927,1218,8,"c"],[994,3928,1218,9],[994,3933,1218,14],[994,3939,1218,20],[994,3943,1219,8,"c"],[994,3944,1219,9],[994,3949,1219,14],[994,3955,1219,20],[994,3959,1220,8,"c"],[994,3960,1220,9],[994,3965,1220,14],[994,3971,1220,20],[994,3975,1221,9,"c"],[994,3976,1221,10],[994,3980,1221,14],[994,3986,1221,20],[994,3990,1221,24,"c"],[994,3991,1221,25],[994,3995,1221,29],[994,4001,1221,36],[994,4005,1222,8,"c"],[994,4006,1222,9],[994,4011,1222,14],[994,4017,1222,20],[994,4021,1223,9,"c"],[994,4022,1223,10],[994,4026,1223,14],[994,4032,1223,20],[994,4036,1223,24,"c"],[994,4037,1223,25],[994,4041,1223,29],[994,4047,1223,36],[994,4051,1224,8,"c"],[994,4052,1224,9],[994,4057,1224,14],[994,4063,1224,20],[994,4067,1225,8,"c"],[994,4068,1225,9],[994,4073,1225,14],[994,4079,1225,20],[994,4083,1226,8,"c"],[994,4084,1226,9],[994,4089,1226,14],[994,4095,1226,20],[994,4099,1227,8,"c"],[994,4100,1227,9],[994,4105,1227,14],[994,4111,1227,20],[994,4115,1228,9,"c"],[994,4116,1228,10],[994,4120,1228,14],[994,4126,1228,20],[994,4130,1228,24,"c"],[994,4131,1228,25],[994,4135,1228,29],[994,4141,1228,36],[994,4145,1229,8,"c"],[994,4146,1229,9],[994,4151,1229,14],[994,4157,1229,20],[994,4161,1230,8,"c"],[994,4162,1230,9],[994,4167,1230,14],[994,4173,1230,20],[994,4177,1231,8,"c"],[994,4178,1231,9],[994,4183,1231,14],[994,4189,1231,20],[994,4193,1232,8,"c"],[994,4194,1232,9],[994,4199,1232,14],[994,4205,1232,20],[994,4209,1233,8,"c"],[994,4210,1233,9],[994,4215,1233,14],[994,4221,1233,20],[994,4225,1234,8,"c"],[994,4226,1234,9],[994,4231,1234,14],[994,4237,1234,20],[994,4241,1235,8,"c"],[994,4242,1235,9],[994,4247,1235,14],[994,4253,1235,20],[994,4257,1236,8,"c"],[994,4258,1236,9],[994,4263,1236,14],[994,4269,1236,20],[994,4273,1237,8,"c"],[994,4274,1237,9],[994,4279,1237,14],[994,4285,1237,20],[994,4289,1238,8,"c"],[994,4290,1238,9],[994,4295,1238,14],[994,4301,1238,20],[994,4305,1239,9,"c"],[994,4306,1239,10],[994,4310,1239,14],[994,4316,1239,20],[994,4320,1239,24,"c"],[994,4321,1239,25],[994,4325,1239,29],[994,4331,1239,36],[994,4335,1240,8,"c"],[994,4336,1240,9],[994,4341,1240,14],[994,4347,1240,20],[994,4351,1241,9,"c"],[994,4352,1241,10],[994,4356,1241,14],[994,4362,1241,20],[994,4366,1241,24,"c"],[994,4367,1241,25],[994,4371,1241,29],[994,4377,1241,36],[994,4381,1242,9,"c"],[994,4382,1242,10],[994,4386,1242,14],[994,4392,1242,20],[994,4396,1242,24,"c"],[994,4397,1242,25],[994,4401,1242,29],[994,4407,1242,36],[994,4411,1243,9,"c"],[994,4412,1243,10],[994,4416,1243,14],[994,4422,1243,20],[994,4426,1243,24,"c"],[994,4427,1243,25],[994,4431,1243,29],[994,4437,1243,36],[994,4441,1244,8,"c"],[994,4442,1244,9],[994,4447,1244,14],[994,4453,1244,20],[994,4457,1245,8,"c"],[994,4458,1245,9],[994,4463,1245,14],[994,4469,1245,20],[994,4473,1246,8,"c"],[994,4474,1246,9],[994,4479,1246,14],[994,4485,1246,20],[994,4489,1247,9,"c"],[994,4490,1247,10],[994,4494,1247,14],[994,4500,1247,20],[994,4504,1247,24,"c"],[994,4505,1247,25],[994,4509,1247,29],[994,4515,1247,36],[994,4519,1248,9,"c"],[994,4520,1248,10],[994,4524,1248,14],[994,4530,1248,20],[994,4534,1248,24,"c"],[994,4535,1248,25],[994,4539,1248,29],[994,4545,1248,36],[994,4549,1249,8,"c"],[994,4550,1249,9],[994,4555,1249,14],[994,4561,1249,20],[994,4565,1250,9,"c"],[994,4566,1250,10],[994,4570,1250,14],[994,4576,1250,20],[994,4580,1250,24,"c"],[994,4581,1250,25],[994,4585,1250,29],[994,4591,1250,36],[994,4595,1251,9,"c"],[994,4596,1251,10],[994,4600,1251,14],[994,4606,1251,20],[994,4610,1251,24,"c"],[994,4611,1251,25],[994,4615,1251,29],[994,4621,1251,36],[994,4625,1252,8,"c"],[994,4626,1252,9],[994,4631,1252,14],[994,4637,1252,20],[994,4641,1253,8,"c"],[994,4642,1253,9],[994,4647,1253,14],[994,4653,1253,20],[994,4657,1254,8,"c"],[994,4658,1254,9],[994,4663,1254,14],[994,4669,1254,20],[994,4673,1255,8,"c"],[994,4674,1255,9],[994,4679,1255,14],[994,4685,1255,20],[994,4689,1256,8,"c"],[994,4690,1256,9],[994,4695,1256,14],[994,4701,1256,20],[994,4705,1257,8,"c"],[994,4706,1257,9],[994,4711,1257,14],[994,4717,1257,20],[994,4721,1258,8,"c"],[994,4722,1258,9],[994,4727,1258,14],[994,4733,1258,20],[994,4737,1259,8,"c"],[994,4738,1259,9],[994,4743,1259,14],[994,4749,1259,20],[994,4753,1260,8,"c"],[994,4754,1260,9],[994,4759,1260,14],[994,4765,1260,20],[994,4769,1261,8,"c"],[994,4770,1261,9],[994,4775,1261,14],[994,4781,1261,20],[994,4785,1262,9,"c"],[994,4786,1262,10],[994,4790,1262,14],[994,4796,1262,20],[994,4800,1262,24,"c"],[994,4801,1262,25],[994,4805,1262,29],[994,4811,1262,36],[994,4815,1263,8,"c"],[994,4816,1263,9],[994,4821,1263,14],[994,4827,1263,20],[994,4831,1264,8,"c"],[994,4832,1264,9],[994,4837,1264,14],[994,4843,1264,20],[994,4847,1265,8,"c"],[994,4848,1265,9],[994,4853,1265,14],[994,4859,1265,20],[994,4863,1266,8,"c"],[994,4864,1266,9],[994,4869,1266,14],[994,4875,1266,20],[994,4879,1267,8,"c"],[994,4880,1267,9],[994,4885,1267,14],[994,4891,1267,20],[994,4895,1268,8,"c"],[994,4896,1268,9],[994,4901,1268,14],[994,4907,1268,20],[994,4911,1269,8,"c"],[994,4912,1269,9],[994,4917,1269,14],[994,4923,1269,20],[994,4927,1270,8,"c"],[994,4928,1270,9],[994,4933,1270,14],[994,4939,1270,20],[994,4943,1271,8,"c"],[994,4944,1271,9],[994,4949,1271,14],[994,4955,1271,20],[994,4959,1272,8,"c"],[994,4960,1272,9],[994,4965,1272,14],[994,4971,1272,20],[994,4975,1273,9,"c"],[994,4976,1273,10],[994,4980,1273,14],[994,4986,1273,20],[994,4990,1273,24,"c"],[994,4991,1273,25],[994,4995,1273,29],[994,5001,1273,36],[994,5005,1274,8,"c"],[994,5006,1274,9],[994,5011,1274,14],[994,5017,1274,20],[994,5021,1275,8,"c"],[994,5022,1275,9],[994,5027,1275,14],[994,5033,1275,20],[994,5037,1276,8,"c"],[994,5038,1276,9],[994,5043,1276,14],[994,5049,1276,20],[994,5053,1277,8,"c"],[994,5054,1277,9],[994,5059,1277,14],[994,5065,1277,20],[994,5069,1278,9,"c"],[994,5070,1278,10],[994,5074,1278,14],[994,5080,1278,20],[994,5084,1278,24,"c"],[994,5085,1278,25],[994,5089,1278,29],[994,5095,1278,36],[995,2,1279,0],[996,0,1279,1],[996,3]],"functionMap":{"names":["<global>","createLocation","<anonymous>","startsWith","fromCodePoint","fromEntries","codePointAt","trimStart","trimEnd","RE","matchIdentifierAtIndex","Parser","Parser.prototype.parse","Parser.prototype.parseMessage","Parser.prototype.parseTag","Parser.prototype.parseTagName","Parser.prototype.parseLiteral","Parser.prototype.tryParseLeftAngleBracket","Parser.prototype.tryParseQuote","Parser.prototype.tryParseUnquoted","Parser.prototype.parseArgument","Parser.prototype.parseIdentifierIfPossible","Parser.prototype.parseArgumentOptions","Parser.prototype.tryParseArgumentClose","Parser.prototype.parseSimpleArgStyleIfPossible","Parser.prototype.parseNumberSkeletonFromString","Parser.prototype.tryParsePluralOrSelectOptions","Parser.prototype.tryParseDecimalInteger","Parser.prototype.offset","Parser.prototype.isEOF","Parser.prototype.clonePosition","Parser.prototype.char","Parser.prototype.error","Parser.prototype.bump","Parser.prototype.bumpIf","Parser.prototype.bumpUntil","Parser.prototype.bumpTo","Parser.prototype.bumpSpace","Parser.prototype.peek","_isAlpha","_isAlphaOrSlash","_isPotentialElementNameChar","_isWhiteSpace","_isPatternSyntax"],"mappings":"AAA;ACY;CDE;MEY;KFK;QGkB;SHE;QGE;SHE;QII;SJmB;QKM;SLO;QMG;SNE;QME;SNc;QOG;SPE;QOE;SPE;QQG;SRE;QQE;SRE;ASE;CTE;6BUM;KVK;6BUI;KVW;4BEE;ISC;KTQ;6BUC;KVK;oCWC;KXoD;gCYmB;KZsD;oCaI;KbO;oCcC;Kd0B;gDeC;KfU;qCgBM;KhBkD;wCiBC;KjBgB;qCkBC;KlB8C;iDmBK;KnBS;4CoBC;KpBuK;6CqBC;KrBQ;qDsBI;KtB2C;qDuBC;KvBmB;qDwBW;KxB0E;8CyBC;KzB8B;8B0BC;K1BE;6B2BC;K3BE;qC4BC;K5BO;4B6BK;K7BU;6B8BC;K9BS;4B+BE;K/Be;8BgCO;KhCQ;iCiCK;KjCW;8BkCK;KlCkB;iCmCE;KnCI;4BoCK;KpCQ;CFE;AuCO;CvCG;AwCC;CxCE;AyCE;CzCoB;A0CK;C1CO;A2CK;C3CyP"},"hasCjsExports":true},"type":"js/module"}]}