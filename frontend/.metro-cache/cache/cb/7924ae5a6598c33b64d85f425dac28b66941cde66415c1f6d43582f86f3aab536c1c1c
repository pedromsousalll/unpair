{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":126},"end":{"line":7,"column":29,"index":142}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"@react-aria/interactions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":20,"index":164},"end":{"line":8,"column":55,"index":199}}],"key":"8p+eIuNpzFm/OacxQ1k/O5ZVZdY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useOverlay = useOverlay;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _interactions = require(_dependencyMap[1], \"@react-aria/interactions\");\n  const visibleOverlays = [];\n\n  /**\n   * Provides the behavior for overlays such as dialogs, popovers, and menus.\n   * Hides the overlay when the user interacts outside it, when the Escape key is pressed,\n   * or optionally, on blur. Only the top-most overlay will close at once.\n   */\n  function useOverlay(props, ref) {\n    let {\n      onClose,\n      shouldCloseOnBlur,\n      isOpen,\n      isKeyboardDismissDisabled = false\n    } = props;\n\n    // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.\n    (0, _react.useEffect)(() => {\n      if (isOpen) {\n        visibleOverlays.push(ref);\n      }\n      return () => {\n        let index = visibleOverlays.indexOf(ref);\n        if (index >= 0) {\n          visibleOverlays.splice(index, 1);\n        }\n      };\n    }, [isOpen, ref]);\n\n    // Only hide the overlay when it is the topmost visible overlay in the stack.\n    let onHide = () => {\n      if (visibleOverlays[visibleOverlays.length - 1] === ref && onClose) {\n        onClose();\n      }\n    };\n\n    // Handle the escape key\n    let onKeyDown = e => {\n      if (e.key === 'Escape' && !isKeyboardDismissDisabled) {\n        e.preventDefault();\n        onHide();\n      }\n    };\n\n    // Handle clicking outside the overlay to close it\n\n    let {\n      focusWithinProps\n    } = (0, _interactions.useFocusWithin)({\n      isDisabled: !shouldCloseOnBlur,\n      onBlurWithin: () => {\n        onClose && onClose();\n      }\n    });\n    return {\n      overlayProps: {\n        onKeyDown,\n        ...focusWithinProps\n      }\n    };\n  }\n});","lineCount":70,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"useOverlay"],[7,20,6,18],[7,23,6,21,"useOverlay"],[7,33,6,31],[8,2,7,0],[8,6,7,4,"_react"],[8,12,7,10],[8,15,7,13,"require"],[8,22,7,20],[8,23,7,20,"_dependencyMap"],[8,37,7,20],[8,49,7,28],[8,50,7,29],[9,2,8,0],[9,6,8,4,"_interactions"],[9,19,8,17],[9,22,8,20,"require"],[9,29,8,27],[9,30,8,27,"_dependencyMap"],[9,44,8,27],[9,75,8,54],[9,76,8,55],[10,2,9,0],[10,8,9,6,"visibleOverlays"],[10,23,9,21],[10,26,9,24],[10,28,9,26],[12,2,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,2,16,0],[17,11,16,9,"useOverlay"],[17,21,16,19,"useOverlay"],[17,22,16,20,"props"],[17,27,16,25],[17,29,16,27,"ref"],[17,32,16,30],[17,34,16,32],[18,4,17,2],[18,8,17,6],[19,6,18,4,"onClose"],[19,13,18,11],[20,6,19,4,"shouldCloseOnBlur"],[20,23,19,21],[21,6,20,4,"isOpen"],[21,12,20,10],[22,6,21,4,"isKeyboardDismissDisabled"],[22,31,21,29],[22,34,21,32],[23,4,22,2],[23,5,22,3],[23,8,22,6,"props"],[23,13,22,11],[25,4,24,2],[26,4,25,2],[26,5,25,3],[26,6,25,4],[26,8,25,6,"_react"],[26,14,25,12],[26,15,25,13,"useEffect"],[26,24,25,22],[26,26,25,24],[26,32,25,30],[27,6,26,4],[27,10,26,8,"isOpen"],[27,16,26,14],[27,18,26,16],[28,8,27,6,"visibleOverlays"],[28,23,27,21],[28,24,27,22,"push"],[28,28,27,26],[28,29,27,27,"ref"],[28,32,27,30],[28,33,27,31],[29,6,28,4],[30,6,29,4],[30,13,29,11],[30,19,29,17],[31,8,30,6],[31,12,30,10,"index"],[31,17,30,15],[31,20,30,18,"visibleOverlays"],[31,35,30,33],[31,36,30,34,"indexOf"],[31,43,30,41],[31,44,30,42,"ref"],[31,47,30,45],[31,48,30,46],[32,8,31,6],[32,12,31,10,"index"],[32,17,31,15],[32,21,31,19],[32,22,31,20],[32,24,31,22],[33,10,32,8,"visibleOverlays"],[33,25,32,23],[33,26,32,24,"splice"],[33,32,32,30],[33,33,32,31,"index"],[33,38,32,36],[33,40,32,38],[33,41,32,39],[33,42,32,40],[34,8,33,6],[35,6,34,4],[35,7,34,5],[36,4,35,2],[36,5,35,3],[36,7,35,5],[36,8,35,6,"isOpen"],[36,14,35,12],[36,16,35,14,"ref"],[36,19,35,17],[36,20,35,18],[36,21,35,19],[38,4,37,2],[39,4,38,2],[39,8,38,6,"onHide"],[39,14,38,12],[39,17,38,15,"onHide"],[39,18,38,15],[39,23,38,21],[40,6,39,4],[40,10,39,8,"visibleOverlays"],[40,25,39,23],[40,26,39,24,"visibleOverlays"],[40,41,39,39],[40,42,39,40,"length"],[40,48,39,46],[40,51,39,49],[40,52,39,50],[40,53,39,51],[40,58,39,56,"ref"],[40,61,39,59],[40,65,39,63,"onClose"],[40,72,39,70],[40,74,39,72],[41,8,40,6,"onClose"],[41,15,40,13],[41,16,40,14],[41,17,40,15],[42,6,41,4],[43,4,42,2],[43,5,42,3],[45,4,44,2],[46,4,45,2],[46,8,45,6,"onKeyDown"],[46,17,45,15],[46,20,45,18,"e"],[46,21,45,19],[46,25,45,23],[47,6,46,4],[47,10,46,8,"e"],[47,11,46,9],[47,12,46,10,"key"],[47,15,46,13],[47,20,46,18],[47,28,46,26],[47,32,46,30],[47,33,46,31,"isKeyboardDismissDisabled"],[47,58,46,56],[47,60,46,58],[48,8,47,6,"e"],[48,9,47,7],[48,10,47,8,"preventDefault"],[48,24,47,22],[48,25,47,23],[48,26,47,24],[49,8,48,6,"onHide"],[49,14,48,12],[49,15,48,13],[49,16,48,14],[50,6,49,4],[51,4,50,2],[51,5,50,3],[53,4,52,2],[55,4,54,2],[55,8,54,6],[56,6,55,4,"focusWithinProps"],[57,4,56,2],[57,5,56,3],[57,8,56,6],[57,9,56,7],[57,10,56,8],[57,12,56,10,"_interactions"],[57,25,56,23],[57,26,56,24,"useFocusWithin"],[57,40,56,38],[57,42,56,40],[58,6,57,4,"isDisabled"],[58,16,57,14],[58,18,57,16],[58,19,57,17,"shouldCloseOnBlur"],[58,36,57,34],[59,6,58,4,"onBlurWithin"],[59,18,58,16],[59,20,58,18,"onBlurWithin"],[59,21,58,18],[59,26,58,24],[60,8,59,6,"onClose"],[60,15,59,13],[60,19,59,17,"onClose"],[60,26,59,24],[60,27,59,25],[60,28,59,26],[61,6,60,4],[62,4,61,2],[62,5,61,3],[62,6,61,4],[63,4,62,2],[63,11,62,9],[64,6,63,4,"overlayProps"],[64,18,63,16],[64,20,63,18],[65,8,64,6,"onKeyDown"],[65,17,64,15],[66,8,65,6],[66,11,65,9,"focusWithinProps"],[67,6,66,4],[68,4,67,2],[68,5,67,3],[69,2,68,0],[70,0,68,1],[70,3]],"functionMap":{"names":["<global>","useOverlay","<anonymous>","onHide","onKeyDown","onBlurWithin"],"mappings":"AAA;ACe;wBCS;GDU;eEG;GFI;kBGG;GHK;kBIQ;KJE;CDQ"},"hasCjsExports":true},"type":"js/module"}]}