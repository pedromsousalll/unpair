{"dependencies":[{"name":"./../core/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"lkcZRGjQJVuW4bHpGxtG+xbIScI=","exportNames":["*"],"imports":1}},{"name":"./styled-system","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":53},"end":{"line":2,"column":64,"index":117}}],"key":"2I/iLyBJopLRDc3oYQtZ7Pz73lk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"checkAndReturnUtilityProp\", {\n    enumerable: true,\n    get: function () {\n      return checkAndReturnUtilityProp;\n    }\n  });\n  Object.defineProperty(exports, \"convertUtilityPropsToSX\", {\n    enumerable: true,\n    get: function () {\n      return convertUtilityPropsToSX;\n    }\n  });\n  var _coreUtils = require(_dependencyMap[0], \"./../core/utils\");\n  var _styledSystem = require(_dependencyMap[1], \"./styled-system\");\n  const getSxPropsPathFromProp = (propString, reservedKeys, descendants = []) => {\n    const propsPath = propString.split('-');\n    let responsiveProp = '';\n    let isInvalidPropString = false;\n    const propToBeApplied = propsPath.pop();\n    // let themeName: any = '';\n\n    const gsConvertedPropsPath = [];\n\n    // if (propsPath[0] === 'theme') {\n    //   propsPath.shift();\n    //   themeName = propsPath.shift();\n    // }\n\n    propsPath.forEach(prop => {\n      if (prop.startsWith('t_')) {\n        const match = prop.match(/_(.+)/);\n        const result = match ? match[1] : null;\n        if (result) {\n          gsConvertedPropsPath.push(`.${result}`);\n        } else {\n          isInvalidPropString = true;\n          console.warn(`${propString} is invalid property.`);\n          return;\n        }\n      } else {\n        if (reservedKeys[prop]) {\n          var _reservedKeys$prop;\n          const isMediaQuery = (_reservedKeys$prop = reservedKeys[prop]) === null || _reservedKeys$prop === void 0 ? void 0 : _reservedKeys$prop.isMediaQuery;\n          if (isMediaQuery) {\n            if (!responsiveProp) {\n              responsiveProp = reservedKeys[prop].key;\n            } else {\n              isInvalidPropString = true;\n              console.warn(`${propString} is invalid property.`);\n              return;\n            }\n          } else {\n            gsConvertedPropsPath.push(reservedKeys[prop].key);\n          }\n        } else if (prop.startsWith('_') || descendants.includes(prop)) {\n          gsConvertedPropsPath.push(prop);\n        } else {\n          console.warn(`${propString} is invalid property.`);\n          isInvalidPropString = true;\n        }\n      }\n    });\n    if (!isInvalidPropString) {\n      if (responsiveProp) {\n        gsConvertedPropsPath.unshift(responsiveProp);\n      }\n      // else if (themeName) {\n      //   gsConvertedPropsPath.unshift(`.${themeName}`);\n      // }\n      gsConvertedPropsPath.push(propToBeApplied);\n    }\n    return {\n      propsPath: gsConvertedPropsPath,\n      isInvalidPropString\n    };\n  };\n  const checkAndReturnUtilityProp = (prop, propValue, styledSystemProps, descendants, reservedKeys) => {\n    if (styledSystemProps[prop]) {\n      return {\n        propPath: [prop],\n        value: propValue\n      };\n    } else {\n      if (prop.startsWith('$')) {\n        const reservedKey = prop.slice(1);\n        if (reservedKeys[reservedKey]) {\n          return {\n            propPath: [reservedKeys[reservedKey].key],\n            value: propValue\n          };\n        } else if (Array.isArray(descendants) && descendants.includes(reservedKey)) {\n          return {\n            propPath: [reservedKey],\n            value: propValue\n          };\n        } else {\n          // resolve ${{states/colormode/media}}-***\n          const {\n            propsPath: sxPropPath,\n            isInvalidPropString\n          } = getSxPropsPathFromProp(reservedKey, reservedKeys, descendants);\n          if (!isInvalidPropString) {\n            return {\n              propPath: sxPropPath,\n              value: propValue\n            };\n          }\n        }\n      }\n    }\n    return {\n      prop: prop,\n      value: propValue\n    };\n  };\n  const convertUtilityPropsToSX = (styledSystemProps, descendants, componentProps, reservedKeys = _styledSystem.reservedKeys) => {\n    const sxPropsConvertedUtilityProps = {};\n    const ignoredProps = {};\n    if (Object.keys(componentProps).length === 0) return {\n      sxProps: {},\n      mergedProps: {}\n    };\n    Object.keys(componentProps).forEach(prop => {\n      const {\n        prop: propString,\n        propPath,\n        value: propValue\n      } = checkAndReturnUtilityProp(prop, componentProps[prop], styledSystemProps, descendants, reservedKeys);\n      if (propString) {\n        ignoredProps[prop] = propValue;\n      } else {\n        if (propPath && propPath.length > 0) {\n          (0, _coreUtils.setObjectKeyValue)(sxPropsConvertedUtilityProps, propPath, propValue);\n        }\n      }\n    });\n    return {\n      sxProps: sxPropsConvertedUtilityProps,\n      mergedProps: ignoredProps\n    };\n  };\n});","lineCount":148,"map":[[7,2,65,0,"Object"],[7,8,65,0],[7,9,65,0,"defineProperty"],[7,23,65,0],[7,24,65,0,"exports"],[7,31,65,0],[8,4,65,0,"enumerable"],[8,14,65,0],[9,4,65,0,"get"],[9,7,65,0],[9,18,65,0,"get"],[9,19,65,0],[10,6,65,0],[10,13,65,0,"checkAndReturnUtilityProp"],[10,38,65,0],[11,4,65,0],[12,2,65,0],[13,2,104,0,"Object"],[13,8,104,0],[13,9,104,0,"defineProperty"],[13,23,104,0],[13,24,104,0,"exports"],[13,31,104,0],[14,4,104,0,"enumerable"],[14,14,104,0],[15,4,104,0,"get"],[15,7,104,0],[15,18,104,0,"get"],[15,19,104,0],[16,6,104,0],[16,13,104,0,"convertUtilityPropsToSX"],[16,36,104,0],[17,4,104,0],[18,2,104,0],[19,2,1,0],[19,6,1,0,"_coreUtils"],[19,16,1,0],[19,19,1,0,"require"],[19,26,1,0],[19,27,1,0,"_dependencyMap"],[19,41,1,0],[20,2,2,0],[20,6,2,0,"_styledSystem"],[20,19,2,0],[20,22,2,0,"require"],[20,29,2,0],[20,30,2,0,"_dependencyMap"],[20,44,2,0],[21,2,3,0],[21,8,3,6,"getSxPropsPathFromProp"],[21,30,3,28],[21,33,3,31,"getSxPropsPathFromProp"],[21,34,3,32,"propString"],[21,44,3,42],[21,46,3,44,"reservedKeys"],[21,58,3,56],[21,60,3,58,"descendants"],[21,71,3,69],[21,74,3,72],[21,76,3,74],[21,81,3,79],[22,4,4,2],[22,10,4,8,"propsPath"],[22,19,4,17],[22,22,4,20,"propString"],[22,32,4,30],[22,33,4,31,"split"],[22,38,4,36],[22,39,4,37],[22,42,4,40],[22,43,4,41],[23,4,5,2],[23,8,5,6,"responsiveProp"],[23,22,5,20],[23,25,5,23],[23,27,5,25],[24,4,6,2],[24,8,6,6,"isInvalidPropString"],[24,27,6,25],[24,30,6,28],[24,35,6,33],[25,4,7,2],[25,10,7,8,"propToBeApplied"],[25,25,7,23],[25,28,7,26,"propsPath"],[25,37,7,35],[25,38,7,36,"pop"],[25,41,7,39],[25,42,7,40],[25,43,7,41],[26,4,8,2],[28,4,10,2],[28,10,10,8,"gsConvertedPropsPath"],[28,30,10,28],[28,33,10,31],[28,35,10,33],[30,4,12,2],[31,4,13,2],[32,4,14,2],[33,4,15,2],[35,4,17,2,"propsPath"],[35,13,17,11],[35,14,17,12,"forEach"],[35,21,17,19],[35,22,17,20,"prop"],[35,26,17,24],[35,30,17,28],[36,6,18,4],[36,10,18,8,"prop"],[36,14,18,12],[36,15,18,13,"startsWith"],[36,25,18,23],[36,26,18,24],[36,30,18,28],[36,31,18,29],[36,33,18,31],[37,8,19,6],[37,14,19,12,"match"],[37,19,19,17],[37,22,19,20,"prop"],[37,26,19,24],[37,27,19,25,"match"],[37,32,19,30],[37,33,19,31],[37,40,19,38],[37,41,19,39],[38,8,20,6],[38,14,20,12,"result"],[38,20,20,18],[38,23,20,21,"match"],[38,28,20,26],[38,31,20,29,"match"],[38,36,20,34],[38,37,20,35],[38,38,20,36],[38,39,20,37],[38,42,20,40],[38,46,20,44],[39,8,21,6],[39,12,21,10,"result"],[39,18,21,16],[39,20,21,18],[40,10,22,8,"gsConvertedPropsPath"],[40,30,22,28],[40,31,22,29,"push"],[40,35,22,33],[40,36,22,34],[40,40,22,38,"result"],[40,46,22,44],[40,48,22,46],[40,49,22,47],[41,8,23,6],[41,9,23,7],[41,15,23,13],[42,10,24,8,"isInvalidPropString"],[42,29,24,27],[42,32,24,30],[42,36,24,34],[43,10,25,8,"console"],[43,17,25,15],[43,18,25,16,"warn"],[43,22,25,20],[43,23,25,21],[43,26,25,24,"propString"],[43,36,25,34],[43,59,25,57],[43,60,25,58],[44,10,26,8],[45,8,27,6],[46,6,28,4],[46,7,28,5],[46,13,28,11],[47,8,29,6],[47,12,29,10,"reservedKeys"],[47,24,29,22],[47,25,29,23,"prop"],[47,29,29,27],[47,30,29,28],[47,32,29,30],[48,10,30,8],[48,14,30,12,"_reservedKeys$prop"],[48,32,30,30],[49,10,31,8],[49,16,31,14,"isMediaQuery"],[49,28,31,26],[49,31,31,29],[49,32,31,30,"_reservedKeys$prop"],[49,50,31,48],[49,53,31,51,"reservedKeys"],[49,65,31,63],[49,66,31,64,"prop"],[49,70,31,68],[49,71,31,69],[49,77,31,75],[49,81,31,79],[49,85,31,83,"_reservedKeys$prop"],[49,103,31,101],[49,108,31,106],[49,113,31,111],[49,114,31,112],[49,117,31,115],[49,122,31,120],[49,123,31,121],[49,126,31,124,"_reservedKeys$prop"],[49,144,31,142],[49,145,31,143,"isMediaQuery"],[49,157,31,155],[50,10,32,8],[50,14,32,12,"isMediaQuery"],[50,26,32,24],[50,28,32,26],[51,12,33,10],[51,16,33,14],[51,17,33,15,"responsiveProp"],[51,31,33,29],[51,33,33,31],[52,14,34,12,"responsiveProp"],[52,28,34,26],[52,31,34,29,"reservedKeys"],[52,43,34,41],[52,44,34,42,"prop"],[52,48,34,46],[52,49,34,47],[52,50,34,48,"key"],[52,53,34,51],[53,12,35,10],[53,13,35,11],[53,19,35,17],[54,14,36,12,"isInvalidPropString"],[54,33,36,31],[54,36,36,34],[54,40,36,38],[55,14,37,12,"console"],[55,21,37,19],[55,22,37,20,"warn"],[55,26,37,24],[55,27,37,25],[55,30,37,28,"propString"],[55,40,37,38],[55,63,37,61],[55,64,37,62],[56,14,38,12],[57,12,39,10],[58,10,40,8],[58,11,40,9],[58,17,40,15],[59,12,41,10,"gsConvertedPropsPath"],[59,32,41,30],[59,33,41,31,"push"],[59,37,41,35],[59,38,41,36,"reservedKeys"],[59,50,41,48],[59,51,41,49,"prop"],[59,55,41,53],[59,56,41,54],[59,57,41,55,"key"],[59,60,41,58],[59,61,41,59],[60,10,42,8],[61,8,43,6],[61,9,43,7],[61,15,43,13],[61,19,43,17,"prop"],[61,23,43,21],[61,24,43,22,"startsWith"],[61,34,43,32],[61,35,43,33],[61,38,43,36],[61,39,43,37],[61,43,43,41,"descendants"],[61,54,43,52],[61,55,43,53,"includes"],[61,63,43,61],[61,64,43,62,"prop"],[61,68,43,66],[61,69,43,67],[61,71,43,69],[62,10,44,8,"gsConvertedPropsPath"],[62,30,44,28],[62,31,44,29,"push"],[62,35,44,33],[62,36,44,34,"prop"],[62,40,44,38],[62,41,44,39],[63,8,45,6],[63,9,45,7],[63,15,45,13],[64,10,46,8,"console"],[64,17,46,15],[64,18,46,16,"warn"],[64,22,46,20],[64,23,46,21],[64,26,46,24,"propString"],[64,36,46,34],[64,59,46,57],[64,60,46,58],[65,10,47,8,"isInvalidPropString"],[65,29,47,27],[65,32,47,30],[65,36,47,34],[66,8,48,6],[67,6,49,4],[68,4,50,2],[68,5,50,3],[68,6,50,4],[69,4,51,2],[69,8,51,6],[69,9,51,7,"isInvalidPropString"],[69,28,51,26],[69,30,51,28],[70,6,52,4],[70,10,52,8,"responsiveProp"],[70,24,52,22],[70,26,52,24],[71,8,53,6,"gsConvertedPropsPath"],[71,28,53,26],[71,29,53,27,"unshift"],[71,36,53,34],[71,37,53,35,"responsiveProp"],[71,51,53,49],[71,52,53,50],[72,6,54,4],[73,6,55,4],[74,6,56,4],[75,6,57,4],[76,6,58,4,"gsConvertedPropsPath"],[76,26,58,24],[76,27,58,25,"push"],[76,31,58,29],[76,32,58,30,"propToBeApplied"],[76,47,58,45],[76,48,58,46],[77,4,59,2],[78,4,60,2],[78,11,60,9],[79,6,61,4,"propsPath"],[79,15,61,13],[79,17,61,15,"gsConvertedPropsPath"],[79,37,61,35],[80,6,62,4,"isInvalidPropString"],[81,4,63,2],[81,5,63,3],[82,2,64,0],[82,3,64,1],[83,2,65,7],[83,8,65,13,"checkAndReturnUtilityProp"],[83,33,65,38],[83,36,65,41,"checkAndReturnUtilityProp"],[83,37,65,42,"prop"],[83,41,65,46],[83,43,65,48,"propValue"],[83,52,65,57],[83,54,65,59,"styledSystemProps"],[83,71,65,76],[83,73,65,78,"descendants"],[83,84,65,89],[83,86,65,91,"reservedKeys"],[83,98,65,103],[83,103,65,108],[84,4,66,2],[84,8,66,6,"styledSystemProps"],[84,25,66,23],[84,26,66,24,"prop"],[84,30,66,28],[84,31,66,29],[84,33,66,31],[85,6,67,4],[85,13,67,11],[86,8,68,6,"propPath"],[86,16,68,14],[86,18,68,16],[86,19,68,17,"prop"],[86,23,68,21],[86,24,68,22],[87,8,69,6,"value"],[87,13,69,11],[87,15,69,13,"propValue"],[88,6,70,4],[88,7,70,5],[89,4,71,2],[89,5,71,3],[89,11,71,9],[90,6,72,4],[90,10,72,8,"prop"],[90,14,72,12],[90,15,72,13,"startsWith"],[90,25,72,23],[90,26,72,24],[90,29,72,27],[90,30,72,28],[90,32,72,30],[91,8,73,6],[91,14,73,12,"reservedKey"],[91,25,73,23],[91,28,73,26,"prop"],[91,32,73,30],[91,33,73,31,"slice"],[91,38,73,36],[91,39,73,37],[91,40,73,38],[91,41,73,39],[92,8,74,6],[92,12,74,10,"reservedKeys"],[92,24,74,22],[92,25,74,23,"reservedKey"],[92,36,74,34],[92,37,74,35],[92,39,74,37],[93,10,75,8],[93,17,75,15],[94,12,76,10,"propPath"],[94,20,76,18],[94,22,76,20],[94,23,76,21,"reservedKeys"],[94,35,76,33],[94,36,76,34,"reservedKey"],[94,47,76,45],[94,48,76,46],[94,49,76,47,"key"],[94,52,76,50],[94,53,76,51],[95,12,77,10,"value"],[95,17,77,15],[95,19,77,17,"propValue"],[96,10,78,8],[96,11,78,9],[97,8,79,6],[97,9,79,7],[97,15,79,13],[97,19,79,17,"Array"],[97,24,79,22],[97,25,79,23,"isArray"],[97,32,79,30],[97,33,79,31,"descendants"],[97,44,79,42],[97,45,79,43],[97,49,79,47,"descendants"],[97,60,79,58],[97,61,79,59,"includes"],[97,69,79,67],[97,70,79,68,"reservedKey"],[97,81,79,79],[97,82,79,80],[97,84,79,82],[98,10,80,8],[98,17,80,15],[99,12,81,10,"propPath"],[99,20,81,18],[99,22,81,20],[99,23,81,21,"reservedKey"],[99,34,81,32],[99,35,81,33],[100,12,82,10,"value"],[100,17,82,15],[100,19,82,17,"propValue"],[101,10,83,8],[101,11,83,9],[102,8,84,6],[102,9,84,7],[102,15,84,13],[103,10,85,8],[104,10,86,8],[104,16,86,14],[105,12,87,10,"propsPath"],[105,21,87,19],[105,23,87,21,"sxPropPath"],[105,33,87,31],[106,12,88,10,"isInvalidPropString"],[107,10,89,8],[107,11,89,9],[107,14,89,12,"getSxPropsPathFromProp"],[107,36,89,34],[107,37,89,35,"reservedKey"],[107,48,89,46],[107,50,89,48,"reservedKeys"],[107,62,89,60],[107,64,89,62,"descendants"],[107,75,89,73],[107,76,89,74],[108,10,90,8],[108,14,90,12],[108,15,90,13,"isInvalidPropString"],[108,34,90,32],[108,36,90,34],[109,12,91,10],[109,19,91,17],[110,14,92,12,"propPath"],[110,22,92,20],[110,24,92,22,"sxPropPath"],[110,34,92,32],[111,14,93,12,"value"],[111,19,93,17],[111,21,93,19,"propValue"],[112,12,94,10],[112,13,94,11],[113,10,95,8],[114,8,96,6],[115,6,97,4],[116,4,98,2],[117,4,99,2],[117,11,99,9],[118,6,100,4,"prop"],[118,10,100,8],[118,12,100,10,"prop"],[118,16,100,14],[119,6,101,4,"value"],[119,11,101,9],[119,13,101,11,"propValue"],[120,4,102,2],[120,5,102,3],[121,2,103,0],[121,3,103,1],[122,2,104,7],[122,8,104,13,"convertUtilityPropsToSX"],[122,31,104,36],[122,34,104,39,"convertUtilityPropsToSX"],[122,35,104,40,"styledSystemProps"],[122,52,104,57],[122,54,104,59,"descendants"],[122,65,104,70],[122,67,104,72,"componentProps"],[122,81,104,86],[122,83,104,88,"reservedKeys"],[122,95,104,100],[122,98,104,103,"_reservedKeys"],[122,111,104,116],[122,112,104,116,"reservedKeys"],[122,124,104,116],[122,129,104,121],[123,4,105,2],[123,10,105,8,"sxPropsConvertedUtilityProps"],[123,38,105,36],[123,41,105,39],[123,42,105,40],[123,43,105,41],[124,4,106,2],[124,10,106,8,"ignoredProps"],[124,22,106,20],[124,25,106,23],[124,26,106,24],[124,27,106,25],[125,4,107,2],[125,8,107,6,"Object"],[125,14,107,12],[125,15,107,13,"keys"],[125,19,107,17],[125,20,107,18,"componentProps"],[125,34,107,32],[125,35,107,33],[125,36,107,34,"length"],[125,42,107,40],[125,47,107,45],[125,48,107,46],[125,50,107,48],[125,57,107,55],[126,6,108,4,"sxProps"],[126,13,108,11],[126,15,108,13],[126,16,108,14],[126,17,108,15],[127,6,109,4,"mergedProps"],[127,17,109,15],[127,19,109,17],[127,20,109,18],[128,4,110,2],[128,5,110,3],[129,4,111,2,"Object"],[129,10,111,8],[129,11,111,9,"keys"],[129,15,111,13],[129,16,111,14,"componentProps"],[129,30,111,28],[129,31,111,29],[129,32,111,30,"forEach"],[129,39,111,37],[129,40,111,38,"prop"],[129,44,111,42],[129,48,111,46],[130,6,112,4],[130,12,112,10],[131,8,113,6,"prop"],[131,12,113,10],[131,14,113,12,"propString"],[131,24,113,22],[132,8,114,6,"propPath"],[132,16,114,14],[133,8,115,6,"value"],[133,13,115,11],[133,15,115,13,"propValue"],[134,6,116,4],[134,7,116,5],[134,10,116,8,"checkAndReturnUtilityProp"],[134,35,116,33],[134,36,116,34,"prop"],[134,40,116,38],[134,42,116,40,"componentProps"],[134,56,116,54],[134,57,116,55,"prop"],[134,61,116,59],[134,62,116,60],[134,64,116,62,"styledSystemProps"],[134,81,116,79],[134,83,116,81,"descendants"],[134,94,116,92],[134,96,116,94,"reservedKeys"],[134,108,116,106],[134,109,116,107],[135,6,117,4],[135,10,117,8,"propString"],[135,20,117,18],[135,22,117,20],[136,8,118,6,"ignoredProps"],[136,20,118,18],[136,21,118,19,"prop"],[136,25,118,23],[136,26,118,24],[136,29,118,27,"propValue"],[136,38,118,36],[137,6,119,4],[137,7,119,5],[137,13,119,11],[138,8,120,6],[138,12,120,10,"propPath"],[138,20,120,18],[138,24,120,22,"propPath"],[138,32,120,30],[138,33,120,31,"length"],[138,39,120,37],[138,42,120,40],[138,43,120,41],[138,45,120,43],[139,10,121,8],[139,14,121,8,"setObjectKeyValue"],[139,24,121,25],[139,25,121,25,"setObjectKeyValue"],[139,42,121,25],[139,44,121,26,"sxPropsConvertedUtilityProps"],[139,72,121,54],[139,74,121,56,"propPath"],[139,82,121,64],[139,84,121,66,"propValue"],[139,93,121,75],[139,94,121,76],[140,8,122,6],[141,6,123,4],[142,4,124,2],[142,5,124,3],[142,6,124,4],[143,4,125,2],[143,11,125,9],[144,6,126,4,"sxProps"],[144,13,126,11],[144,15,126,13,"sxPropsConvertedUtilityProps"],[144,43,126,41],[145,6,127,4,"mergedProps"],[145,17,127,15],[145,19,127,17,"ignoredProps"],[146,4,128,2],[146,5,128,3],[147,2,129,0],[147,3,129,1],[148,0,129,2],[148,3]],"functionMap":{"names":["<global>","getSxPropsPathFromProp","propsPath.forEach$argument_0","checkAndReturnUtilityProp","convertUtilityPropsToSX","Object.keys.forEach$argument_0"],"mappings":"AAA;+BCE;oBCc;GDiC;CDc;yCGC;CHsC;uCIC;sCCO;GDa;CJK"},"hasCjsExports":false},"type":"js/module"}]}