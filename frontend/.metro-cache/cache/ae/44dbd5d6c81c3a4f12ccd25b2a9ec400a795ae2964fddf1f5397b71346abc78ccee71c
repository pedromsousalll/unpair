{"dependencies":[{"name":"@react-aria/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":121},"end":{"line":7,"column":41,"index":149}}],"key":"hH7ZPgKu/nR0zv7dDY6DfywJY/Y=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":14,"index":165},"end":{"line":8,"column":32,"index":183}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":13,"index":198},"end":{"line":9,"column":29,"index":214}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"@react-aria/interactions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":20,"index":236},"end":{"line":10,"column":55,"index":271}}],"key":"8p+eIuNpzFm/OacxQ1k/O5ZVZdY=","exportNames":["*"],"imports":1}},{"name":"@react-aria/label","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":13,"index":286},"end":{"line":11,"column":41,"index":314}}],"key":"4aiRi+Avy5UxLtaihYKHDRnwPBQ=","exportNames":["*"],"imports":1}},{"name":"@react-native-aria/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":14,"index":330},"end":{"line":12,"column":49,"index":365}}],"key":"sYjsikLgCJztsA5fDMHEvbKbndU=","exportNames":["*"],"imports":1}},{"name":"./useMove","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":15,"index":382},"end":{"line":13,"column":35,"index":402}}],"key":"/61U8Ore7AeJ0SOzCou+MwFpsS4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useSlider = void 0;\n  var _utils = require(_dependencyMap[0], \"@react-aria/utils\");\n  var _utils2 = require(_dependencyMap[1], \"./utils\");\n  var _react = require(_dependencyMap[2], \"react\");\n  var _interactions = require(_dependencyMap[3], \"@react-aria/interactions\");\n  var _label = require(_dependencyMap[4], \"@react-aria/label\");\n  var _utils3 = require(_dependencyMap[5], \"@react-native-aria/utils\");\n  var _useMove = require(_dependencyMap[6], \"./useMove\");\n  function useSliderWeb(props, state, trackLayout, isReversed) {\n    let {\n      labelProps,\n      fieldProps\n    } = (0, _label.useLabel)(props);\n    let isVertical = props.orientation === 'vertical';\n\n    // Attach id of the label to the state so it can be accessed by useSliderThumb.\n    _utils2.sliderIds.set(state, labelProps.id ?? fieldProps.id);\n    const direction = (0, _utils3.isRTL)() ? 'rtl' : undefined;\n    let {\n      addGlobalListener,\n      removeGlobalListener\n    } = (0, _utils.useGlobalListeners)();\n\n    // When the user clicks or drags the track, we want the motion to set and drag the\n    // closest thumb.  Hence we also need to install useMove() on the track element.\n    // Here, we keep track of which index is the \"closest\" to the drag start point.\n    // It is set onMouseDown/onTouchDown; see trackProps below.\n    const realTimeTrackDraggingIndex = (0, _react.useRef)(null);\n    const stateRef = (0, _react.useRef)(null);\n    stateRef.current = state;\n    const reverseX = isReversed || direction === 'rtl';\n    const currentPosition = (0, _react.useRef)(null);\n    const {\n      moveProps\n    } = (0, _useMove.useMove)({\n      onMoveStart() {\n        currentPosition.current = null;\n      },\n      onMove({\n        deltaX,\n        deltaY\n      }) {\n        let size = isVertical ? trackLayout.height : trackLayout.width;\n        if (currentPosition.current == null) {\n          currentPosition.current = stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) * size;\n        }\n        let delta = isVertical ? deltaY : deltaX;\n        if (reverseX) {\n          if (!isVertical) {\n            delta = -delta;\n          }\n        } else {\n          if (isVertical) {\n            delta = -delta;\n          }\n        }\n        currentPosition.current += delta;\n        if (realTimeTrackDraggingIndex.current != null) {\n          const percent = (0, _utils.clamp)(currentPosition.current / size, 0, 1);\n          stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n        }\n      },\n      onMoveEnd() {\n        if (realTimeTrackDraggingIndex.current != null) {\n          stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n          realTimeTrackDraggingIndex.current = null;\n        }\n      }\n    });\n    let currentPointer = (0, _react.useRef)(undefined);\n    let onDownTrack = (e, id, clientX, clientY) => {\n      // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n      if (!props.isDisabled && state.values.every((_, i) => !state.isThumbDragging(i))) {\n        let size = isVertical ? trackLayout.height : trackLayout.width;\n        // Find the closest thumb\n        const trackPosition = trackLayout[isVertical ? 'top' : 'left'];\n        const clickPosition = isVertical ? clientY : clientX;\n        const offset = clickPosition - trackPosition;\n        let percent = offset / size;\n        if (reverseX) {\n          if (!isVertical) {\n            percent = 1 - percent;\n          }\n        } else {\n          if (isVertical) {\n            percent = 1 - percent;\n          }\n        }\n        let value = state.getPercentValue(percent);\n\n        // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n        let closestThumb;\n        let split = state.values.findIndex(v => value - v < 0);\n        if (split === 0) {\n          // If the index is zero then the closetThumb is the first one\n          closestThumb = split;\n        } else if (split === -1) {\n          // If no index is found they've clicked past all the thumbs\n          closestThumb = state.values.length - 1;\n        } else {\n          let lastLeft = state.values[split - 1];\n          let firstRight = state.values[split];\n          // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n          if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n            closestThumb = split - 1;\n          } else {\n            closestThumb = split;\n          }\n        }\n\n        // Confirm that the found closest thumb is editable, not disabled, and move it\n        if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n          // Don't unfocus anything\n          e.preventDefault();\n          realTimeTrackDraggingIndex.current = closestThumb;\n          state.setFocusedThumb(closestThumb);\n          currentPointer.current = id;\n          state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n          state.setThumbValue(closestThumb, value);\n          addGlobalListener(window, 'mouseup', onUpTrack, false);\n          addGlobalListener(window, 'touchend', onUpTrack, false);\n          addGlobalListener(window, 'pointerup', onUpTrack, false);\n        } else {\n          realTimeTrackDraggingIndex.current = null;\n        }\n      }\n    };\n    let onUpTrack = e => {\n      var _e$changedTouches;\n      let id = e.pointerId ?? ((_e$changedTouches = e.changedTouches) === null || _e$changedTouches === void 0 ? void 0 : _e$changedTouches[0].identifier);\n      if (id === currentPointer.current) {\n        if (realTimeTrackDraggingIndex.current != null) {\n          state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n          realTimeTrackDraggingIndex.current = null;\n        }\n        removeGlobalListener(window, 'mouseup', onUpTrack, false);\n        removeGlobalListener(window, 'touchend', onUpTrack, false);\n        removeGlobalListener(window, 'pointerup', onUpTrack, false);\n      }\n    };\n\n    //@ts-ignore\n    if (labelProps.htmlFor !== undefined) {\n      // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n      // causes this to override the `aria-labelledby` on the thumb. This causes the first\n      // thumb to only be announced as the slider label rather than its individual name as well.\n      // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n      //@ts-ignore\n      delete labelProps.htmlFor;\n      labelProps.onClick = () => {\n        var _document$getElementB;\n        // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n        // so do it manually. In addition, make sure we show the focus ring.\n        (_document$getElementB = document.getElementById((0, _utils2.getSliderThumbId)(state, 0))) === null || _document$getElementB === void 0 || _document$getElementB.focus();\n        (0, _interactions.setInteractionModality)('keyboard');\n      };\n    }\n    return {\n      labelProps,\n      // The root element of the Slider will have role=\"group\" to group together\n      // all the thumb inputs in the Slider.  The label of the Slider will\n      // be used to label the group.\n      groupProps: {\n        role: 'group',\n        ...fieldProps\n      },\n      trackProps: (0, _utils.mergeProps)({\n        onMouseDown(e) {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDownTrack(e, undefined, e.clientX, e.clientY);\n        },\n        onPointerDown(e) {\n          if (e.pointerType === 'mouse' && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) {\n            return;\n          }\n          onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n        },\n        onTouchStart(e) {\n          onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        }\n      }, moveProps),\n      outputProps: {\n        'htmlFor': state.values.map((_, index) => (0, _utils2.getSliderThumbId)(state, index)).join(' '),\n        'aria-live': 'off'\n      }\n    };\n  }\n  const useSlider = (props, state, ref, isReversed) => {\n    let {\n      groupProps: webGroupProps,\n      ...rest\n    } = useSliderWeb(props, state, ref, isReversed);\n    let groupProps = (0, _utils3.mapDomPropsToRN)(webGroupProps);\n    let labelProps = (0, _utils3.mapDomPropsToRN)(rest.labelProps);\n    return {\n      groupProps,\n      ...rest,\n      labelProps\n    };\n  };\n  exports.useSlider = useSlider;\n});","lineCount":210,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"useSlider"],[7,19,6,17],[7,22,6,20],[7,27,6,25],[7,28,6,26],[8,2,7,0],[8,6,7,4,"_utils"],[8,12,7,10],[8,15,7,13,"require"],[8,22,7,20],[8,23,7,20,"_dependencyMap"],[8,37,7,20],[8,61,7,40],[8,62,7,41],[9,2,8,0],[9,6,8,4,"_utils2"],[9,13,8,11],[9,16,8,14,"require"],[9,23,8,21],[9,24,8,21,"_dependencyMap"],[9,38,8,21],[9,52,8,31],[9,53,8,32],[10,2,9,0],[10,6,9,4,"_react"],[10,12,9,10],[10,15,9,13,"require"],[10,22,9,20],[10,23,9,20,"_dependencyMap"],[10,37,9,20],[10,49,9,28],[10,50,9,29],[11,2,10,0],[11,6,10,4,"_interactions"],[11,19,10,17],[11,22,10,20,"require"],[11,29,10,27],[11,30,10,27,"_dependencyMap"],[11,44,10,27],[11,75,10,54],[11,76,10,55],[12,2,11,0],[12,6,11,4,"_label"],[12,12,11,10],[12,15,11,13,"require"],[12,22,11,20],[12,23,11,20,"_dependencyMap"],[12,37,11,20],[12,61,11,40],[12,62,11,41],[13,2,12,0],[13,6,12,4,"_utils3"],[13,13,12,11],[13,16,12,14,"require"],[13,23,12,21],[13,24,12,21,"_dependencyMap"],[13,38,12,21],[13,69,12,48],[13,70,12,49],[14,2,13,0],[14,6,13,4,"_useMove"],[14,14,13,12],[14,17,13,15,"require"],[14,24,13,22],[14,25,13,22,"_dependencyMap"],[14,39,13,22],[14,55,13,34],[14,56,13,35],[15,2,14,0],[15,11,14,9,"useSliderWeb"],[15,23,14,21,"useSliderWeb"],[15,24,14,22,"props"],[15,29,14,27],[15,31,14,29,"state"],[15,36,14,34],[15,38,14,36,"trackLayout"],[15,49,14,47],[15,51,14,49,"isReversed"],[15,61,14,59],[15,63,14,61],[16,4,15,2],[16,8,15,6],[17,6,16,4,"labelProps"],[17,16,16,14],[18,6,17,4,"fieldProps"],[19,4,18,2],[19,5,18,3],[19,8,18,6],[19,9,18,7],[19,10,18,8],[19,12,18,10,"_label"],[19,18,18,16],[19,19,18,17,"useLabel"],[19,27,18,25],[19,29,18,27,"props"],[19,34,18,32],[19,35,18,33],[20,4,19,2],[20,8,19,6,"isVertical"],[20,18,19,16],[20,21,19,19,"props"],[20,26,19,24],[20,27,19,25,"orientation"],[20,38,19,36],[20,43,19,41],[20,53,19,51],[22,4,21,2],[23,4,22,2,"_utils2"],[23,11,22,9],[23,12,22,10,"sliderIds"],[23,21,22,19],[23,22,22,20,"set"],[23,25,22,23],[23,26,22,24,"state"],[23,31,22,29],[23,33,22,31,"labelProps"],[23,43,22,41],[23,44,22,42,"id"],[23,46,22,44],[23,50,22,48,"fieldProps"],[23,60,22,58],[23,61,22,59,"id"],[23,63,22,61],[23,64,22,62],[24,4,23,2],[24,10,23,8,"direction"],[24,19,23,17],[24,22,23,20],[24,23,23,21],[24,24,23,22],[24,26,23,24,"_utils3"],[24,33,23,31],[24,34,23,32,"isRTL"],[24,39,23,37],[24,41,23,39],[24,42,23,40],[24,45,23,43],[24,50,23,48],[24,53,23,51,"undefined"],[24,62,23,60],[25,4,24,2],[25,8,24,6],[26,6,25,4,"addGlobalListener"],[26,23,25,21],[27,6,26,4,"removeGlobalListener"],[28,4,27,2],[28,5,27,3],[28,8,27,6],[28,9,27,7],[28,10,27,8],[28,12,27,10,"_utils"],[28,18,27,16],[28,19,27,17,"useGlobalListeners"],[28,37,27,35],[28,39,27,37],[28,40,27,38],[30,4,29,2],[31,4,30,2],[32,4,31,2],[33,4,32,2],[34,4,33,2],[34,10,33,8,"realTimeTrackDraggingIndex"],[34,36,33,34],[34,39,33,37],[34,40,33,38],[34,41,33,39],[34,43,33,41,"_react"],[34,49,33,47],[34,50,33,48,"useRef"],[34,56,33,54],[34,58,33,56],[34,62,33,60],[34,63,33,61],[35,4,34,2],[35,10,34,8,"stateRef"],[35,18,34,16],[35,21,34,19],[35,22,34,20],[35,23,34,21],[35,25,34,23,"_react"],[35,31,34,29],[35,32,34,30,"useRef"],[35,38,34,36],[35,40,34,38],[35,44,34,42],[35,45,34,43],[36,4,35,2,"stateRef"],[36,12,35,10],[36,13,35,11,"current"],[36,20,35,18],[36,23,35,21,"state"],[36,28,35,26],[37,4,36,2],[37,10,36,8,"reverseX"],[37,18,36,16],[37,21,36,19,"isReversed"],[37,31,36,29],[37,35,36,33,"direction"],[37,44,36,42],[37,49,36,47],[37,54,36,52],[38,4,37,2],[38,10,37,8,"currentPosition"],[38,25,37,23],[38,28,37,26],[38,29,37,27],[38,30,37,28],[38,32,37,30,"_react"],[38,38,37,36],[38,39,37,37,"useRef"],[38,45,37,43],[38,47,37,45],[38,51,37,49],[38,52,37,50],[39,4,38,2],[39,10,38,8],[40,6,39,4,"moveProps"],[41,4,40,2],[41,5,40,3],[41,8,40,6],[41,9,40,7],[41,10,40,8],[41,12,40,10,"_useMove"],[41,20,40,18],[41,21,40,19,"useMove"],[41,28,40,26],[41,30,40,28],[42,6,41,4,"onMoveStart"],[42,17,41,15,"onMoveStart"],[42,18,41,15],[42,20,41,18],[43,8,42,6,"currentPosition"],[43,23,42,21],[43,24,42,22,"current"],[43,31,42,29],[43,34,42,32],[43,38,42,36],[44,6,43,4],[44,7,43,5],[45,6,44,4,"onMove"],[45,12,44,10,"onMove"],[45,13,44,11],[46,8,45,6,"deltaX"],[46,14,45,12],[47,8,46,6,"deltaY"],[48,6,47,4],[48,7,47,5],[48,9,47,7],[49,8,48,6],[49,12,48,10,"size"],[49,16,48,14],[49,19,48,17,"isVertical"],[49,29,48,27],[49,32,48,30,"trackLayout"],[49,43,48,41],[49,44,48,42,"height"],[49,50,48,48],[49,53,48,51,"trackLayout"],[49,64,48,62],[49,65,48,63,"width"],[49,70,48,68],[50,8,49,6],[50,12,49,10,"currentPosition"],[50,27,49,25],[50,28,49,26,"current"],[50,35,49,33],[50,39,49,37],[50,43,49,41],[50,45,49,43],[51,10,50,8,"currentPosition"],[51,25,50,23],[51,26,50,24,"current"],[51,33,50,31],[51,36,50,34,"stateRef"],[51,44,50,42],[51,45,50,43,"current"],[51,52,50,50],[51,53,50,51,"getThumbPercent"],[51,68,50,66],[51,69,50,67,"realTimeTrackDraggingIndex"],[51,95,50,93],[51,96,50,94,"current"],[51,103,50,101],[51,104,50,102],[51,107,50,105,"size"],[51,111,50,109],[52,8,51,6],[53,8,52,6],[53,12,52,10,"delta"],[53,17,52,15],[53,20,52,18,"isVertical"],[53,30,52,28],[53,33,52,31,"deltaY"],[53,39,52,37],[53,42,52,40,"deltaX"],[53,48,52,46],[54,8,53,6],[54,12,53,10,"reverseX"],[54,20,53,18],[54,22,53,20],[55,10,54,8],[55,14,54,12],[55,15,54,13,"isVertical"],[55,25,54,23],[55,27,54,25],[56,12,55,10,"delta"],[56,17,55,15],[56,20,55,18],[56,21,55,19,"delta"],[56,26,55,24],[57,10,56,8],[58,8,57,6],[58,9,57,7],[58,15,57,13],[59,10,58,8],[59,14,58,12,"isVertical"],[59,24,58,22],[59,26,58,24],[60,12,59,10,"delta"],[60,17,59,15],[60,20,59,18],[60,21,59,19,"delta"],[60,26,59,24],[61,10,60,8],[62,8,61,6],[63,8,62,6,"currentPosition"],[63,23,62,21],[63,24,62,22,"current"],[63,31,62,29],[63,35,62,33,"delta"],[63,40,62,38],[64,8,63,6],[64,12,63,10,"realTimeTrackDraggingIndex"],[64,38,63,36],[64,39,63,37,"current"],[64,46,63,44],[64,50,63,48],[64,54,63,52],[64,56,63,54],[65,10,64,8],[65,16,64,14,"percent"],[65,23,64,21],[65,26,64,24],[65,27,64,25],[65,28,64,26],[65,30,64,28,"_utils"],[65,36,64,34],[65,37,64,35,"clamp"],[65,42,64,40],[65,44,64,42,"currentPosition"],[65,59,64,57],[65,60,64,58,"current"],[65,67,64,65],[65,70,64,68,"size"],[65,74,64,72],[65,76,64,74],[65,77,64,75],[65,79,64,77],[65,80,64,78],[65,81,64,79],[66,10,65,8,"stateRef"],[66,18,65,16],[66,19,65,17,"current"],[66,26,65,24],[66,27,65,25,"setThumbPercent"],[66,42,65,40],[66,43,65,41,"realTimeTrackDraggingIndex"],[66,69,65,67],[66,70,65,68,"current"],[66,77,65,75],[66,79,65,77,"percent"],[66,86,65,84],[66,87,65,85],[67,8,66,6],[68,6,67,4],[68,7,67,5],[69,6,68,4,"onMoveEnd"],[69,15,68,13,"onMoveEnd"],[69,16,68,13],[69,18,68,16],[70,8,69,6],[70,12,69,10,"realTimeTrackDraggingIndex"],[70,38,69,36],[70,39,69,37,"current"],[70,46,69,44],[70,50,69,48],[70,54,69,52],[70,56,69,54],[71,10,70,8,"stateRef"],[71,18,70,16],[71,19,70,17,"current"],[71,26,70,24],[71,27,70,25,"setThumbDragging"],[71,43,70,41],[71,44,70,42,"realTimeTrackDraggingIndex"],[71,70,70,68],[71,71,70,69,"current"],[71,78,70,76],[71,80,70,78],[71,85,70,83],[71,86,70,84],[72,10,71,8,"realTimeTrackDraggingIndex"],[72,36,71,34],[72,37,71,35,"current"],[72,44,71,42],[72,47,71,45],[72,51,71,49],[73,8,72,6],[74,6,73,4],[75,4,74,2],[75,5,74,3],[75,6,74,4],[76,4,75,2],[76,8,75,6,"currentPointer"],[76,22,75,20],[76,25,75,23],[76,26,75,24],[76,27,75,25],[76,29,75,27,"_react"],[76,35,75,33],[76,36,75,34,"useRef"],[76,42,75,40],[76,44,75,42,"undefined"],[76,53,75,51],[76,54,75,52],[77,4,76,2],[77,8,76,6,"onDownTrack"],[77,19,76,17],[77,22,76,20,"onDownTrack"],[77,23,76,21,"e"],[77,24,76,22],[77,26,76,24,"id"],[77,28,76,26],[77,30,76,28,"clientX"],[77,37,76,35],[77,39,76,37,"clientY"],[77,46,76,44],[77,51,76,49],[78,6,77,4],[79,6,78,4],[79,10,78,8],[79,11,78,9,"props"],[79,16,78,14],[79,17,78,15,"isDisabled"],[79,27,78,25],[79,31,78,29,"state"],[79,36,78,34],[79,37,78,35,"values"],[79,43,78,41],[79,44,78,42,"every"],[79,49,78,47],[79,50,78,48],[79,51,78,49,"_"],[79,52,78,50],[79,54,78,52,"i"],[79,55,78,53],[79,60,78,58],[79,61,78,59,"state"],[79,66,78,64],[79,67,78,65,"isThumbDragging"],[79,82,78,80],[79,83,78,81,"i"],[79,84,78,82],[79,85,78,83],[79,86,78,84],[79,88,78,86],[80,8,79,6],[80,12,79,10,"size"],[80,16,79,14],[80,19,79,17,"isVertical"],[80,29,79,27],[80,32,79,30,"trackLayout"],[80,43,79,41],[80,44,79,42,"height"],[80,50,79,48],[80,53,79,51,"trackLayout"],[80,64,79,62],[80,65,79,63,"width"],[80,70,79,68],[81,8,80,6],[82,8,81,6],[82,14,81,12,"trackPosition"],[82,27,81,25],[82,30,81,28,"trackLayout"],[82,41,81,39],[82,42,81,40,"isVertical"],[82,52,81,50],[82,55,81,53],[82,60,81,58],[82,63,81,61],[82,69,81,67],[82,70,81,68],[83,8,82,6],[83,14,82,12,"clickPosition"],[83,27,82,25],[83,30,82,28,"isVertical"],[83,40,82,38],[83,43,82,41,"clientY"],[83,50,82,48],[83,53,82,51,"clientX"],[83,60,82,58],[84,8,83,6],[84,14,83,12,"offset"],[84,20,83,18],[84,23,83,21,"clickPosition"],[84,36,83,34],[84,39,83,37,"trackPosition"],[84,52,83,50],[85,8,84,6],[85,12,84,10,"percent"],[85,19,84,17],[85,22,84,20,"offset"],[85,28,84,26],[85,31,84,29,"size"],[85,35,84,33],[86,8,85,6],[86,12,85,10,"reverseX"],[86,20,85,18],[86,22,85,20],[87,10,86,8],[87,14,86,12],[87,15,86,13,"isVertical"],[87,25,86,23],[87,27,86,25],[88,12,87,10,"percent"],[88,19,87,17],[88,22,87,20],[88,23,87,21],[88,26,87,24,"percent"],[88,33,87,31],[89,10,88,8],[90,8,89,6],[90,9,89,7],[90,15,89,13],[91,10,90,8],[91,14,90,12,"isVertical"],[91,24,90,22],[91,26,90,24],[92,12,91,10,"percent"],[92,19,91,17],[92,22,91,20],[92,23,91,21],[92,26,91,24,"percent"],[92,33,91,31],[93,10,92,8],[94,8,93,6],[95,8,94,6],[95,12,94,10,"value"],[95,17,94,15],[95,20,94,18,"state"],[95,25,94,23],[95,26,94,24,"getPercentValue"],[95,41,94,39],[95,42,94,40,"percent"],[95,49,94,47],[95,50,94,48],[97,8,96,6],[98,8,97,6],[98,12,97,10,"closestThumb"],[98,24,97,22],[99,8,98,6],[99,12,98,10,"split"],[99,17,98,15],[99,20,98,18,"state"],[99,25,98,23],[99,26,98,24,"values"],[99,32,98,30],[99,33,98,31,"findIndex"],[99,42,98,40],[99,43,98,41,"v"],[99,44,98,42],[99,48,98,46,"value"],[99,53,98,51],[99,56,98,54,"v"],[99,57,98,55],[99,60,98,58],[99,61,98,59],[99,62,98,60],[100,8,99,6],[100,12,99,10,"split"],[100,17,99,15],[100,22,99,20],[100,23,99,21],[100,25,99,23],[101,10,100,8],[102,10,101,8,"closestThumb"],[102,22,101,20],[102,25,101,23,"split"],[102,30,101,28],[103,8,102,6],[103,9,102,7],[103,15,102,13],[103,19,102,17,"split"],[103,24,102,22],[103,29,102,27],[103,30,102,28],[103,31,102,29],[103,33,102,31],[104,10,103,8],[105,10,104,8,"closestThumb"],[105,22,104,20],[105,25,104,23,"state"],[105,30,104,28],[105,31,104,29,"values"],[105,37,104,35],[105,38,104,36,"length"],[105,44,104,42],[105,47,104,45],[105,48,104,46],[106,8,105,6],[106,9,105,7],[106,15,105,13],[107,10,106,8],[107,14,106,12,"lastLeft"],[107,22,106,20],[107,25,106,23,"state"],[107,30,106,28],[107,31,106,29,"values"],[107,37,106,35],[107,38,106,36,"split"],[107,43,106,41],[107,46,106,44],[107,47,106,45],[107,48,106,46],[108,10,107,8],[108,14,107,12,"firstRight"],[108,24,107,22],[108,27,107,25,"state"],[108,32,107,30],[108,33,107,31,"values"],[108,39,107,37],[108,40,107,38,"split"],[108,45,107,43],[108,46,107,44],[109,10,108,8],[110,10,109,8],[110,14,109,12,"Math"],[110,18,109,16],[110,19,109,17,"abs"],[110,22,109,20],[110,23,109,21,"lastLeft"],[110,31,109,29],[110,34,109,32,"value"],[110,39,109,37],[110,40,109,38],[110,43,109,41,"Math"],[110,47,109,45],[110,48,109,46,"abs"],[110,51,109,49],[110,52,109,50,"firstRight"],[110,62,109,60],[110,65,109,63,"value"],[110,70,109,68],[110,71,109,69],[110,73,109,71],[111,12,110,10,"closestThumb"],[111,24,110,22],[111,27,110,25,"split"],[111,32,110,30],[111,35,110,33],[111,36,110,34],[112,10,111,8],[112,11,111,9],[112,17,111,15],[113,12,112,10,"closestThumb"],[113,24,112,22],[113,27,112,25,"split"],[113,32,112,30],[114,10,113,8],[115,8,114,6],[117,8,116,6],[118,8,117,6],[118,12,117,10,"closestThumb"],[118,24,117,22],[118,28,117,26],[118,29,117,27],[118,33,117,31,"state"],[118,38,117,36],[118,39,117,37,"isThumbEditable"],[118,54,117,52],[118,55,117,53,"closestThumb"],[118,67,117,65],[118,68,117,66],[118,70,117,68],[119,10,118,8],[120,10,119,8,"e"],[120,11,119,9],[120,12,119,10,"preventDefault"],[120,26,119,24],[120,27,119,25],[120,28,119,26],[121,10,120,8,"realTimeTrackDraggingIndex"],[121,36,120,34],[121,37,120,35,"current"],[121,44,120,42],[121,47,120,45,"closestThumb"],[121,59,120,57],[122,10,121,8,"state"],[122,15,121,13],[122,16,121,14,"setFocusedThumb"],[122,31,121,29],[122,32,121,30,"closestThumb"],[122,44,121,42],[122,45,121,43],[123,10,122,8,"currentPointer"],[123,24,122,22],[123,25,122,23,"current"],[123,32,122,30],[123,35,122,33,"id"],[123,37,122,35],[124,10,123,8,"state"],[124,15,123,13],[124,16,123,14,"setThumbDragging"],[124,32,123,30],[124,33,123,31,"realTimeTrackDraggingIndex"],[124,59,123,57],[124,60,123,58,"current"],[124,67,123,65],[124,69,123,67],[124,73,123,71],[124,74,123,72],[125,10,124,8,"state"],[125,15,124,13],[125,16,124,14,"setThumbValue"],[125,29,124,27],[125,30,124,28,"closestThumb"],[125,42,124,40],[125,44,124,42,"value"],[125,49,124,47],[125,50,124,48],[126,10,125,8,"addGlobalListener"],[126,27,125,25],[126,28,125,26,"window"],[126,34,125,32],[126,36,125,34],[126,45,125,43],[126,47,125,45,"onUpTrack"],[126,56,125,54],[126,58,125,56],[126,63,125,61],[126,64,125,62],[127,10,126,8,"addGlobalListener"],[127,27,126,25],[127,28,126,26,"window"],[127,34,126,32],[127,36,126,34],[127,46,126,44],[127,48,126,46,"onUpTrack"],[127,57,126,55],[127,59,126,57],[127,64,126,62],[127,65,126,63],[128,10,127,8,"addGlobalListener"],[128,27,127,25],[128,28,127,26,"window"],[128,34,127,32],[128,36,127,34],[128,47,127,45],[128,49,127,47,"onUpTrack"],[128,58,127,56],[128,60,127,58],[128,65,127,63],[128,66,127,64],[129,8,128,6],[129,9,128,7],[129,15,128,13],[130,10,129,8,"realTimeTrackDraggingIndex"],[130,36,129,34],[130,37,129,35,"current"],[130,44,129,42],[130,47,129,45],[130,51,129,49],[131,8,130,6],[132,6,131,4],[133,4,132,2],[133,5,132,3],[134,4,133,2],[134,8,133,6,"onUpTrack"],[134,17,133,15],[134,20,133,18,"e"],[134,21,133,19],[134,25,133,23],[135,6,134,4],[135,10,134,8,"_e$changedTouches"],[135,27,134,25],[136,6,135,4],[136,10,135,8,"id"],[136,12,135,10],[136,15,135,13,"e"],[136,16,135,14],[136,17,135,15,"pointerId"],[136,26,135,24],[136,31,135,29],[136,32,135,30,"_e$changedTouches"],[136,49,135,47],[136,52,135,50,"e"],[136,53,135,51],[136,54,135,52,"changedTouches"],[136,68,135,66],[136,74,135,72],[136,78,135,76],[136,82,135,80,"_e$changedTouches"],[136,99,135,97],[136,104,135,102],[136,109,135,107],[136,110,135,108],[136,113,135,111],[136,118,135,116],[136,119,135,117],[136,122,135,120,"_e$changedTouches"],[136,139,135,137],[136,140,135,138],[136,141,135,139],[136,142,135,140],[136,143,135,141,"identifier"],[136,153,135,151],[136,154,135,152],[137,6,136,4],[137,10,136,8,"id"],[137,12,136,10],[137,17,136,15,"currentPointer"],[137,31,136,29],[137,32,136,30,"current"],[137,39,136,37],[137,41,136,39],[138,8,137,6],[138,12,137,10,"realTimeTrackDraggingIndex"],[138,38,137,36],[138,39,137,37,"current"],[138,46,137,44],[138,50,137,48],[138,54,137,52],[138,56,137,54],[139,10,138,8,"state"],[139,15,138,13],[139,16,138,14,"setThumbDragging"],[139,32,138,30],[139,33,138,31,"realTimeTrackDraggingIndex"],[139,59,138,57],[139,60,138,58,"current"],[139,67,138,65],[139,69,138,67],[139,74,138,72],[139,75,138,73],[140,10,139,8,"realTimeTrackDraggingIndex"],[140,36,139,34],[140,37,139,35,"current"],[140,44,139,42],[140,47,139,45],[140,51,139,49],[141,8,140,6],[142,8,141,6,"removeGlobalListener"],[142,28,141,26],[142,29,141,27,"window"],[142,35,141,33],[142,37,141,35],[142,46,141,44],[142,48,141,46,"onUpTrack"],[142,57,141,55],[142,59,141,57],[142,64,141,62],[142,65,141,63],[143,8,142,6,"removeGlobalListener"],[143,28,142,26],[143,29,142,27,"window"],[143,35,142,33],[143,37,142,35],[143,47,142,45],[143,49,142,47,"onUpTrack"],[143,58,142,56],[143,60,142,58],[143,65,142,63],[143,66,142,64],[144,8,143,6,"removeGlobalListener"],[144,28,143,26],[144,29,143,27,"window"],[144,35,143,33],[144,37,143,35],[144,48,143,46],[144,50,143,48,"onUpTrack"],[144,59,143,57],[144,61,143,59],[144,66,143,64],[144,67,143,65],[145,6,144,4],[146,4,145,2],[146,5,145,3],[148,4,147,2],[149,4,148,2],[149,8,148,6,"labelProps"],[149,18,148,16],[149,19,148,17,"htmlFor"],[149,26,148,24],[149,31,148,29,"undefined"],[149,40,148,38],[149,42,148,40],[150,6,149,4],[151,6,150,4],[152,6,151,4],[153,6,152,4],[154,6,153,4],[155,6,154,4],[155,13,154,11,"labelProps"],[155,23,154,21],[155,24,154,22,"htmlFor"],[155,31,154,29],[156,6,155,4,"labelProps"],[156,16,155,14],[156,17,155,15,"onClick"],[156,24,155,22],[156,27,155,25],[156,33,155,31],[157,8,156,6],[157,12,156,10,"_document$getElementB"],[157,33,156,31],[158,8,157,6],[159,8,158,6],[160,8,159,6],[160,9,159,7,"_document$getElementB"],[160,30,159,28],[160,33,159,31,"document"],[160,41,159,39],[160,42,159,40,"getElementById"],[160,56,159,54],[160,57,159,55],[160,58,159,56],[160,59,159,57],[160,61,159,59,"_utils2"],[160,68,159,66],[160,69,159,67,"getSliderThumbId"],[160,85,159,83],[160,87,159,85,"state"],[160,92,159,90],[160,94,159,92],[160,95,159,93],[160,96,159,94],[160,97,159,95],[160,103,159,101],[160,107,159,105],[160,111,159,109,"_document$getElementB"],[160,132,159,130],[160,137,159,135],[160,142,159,140],[160,143,159,141],[160,147,159,145,"_document$getElementB"],[160,168,159,166],[160,169,159,167,"focus"],[160,174,159,172],[160,175,159,173],[160,176,159,174],[161,8,160,6],[161,9,160,7],[161,10,160,8],[161,12,160,10,"_interactions"],[161,25,160,23],[161,26,160,24,"setInteractionModality"],[161,48,160,46],[161,50,160,48],[161,60,160,58],[161,61,160,59],[162,6,161,4],[162,7,161,5],[163,4,162,2],[164,4,163,2],[164,11,163,9],[165,6,164,4,"labelProps"],[165,16,164,14],[166,6,165,4],[167,6,166,4],[168,6,167,4],[169,6,168,4,"groupProps"],[169,16,168,14],[169,18,168,16],[170,8,169,6,"role"],[170,12,169,10],[170,14,169,12],[170,21,169,19],[171,8,170,6],[171,11,170,9,"fieldProps"],[172,6,171,4],[172,7,171,5],[173,6,172,4,"trackProps"],[173,16,172,14],[173,18,172,16],[173,19,172,17],[173,20,172,18],[173,22,172,20,"_utils"],[173,28,172,26],[173,29,172,27,"mergeProps"],[173,39,172,37],[173,41,172,39],[174,8,173,6,"onMouseDown"],[174,19,173,17,"onMouseDown"],[174,20,173,18,"e"],[174,21,173,19],[174,23,173,21],[175,10,174,8],[175,14,174,12,"e"],[175,15,174,13],[175,16,174,14,"button"],[175,22,174,20],[175,27,174,25],[175,28,174,26],[175,32,174,30,"e"],[175,33,174,31],[175,34,174,32,"altKey"],[175,40,174,38],[175,44,174,42,"e"],[175,45,174,43],[175,46,174,44,"ctrlKey"],[175,53,174,51],[175,57,174,55,"e"],[175,58,174,56],[175,59,174,57,"metaKey"],[175,66,174,64],[175,68,174,66],[176,12,175,10],[177,10,176,8],[178,10,177,8,"onDownTrack"],[178,21,177,19],[178,22,177,20,"e"],[178,23,177,21],[178,25,177,23,"undefined"],[178,34,177,32],[178,36,177,34,"e"],[178,37,177,35],[178,38,177,36,"clientX"],[178,45,177,43],[178,47,177,45,"e"],[178,48,177,46],[178,49,177,47,"clientY"],[178,56,177,54],[178,57,177,55],[179,8,178,6],[179,9,178,7],[180,8,179,6,"onPointerDown"],[180,21,179,19,"onPointerDown"],[180,22,179,20,"e"],[180,23,179,21],[180,25,179,23],[181,10,180,8],[181,14,180,12,"e"],[181,15,180,13],[181,16,180,14,"pointerType"],[181,27,180,25],[181,32,180,30],[181,39,180,37],[181,44,180,42,"e"],[181,45,180,43],[181,46,180,44,"button"],[181,52,180,50],[181,57,180,55],[181,58,180,56],[181,62,180,60,"e"],[181,63,180,61],[181,64,180,62,"altKey"],[181,70,180,68],[181,74,180,72,"e"],[181,75,180,73],[181,76,180,74,"ctrlKey"],[181,83,180,81],[181,87,180,85,"e"],[181,88,180,86],[181,89,180,87,"metaKey"],[181,96,180,94],[181,97,180,95],[181,99,180,97],[182,12,181,10],[183,10,182,8],[184,10,183,8,"onDownTrack"],[184,21,183,19],[184,22,183,20,"e"],[184,23,183,21],[184,25,183,23,"e"],[184,26,183,24],[184,27,183,25,"pointerId"],[184,36,183,34],[184,38,183,36,"e"],[184,39,183,37],[184,40,183,38,"clientX"],[184,47,183,45],[184,49,183,47,"e"],[184,50,183,48],[184,51,183,49,"clientY"],[184,58,183,56],[184,59,183,57],[185,8,184,6],[185,9,184,7],[186,8,185,6,"onTouchStart"],[186,20,185,18,"onTouchStart"],[186,21,185,19,"e"],[186,22,185,20],[186,24,185,22],[187,10,186,8,"onDownTrack"],[187,21,186,19],[187,22,186,20,"e"],[187,23,186,21],[187,25,186,23,"e"],[187,26,186,24],[187,27,186,25,"changedTouches"],[187,41,186,39],[187,42,186,40],[187,43,186,41],[187,44,186,42],[187,45,186,43,"identifier"],[187,55,186,53],[187,57,186,55,"e"],[187,58,186,56],[187,59,186,57,"changedTouches"],[187,73,186,71],[187,74,186,72],[187,75,186,73],[187,76,186,74],[187,77,186,75,"clientX"],[187,84,186,82],[187,86,186,84,"e"],[187,87,186,85],[187,88,186,86,"changedTouches"],[187,102,186,100],[187,103,186,101],[187,104,186,102],[187,105,186,103],[187,106,186,104,"clientY"],[187,113,186,111],[187,114,186,112],[188,8,187,6],[189,6,188,4],[189,7,188,5],[189,9,188,7,"moveProps"],[189,18,188,16],[189,19,188,17],[190,6,189,4,"outputProps"],[190,17,189,15],[190,19,189,17],[191,8,190,6],[191,17,190,15],[191,19,190,17,"state"],[191,24,190,22],[191,25,190,23,"values"],[191,31,190,29],[191,32,190,30,"map"],[191,35,190,33],[191,36,190,34],[191,37,190,35,"_"],[191,38,190,36],[191,40,190,38,"index"],[191,45,190,43],[191,50,190,48],[191,51,190,49],[191,52,190,50],[191,54,190,52,"_utils2"],[191,61,190,59],[191,62,190,60,"getSliderThumbId"],[191,78,190,76],[191,80,190,78,"state"],[191,85,190,83],[191,87,190,85,"index"],[191,92,190,90],[191,93,190,91],[191,94,190,92],[191,95,190,93,"join"],[191,99,190,97],[191,100,190,98],[191,103,190,101],[191,104,190,102],[192,8,191,6],[192,19,191,17],[192,21,191,19],[193,6,192,4],[194,4,193,2],[194,5,193,3],[195,2,194,0],[196,2,195,0],[196,8,195,6,"useSlider"],[196,17,195,15],[196,20,195,18,"useSlider"],[196,21,195,19,"props"],[196,26,195,24],[196,28,195,26,"state"],[196,33,195,31],[196,35,195,33,"ref"],[196,38,195,36],[196,40,195,38,"isReversed"],[196,50,195,48],[196,55,195,53],[197,4,196,2],[197,8,196,6],[198,6,197,4,"groupProps"],[198,16,197,14],[198,18,197,16,"webGroupProps"],[198,31,197,29],[199,6,198,4],[199,9,198,7,"rest"],[200,4,199,2],[200,5,199,3],[200,8,199,6,"useSliderWeb"],[200,20,199,18],[200,21,199,19,"props"],[200,26,199,24],[200,28,199,26,"state"],[200,33,199,31],[200,35,199,33,"ref"],[200,38,199,36],[200,40,199,38,"isReversed"],[200,50,199,48],[200,51,199,49],[201,4,200,2],[201,8,200,6,"groupProps"],[201,18,200,16],[201,21,200,19],[201,22,200,20],[201,23,200,21],[201,25,200,23,"_utils3"],[201,32,200,30],[201,33,200,31,"mapDomPropsToRN"],[201,48,200,46],[201,50,200,48,"webGroupProps"],[201,63,200,61],[201,64,200,62],[202,4,201,2],[202,8,201,6,"labelProps"],[202,18,201,16],[202,21,201,19],[202,22,201,20],[202,23,201,21],[202,25,201,23,"_utils3"],[202,32,201,30],[202,33,201,31,"mapDomPropsToRN"],[202,48,201,46],[202,50,201,48,"rest"],[202,54,201,52],[202,55,201,53,"labelProps"],[202,65,201,63],[202,66,201,64],[203,4,202,2],[203,11,202,9],[204,6,203,4,"groupProps"],[204,16,203,14],[205,6,204,4],[205,9,204,7,"rest"],[205,13,204,11],[206,6,205,4,"labelProps"],[207,4,206,2],[207,5,206,3],[208,2,207,0],[208,3,207,1],[209,2,208,0,"exports"],[209,9,208,7],[209,10,208,8,"useSlider"],[209,19,208,17],[209,22,208,20,"useSlider"],[209,31,208,29],[210,0,208,30],[210,3]],"functionMap":{"names":["<global>","useSliderWeb","onMoveStart","onMove","onMoveEnd","onDownTrack","state.values.every$argument_0","state.values.findIndex$argument_0","onUpTrack","labelProps.onClick","onMouseDown","onPointerDown","onTouchStart","state.values.map$argument_0","useSlider"],"mappings":"AAA;ACa;IC2B;KDE;IEC;KFuB;IGC;KHK;oBIG;gDCE,mCD;yCEoB,kBF;GJkC;kBOC;GPY;yBQU;KRM;MSY;OTK;MUC;OVK;MWC;OXE;kCYG,yDZ;CDI;kBcC;CdY"},"hasCjsExports":true},"type":"js/module"}]}