{"dependencies":[{"name":"@react-stately/collections","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":19,"index":134},"end":{"line":7,"column":56,"index":171}}],"key":"PtQy6QfUTq0qiBMOCY4rFSZ4QpM=","exportNames":["*"],"imports":1}},{"name":"@react-aria/interactions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":20,"index":193},"end":{"line":8,"column":55,"index":228}}],"key":"8p+eIuNpzFm/OacxQ1k/O5ZVZdY=","exportNames":["*"],"imports":1}},{"name":"@react-native-aria/interactions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":21,"index":251},"end":{"line":9,"column":63,"index":293}}],"key":"v2RVLT4UycbzP5jJjy9HcYdtGsU=","exportNames":["*"],"imports":1}},{"name":"@react-native-aria/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":13,"index":308},"end":{"line":10,"column":48,"index":343}}],"key":"sYjsikLgCJztsA5fDMHEvbKbndU=","exportNames":["*"],"imports":1}},{"name":"@react-aria/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":14,"index":359},"end":{"line":11,"column":42,"index":387}}],"key":"hH7ZPgKu/nR0zv7dDY6DfywJY/Y=","exportNames":["*"],"imports":1}},{"name":"@react-aria/selection","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":17,"index":406},"end":{"line":12,"column":49,"index":438}}],"key":"IegVM1Z5liuvquxYvIkgEJLYvok=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useMenuItem = useMenuItem;\n  var _collections = require(_dependencyMap[0], \"@react-stately/collections\");\n  var _interactions = require(_dependencyMap[1], \"@react-aria/interactions\");\n  var _interactions2 = require(_dependencyMap[2], \"@react-native-aria/interactions\");\n  var _utils = require(_dependencyMap[3], \"@react-native-aria/utils\");\n  var _utils2 = require(_dependencyMap[4], \"@react-aria/utils\");\n  var _selection = require(_dependencyMap[5], \"@react-aria/selection\");\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */\n\n  /**\n   * Provides the behavior and accessibility implementation for an item in a menu.\n   * See `useMenu` for more details about menus.\n   * @param props - Props for the item.\n   * @param state - State for the menu, as returned by `useTreeState`.\n   */\n  function useMenuItem(props, state, ref) {\n    let {\n      isSelected,\n      isDisabled,\n      key,\n      onClose,\n      closeOnSelect = true,\n      isVirtualized,\n      onAction\n    } = props;\n    let role = 'menuitem';\n    if (state.selectionManager.selectionMode === 'single') {\n      role = 'menuitemradio';\n    } else if (state.selectionManager.selectionMode === 'multiple') {\n      role = 'menuitemcheckbox';\n    }\n    let labelId = (0, _utils2.useSlotId)();\n    let descriptionId = (0, _utils2.useSlotId)();\n    let keyboardId = (0, _utils2.useSlotId)();\n    let ariaProps = {\n      'aria-disabled': isDisabled,\n      role,\n      'aria-label': props['aria-label'],\n      'aria-labelledby': labelId,\n      'aria-describedby': [descriptionId, keyboardId].filter(Boolean).join(' ') || undefined\n    };\n    if (state.selectionManager.selectionMode !== 'none') {\n      ariaProps['aria-checked'] = isSelected;\n    }\n    if (isVirtualized) {\n      ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n      ariaProps['aria-setsize'] = (0, _collections.getItemCount)(state.collection);\n    }\n    let onPressStart = e => {\n      if (e.pointerType === 'keyboard' && onAction) {\n        onAction(key);\n      }\n    };\n    let onPress = () => {\n      if (closeOnSelect && onClose) {\n        onClose();\n      }\n    };\n    let onPressUp = e => {\n      if (e.pointerType !== 'keyboard') {\n        if (onAction) {\n          onAction(key);\n        }\n      }\n    };\n    let {\n      itemProps\n    } = (0, _selection.useSelectableItem)({\n      selectionManager: state.selectionManager,\n      key,\n      ref,\n      shouldSelectOnPressUp: true\n    });\n    let {\n      pressProps\n    } = (0, _interactions2.usePress)((0, _utils2.mergeProps)({\n      onPressStart,\n      onPressUp,\n      onPress,\n      isDisabled\n    }, (0, _utils.mapDomPropsToRN)(itemProps)));\n    let {\n      hoverProps\n    } = (0, _interactions2.useHover)({\n      isDisabled,\n      onHoverStart() {\n        if (!(0, _interactions.isFocusVisible)()) {\n          state.selectionManager.setFocused(true);\n          state.selectionManager.setFocusedKey(key);\n        }\n      }\n    }, ref);\n    const {\n      keyboardProps\n    } = (0, _interactions.useKeyboard)({\n      onKeyDown: e => {\n        // Ignore repeating events, which may have started on the menu trigger before moving\n        // focus to the menu item. We want to wait for a second complete key press sequence.\n        if (e.repeat) {\n          e.continuePropagation();\n          return;\n        }\n        switch (e.key) {\n          case ' ':\n            if (!isDisabled && closeOnSelect && onClose) {\n              onClose();\n            }\n            break;\n          case 'Enter':\n            // The Enter key should always close on select, except if overridden.\n            if (!isDisabled && closeOnSelect && onClose) {\n              onClose();\n            }\n            break;\n          default:\n            e.continuePropagation();\n            break;\n        }\n      }\n    });\n    return {\n      menuItemProps: {\n        ...(0, _utils.mapDomPropsToRN)(ariaProps),\n        ...(0, _utils2.mergeProps)(pressProps, hoverProps, keyboardProps)\n      },\n      labelProps: {\n        id: labelId\n      },\n      descriptionProps: {\n        id: descriptionId\n      },\n      keyboardShortcutProps: {\n        id: keyboardId\n      }\n    };\n  }\n});","lineCount":153,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"useMenuItem"],[7,21,6,19],[7,24,6,22,"useMenuItem"],[7,35,6,33],[8,2,7,0],[8,6,7,4,"_collections"],[8,18,7,16],[8,21,7,19,"require"],[8,28,7,26],[8,29,7,26,"_dependencyMap"],[8,43,7,26],[8,76,7,55],[8,77,7,56],[9,2,8,0],[9,6,8,4,"_interactions"],[9,19,8,17],[9,22,8,20,"require"],[9,29,8,27],[9,30,8,27,"_dependencyMap"],[9,44,8,27],[9,75,8,54],[9,76,8,55],[10,2,9,0],[10,6,9,4,"_interactions2"],[10,20,9,18],[10,23,9,21,"require"],[10,30,9,28],[10,31,9,28,"_dependencyMap"],[10,45,9,28],[10,83,9,62],[10,84,9,63],[11,2,10,0],[11,6,10,4,"_utils"],[11,12,10,10],[11,15,10,13,"require"],[11,22,10,20],[11,23,10,20,"_dependencyMap"],[11,37,10,20],[11,68,10,47],[11,69,10,48],[12,2,11,0],[12,6,11,4,"_utils2"],[12,13,11,11],[12,16,11,14,"require"],[12,23,11,21],[12,24,11,21,"_dependencyMap"],[12,38,11,21],[12,62,11,41],[12,63,11,42],[13,2,12,0],[13,6,12,4,"_selection"],[13,16,12,14],[13,19,12,17,"require"],[13,26,12,24],[13,27,12,24,"_dependencyMap"],[13,41,12,24],[13,69,12,48],[13,70,12,49],[14,2,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[26,2,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,2,31,0],[32,11,31,9,"useMenuItem"],[32,22,31,20,"useMenuItem"],[32,23,31,21,"props"],[32,28,31,26],[32,30,31,28,"state"],[32,35,31,33],[32,37,31,35,"ref"],[32,40,31,38],[32,42,31,40],[33,4,32,2],[33,8,32,6],[34,6,33,4,"isSelected"],[34,16,33,14],[35,6,34,4,"isDisabled"],[35,16,34,14],[36,6,35,4,"key"],[36,9,35,7],[37,6,36,4,"onClose"],[37,13,36,11],[38,6,37,4,"closeOnSelect"],[38,19,37,17],[38,22,37,20],[38,26,37,24],[39,6,38,4,"isVirtualized"],[39,19,38,17],[40,6,39,4,"onAction"],[41,4,40,2],[41,5,40,3],[41,8,40,6,"props"],[41,13,40,11],[42,4,41,2],[42,8,41,6,"role"],[42,12,41,10],[42,15,41,13],[42,25,41,23],[43,4,42,2],[43,8,42,6,"state"],[43,13,42,11],[43,14,42,12,"selectionManager"],[43,30,42,28],[43,31,42,29,"selectionMode"],[43,44,42,42],[43,49,42,47],[43,57,42,55],[43,59,42,57],[44,6,43,4,"role"],[44,10,43,8],[44,13,43,11],[44,28,43,26],[45,4,44,2],[45,5,44,3],[45,11,44,9],[45,15,44,13,"state"],[45,20,44,18],[45,21,44,19,"selectionManager"],[45,37,44,35],[45,38,44,36,"selectionMode"],[45,51,44,49],[45,56,44,54],[45,66,44,64],[45,68,44,66],[46,6,45,4,"role"],[46,10,45,8],[46,13,45,11],[46,31,45,29],[47,4,46,2],[48,4,47,2],[48,8,47,6,"labelId"],[48,15,47,13],[48,18,47,16],[48,19,47,17],[48,20,47,18],[48,22,47,20,"_utils2"],[48,29,47,27],[48,30,47,28,"useSlotId"],[48,39,47,37],[48,41,47,39],[48,42,47,40],[49,4,48,2],[49,8,48,6,"descriptionId"],[49,21,48,19],[49,24,48,22],[49,25,48,23],[49,26,48,24],[49,28,48,26,"_utils2"],[49,35,48,33],[49,36,48,34,"useSlotId"],[49,45,48,43],[49,47,48,45],[49,48,48,46],[50,4,49,2],[50,8,49,6,"keyboardId"],[50,18,49,16],[50,21,49,19],[50,22,49,20],[50,23,49,21],[50,25,49,23,"_utils2"],[50,32,49,30],[50,33,49,31,"useSlotId"],[50,42,49,40],[50,44,49,42],[50,45,49,43],[51,4,50,2],[51,8,50,6,"ariaProps"],[51,17,50,15],[51,20,50,18],[52,6,51,4],[52,21,51,19],[52,23,51,21,"isDisabled"],[52,33,51,31],[53,6,52,4,"role"],[53,10,52,8],[54,6,53,4],[54,18,53,16],[54,20,53,18,"props"],[54,25,53,23],[54,26,53,24],[54,38,53,36],[54,39,53,37],[55,6,54,4],[55,23,54,21],[55,25,54,23,"labelId"],[55,32,54,30],[56,6,55,4],[56,24,55,22],[56,26,55,24],[56,27,55,25,"descriptionId"],[56,40,55,38],[56,42,55,40,"keyboardId"],[56,52,55,50],[56,53,55,51],[56,54,55,52,"filter"],[56,60,55,58],[56,61,55,59,"Boolean"],[56,68,55,66],[56,69,55,67],[56,70,55,68,"join"],[56,74,55,72],[56,75,55,73],[56,78,55,76],[56,79,55,77],[56,83,55,81,"undefined"],[57,4,56,2],[57,5,56,3],[58,4,57,2],[58,8,57,6,"state"],[58,13,57,11],[58,14,57,12,"selectionManager"],[58,30,57,28],[58,31,57,29,"selectionMode"],[58,44,57,42],[58,49,57,47],[58,55,57,53],[58,57,57,55],[59,6,58,4,"ariaProps"],[59,15,58,13],[59,16,58,14],[59,30,58,28],[59,31,58,29],[59,34,58,32,"isSelected"],[59,44,58,42],[60,4,59,2],[61,4,60,2],[61,8,60,6,"isVirtualized"],[61,21,60,19],[61,23,60,21],[62,6,61,4,"ariaProps"],[62,15,61,13],[62,16,61,14],[62,31,61,29],[62,32,61,30],[62,35,61,33,"state"],[62,40,61,38],[62,41,61,39,"collection"],[62,51,61,49],[62,52,61,50,"getItem"],[62,59,61,57],[62,60,61,58,"key"],[62,63,61,61],[62,64,61,62],[62,65,61,63,"index"],[62,70,61,68],[63,6,62,4,"ariaProps"],[63,15,62,13],[63,16,62,14],[63,30,62,28],[63,31,62,29],[63,34,62,32],[63,35,62,33],[63,36,62,34],[63,38,62,36,"_collections"],[63,50,62,48],[63,51,62,49,"getItemCount"],[63,63,62,61],[63,65,62,63,"state"],[63,70,62,68],[63,71,62,69,"collection"],[63,81,62,79],[63,82,62,80],[64,4,63,2],[65,4,64,2],[65,8,64,6,"onPressStart"],[65,20,64,18],[65,23,64,21,"e"],[65,24,64,22],[65,28,64,26],[66,6,65,4],[66,10,65,8,"e"],[66,11,65,9],[66,12,65,10,"pointerType"],[66,23,65,21],[66,28,65,26],[66,38,65,36],[66,42,65,40,"onAction"],[66,50,65,48],[66,52,65,50],[67,8,66,6,"onAction"],[67,16,66,14],[67,17,66,15,"key"],[67,20,66,18],[67,21,66,19],[68,6,67,4],[69,4,68,2],[69,5,68,3],[70,4,69,2],[70,8,69,6,"onPress"],[70,15,69,13],[70,18,69,16,"onPress"],[70,19,69,16],[70,24,69,22],[71,6,70,4],[71,10,70,8,"closeOnSelect"],[71,23,70,21],[71,27,70,25,"onClose"],[71,34,70,32],[71,36,70,34],[72,8,71,6,"onClose"],[72,15,71,13],[72,16,71,14],[72,17,71,15],[73,6,72,4],[74,4,73,2],[74,5,73,3],[75,4,74,2],[75,8,74,6,"onPressUp"],[75,17,74,15],[75,20,74,18,"e"],[75,21,74,19],[75,25,74,23],[76,6,75,4],[76,10,75,8,"e"],[76,11,75,9],[76,12,75,10,"pointerType"],[76,23,75,21],[76,28,75,26],[76,38,75,36],[76,40,75,38],[77,8,76,6],[77,12,76,10,"onAction"],[77,20,76,18],[77,22,76,20],[78,10,77,8,"onAction"],[78,18,77,16],[78,19,77,17,"key"],[78,22,77,20],[78,23,77,21],[79,8,78,6],[80,6,79,4],[81,4,80,2],[81,5,80,3],[82,4,81,2],[82,8,81,6],[83,6,82,4,"itemProps"],[84,4,83,2],[84,5,83,3],[84,8,83,6],[84,9,83,7],[84,10,83,8],[84,12,83,10,"_selection"],[84,22,83,20],[84,23,83,21,"useSelectableItem"],[84,40,83,38],[84,42,83,40],[85,6,84,4,"selectionManager"],[85,22,84,20],[85,24,84,22,"state"],[85,29,84,27],[85,30,84,28,"selectionManager"],[85,46,84,44],[86,6,85,4,"key"],[86,9,85,7],[87,6,86,4,"ref"],[87,9,86,7],[88,6,87,4,"shouldSelectOnPressUp"],[88,27,87,25],[88,29,87,27],[89,4,88,2],[89,5,88,3],[89,6,88,4],[90,4,89,2],[90,8,89,6],[91,6,90,4,"pressProps"],[92,4,91,2],[92,5,91,3],[92,8,91,6],[92,9,91,7],[92,10,91,8],[92,12,91,10,"_interactions2"],[92,26,91,24],[92,27,91,25,"usePress"],[92,35,91,33],[92,37,91,35],[92,38,91,36],[92,39,91,37],[92,41,91,39,"_utils2"],[92,48,91,46],[92,49,91,47,"mergeProps"],[92,59,91,57],[92,61,91,59],[93,6,92,4,"onPressStart"],[93,18,92,16],[94,6,93,4,"onPressUp"],[94,15,93,13],[95,6,94,4,"onPress"],[95,13,94,11],[96,6,95,4,"isDisabled"],[97,4,96,2],[97,5,96,3],[97,7,96,5],[97,8,96,6],[97,9,96,7],[97,11,96,9,"_utils"],[97,17,96,15],[97,18,96,16,"mapDomPropsToRN"],[97,33,96,31],[97,35,96,33,"itemProps"],[97,44,96,42],[97,45,96,43],[97,46,96,44],[97,47,96,45],[98,4,97,2],[98,8,97,6],[99,6,98,4,"hoverProps"],[100,4,99,2],[100,5,99,3],[100,8,99,6],[100,9,99,7],[100,10,99,8],[100,12,99,10,"_interactions2"],[100,26,99,24],[100,27,99,25,"useHover"],[100,35,99,33],[100,37,99,35],[101,6,100,4,"isDisabled"],[101,16,100,14],[102,6,101,4,"onHoverStart"],[102,18,101,16,"onHoverStart"],[102,19,101,16],[102,21,101,19],[103,8,102,6],[103,12,102,10],[103,13,102,11],[103,14,102,12],[103,15,102,13],[103,17,102,15,"_interactions"],[103,30,102,28],[103,31,102,29,"isFocusVisible"],[103,45,102,43],[103,47,102,45],[103,48,102,46],[103,50,102,48],[104,10,103,8,"state"],[104,15,103,13],[104,16,103,14,"selectionManager"],[104,32,103,30],[104,33,103,31,"setFocused"],[104,43,103,41],[104,44,103,42],[104,48,103,46],[104,49,103,47],[105,10,104,8,"state"],[105,15,104,13],[105,16,104,14,"selectionManager"],[105,32,104,30],[105,33,104,31,"setFocusedKey"],[105,46,104,44],[105,47,104,45,"key"],[105,50,104,48],[105,51,104,49],[106,8,105,6],[107,6,106,4],[108,4,107,2],[108,5,107,3],[108,7,107,5,"ref"],[108,10,107,8],[108,11,107,9],[109,4,108,2],[109,10,108,8],[110,6,109,4,"keyboardProps"],[111,4,110,2],[111,5,110,3],[111,8,110,6],[111,9,110,7],[111,10,110,8],[111,12,110,10,"_interactions"],[111,25,110,23],[111,26,110,24,"useKeyboard"],[111,37,110,35],[111,39,110,37],[112,6,111,4,"onKeyDown"],[112,15,111,13],[112,17,111,15,"e"],[112,18,111,16],[112,22,111,20],[113,8,112,6],[114,8,113,6],[115,8,114,6],[115,12,114,10,"e"],[115,13,114,11],[115,14,114,12,"repeat"],[115,20,114,18],[115,22,114,20],[116,10,115,8,"e"],[116,11,115,9],[116,12,115,10,"continuePropagation"],[116,31,115,29],[116,32,115,30],[116,33,115,31],[117,10,116,8],[118,8,117,6],[119,8,118,6],[119,16,118,14,"e"],[119,17,118,15],[119,18,118,16,"key"],[119,21,118,19],[120,10,119,8],[120,15,119,13],[120,18,119,16],[121,12,120,10],[121,16,120,14],[121,17,120,15,"isDisabled"],[121,27,120,25],[121,31,120,29,"closeOnSelect"],[121,44,120,42],[121,48,120,46,"onClose"],[121,55,120,53],[121,57,120,55],[122,14,121,12,"onClose"],[122,21,121,19],[122,22,121,20],[122,23,121,21],[123,12,122,10],[124,12,123,10],[125,10,124,8],[125,15,124,13],[125,22,124,20],[126,12,125,10],[127,12,126,10],[127,16,126,14],[127,17,126,15,"isDisabled"],[127,27,126,25],[127,31,126,29,"closeOnSelect"],[127,44,126,42],[127,48,126,46,"onClose"],[127,55,126,53],[127,57,126,55],[128,14,127,12,"onClose"],[128,21,127,19],[128,22,127,20],[128,23,127,21],[129,12,128,10],[130,12,129,10],[131,10,130,8],[132,12,131,10,"e"],[132,13,131,11],[132,14,131,12,"continuePropagation"],[132,33,131,31],[132,34,131,32],[132,35,131,33],[133,12,132,10],[134,8,133,6],[135,6,134,4],[136,4,135,2],[136,5,135,3],[136,6,135,4],[137,4,136,2],[137,11,136,9],[138,6,137,4,"menuItemProps"],[138,19,137,17],[138,21,137,19],[139,8,138,6],[139,11,138,9],[139,12,138,10],[139,13,138,11],[139,15,138,13,"_utils"],[139,21,138,19],[139,22,138,20,"mapDomPropsToRN"],[139,37,138,35],[139,39,138,37,"ariaProps"],[139,48,138,46],[139,49,138,47],[140,8,139,6],[140,11,139,9],[140,12,139,10],[140,13,139,11],[140,15,139,13,"_utils2"],[140,22,139,20],[140,23,139,21,"mergeProps"],[140,33,139,31],[140,35,139,33,"pressProps"],[140,45,139,43],[140,47,139,45,"hoverProps"],[140,57,139,55],[140,59,139,57,"keyboardProps"],[140,72,139,70],[141,6,140,4],[141,7,140,5],[142,6,141,4,"labelProps"],[142,16,141,14],[142,18,141,16],[143,8,142,6,"id"],[143,10,142,8],[143,12,142,10,"labelId"],[144,6,143,4],[144,7,143,5],[145,6,144,4,"descriptionProps"],[145,22,144,20],[145,24,144,22],[146,8,145,6,"id"],[146,10,145,8],[146,12,145,10,"descriptionId"],[147,6,146,4],[147,7,146,5],[148,6,147,4,"keyboardShortcutProps"],[148,27,147,25],[148,29,147,27],[149,8,148,6,"id"],[149,10,148,8],[149,12,148,10,"keyboardId"],[150,6,149,4],[151,4,150,2],[151,5,150,3],[152,2,151,0],[153,0,151,1],[153,3]],"functionMap":{"names":["<global>","useMenuItem","onPressStart","onPress","onPressUp","onHoverStart","onKeyDown"],"mappings":"AAA;AC8B;qBCiC;GDI;gBEC;GFI;kBGC;GHM;IIqB;KJK;eKK;KLuB;CDiB"},"hasCjsExports":true},"type":"js/module"}]}