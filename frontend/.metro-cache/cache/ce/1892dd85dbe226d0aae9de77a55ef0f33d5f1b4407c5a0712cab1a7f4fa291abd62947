{"dependencies":[{"name":"@firebase/component","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"Us9erpYucP7UHYJWKKSJ2tNZDvI=","exportNames":["*"],"imports":1}},{"name":"@firebase/logger","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":91,"index":160}}],"key":"ORGtDHPxrSEUSLP9WZfOMGsHx5g=","exportNames":["*"],"imports":1}},{"name":"@firebase/util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":161},"end":{"line":3,"column":211,"index":372}}],"key":"BkBYK9w6fHruAfQL7S4qWsYds2s=","exportNames":["*"],"imports":1}},{"name":"idb","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":421},"end":{"line":5,"column":29,"index":450}}],"key":"ZdmQBrZzT62w6Zx/DDxYP061LXc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"FirebaseError\", {\n    enumerable: true,\n    get: function () {\n      return _firebaseUtil.FirebaseError;\n    }\n  });\n  Object.defineProperty(exports, \"SDK_VERSION\", {\n    enumerable: true,\n    get: function () {\n      return SDK_VERSION;\n    }\n  });\n  Object.defineProperty(exports, \"_DEFAULT_ENTRY_NAME\", {\n    enumerable: true,\n    get: function () {\n      return DEFAULT_ENTRY_NAME;\n    }\n  });\n  Object.defineProperty(exports, \"_addComponent\", {\n    enumerable: true,\n    get: function () {\n      return _addComponent;\n    }\n  });\n  Object.defineProperty(exports, \"_addOrOverwriteComponent\", {\n    enumerable: true,\n    get: function () {\n      return _addOrOverwriteComponent;\n    }\n  });\n  Object.defineProperty(exports, \"_apps\", {\n    enumerable: true,\n    get: function () {\n      return _apps;\n    }\n  });\n  Object.defineProperty(exports, \"_clearComponents\", {\n    enumerable: true,\n    get: function () {\n      return _clearComponents;\n    }\n  });\n  Object.defineProperty(exports, \"_components\", {\n    enumerable: true,\n    get: function () {\n      return _components;\n    }\n  });\n  Object.defineProperty(exports, \"_getProvider\", {\n    enumerable: true,\n    get: function () {\n      return _getProvider;\n    }\n  });\n  Object.defineProperty(exports, \"_isFirebaseApp\", {\n    enumerable: true,\n    get: function () {\n      return _isFirebaseApp;\n    }\n  });\n  Object.defineProperty(exports, \"_isFirebaseServerApp\", {\n    enumerable: true,\n    get: function () {\n      return _isFirebaseServerApp;\n    }\n  });\n  Object.defineProperty(exports, \"_isFirebaseServerAppSettings\", {\n    enumerable: true,\n    get: function () {\n      return _isFirebaseServerAppSettings;\n    }\n  });\n  Object.defineProperty(exports, \"_registerComponent\", {\n    enumerable: true,\n    get: function () {\n      return _registerComponent;\n    }\n  });\n  Object.defineProperty(exports, \"_removeServiceInstance\", {\n    enumerable: true,\n    get: function () {\n      return _removeServiceInstance;\n    }\n  });\n  Object.defineProperty(exports, \"_serverApps\", {\n    enumerable: true,\n    get: function () {\n      return _serverApps;\n    }\n  });\n  Object.defineProperty(exports, \"deleteApp\", {\n    enumerable: true,\n    get: function () {\n      return deleteApp;\n    }\n  });\n  Object.defineProperty(exports, \"getApp\", {\n    enumerable: true,\n    get: function () {\n      return getApp;\n    }\n  });\n  Object.defineProperty(exports, \"getApps\", {\n    enumerable: true,\n    get: function () {\n      return getApps;\n    }\n  });\n  Object.defineProperty(exports, \"initializeApp\", {\n    enumerable: true,\n    get: function () {\n      return initializeApp;\n    }\n  });\n  Object.defineProperty(exports, \"initializeServerApp\", {\n    enumerable: true,\n    get: function () {\n      return initializeServerApp;\n    }\n  });\n  Object.defineProperty(exports, \"onLog\", {\n    enumerable: true,\n    get: function () {\n      return onLog;\n    }\n  });\n  Object.defineProperty(exports, \"registerVersion\", {\n    enumerable: true,\n    get: function () {\n      return registerVersion;\n    }\n  });\n  Object.defineProperty(exports, \"setLogLevel\", {\n    enumerable: true,\n    get: function () {\n      return setLogLevel;\n    }\n  });\n  var _firebaseComponent = require(_dependencyMap[0], \"@firebase/component\");\n  var _firebaseLogger = require(_dependencyMap[1], \"@firebase/logger\");\n  var _firebaseUtil = require(_dependencyMap[2], \"@firebase/util\");\n  var _idb = require(_dependencyMap[3], \"idb\");\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  class PlatformLoggerServiceImpl {\n    constructor(container) {\n      this.container = container;\n    }\n    // In initial implementation, this will be called by installations on\n    // auth token refresh, and installations will send this string.\n    getPlatformInfoString() {\n      const providers = this.container.getProviders();\n      // Loop through providers and get library/version pairs from any that are\n      // version components.\n      return providers.map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate();\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      }).filter(logString => logString).join(' ');\n    }\n  }\n  /**\n   *\n   * @param provider check if this provider provides a VersionService\n   *\n   * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n   * provides VersionService. The provider is not necessarily a 'app-version'\n   * provider.\n   */\n  function isVersionServiceProvider(provider) {\n    const component = provider.getComponent();\n    return component?.type === \"VERSION\" /* ComponentType.VERSION */;\n  }\n  const name$q = \"@firebase/app\";\n  const version$1 = \"0.14.4\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const logger = new _firebaseLogger.Logger('@firebase/app');\n  const name$p = \"@firebase/app-compat\";\n  const name$o = \"@firebase/analytics-compat\";\n  const name$n = \"@firebase/analytics\";\n  const name$m = \"@firebase/app-check-compat\";\n  const name$l = \"@firebase/app-check\";\n  const name$k = \"@firebase/auth\";\n  const name$j = \"@firebase/auth-compat\";\n  const name$i = \"@firebase/database\";\n  const name$h = \"@firebase/data-connect\";\n  const name$g = \"@firebase/database-compat\";\n  const name$f = \"@firebase/functions\";\n  const name$e = \"@firebase/functions-compat\";\n  const name$d = \"@firebase/installations\";\n  const name$c = \"@firebase/installations-compat\";\n  const name$b = \"@firebase/messaging\";\n  const name$a = \"@firebase/messaging-compat\";\n  const name$9 = \"@firebase/performance\";\n  const name$8 = \"@firebase/performance-compat\";\n  const name$7 = \"@firebase/remote-config\";\n  const name$6 = \"@firebase/remote-config-compat\";\n  const name$5 = \"@firebase/storage\";\n  const name$4 = \"@firebase/storage-compat\";\n  const name$3 = \"@firebase/firestore\";\n  const name$2 = \"@firebase/ai\";\n  const name$1 = \"@firebase/firestore-compat\";\n  const name = \"firebase\";\n  const version = \"12.4.0\";\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The default app name\n   *\n   * @internal\n   */\n  const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n  const PLATFORM_LOG_STRING = {\n    [name$q]: 'fire-core',\n    [name$p]: 'fire-core-compat',\n    [name$n]: 'fire-analytics',\n    [name$o]: 'fire-analytics-compat',\n    [name$l]: 'fire-app-check',\n    [name$m]: 'fire-app-check-compat',\n    [name$k]: 'fire-auth',\n    [name$j]: 'fire-auth-compat',\n    [name$i]: 'fire-rtdb',\n    [name$h]: 'fire-data-connect',\n    [name$g]: 'fire-rtdb-compat',\n    [name$f]: 'fire-fn',\n    [name$e]: 'fire-fn-compat',\n    [name$d]: 'fire-iid',\n    [name$c]: 'fire-iid-compat',\n    [name$b]: 'fire-fcm',\n    [name$a]: 'fire-fcm-compat',\n    [name$9]: 'fire-perf',\n    [name$8]: 'fire-perf-compat',\n    [name$7]: 'fire-rc',\n    [name$6]: 'fire-rc-compat',\n    [name$5]: 'fire-gcs',\n    [name$4]: 'fire-gcs-compat',\n    [name$3]: 'fire-fst',\n    [name$1]: 'fire-fst-compat',\n    [name$2]: 'fire-vertex',\n    'fire-js': 'fire-js',\n    // Platform identifier for JS SDK.\n    [name]: 'fire-js-all'\n  };\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * @internal\n   */\n  const _apps = new Map();\n  /**\n   * @internal\n   */\n  const _serverApps = new Map();\n  /**\n   * Registered components.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const _components = new Map();\n  /**\n   * @param component - the component being added to this app's container\n   *\n   * @internal\n   */\n  function _addComponent(app, component) {\n    try {\n      app.container.addComponent(component);\n    } catch (e) {\n      logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n    }\n  }\n  /**\n   *\n   * @internal\n   */\n  function _addOrOverwriteComponent(app, component) {\n    app.container.addOrOverwriteComponent(component);\n  }\n  /**\n   *\n   * @param component - the component to register\n   * @returns whether or not the component is registered successfully\n   *\n   * @internal\n   */\n  function _registerComponent(component) {\n    const componentName = component.name;\n    if (_components.has(componentName)) {\n      logger.debug(`There were multiple attempts to register component ${componentName}.`);\n      return false;\n    }\n    _components.set(componentName, component);\n    // add the component to existing app instances\n    for (const app of _apps.values()) {\n      _addComponent(app, component);\n    }\n    for (const serverApp of _serverApps.values()) {\n      _addComponent(serverApp, component);\n    }\n    return true;\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   *\n   * @returns the provider for the service with the matching name\n   *\n   * @internal\n   */\n  function _getProvider(app, name) {\n    const heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n      optional: true\n    });\n    if (heartbeatController) {\n      void heartbeatController.triggerHeartbeat();\n    }\n    return app.container.getProvider(name);\n  }\n  /**\n   *\n   * @param app - FirebaseApp instance\n   * @param name - service name\n   * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n   *\n   * @internal\n   */\n  function _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\n    _getProvider(app, name).clearInstance(instanceIdentifier);\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provide object is of type FirebaseApp.\n   *\n   * @internal\n   */\n  function _isFirebaseApp(obj) {\n    return obj.options !== undefined;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp, FirebaseOptions or FirebaseAppSettings.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerAppSettings(obj) {\n    if (_isFirebaseApp(obj)) {\n      return false;\n    }\n    return 'authIdToken' in obj || 'appCheckToken' in obj || 'releaseOnDeref' in obj || 'automaticDataCollectionEnabled' in obj;\n  }\n  /**\n   *\n   * @param obj - an object of type FirebaseApp.\n   *\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\n   *\n   * @internal\n   */\n  function _isFirebaseServerApp(obj) {\n    if (obj === null || obj === undefined) {\n      return false;\n    }\n    return obj.settings !== undefined;\n  }\n  /**\n   * Test only\n   *\n   * @internal\n   */\n  function _clearComponents() {\n    _components.clear();\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const ERRORS = {\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" + 'call initializeApp() first',\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.',\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\n  };\n  const ERROR_FACTORY = new _firebaseUtil.ErrorFactory('app', 'Firebase', ERRORS);\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  class FirebaseAppImpl {\n    constructor(options, config, container) {\n      this._isDeleted = false;\n      this._options = {\n        ...options\n      };\n      this._config = {\n        ...config\n      };\n      this._name = config.name;\n      this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n      this._container = container;\n      this.container.addComponent(new _firebaseComponent.Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    }\n    get automaticDataCollectionEnabled() {\n      this.checkDestroyed();\n      return this._automaticDataCollectionEnabled;\n    }\n    set automaticDataCollectionEnabled(val) {\n      this.checkDestroyed();\n      this._automaticDataCollectionEnabled = val;\n    }\n    get name() {\n      this.checkDestroyed();\n      return this._name;\n    }\n    get options() {\n      this.checkDestroyed();\n      return this._options;\n    }\n    get config() {\n      this.checkDestroyed();\n      return this._config;\n    }\n    get container() {\n      return this._container;\n    }\n    get isDeleted() {\n      return this._isDeleted;\n    }\n    set isDeleted(val) {\n      this._isDeleted = val;\n    }\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, {\n          appName: this._name\n        });\n      }\n    }\n  }\n\n  /**\n   * @license\n   * Copyright 2023 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  // Parse the token and check to see if the `exp` claim is in the future.\n  // Reports an error to the console if the token or claim could not be parsed, or if `exp` is in\n  // the past.\n  function validateTokenTTL(base64Token, tokenName) {\n    const secondPart = (0, _firebaseUtil.base64Decode)(base64Token.split('.')[1]);\n    if (secondPart === null) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: second part could not be parsed.`);\n      return;\n    }\n    const expClaim = JSON.parse(secondPart).exp;\n    if (expClaim === undefined) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: expiration claim could not be parsed`);\n      return;\n    }\n    const exp = JSON.parse(secondPart).exp * 1000;\n    const now = new Date().getTime();\n    const diff = exp - now;\n    if (diff <= 0) {\n      console.error(`FirebaseServerApp ${tokenName} is invalid: the token has expired.`);\n    }\n  }\n  class FirebaseServerAppImpl extends FirebaseAppImpl {\n    constructor(options, serverConfig, name, container) {\n      // Build configuration parameters for the FirebaseAppImpl base class.\n      const automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined ? serverConfig.automaticDataCollectionEnabled : true;\n      // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n      const config = {\n        name,\n        automaticDataCollectionEnabled\n      };\n      if (options.apiKey !== undefined) {\n        // Construct the parent FirebaseAppImp object.\n        super(options, config, container);\n      } else {\n        const appImpl = options;\n        super(appImpl.options, config, container);\n      }\n      // Now construct the data for the FirebaseServerAppImpl.\n      this._serverConfig = {\n        automaticDataCollectionEnabled,\n        ...serverConfig\n      };\n      // Ensure that the current time is within the `authIdtoken` window of validity.\n      if (this._serverConfig.authIdToken) {\n        validateTokenTTL(this._serverConfig.authIdToken, 'authIdToken');\n      }\n      // Ensure that the current time is within the `appCheckToken` window of validity.\n      if (this._serverConfig.appCheckToken) {\n        validateTokenTTL(this._serverConfig.appCheckToken, 'appCheckToken');\n      }\n      this._finalizationRegistry = null;\n      if (typeof FinalizationRegistry !== 'undefined') {\n        this._finalizationRegistry = new FinalizationRegistry(() => {\n          this.automaticCleanup();\n        });\n      }\n      this._refCount = 0;\n      this.incRefCount(this._serverConfig.releaseOnDeref);\n      // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n      // will never trigger.\n      this._serverConfig.releaseOnDeref = undefined;\n      serverConfig.releaseOnDeref = undefined;\n      registerVersion(name$q, version$1, 'serverapp');\n    }\n    toJSON() {\n      return undefined;\n    }\n    get refCount() {\n      return this._refCount;\n    }\n    // Increment the reference count of this server app. If an object is provided, register it\n    // with the finalization registry.\n    incRefCount(obj) {\n      if (this.isDeleted) {\n        return;\n      }\n      this._refCount++;\n      if (obj !== undefined && this._finalizationRegistry !== null) {\n        this._finalizationRegistry.register(obj, this);\n      }\n    }\n    // Decrement the reference count.\n    decRefCount() {\n      if (this.isDeleted) {\n        return 0;\n      }\n      return --this._refCount;\n    }\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\n    // handles this is in deleteApp(...).\n    automaticCleanup() {\n      void deleteApp(this);\n    }\n    get settings() {\n      this.checkDestroyed();\n      return this._serverConfig;\n    }\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\n      }\n    }\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * The current SDK version.\n   *\n   * @public\n   */\n  const SDK_VERSION = version;\n  function initializeApp(_options, rawConfig = {}) {\n    let options = _options;\n    if (typeof rawConfig !== 'object') {\n      const name = rawConfig;\n      rawConfig = {\n        name\n      };\n    }\n    const config = {\n      name: DEFAULT_ENTRY_NAME,\n      automaticDataCollectionEnabled: true,\n      ...rawConfig\n    };\n    const name = config.name;\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\n        appName: String(name)\n      });\n    }\n    options || (options = (0, _firebaseUtil.getDefaultAppConfig)());\n    if (!options) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    const existingApp = _apps.get(name);\n    if (existingApp) {\n      // return the existing app if options and config deep equal the ones in the existing app.\n      if ((0, _firebaseUtil.deepEqual)(options, existingApp.options) && (0, _firebaseUtil.deepEqual)(config, existingApp.config)) {\n        return existingApp;\n      } else {\n        throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, {\n          appName: name\n        });\n      }\n    }\n    const container = new _firebaseComponent.ComponentContainer(name);\n    for (const component of _components.values()) {\n      container.addComponent(component);\n    }\n    const newApp = new FirebaseAppImpl(options, config, container);\n    _apps.set(name, newApp);\n    return newApp;\n  }\n  function initializeServerApp(_options, _serverAppConfig = {}) {\n    if ((0, _firebaseUtil.isBrowser)() && !(0, _firebaseUtil.isWebWorker)()) {\n      // FirebaseServerApp isn't designed to be run in browsers.\n      throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\n    }\n    let firebaseOptions;\n    let serverAppSettings = _serverAppConfig || {};\n    if (_options) {\n      if (_isFirebaseApp(_options)) {\n        firebaseOptions = _options.options;\n      } else if (_isFirebaseServerAppSettings(_options)) {\n        serverAppSettings = _options;\n      } else {\n        firebaseOptions = _options;\n      }\n    }\n    if (serverAppSettings.automaticDataCollectionEnabled === undefined) {\n      serverAppSettings.automaticDataCollectionEnabled = true;\n    }\n    firebaseOptions || (firebaseOptions = (0, _firebaseUtil.getDefaultAppConfig)());\n    if (!firebaseOptions) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    // Build an app name based on a hash of the configuration options.\n    const nameObj = {\n      ...serverAppSettings,\n      ...firebaseOptions\n    };\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n    if (nameObj.releaseOnDeref !== undefined) {\n      delete nameObj.releaseOnDeref;\n    }\n    const hashCode = s => {\n      return [...s].reduce((hash, c) => Math.imul(31, hash) + c.charCodeAt(0) | 0, 0);\n    };\n    if (serverAppSettings.releaseOnDeref !== undefined) {\n      if (typeof FinalizationRegistry === 'undefined') {\n        throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\n      }\n    }\n    const nameString = '' + hashCode(JSON.stringify(nameObj));\n    const existingApp = _serverApps.get(nameString);\n    if (existingApp) {\n      existingApp.incRefCount(serverAppSettings.releaseOnDeref);\n      return existingApp;\n    }\n    const container = new _firebaseComponent.ComponentContainer(nameString);\n    for (const component of _components.values()) {\n      container.addComponent(component);\n    }\n    const newApp = new FirebaseServerAppImpl(firebaseOptions, serverAppSettings, nameString, container);\n    _serverApps.set(nameString, newApp);\n    return newApp;\n  }\n  /**\n   * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n   *\n   * When called with no arguments, the default app is returned. When an app name\n   * is provided, the app corresponding to that name is returned.\n   *\n   * An exception is thrown if the app being retrieved has not yet been\n   * initialized.\n   *\n   * @example\n   * ```javascript\n   * // Return the default app\n   * const app = getApp();\n   * ```\n   *\n   * @example\n   * ```javascript\n   * // Return a named app\n   * const otherApp = getApp(\"otherApp\");\n   * ```\n   *\n   * @param name - Optional name of the app to return. If no name is\n   *   provided, the default is `\"[DEFAULT]\"`.\n   *\n   * @returns The app corresponding to the provided app name.\n   *   If no app name is provided, the default app is returned.\n   *\n   * @public\n   */\n  function getApp(name = DEFAULT_ENTRY_NAME) {\n    const app = _apps.get(name);\n    if (!app && name === DEFAULT_ENTRY_NAME && (0, _firebaseUtil.getDefaultAppConfig)()) {\n      return initializeApp();\n    }\n    if (!app) {\n      throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, {\n        appName: name\n      });\n    }\n    return app;\n  }\n  /**\n   * A (read-only) array of all initialized apps.\n   * @public\n   */\n  function getApps() {\n    return Array.from(_apps.values());\n  }\n  /**\n   * Renders this app unusable and frees the resources of all associated\n   * services.\n   *\n   * @example\n   * ```javascript\n   * deleteApp(app)\n   *   .then(function() {\n   *     console.log(\"App deleted successfully\");\n   *   })\n   *   .catch(function(error) {\n   *     console.log(\"Error deleting app:\", error);\n   *   });\n   * ```\n   *\n   * @public\n   */\n  async function deleteApp(app) {\n    let cleanupProviders = false;\n    const name = app.name;\n    if (_apps.has(name)) {\n      cleanupProviders = true;\n      _apps.delete(name);\n    } else if (_serverApps.has(name)) {\n      const firebaseServerApp = app;\n      if (firebaseServerApp.decRefCount() <= 0) {\n        _serverApps.delete(name);\n        cleanupProviders = true;\n      }\n    }\n    if (cleanupProviders) {\n      await Promise.all(app.container.getProviders().map(provider => provider.delete()));\n      app.isDeleted = true;\n    }\n  }\n  /**\n   * Registers a library's name and version for platform logging purposes.\n   * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n   * @param version - Current version of that library.\n   * @param variant - Bundle variant, e.g., node, rn, etc.\n   *\n   * @public\n   */\n  function registerVersion(libraryKeyOrName, version, variant) {\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n    if (variant) {\n      library += `-${variant}`;\n    }\n    const libraryMismatch = library.match(/\\s|\\//);\n    const versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n      const warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n      if (libraryMismatch) {\n        warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      if (libraryMismatch && versionMismatch) {\n        warning.push('and');\n      }\n      if (versionMismatch) {\n        warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      logger.warn(warning.join(' '));\n      return;\n    }\n    _registerComponent(new _firebaseComponent.Component(`${library}-version`, () => ({\n      library,\n      version\n    }), \"VERSION\" /* ComponentType.VERSION */));\n  }\n  /**\n   * Sets log handler for all Firebase SDKs.\n   * @param logCallback - An optional custom log handler that executes user code whenever\n   * the Firebase SDK makes a logging call.\n   *\n   * @public\n   */\n  function onLog(logCallback, options) {\n    if (logCallback !== null && typeof logCallback !== 'function') {\n      throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\n    }\n    (0, _firebaseLogger.setUserLogHandler)(logCallback, options);\n  }\n  /**\n   * Sets log level for all Firebase SDKs.\n   *\n   * All of the log types above the current log level are captured (i.e. if\n   * you set the log level to `info`, errors are logged, but `debug` and\n   * `verbose` logs are not).\n   *\n   * @public\n   */\n  function setLogLevel(logLevel) {\n    (0, _firebaseLogger.setLogLevel)(logLevel);\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const DB_NAME = 'firebase-heartbeat-database';\n  const DB_VERSION = 1;\n  const STORE_NAME = 'firebase-heartbeat-store';\n  let dbPromise = null;\n  function getDbPromise() {\n    if (!dbPromise) {\n      dbPromise = (0, _idb.openDB)(DB_NAME, DB_VERSION, {\n        upgrade: (db, oldVersion) => {\n          // We don't use 'break' in this switch statement, the fall-through\n          // behavior is what we want, because if there are multiple versions between\n          // the old version and the current version, we want ALL the migrations\n          // that correspond to those versions to run, not only the last one.\n          // eslint-disable-next-line default-case\n          switch (oldVersion) {\n            case 0:\n              try {\n                db.createObjectStore(STORE_NAME);\n              } catch (e) {\n                // Safari/iOS browsers throw occasional exceptions on\n                // db.createObjectStore() that may be a bug. Avoid blocking\n                // the rest of the app functionality.\n                console.warn(e);\n              }\n          }\n        }\n      }).catch(e => {\n        throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\n          originalErrorMessage: e.message\n        });\n      });\n    }\n    return dbPromise;\n  }\n  async function readHeartbeatsFromIndexedDB(app) {\n    try {\n      const db = await getDbPromise();\n      const tx = db.transaction(STORE_NAME);\n      const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n      // We already have the value but tx.done can throw,\n      // so we need to await it here to catch errors\n      await tx.done;\n      return result;\n    } catch (e) {\n      if (e instanceof _firebaseUtil.FirebaseError) {\n        logger.warn(e.message);\n      } else {\n        const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\n          originalErrorMessage: e?.message\n        });\n        logger.warn(idbGetError.message);\n      }\n    }\n  }\n  async function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\n    try {\n      const db = await getDbPromise();\n      const tx = db.transaction(STORE_NAME, 'readwrite');\n      const objectStore = tx.objectStore(STORE_NAME);\n      await objectStore.put(heartbeatObject, computeKey(app));\n      await tx.done;\n    } catch (e) {\n      if (e instanceof _firebaseUtil.FirebaseError) {\n        logger.warn(e.message);\n      } else {\n        const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\n          originalErrorMessage: e?.message\n        });\n        logger.warn(idbGetError.message);\n      }\n    }\n  }\n  function computeKey(app) {\n    return `${app.name}!${app.options.appId}`;\n  }\n\n  /**\n   * @license\n   * Copyright 2021 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  const MAX_HEADER_BYTES = 1024;\n  const MAX_NUM_STORED_HEARTBEATS = 30;\n  class HeartbeatServiceImpl {\n    constructor(container) {\n      this.container = container;\n      /**\n       * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n       * the header string.\n       * Stores one record per date. This will be consolidated into the standard\n       * format of one record per user agent string before being sent as a header.\n       * Populated from indexedDB when the controller is instantiated and should\n       * be kept in sync with indexedDB.\n       * Leave public for easier testing.\n       */\n      this._heartbeatsCache = null;\n      const app = this.container.getProvider('app').getImmediate();\n      this._storage = new HeartbeatStorageImpl(app);\n      this._heartbeatsCachePromise = this._storage.read().then(result => {\n        this._heartbeatsCache = result;\n        return result;\n      });\n    }\n    /**\n     * Called to report a heartbeat. The function will generate\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n     * to IndexedDB.\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\n     * already logged, subsequent calls to this function in the same day will be ignored.\n     */\n    async triggerHeartbeat() {\n      try {\n        const platformLogger = this.container.getProvider('platform-logger').getImmediate();\n        // This is the \"Firebase user agent\" string from the platform logger\n        // service, not the browser user agent.\n        const agent = platformLogger.getPlatformInfoString();\n        const date = getUTCDateString();\n        if (this._heartbeatsCache?.heartbeats == null) {\n          this._heartbeatsCache = await this._heartbeatsCachePromise;\n          // If we failed to construct a heartbeats cache, then return immediately.\n          if (this._heartbeatsCache?.heartbeats == null) {\n            return;\n          }\n        }\n        // Do not store a heartbeat if one is already stored for this day\n        // or if a header has already been sent today.\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n          return;\n        } else {\n          // There is no entry for this date. Create one.\n          this._heartbeatsCache.heartbeats.push({\n            date,\n            agent\n          });\n          // If the number of stored heartbeats exceeds the maximum number of stored heartbeats, remove the heartbeat with the earliest date.\n          // Since this is executed each time a heartbeat is pushed, the limit can only be exceeded by one, so only one needs to be removed.\n          if (this._heartbeatsCache.heartbeats.length > MAX_NUM_STORED_HEARTBEATS) {\n            const earliestHeartbeatIdx = getEarliestHeartbeatIdx(this._heartbeatsCache.heartbeats);\n            this._heartbeatsCache.heartbeats.splice(earliestHeartbeatIdx, 1);\n          }\n        }\n        return this._storage.overwrite(this._heartbeatsCache);\n      } catch (e) {\n        logger.warn(e);\n      }\n    }\n    /**\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n     * It also clears all heartbeats from memory as well as in IndexedDB.\n     *\n     * NOTE: Consuming product SDKs should not send the header if this method\n     * returns an empty string.\n     */\n    async getHeartbeatsHeader() {\n      try {\n        if (this._heartbeatsCache === null) {\n          await this._heartbeatsCachePromise;\n        }\n        // If it's still null or the array is empty, there is no data to send.\n        if (this._heartbeatsCache?.heartbeats == null || this._heartbeatsCache.heartbeats.length === 0) {\n          return '';\n        }\n        const date = getUTCDateString();\n        // Extract as many heartbeats from the cache as will fit under the size limit.\n        const {\n          heartbeatsToSend,\n          unsentEntries\n        } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\n        const headerString = (0, _firebaseUtil.base64urlEncodeWithoutPadding)(JSON.stringify({\n          version: 2,\n          heartbeats: heartbeatsToSend\n        }));\n        // Store last sent date to prevent another being logged/sent for the same day.\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\n        if (unsentEntries.length > 0) {\n          // Store any unsent entries if they exist.\n          this._heartbeatsCache.heartbeats = unsentEntries;\n          // This seems more likely than emptying the array (below) to lead to some odd state\n          // since the cache isn't empty and this will be called again on the next request,\n          // and is probably safest if we await it.\n          await this._storage.overwrite(this._heartbeatsCache);\n        } else {\n          this._heartbeatsCache.heartbeats = [];\n          // Do not wait for this, to reduce latency.\n          void this._storage.overwrite(this._heartbeatsCache);\n        }\n        return headerString;\n      } catch (e) {\n        logger.warn(e);\n        return '';\n      }\n    }\n  }\n  function getUTCDateString() {\n    const today = new Date();\n    // Returns date format 'YYYY-MM-DD'\n    return today.toISOString().substring(0, 10);\n  }\n  function extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\n    // Heartbeats grouped by user agent in the standard format to be sent in\n    // the header.\n    const heartbeatsToSend = [];\n    // Single date format heartbeats that are not sent.\n    let unsentEntries = heartbeatsCache.slice();\n    for (const singleDateHeartbeat of heartbeatsCache) {\n      // Look for an existing entry with the same user agent.\n      const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n      if (!heartbeatEntry) {\n        // If no entry for this user agent exists, create one.\n        heartbeatsToSend.push({\n          agent: singleDateHeartbeat.agent,\n          dates: [singleDateHeartbeat.date]\n        });\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          // If the header would exceed max size, remove the added heartbeat\n          // entry and stop adding to the header.\n          heartbeatsToSend.pop();\n          break;\n        }\n      } else {\n        heartbeatEntry.dates.push(singleDateHeartbeat.date);\n        // If the header would exceed max size, remove the added date\n        // and stop adding to the header.\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          heartbeatEntry.dates.pop();\n          break;\n        }\n      }\n      // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n      // quota and the loop breaks early.)\n      unsentEntries = unsentEntries.slice(1);\n    }\n    return {\n      heartbeatsToSend,\n      unsentEntries\n    };\n  }\n  class HeartbeatStorageImpl {\n    constructor(app) {\n      this.app = app;\n      this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n    }\n    async runIndexedDBEnvironmentCheck() {\n      if (!(0, _firebaseUtil.isIndexedDBAvailable)()) {\n        return false;\n      } else {\n        return (0, _firebaseUtil.validateIndexedDBOpenable)().then(() => true).catch(() => false);\n      }\n    }\n    /**\n     * Read all heartbeats.\n     */\n    async read() {\n      const canUseIndexedDB = await this._canUseIndexedDBPromise;\n      if (!canUseIndexedDB) {\n        return {\n          heartbeats: []\n        };\n      } else {\n        const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n        if (idbHeartbeatObject?.heartbeats) {\n          return idbHeartbeatObject;\n        } else {\n          return {\n            heartbeats: []\n          };\n        }\n      }\n    }\n    // overwrite the storage with the provided heartbeats\n    async overwrite(heartbeatsObject) {\n      const canUseIndexedDB = await this._canUseIndexedDBPromise;\n      if (!canUseIndexedDB) {\n        return;\n      } else {\n        const existingHeartbeatsObject = await this.read();\n        return writeHeartbeatsToIndexedDB(this.app, {\n          lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n          heartbeats: heartbeatsObject.heartbeats\n        });\n      }\n    }\n    // add heartbeats\n    async add(heartbeatsObject) {\n      const canUseIndexedDB = await this._canUseIndexedDBPromise;\n      if (!canUseIndexedDB) {\n        return;\n      } else {\n        const existingHeartbeatsObject = await this.read();\n        return writeHeartbeatsToIndexedDB(this.app, {\n          lastSentHeartbeatDate: heartbeatsObject.lastSentHeartbeatDate ?? existingHeartbeatsObject.lastSentHeartbeatDate,\n          heartbeats: [...existingHeartbeatsObject.heartbeats, ...heartbeatsObject.heartbeats]\n        });\n      }\n    }\n  }\n  /**\n   * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n   * in a platform logging header JSON object, stringified, and converted\n   * to base 64.\n   */\n  function countBytes(heartbeatsCache) {\n    // base64 has a restricted set of characters, all of which should be 1 byte.\n    return (0, _firebaseUtil.base64urlEncodeWithoutPadding)(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({\n      version: 2,\n      heartbeats: heartbeatsCache\n    })).length;\n  }\n  /**\n   * Returns the index of the heartbeat with the earliest date.\n   * If the heartbeats array is empty, -1 is returned.\n   */\n  function getEarliestHeartbeatIdx(heartbeats) {\n    if (heartbeats.length === 0) {\n      return -1;\n    }\n    let earliestHeartbeatIdx = 0;\n    let earliestHeartbeatDate = heartbeats[0].date;\n    for (let i = 1; i < heartbeats.length; i++) {\n      if (heartbeats[i].date < earliestHeartbeatDate) {\n        earliestHeartbeatDate = heartbeats[i].date;\n        earliestHeartbeatIdx = i;\n      }\n    }\n    return earliestHeartbeatIdx;\n  }\n\n  /**\n   * @license\n   * Copyright 2019 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  function registerCoreComponents(variant) {\n    _registerComponent(new _firebaseComponent.Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    _registerComponent(new _firebaseComponent.Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    // Register `app` package.\n    registerVersion(name$q, version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm, cjs, etc during the compilation\n    registerVersion(name$q, version$1, 'esm2020');\n    // Register platform SDK identifier (no version).\n    registerVersion('fire-js', '');\n  }\n\n  /**\n   * Firebase App\n   *\n   * @remarks This package coordinates the communication between the different Firebase components\n   * @packageDocumentation\n   */\n  registerCoreComponents('');\n});","lineCount":1333,"map":[[7,2,4,0,"Object"],[7,8,4,0],[7,9,4,0,"defineProperty"],[7,23,4,0],[7,24,4,0,"exports"],[7,31,4,0],[8,4,4,0,"enumerable"],[8,14,4,0],[9,4,4,0,"get"],[9,7,4,0],[9,18,4,0,"get"],[9,19,4,0],[10,6,4,0],[10,13,4,0,"_firebaseUtil"],[10,26,4,0],[10,27,4,0,"FirebaseError"],[10,40,4,0],[11,4,4,0],[12,2,4,0],[13,2,1236,0,"Object"],[13,8,1236,0],[13,9,1236,0,"defineProperty"],[13,23,1236,0],[13,24,1236,0,"exports"],[13,31,1236,0],[14,4,1236,0,"enumerable"],[14,14,1236,0],[15,4,1236,0,"get"],[15,7,1236,0],[15,18,1236,0,"get"],[15,19,1236,0],[16,6,1236,0],[16,13,1236,9,"SDK_VERSION"],[16,24,1236,20],[17,4,1236,20],[18,2,1236,20],[19,2,1236,0,"Object"],[19,8,1236,0],[19,9,1236,0,"defineProperty"],[19,23,1236,0],[19,24,1236,0,"exports"],[19,31,1236,0],[20,4,1236,0,"enumerable"],[20,14,1236,0],[21,4,1236,0,"get"],[21,7,1236,0],[21,18,1236,0,"get"],[21,19,1236,0],[22,6,1236,0],[22,13,1236,22,"DEFAULT_ENTRY_NAME"],[22,31,1236,40],[23,4,1236,40],[24,2,1236,40],[25,2,1236,0,"Object"],[25,8,1236,0],[25,9,1236,0,"defineProperty"],[25,23,1236,0],[25,24,1236,0,"exports"],[25,31,1236,0],[26,4,1236,0,"enumerable"],[26,14,1236,0],[27,4,1236,0,"get"],[27,7,1236,0],[27,18,1236,0,"get"],[27,19,1236,0],[28,6,1236,0],[28,13,1236,65,"_addComponent"],[28,26,1236,78],[29,4,1236,78],[30,2,1236,78],[31,2,1236,0,"Object"],[31,8,1236,0],[31,9,1236,0,"defineProperty"],[31,23,1236,0],[31,24,1236,0,"exports"],[31,31,1236,0],[32,4,1236,0,"enumerable"],[32,14,1236,0],[33,4,1236,0,"get"],[33,7,1236,0],[33,18,1236,0,"get"],[33,19,1236,0],[34,6,1236,0],[34,13,1236,80,"_addOrOverwriteComponent"],[34,37,1236,104],[35,4,1236,104],[36,2,1236,104],[37,2,1236,0,"Object"],[37,8,1236,0],[37,9,1236,0,"defineProperty"],[37,23,1236,0],[37,24,1236,0,"exports"],[37,31,1236,0],[38,4,1236,0,"enumerable"],[38,14,1236,0],[39,4,1236,0,"get"],[39,7,1236,0],[39,18,1236,0,"get"],[39,19,1236,0],[40,6,1236,0],[40,13,1236,106,"_apps"],[40,18,1236,111],[41,4,1236,111],[42,2,1236,111],[43,2,1236,0,"Object"],[43,8,1236,0],[43,9,1236,0,"defineProperty"],[43,23,1236,0],[43,24,1236,0,"exports"],[43,31,1236,0],[44,4,1236,0,"enumerable"],[44,14,1236,0],[45,4,1236,0,"get"],[45,7,1236,0],[45,18,1236,0,"get"],[45,19,1236,0],[46,6,1236,0],[46,13,1236,113,"_clearComponents"],[46,29,1236,129],[47,4,1236,129],[48,2,1236,129],[49,2,1236,0,"Object"],[49,8,1236,0],[49,9,1236,0,"defineProperty"],[49,23,1236,0],[49,24,1236,0,"exports"],[49,31,1236,0],[50,4,1236,0,"enumerable"],[50,14,1236,0],[51,4,1236,0,"get"],[51,7,1236,0],[51,18,1236,0,"get"],[51,19,1236,0],[52,6,1236,0],[52,13,1236,131,"_components"],[52,24,1236,142],[53,4,1236,142],[54,2,1236,142],[55,2,1236,0,"Object"],[55,8,1236,0],[55,9,1236,0,"defineProperty"],[55,23,1236,0],[55,24,1236,0,"exports"],[55,31,1236,0],[56,4,1236,0,"enumerable"],[56,14,1236,0],[57,4,1236,0,"get"],[57,7,1236,0],[57,18,1236,0,"get"],[57,19,1236,0],[58,6,1236,0],[58,13,1236,144,"_getProvider"],[58,25,1236,156],[59,4,1236,156],[60,2,1236,156],[61,2,1236,0,"Object"],[61,8,1236,0],[61,9,1236,0,"defineProperty"],[61,23,1236,0],[61,24,1236,0,"exports"],[61,31,1236,0],[62,4,1236,0,"enumerable"],[62,14,1236,0],[63,4,1236,0,"get"],[63,7,1236,0],[63,18,1236,0,"get"],[63,19,1236,0],[64,6,1236,0],[64,13,1236,158,"_isFirebaseApp"],[64,27,1236,172],[65,4,1236,172],[66,2,1236,172],[67,2,1236,0,"Object"],[67,8,1236,0],[67,9,1236,0,"defineProperty"],[67,23,1236,0],[67,24,1236,0,"exports"],[67,31,1236,0],[68,4,1236,0,"enumerable"],[68,14,1236,0],[69,4,1236,0,"get"],[69,7,1236,0],[69,18,1236,0,"get"],[69,19,1236,0],[70,6,1236,0],[70,13,1236,174,"_isFirebaseServerApp"],[70,33,1236,194],[71,4,1236,194],[72,2,1236,194],[73,2,1236,0,"Object"],[73,8,1236,0],[73,9,1236,0,"defineProperty"],[73,23,1236,0],[73,24,1236,0,"exports"],[73,31,1236,0],[74,4,1236,0,"enumerable"],[74,14,1236,0],[75,4,1236,0,"get"],[75,7,1236,0],[75,18,1236,0,"get"],[75,19,1236,0],[76,6,1236,0],[76,13,1236,196,"_isFirebaseServerAppSettings"],[76,41,1236,224],[77,4,1236,224],[78,2,1236,224],[79,2,1236,0,"Object"],[79,8,1236,0],[79,9,1236,0,"defineProperty"],[79,23,1236,0],[79,24,1236,0,"exports"],[79,31,1236,0],[80,4,1236,0,"enumerable"],[80,14,1236,0],[81,4,1236,0,"get"],[81,7,1236,0],[81,18,1236,0,"get"],[81,19,1236,0],[82,6,1236,0],[82,13,1236,226,"_registerComponent"],[82,31,1236,244],[83,4,1236,244],[84,2,1236,244],[85,2,1236,0,"Object"],[85,8,1236,0],[85,9,1236,0,"defineProperty"],[85,23,1236,0],[85,24,1236,0,"exports"],[85,31,1236,0],[86,4,1236,0,"enumerable"],[86,14,1236,0],[87,4,1236,0,"get"],[87,7,1236,0],[87,18,1236,0,"get"],[87,19,1236,0],[88,6,1236,0],[88,13,1236,246,"_removeServiceInstance"],[88,35,1236,268],[89,4,1236,268],[90,2,1236,268],[91,2,1236,0,"Object"],[91,8,1236,0],[91,9,1236,0,"defineProperty"],[91,23,1236,0],[91,24,1236,0,"exports"],[91,31,1236,0],[92,4,1236,0,"enumerable"],[92,14,1236,0],[93,4,1236,0,"get"],[93,7,1236,0],[93,18,1236,0,"get"],[93,19,1236,0],[94,6,1236,0],[94,13,1236,270,"_serverApps"],[94,24,1236,281],[95,4,1236,281],[96,2,1236,281],[97,2,1236,0,"Object"],[97,8,1236,0],[97,9,1236,0,"defineProperty"],[97,23,1236,0],[97,24,1236,0,"exports"],[97,31,1236,0],[98,4,1236,0,"enumerable"],[98,14,1236,0],[99,4,1236,0,"get"],[99,7,1236,0],[99,18,1236,0,"get"],[99,19,1236,0],[100,6,1236,0],[100,13,1236,283,"deleteApp"],[100,22,1236,292],[101,4,1236,292],[102,2,1236,292],[103,2,1236,0,"Object"],[103,8,1236,0],[103,9,1236,0,"defineProperty"],[103,23,1236,0],[103,24,1236,0,"exports"],[103,31,1236,0],[104,4,1236,0,"enumerable"],[104,14,1236,0],[105,4,1236,0,"get"],[105,7,1236,0],[105,18,1236,0,"get"],[105,19,1236,0],[106,6,1236,0],[106,13,1236,294,"getApp"],[106,19,1236,300],[107,4,1236,300],[108,2,1236,300],[109,2,1236,0,"Object"],[109,8,1236,0],[109,9,1236,0,"defineProperty"],[109,23,1236,0],[109,24,1236,0,"exports"],[109,31,1236,0],[110,4,1236,0,"enumerable"],[110,14,1236,0],[111,4,1236,0,"get"],[111,7,1236,0],[111,18,1236,0,"get"],[111,19,1236,0],[112,6,1236,0],[112,13,1236,302,"getApps"],[112,20,1236,309],[113,4,1236,309],[114,2,1236,309],[115,2,1236,0,"Object"],[115,8,1236,0],[115,9,1236,0,"defineProperty"],[115,23,1236,0],[115,24,1236,0,"exports"],[115,31,1236,0],[116,4,1236,0,"enumerable"],[116,14,1236,0],[117,4,1236,0,"get"],[117,7,1236,0],[117,18,1236,0,"get"],[117,19,1236,0],[118,6,1236,0],[118,13,1236,311,"initializeApp"],[118,26,1236,324],[119,4,1236,324],[120,2,1236,324],[121,2,1236,0,"Object"],[121,8,1236,0],[121,9,1236,0,"defineProperty"],[121,23,1236,0],[121,24,1236,0,"exports"],[121,31,1236,0],[122,4,1236,0,"enumerable"],[122,14,1236,0],[123,4,1236,0,"get"],[123,7,1236,0],[123,18,1236,0,"get"],[123,19,1236,0],[124,6,1236,0],[124,13,1236,326,"initializeServerApp"],[124,32,1236,345],[125,4,1236,345],[126,2,1236,345],[127,2,1236,0,"Object"],[127,8,1236,0],[127,9,1236,0,"defineProperty"],[127,23,1236,0],[127,24,1236,0,"exports"],[127,31,1236,0],[128,4,1236,0,"enumerable"],[128,14,1236,0],[129,4,1236,0,"get"],[129,7,1236,0],[129,18,1236,0,"get"],[129,19,1236,0],[130,6,1236,0],[130,13,1236,347,"onLog"],[130,18,1236,352],[131,4,1236,352],[132,2,1236,352],[133,2,1236,0,"Object"],[133,8,1236,0],[133,9,1236,0,"defineProperty"],[133,23,1236,0],[133,24,1236,0,"exports"],[133,31,1236,0],[134,4,1236,0,"enumerable"],[134,14,1236,0],[135,4,1236,0,"get"],[135,7,1236,0],[135,18,1236,0,"get"],[135,19,1236,0],[136,6,1236,0],[136,13,1236,354,"registerVersion"],[136,28,1236,369],[137,4,1236,369],[138,2,1236,369],[139,2,1236,0,"Object"],[139,8,1236,0],[139,9,1236,0,"defineProperty"],[139,23,1236,0],[139,24,1236,0,"exports"],[139,31,1236,0],[140,4,1236,0,"enumerable"],[140,14,1236,0],[141,4,1236,0,"get"],[141,7,1236,0],[141,18,1236,0,"get"],[141,19,1236,0],[142,6,1236,0],[142,13,1236,371,"setLogLevel"],[142,24,1236,382],[143,4,1236,382],[144,2,1236,382],[145,2,1,0],[145,6,1,0,"_firebaseComponent"],[145,24,1,0],[145,27,1,0,"require"],[145,34,1,0],[145,35,1,0,"_dependencyMap"],[145,49,1,0],[146,2,2,0],[146,6,2,0,"_firebaseLogger"],[146,21,2,0],[146,24,2,0,"require"],[146,31,2,0],[146,32,2,0,"_dependencyMap"],[146,46,2,0],[147,2,3,0],[147,6,3,0,"_firebaseUtil"],[147,19,3,0],[147,22,3,0,"require"],[147,29,3,0],[147,30,3,0,"_dependencyMap"],[147,44,3,0],[148,2,5,0],[148,6,5,0,"_idb"],[148,10,5,0],[148,13,5,0,"require"],[148,20,5,0],[148,21,5,0,"_dependencyMap"],[148,35,5,0],[149,2,7,0],[150,0,8,0],[151,0,9,0],[152,0,10,0],[153,0,11,0],[154,0,12,0],[155,0,13,0],[156,0,14,0],[157,0,15,0],[158,0,16,0],[159,0,17,0],[160,0,18,0],[161,0,19,0],[162,0,20,0],[163,0,21,0],[164,0,22,0],[165,2,23,0],[165,8,23,6,"PlatformLoggerServiceImpl"],[165,33,23,31],[165,34,23,32],[166,4,24,4,"constructor"],[166,15,24,15,"constructor"],[166,16,24,16,"container"],[166,25,24,25],[166,27,24,27],[167,6,25,8],[167,10,25,12],[167,11,25,13,"container"],[167,20,25,22],[167,23,25,25,"container"],[167,32,25,34],[168,4,26,4],[169,4,27,4],[170,4,28,4],[171,4,29,4,"getPlatformInfoString"],[171,25,29,25,"getPlatformInfoString"],[171,26,29,25],[171,28,29,28],[172,6,30,8],[172,12,30,14,"providers"],[172,21,30,23],[172,24,30,26],[172,28,30,30],[172,29,30,31,"container"],[172,38,30,40],[172,39,30,41,"getProviders"],[172,51,30,53],[172,52,30,54],[172,53,30,55],[173,6,31,8],[174,6,32,8],[175,6,33,8],[175,13,33,15,"providers"],[175,22,33,24],[175,23,34,13,"map"],[175,26,34,16],[175,27,34,17,"provider"],[175,35,34,25],[175,39,34,29],[176,8,35,12],[176,12,35,16,"isVersionServiceProvider"],[176,36,35,40],[176,37,35,41,"provider"],[176,45,35,49],[176,46,35,50],[176,48,35,52],[177,10,36,16],[177,16,36,22,"service"],[177,23,36,29],[177,26,36,32,"provider"],[177,34,36,40],[177,35,36,41,"getImmediate"],[177,47,36,53],[177,48,36,54],[177,49,36,55],[178,10,37,16],[178,17,37,23],[178,20,37,26,"service"],[178,27,37,33],[178,28,37,34,"library"],[178,35,37,41],[178,39,37,45,"service"],[178,46,37,52],[178,47,37,53,"version"],[178,54,37,60],[178,56,37,62],[179,8,38,12],[179,9,38,13],[179,15,39,17],[180,10,40,16],[180,17,40,23],[180,21,40,27],[181,8,41,12],[182,6,42,8],[182,7,42,9],[182,8,42,10],[182,9,43,13,"filter"],[182,15,43,19],[182,16,43,20,"logString"],[182,25,43,29],[182,29,43,33,"logString"],[182,38,43,42],[182,39,43,43],[182,40,44,13,"join"],[182,44,44,17],[182,45,44,18],[182,48,44,21],[182,49,44,22],[183,4,45,4],[184,2,46,0],[185,2,47,0],[186,0,48,0],[187,0,49,0],[188,0,50,0],[189,0,51,0],[190,0,52,0],[191,0,53,0],[192,0,54,0],[193,2,55,0],[193,11,55,9,"isVersionServiceProvider"],[193,35,55,33,"isVersionServiceProvider"],[193,36,55,34,"provider"],[193,44,55,42],[193,46,55,44],[194,4,56,4],[194,10,56,10,"component"],[194,19,56,19],[194,22,56,22,"provider"],[194,30,56,30],[194,31,56,31,"getComponent"],[194,43,56,43],[194,44,56,44],[194,45,56,45],[195,4,57,4],[195,11,57,11,"component"],[195,20,57,20],[195,22,57,22,"type"],[195,26,57,26],[195,31,57,31],[195,40,57,40],[195,41,57,41],[196,2,58,0],[197,2,60,0],[197,8,60,6,"name$q"],[197,14,60,12],[197,17,60,15],[197,32,60,30],[198,2,61,0],[198,8,61,6,"version$1"],[198,17,61,15],[198,20,61,18],[198,28,61,26],[200,2,63,0],[201,0,64,0],[202,0,65,0],[203,0,66,0],[204,0,67,0],[205,0,68,0],[206,0,69,0],[207,0,70,0],[208,0,71,0],[209,0,72,0],[210,0,73,0],[211,0,74,0],[212,0,75,0],[213,0,76,0],[214,0,77,0],[215,0,78,0],[216,2,79,0],[216,8,79,6,"logger"],[216,14,79,12],[216,17,79,15],[216,21,79,19,"Logger"],[216,36,79,25],[216,37,79,25,"Logger"],[216,43,79,25],[216,44,79,26],[216,59,79,41],[216,60,79,42],[217,2,81,0],[217,8,81,6,"name$p"],[217,14,81,12],[217,17,81,15],[217,39,81,37],[218,2,83,0],[218,8,83,6,"name$o"],[218,14,83,12],[218,17,83,15],[218,45,83,43],[219,2,85,0],[219,8,85,6,"name$n"],[219,14,85,12],[219,17,85,15],[219,38,85,36],[220,2,87,0],[220,8,87,6,"name$m"],[220,14,87,12],[220,17,87,15],[220,45,87,43],[221,2,89,0],[221,8,89,6,"name$l"],[221,14,89,12],[221,17,89,15],[221,38,89,36],[222,2,91,0],[222,8,91,6,"name$k"],[222,14,91,12],[222,17,91,15],[222,33,91,31],[223,2,93,0],[223,8,93,6,"name$j"],[223,14,93,12],[223,17,93,15],[223,40,93,38],[224,2,95,0],[224,8,95,6,"name$i"],[224,14,95,12],[224,17,95,15],[224,37,95,35],[225,2,97,0],[225,8,97,6,"name$h"],[225,14,97,12],[225,17,97,15],[225,41,97,39],[226,2,99,0],[226,8,99,6,"name$g"],[226,14,99,12],[226,17,99,15],[226,44,99,42],[227,2,101,0],[227,8,101,6,"name$f"],[227,14,101,12],[227,17,101,15],[227,38,101,36],[228,2,103,0],[228,8,103,6,"name$e"],[228,14,103,12],[228,17,103,15],[228,45,103,43],[229,2,105,0],[229,8,105,6,"name$d"],[229,14,105,12],[229,17,105,15],[229,42,105,40],[230,2,107,0],[230,8,107,6,"name$c"],[230,14,107,12],[230,17,107,15],[230,49,107,47],[231,2,109,0],[231,8,109,6,"name$b"],[231,14,109,12],[231,17,109,15],[231,38,109,36],[232,2,111,0],[232,8,111,6,"name$a"],[232,14,111,12],[232,17,111,15],[232,45,111,43],[233,2,113,0],[233,8,113,6,"name$9"],[233,14,113,12],[233,17,113,15],[233,40,113,38],[234,2,115,0],[234,8,115,6,"name$8"],[234,14,115,12],[234,17,115,15],[234,47,115,45],[235,2,117,0],[235,8,117,6,"name$7"],[235,14,117,12],[235,17,117,15],[235,42,117,40],[236,2,119,0],[236,8,119,6,"name$6"],[236,14,119,12],[236,17,119,15],[236,49,119,47],[237,2,121,0],[237,8,121,6,"name$5"],[237,14,121,12],[237,17,121,15],[237,36,121,34],[238,2,123,0],[238,8,123,6,"name$4"],[238,14,123,12],[238,17,123,15],[238,43,123,41],[239,2,125,0],[239,8,125,6,"name$3"],[239,14,125,12],[239,17,125,15],[239,38,125,36],[240,2,127,0],[240,8,127,6,"name$2"],[240,14,127,12],[240,17,127,15],[240,31,127,29],[241,2,129,0],[241,8,129,6,"name$1"],[241,14,129,12],[241,17,129,15],[241,45,129,43],[242,2,131,0],[242,8,131,6,"name"],[242,12,131,10],[242,15,131,13],[242,25,131,23],[243,2,132,0],[243,8,132,6,"version"],[243,15,132,13],[243,18,132,16],[243,26,132,24],[245,2,134,0],[246,0,135,0],[247,0,136,0],[248,0,137,0],[249,0,138,0],[250,0,139,0],[251,0,140,0],[252,0,141,0],[253,0,142,0],[254,0,143,0],[255,0,144,0],[256,0,145,0],[257,0,146,0],[258,0,147,0],[259,0,148,0],[260,0,149,0],[261,2,150,0],[262,0,151,0],[263,0,152,0],[264,0,153,0],[265,0,154,0],[266,2,155,0],[266,8,155,6,"DEFAULT_ENTRY_NAME"],[266,26,155,24],[266,29,155,27],[266,40,155,38],[267,2,156,0],[267,8,156,6,"PLATFORM_LOG_STRING"],[267,27,156,25],[267,30,156,28],[268,4,157,4],[268,5,157,5,"name$q"],[268,11,157,11],[268,14,157,14],[268,25,157,25],[269,4,158,4],[269,5,158,5,"name$p"],[269,11,158,11],[269,14,158,14],[269,32,158,32],[270,4,159,4],[270,5,159,5,"name$n"],[270,11,159,11],[270,14,159,14],[270,30,159,30],[271,4,160,4],[271,5,160,5,"name$o"],[271,11,160,11],[271,14,160,14],[271,37,160,37],[272,4,161,4],[272,5,161,5,"name$l"],[272,11,161,11],[272,14,161,14],[272,30,161,30],[273,4,162,4],[273,5,162,5,"name$m"],[273,11,162,11],[273,14,162,14],[273,37,162,37],[274,4,163,4],[274,5,163,5,"name$k"],[274,11,163,11],[274,14,163,14],[274,25,163,25],[275,4,164,4],[275,5,164,5,"name$j"],[275,11,164,11],[275,14,164,14],[275,32,164,32],[276,4,165,4],[276,5,165,5,"name$i"],[276,11,165,11],[276,14,165,14],[276,25,165,25],[277,4,166,4],[277,5,166,5,"name$h"],[277,11,166,11],[277,14,166,14],[277,33,166,33],[278,4,167,4],[278,5,167,5,"name$g"],[278,11,167,11],[278,14,167,14],[278,32,167,32],[279,4,168,4],[279,5,168,5,"name$f"],[279,11,168,11],[279,14,168,14],[279,23,168,23],[280,4,169,4],[280,5,169,5,"name$e"],[280,11,169,11],[280,14,169,14],[280,30,169,30],[281,4,170,4],[281,5,170,5,"name$d"],[281,11,170,11],[281,14,170,14],[281,24,170,24],[282,4,171,4],[282,5,171,5,"name$c"],[282,11,171,11],[282,14,171,14],[282,31,171,31],[283,4,172,4],[283,5,172,5,"name$b"],[283,11,172,11],[283,14,172,14],[283,24,172,24],[284,4,173,4],[284,5,173,5,"name$a"],[284,11,173,11],[284,14,173,14],[284,31,173,31],[285,4,174,4],[285,5,174,5,"name$9"],[285,11,174,11],[285,14,174,14],[285,25,174,25],[286,4,175,4],[286,5,175,5,"name$8"],[286,11,175,11],[286,14,175,14],[286,32,175,32],[287,4,176,4],[287,5,176,5,"name$7"],[287,11,176,11],[287,14,176,14],[287,23,176,23],[288,4,177,4],[288,5,177,5,"name$6"],[288,11,177,11],[288,14,177,14],[288,30,177,30],[289,4,178,4],[289,5,178,5,"name$5"],[289,11,178,11],[289,14,178,14],[289,24,178,24],[290,4,179,4],[290,5,179,5,"name$4"],[290,11,179,11],[290,14,179,14],[290,31,179,31],[291,4,180,4],[291,5,180,5,"name$3"],[291,11,180,11],[291,14,180,14],[291,24,180,24],[292,4,181,4],[292,5,181,5,"name$1"],[292,11,181,11],[292,14,181,14],[292,31,181,31],[293,4,182,4],[293,5,182,5,"name$2"],[293,11,182,11],[293,14,182,14],[293,27,182,27],[294,4,183,4],[294,13,183,13],[294,15,183,15],[294,24,183,24],[295,4,183,26],[296,4,184,4],[296,5,184,5,"name"],[296,9,184,9],[296,12,184,12],[297,2,185,0],[297,3,185,1],[299,2,187,0],[300,0,188,0],[301,0,189,0],[302,0,190,0],[303,0,191,0],[304,0,192,0],[305,0,193,0],[306,0,194,0],[307,0,195,0],[308,0,196,0],[309,0,197,0],[310,0,198,0],[311,0,199,0],[312,0,200,0],[313,0,201,0],[314,0,202,0],[315,2,203,0],[316,0,204,0],[317,0,205,0],[318,2,206,0],[318,8,206,6,"_apps"],[318,13,206,11],[318,16,206,14],[318,20,206,18,"Map"],[318,23,206,21],[318,24,206,22],[318,25,206,23],[319,2,207,0],[320,0,208,0],[321,0,209,0],[322,2,210,0],[322,8,210,6,"_serverApps"],[322,19,210,17],[322,22,210,20],[322,26,210,24,"Map"],[322,29,210,27],[322,30,210,28],[322,31,210,29],[323,2,211,0],[324,0,212,0],[325,0,213,0],[326,0,214,0],[327,0,215,0],[328,2,216,0],[329,2,217,0],[329,8,217,6,"_components"],[329,19,217,17],[329,22,217,20],[329,26,217,24,"Map"],[329,29,217,27],[329,30,217,28],[329,31,217,29],[330,2,218,0],[331,0,219,0],[332,0,220,0],[333,0,221,0],[334,0,222,0],[335,2,223,0],[335,11,223,9,"_addComponent"],[335,24,223,22,"_addComponent"],[335,25,223,23,"app"],[335,28,223,26],[335,30,223,28,"component"],[335,39,223,37],[335,41,223,39],[336,4,224,4],[336,8,224,8],[337,6,225,8,"app"],[337,9,225,11],[337,10,225,12,"container"],[337,19,225,21],[337,20,225,22,"addComponent"],[337,32,225,34],[337,33,225,35,"component"],[337,42,225,44],[337,43,225,45],[338,4,226,4],[338,5,226,5],[338,6,227,4],[338,13,227,11,"e"],[338,14,227,12],[338,16,227,14],[339,6,228,8,"logger"],[339,12,228,14],[339,13,228,15,"debug"],[339,18,228,20],[339,19,228,21],[339,32,228,34,"component"],[339,41,228,43],[339,42,228,44,"name"],[339,46,228,48],[339,86,228,88,"app"],[339,89,228,91],[339,90,228,92,"name"],[339,94,228,96],[339,96,228,98],[339,98,228,100,"e"],[339,99,228,101],[339,100,228,102],[340,4,229,4],[341,2,230,0],[342,2,231,0],[343,0,232,0],[344,0,233,0],[345,0,234,0],[346,2,235,0],[346,11,235,9,"_addOrOverwriteComponent"],[346,35,235,33,"_addOrOverwriteComponent"],[346,36,235,34,"app"],[346,39,235,37],[346,41,235,39,"component"],[346,50,235,48],[346,52,235,50],[347,4,236,4,"app"],[347,7,236,7],[347,8,236,8,"container"],[347,17,236,17],[347,18,236,18,"addOrOverwriteComponent"],[347,41,236,41],[347,42,236,42,"component"],[347,51,236,51],[347,52,236,52],[348,2,237,0],[349,2,238,0],[350,0,239,0],[351,0,240,0],[352,0,241,0],[353,0,242,0],[354,0,243,0],[355,0,244,0],[356,2,245,0],[356,11,245,9,"_registerComponent"],[356,29,245,27,"_registerComponent"],[356,30,245,28,"component"],[356,39,245,37],[356,41,245,39],[357,4,246,4],[357,10,246,10,"componentName"],[357,23,246,23],[357,26,246,26,"component"],[357,35,246,35],[357,36,246,36,"name"],[357,40,246,40],[358,4,247,4],[358,8,247,8,"_components"],[358,19,247,19],[358,20,247,20,"has"],[358,23,247,23],[358,24,247,24,"componentName"],[358,37,247,37],[358,38,247,38],[358,40,247,40],[359,6,248,8,"logger"],[359,12,248,14],[359,13,248,15,"debug"],[359,18,248,20],[359,19,248,21],[359,73,248,75,"componentName"],[359,86,248,88],[359,89,248,91],[359,90,248,92],[360,6,249,8],[360,13,249,15],[360,18,249,20],[361,4,250,4],[362,4,251,4,"_components"],[362,15,251,15],[362,16,251,16,"set"],[362,19,251,19],[362,20,251,20,"componentName"],[362,33,251,33],[362,35,251,35,"component"],[362,44,251,44],[362,45,251,45],[363,4,252,4],[364,4,253,4],[364,9,253,9],[364,15,253,15,"app"],[364,18,253,18],[364,22,253,22,"_apps"],[364,27,253,27],[364,28,253,28,"values"],[364,34,253,34],[364,35,253,35],[364,36,253,36],[364,38,253,38],[365,6,254,8,"_addComponent"],[365,19,254,21],[365,20,254,22,"app"],[365,23,254,25],[365,25,254,27,"component"],[365,34,254,36],[365,35,254,37],[366,4,255,4],[367,4,256,4],[367,9,256,9],[367,15,256,15,"serverApp"],[367,24,256,24],[367,28,256,28,"_serverApps"],[367,39,256,39],[367,40,256,40,"values"],[367,46,256,46],[367,47,256,47],[367,48,256,48],[367,50,256,50],[368,6,257,8,"_addComponent"],[368,19,257,21],[368,20,257,22,"serverApp"],[368,29,257,31],[368,31,257,33,"component"],[368,40,257,42],[368,41,257,43],[369,4,258,4],[370,4,259,4],[370,11,259,11],[370,15,259,15],[371,2,260,0],[372,2,261,0],[373,0,262,0],[374,0,263,0],[375,0,264,0],[376,0,265,0],[377,0,266,0],[378,0,267,0],[379,0,268,0],[380,0,269,0],[381,2,270,0],[381,11,270,9,"_getProvider"],[381,23,270,21,"_getProvider"],[381,24,270,22,"app"],[381,27,270,25],[381,29,270,27,"name"],[381,33,270,31],[381,35,270,33],[382,4,271,4],[382,10,271,10,"heartbeatController"],[382,29,271,29],[382,32,271,32,"app"],[382,35,271,35],[382,36,271,36,"container"],[382,45,271,45],[382,46,272,9,"getProvider"],[382,57,272,20],[382,58,272,21],[382,69,272,32],[382,70,272,33],[382,71,273,9,"getImmediate"],[382,83,273,21],[382,84,273,22],[383,6,273,24,"optional"],[383,14,273,32],[383,16,273,34],[384,4,273,39],[384,5,273,40],[384,6,273,41],[385,4,274,4],[385,8,274,8,"heartbeatController"],[385,27,274,27],[385,29,274,29],[386,6,275,8],[386,11,275,13,"heartbeatController"],[386,30,275,32],[386,31,275,33,"triggerHeartbeat"],[386,47,275,49],[386,48,275,50],[386,49,275,51],[387,4,276,4],[388,4,277,4],[388,11,277,11,"app"],[388,14,277,14],[388,15,277,15,"container"],[388,24,277,24],[388,25,277,25,"getProvider"],[388,36,277,36],[388,37,277,37,"name"],[388,41,277,41],[388,42,277,42],[389,2,278,0],[390,2,279,0],[391,0,280,0],[392,0,281,0],[393,0,282,0],[394,0,283,0],[395,0,284,0],[396,0,285,0],[397,0,286,0],[398,2,287,0],[398,11,287,9,"_removeServiceInstance"],[398,33,287,31,"_removeServiceInstance"],[398,34,287,32,"app"],[398,37,287,35],[398,39,287,37,"name"],[398,43,287,41],[398,45,287,43,"instanceIdentifier"],[398,63,287,61],[398,66,287,64,"DEFAULT_ENTRY_NAME"],[398,84,287,82],[398,86,287,84],[399,4,288,4,"_getProvider"],[399,16,288,16],[399,17,288,17,"app"],[399,20,288,20],[399,22,288,22,"name"],[399,26,288,26],[399,27,288,27],[399,28,288,28,"clearInstance"],[399,41,288,41],[399,42,288,42,"instanceIdentifier"],[399,60,288,60],[399,61,288,61],[400,2,289,0],[401,2,290,0],[402,0,291,0],[403,0,292,0],[404,0,293,0],[405,0,294,0],[406,0,295,0],[407,0,296,0],[408,0,297,0],[409,2,298,0],[409,11,298,9,"_isFirebaseApp"],[409,25,298,23,"_isFirebaseApp"],[409,26,298,24,"obj"],[409,29,298,27],[409,31,298,29],[410,4,299,4],[410,11,299,11,"obj"],[410,14,299,14],[410,15,299,15,"options"],[410,22,299,22],[410,27,299,27,"undefined"],[410,36,299,36],[411,2,300,0],[412,2,301,0],[413,0,302,0],[414,0,303,0],[415,0,304,0],[416,0,305,0],[417,0,306,0],[418,0,307,0],[419,0,308,0],[420,2,309,0],[420,11,309,9,"_isFirebaseServerAppSettings"],[420,39,309,37,"_isFirebaseServerAppSettings"],[420,40,309,38,"obj"],[420,43,309,41],[420,45,309,43],[421,4,310,4],[421,8,310,8,"_isFirebaseApp"],[421,22,310,22],[421,23,310,23,"obj"],[421,26,310,26],[421,27,310,27],[421,29,310,29],[422,6,311,8],[422,13,311,15],[422,18,311,20],[423,4,312,4],[424,4,313,4],[424,11,313,12],[424,24,313,25],[424,28,313,29,"obj"],[424,31,313,32],[424,35,314,8],[424,50,314,23],[424,54,314,27,"obj"],[424,57,314,30],[424,61,315,8],[424,77,315,24],[424,81,315,28,"obj"],[424,84,315,31],[424,88,316,8],[424,120,316,40],[424,124,316,44,"obj"],[424,127,316,47],[425,2,317,0],[426,2,318,0],[427,0,319,0],[428,0,320,0],[429,0,321,0],[430,0,322,0],[431,0,323,0],[432,0,324,0],[433,0,325,0],[434,2,326,0],[434,11,326,9,"_isFirebaseServerApp"],[434,31,326,29,"_isFirebaseServerApp"],[434,32,326,30,"obj"],[434,35,326,33],[434,37,326,35],[435,4,327,4],[435,8,327,8,"obj"],[435,11,327,11],[435,16,327,16],[435,20,327,20],[435,24,327,24,"obj"],[435,27,327,27],[435,32,327,32,"undefined"],[435,41,327,41],[435,43,327,43],[436,6,328,8],[436,13,328,15],[436,18,328,20],[437,4,329,4],[438,4,330,4],[438,11,330,11,"obj"],[438,14,330,14],[438,15,330,15,"settings"],[438,23,330,23],[438,28,330,28,"undefined"],[438,37,330,37],[439,2,331,0],[440,2,332,0],[441,0,333,0],[442,0,334,0],[443,0,335,0],[444,0,336,0],[445,2,337,0],[445,11,337,9,"_clearComponents"],[445,27,337,25,"_clearComponents"],[445,28,337,25],[445,30,337,28],[446,4,338,4,"_components"],[446,15,338,15],[446,16,338,16,"clear"],[446,21,338,21],[446,22,338,22],[446,23,338,23],[447,2,339,0],[449,2,341,0],[450,0,342,0],[451,0,343,0],[452,0,344,0],[453,0,345,0],[454,0,346,0],[455,0,347,0],[456,0,348,0],[457,0,349,0],[458,0,350,0],[459,0,351,0],[460,0,352,0],[461,0,353,0],[462,0,354,0],[463,0,355,0],[464,0,356,0],[465,2,357,0],[465,8,357,6,"ERRORS"],[465,14,357,12],[465,17,357,15],[466,4,358,4],[466,5,358,5],[466,13,358,13],[466,14,358,14],[466,38,358,38],[466,88,358,88],[466,91,359,8],[466,119,359,36],[467,4,360,4],[467,5,360,5],[467,19,360,19],[467,20,360,20],[467,50,360,50],[467,82,360,82],[468,4,361,4],[468,5,361,5],[468,20,361,20],[468,21,361,21],[468,52,361,52],[468,133,361,133],[469,4,362,4],[469,5,362,5],[469,18,362,18],[469,19,362,19],[469,48,362,48],[469,97,362,97],[470,4,363,4],[470,5,363,5],[470,25,363,25],[470,26,363,26],[470,62,363,62],[470,100,363,100],[471,4,364,4],[471,5,364,5],[471,17,364,17],[471,18,364,18],[471,46,364,46],[471,119,364,119],[472,4,365,4],[472,5,365,5],[472,27,365,27],[472,28,365,28],[472,66,365,66],[472,120,365,120],[472,123,366,8],[472,147,366,32],[473,4,367,4],[473,5,367,5],[473,27,367,27],[473,28,367,28],[473,66,367,66],[473,121,367,121],[474,4,368,4],[474,5,368,5],[474,15,368,15],[474,16,368,16],[474,42,368,42],[474,121,368,121],[475,4,369,4],[475,5,369,5],[475,14,369,14],[475,15,369,15],[475,40,369,40],[475,124,369,124],[476,4,370,4],[476,5,370,5],[476,14,370,14],[476,15,370,15],[476,42,370,42],[476,124,370,124],[477,4,371,4],[477,5,371,5],[477,17,371,17],[477,18,371,18],[477,46,371,46],[477,131,371,131],[478,4,372,4],[478,5,372,5],[478,42,372,42],[478,43,372,43],[478,96,372,96],[478,201,372,201],[479,4,373,4],[479,5,373,5],[479,37,373,37],[479,38,373,38],[479,86,373,86],[480,2,374,0],[480,3,374,1],[481,2,375,0],[481,8,375,6,"ERROR_FACTORY"],[481,21,375,19],[481,24,375,22],[481,28,375,26,"ErrorFactory"],[481,41,375,38],[481,42,375,38,"ErrorFactory"],[481,54,375,38],[481,55,375,39],[481,60,375,44],[481,62,375,46],[481,72,375,56],[481,74,375,58,"ERRORS"],[481,80,375,64],[481,81,375,65],[483,2,377,0],[484,0,378,0],[485,0,379,0],[486,0,380,0],[487,0,381,0],[488,0,382,0],[489,0,383,0],[490,0,384,0],[491,0,385,0],[492,0,386,0],[493,0,387,0],[494,0,388,0],[495,0,389,0],[496,0,390,0],[497,0,391,0],[498,0,392,0],[499,2,393,0],[499,8,393,6,"FirebaseAppImpl"],[499,23,393,21],[499,24,393,22],[500,4,394,4,"constructor"],[500,15,394,15,"constructor"],[500,16,394,16,"options"],[500,23,394,23],[500,25,394,25,"config"],[500,31,394,31],[500,33,394,33,"container"],[500,42,394,42],[500,44,394,44],[501,6,395,8],[501,10,395,12],[501,11,395,13,"_isDeleted"],[501,21,395,23],[501,24,395,26],[501,29,395,31],[502,6,396,8],[502,10,396,12],[502,11,396,13,"_options"],[502,19,396,21],[502,22,396,24],[503,8,396,26],[503,11,396,29,"options"],[504,6,396,37],[504,7,396,38],[505,6,397,8],[505,10,397,12],[505,11,397,13,"_config"],[505,18,397,20],[505,21,397,23],[506,8,397,25],[506,11,397,28,"config"],[507,6,397,35],[507,7,397,36],[508,6,398,8],[508,10,398,12],[508,11,398,13,"_name"],[508,16,398,18],[508,19,398,21,"config"],[508,25,398,27],[508,26,398,28,"name"],[508,30,398,32],[509,6,399,8],[509,10,399,12],[509,11,399,13,"_automaticDataCollectionEnabled"],[509,42,399,44],[509,45,400,12,"config"],[509,51,400,18],[509,52,400,19,"automaticDataCollectionEnabled"],[509,82,400,49],[510,6,401,8],[510,10,401,12],[510,11,401,13,"_container"],[510,21,401,23],[510,24,401,26,"container"],[510,33,401,35],[511,6,402,8],[511,10,402,12],[511,11,402,13,"container"],[511,20,402,22],[511,21,402,23,"addComponent"],[511,33,402,35],[511,34,402,36],[511,38,402,40,"Component"],[511,56,402,49],[511,57,402,49,"Component"],[511,66,402,49],[511,67,402,50],[511,72,402,55],[511,74,402,57],[511,80,402,63],[511,84,402,67],[511,86,402,69],[511,94,402,77],[511,95,402,78],[511,121,402,104],[511,122,402,105],[511,123,402,106],[512,4,403,4],[513,4,404,4],[513,8,404,8,"automaticDataCollectionEnabled"],[513,38,404,38,"automaticDataCollectionEnabled"],[513,39,404,38],[513,41,404,41],[514,6,405,8],[514,10,405,12],[514,11,405,13,"checkDestroyed"],[514,25,405,27],[514,26,405,28],[514,27,405,29],[515,6,406,8],[515,13,406,15],[515,17,406,19],[515,18,406,20,"_automaticDataCollectionEnabled"],[515,49,406,51],[516,4,407,4],[517,4,408,4],[517,8,408,8,"automaticDataCollectionEnabled"],[517,38,408,38,"automaticDataCollectionEnabled"],[517,39,408,39,"val"],[517,42,408,42],[517,44,408,44],[518,6,409,8],[518,10,409,12],[518,11,409,13,"checkDestroyed"],[518,25,409,27],[518,26,409,28],[518,27,409,29],[519,6,410,8],[519,10,410,12],[519,11,410,13,"_automaticDataCollectionEnabled"],[519,42,410,44],[519,45,410,47,"val"],[519,48,410,50],[520,4,411,4],[521,4,412,4],[521,8,412,8,"name"],[521,12,412,12,"name"],[521,13,412,12],[521,15,412,15],[522,6,413,8],[522,10,413,12],[522,11,413,13,"checkDestroyed"],[522,25,413,27],[522,26,413,28],[522,27,413,29],[523,6,414,8],[523,13,414,15],[523,17,414,19],[523,18,414,20,"_name"],[523,23,414,25],[524,4,415,4],[525,4,416,4],[525,8,416,8,"options"],[525,15,416,15,"options"],[525,16,416,15],[525,18,416,18],[526,6,417,8],[526,10,417,12],[526,11,417,13,"checkDestroyed"],[526,25,417,27],[526,26,417,28],[526,27,417,29],[527,6,418,8],[527,13,418,15],[527,17,418,19],[527,18,418,20,"_options"],[527,26,418,28],[528,4,419,4],[529,4,420,4],[529,8,420,8,"config"],[529,14,420,14,"config"],[529,15,420,14],[529,17,420,17],[530,6,421,8],[530,10,421,12],[530,11,421,13,"checkDestroyed"],[530,25,421,27],[530,26,421,28],[530,27,421,29],[531,6,422,8],[531,13,422,15],[531,17,422,19],[531,18,422,20,"_config"],[531,25,422,27],[532,4,423,4],[533,4,424,4],[533,8,424,8,"container"],[533,17,424,17,"container"],[533,18,424,17],[533,20,424,20],[534,6,425,8],[534,13,425,15],[534,17,425,19],[534,18,425,20,"_container"],[534,28,425,30],[535,4,426,4],[536,4,427,4],[536,8,427,8,"isDeleted"],[536,17,427,17,"isDeleted"],[536,18,427,17],[536,20,427,20],[537,6,428,8],[537,13,428,15],[537,17,428,19],[537,18,428,20,"_isDeleted"],[537,28,428,30],[538,4,429,4],[539,4,430,4],[539,8,430,8,"isDeleted"],[539,17,430,17,"isDeleted"],[539,18,430,18,"val"],[539,21,430,21],[539,23,430,23],[540,6,431,8],[540,10,431,12],[540,11,431,13,"_isDeleted"],[540,21,431,23],[540,24,431,26,"val"],[540,27,431,29],[541,4,432,4],[542,4,433,4],[543,0,434,0],[544,0,435,0],[545,0,436,0],[546,4,437,4,"checkDestroyed"],[546,18,437,18,"checkDestroyed"],[546,19,437,18],[546,21,437,21],[547,6,438,8],[547,10,438,12],[547,14,438,16],[547,15,438,17,"isDeleted"],[547,24,438,26],[547,26,438,28],[548,8,439,12],[548,14,439,18,"ERROR_FACTORY"],[548,27,439,31],[548,28,439,32,"create"],[548,34,439,38],[548,35,439,39],[548,48,439,52],[548,49,439,53],[548,77,439,81],[549,10,439,83,"appName"],[549,17,439,90],[549,19,439,92],[549,23,439,96],[549,24,439,97,"_name"],[550,8,439,103],[550,9,439,104],[550,10,439,105],[551,6,440,8],[552,4,441,4],[553,2,442,0],[555,2,444,0],[556,0,445,0],[557,0,446,0],[558,0,447,0],[559,0,448,0],[560,0,449,0],[561,0,450,0],[562,0,451,0],[563,0,452,0],[564,0,453,0],[565,0,454,0],[566,0,455,0],[567,0,456,0],[568,0,457,0],[569,0,458,0],[570,0,459,0],[571,2,460,0],[572,2,461,0],[573,2,462,0],[574,2,463,0],[574,11,463,9,"validateTokenTTL"],[574,27,463,25,"validateTokenTTL"],[574,28,463,26,"base64Token"],[574,39,463,37],[574,41,463,39,"tokenName"],[574,50,463,48],[574,52,463,50],[575,4,464,4],[575,10,464,10,"secondPart"],[575,20,464,20],[575,23,464,23],[575,27,464,23,"base64Decode"],[575,40,464,35],[575,41,464,35,"base64Decode"],[575,53,464,35],[575,55,464,36,"base64Token"],[575,66,464,47],[575,67,464,48,"split"],[575,72,464,53],[575,73,464,54],[575,76,464,57],[575,77,464,58],[575,78,464,59],[575,79,464,60],[575,80,464,61],[575,81,464,62],[576,4,465,4],[576,8,465,8,"secondPart"],[576,18,465,18],[576,23,465,23],[576,27,465,27],[576,29,465,29],[577,6,466,8,"console"],[577,13,466,15],[577,14,466,16,"error"],[577,19,466,21],[577,20,466,22],[577,41,466,43,"tokenName"],[577,50,466,52],[577,97,466,99],[577,98,466,100],[578,6,467,8],[579,4,468,4],[580,4,469,4],[580,10,469,10,"expClaim"],[580,18,469,18],[580,21,469,21,"JSON"],[580,25,469,25],[580,26,469,26,"parse"],[580,31,469,31],[580,32,469,32,"secondPart"],[580,42,469,42],[580,43,469,43],[580,44,469,44,"exp"],[580,47,469,47],[581,4,470,4],[581,8,470,8,"expClaim"],[581,16,470,16],[581,21,470,21,"undefined"],[581,30,470,30],[581,32,470,32],[582,6,471,8,"console"],[582,13,471,15],[582,14,471,16,"error"],[582,19,471,21],[582,20,471,22],[582,41,471,43,"tokenName"],[582,50,471,52],[582,101,471,103],[582,102,471,104],[583,6,472,8],[584,4,473,4],[585,4,474,4],[585,10,474,10,"exp"],[585,13,474,13],[585,16,474,16,"JSON"],[585,20,474,20],[585,21,474,21,"parse"],[585,26,474,26],[585,27,474,27,"secondPart"],[585,37,474,37],[585,38,474,38],[585,39,474,39,"exp"],[585,42,474,42],[585,45,474,45],[585,49,474,49],[586,4,475,4],[586,10,475,10,"now"],[586,13,475,13],[586,16,475,16],[586,20,475,20,"Date"],[586,24,475,24],[586,25,475,25],[586,26,475,26],[586,27,475,27,"getTime"],[586,34,475,34],[586,35,475,35],[586,36,475,36],[587,4,476,4],[587,10,476,10,"diff"],[587,14,476,14],[587,17,476,17,"exp"],[587,20,476,20],[587,23,476,23,"now"],[587,26,476,26],[588,4,477,4],[588,8,477,8,"diff"],[588,12,477,12],[588,16,477,16],[588,17,477,17],[588,19,477,19],[589,6,478,8,"console"],[589,13,478,15],[589,14,478,16,"error"],[589,19,478,21],[589,20,478,22],[589,41,478,43,"tokenName"],[589,50,478,52],[589,87,478,89],[589,88,478,90],[590,4,479,4],[591,2,480,0],[592,2,481,0],[592,8,481,6,"FirebaseServerAppImpl"],[592,29,481,27],[592,38,481,36,"FirebaseAppImpl"],[592,53,481,51],[592,54,481,52],[593,4,482,4,"constructor"],[593,15,482,15,"constructor"],[593,16,482,16,"options"],[593,23,482,23],[593,25,482,25,"serverConfig"],[593,37,482,37],[593,39,482,39,"name"],[593,43,482,43],[593,45,482,45,"container"],[593,54,482,54],[593,56,482,56],[594,6,483,8],[595,6,484,8],[595,12,484,14,"automaticDataCollectionEnabled"],[595,42,484,44],[595,45,484,47,"serverConfig"],[595,57,484,59],[595,58,484,60,"automaticDataCollectionEnabled"],[595,88,484,90],[595,93,484,95,"undefined"],[595,102,484,104],[595,105,485,14,"serverConfig"],[595,117,485,26],[595,118,485,27,"automaticDataCollectionEnabled"],[595,148,485,57],[595,151,486,14],[595,155,486,18],[596,6,487,8],[597,6,488,8],[597,12,488,14,"config"],[597,18,488,20],[597,21,488,23],[598,8,489,12,"name"],[598,12,489,16],[599,8,490,12,"automaticDataCollectionEnabled"],[600,6,491,8],[600,7,491,9],[601,6,492,8],[601,10,492,12,"options"],[601,17,492,19],[601,18,492,20,"apiKey"],[601,24,492,26],[601,29,492,31,"undefined"],[601,38,492,40],[601,40,492,42],[602,8,493,12],[603,8,494,12],[603,13,494,17],[603,14,494,18,"options"],[603,21,494,25],[603,23,494,27,"config"],[603,29,494,33],[603,31,494,35,"container"],[603,40,494,44],[603,41,494,45],[604,6,495,8],[604,7,495,9],[604,13,496,13],[605,8,497,12],[605,14,497,18,"appImpl"],[605,21,497,25],[605,24,497,28,"options"],[605,31,497,35],[606,8,498,12],[606,13,498,17],[606,14,498,18,"appImpl"],[606,21,498,25],[606,22,498,26,"options"],[606,29,498,33],[606,31,498,35,"config"],[606,37,498,41],[606,39,498,43,"container"],[606,48,498,52],[606,49,498,53],[607,6,499,8],[608,6,500,8],[609,6,501,8],[609,10,501,12],[609,11,501,13,"_serverConfig"],[609,24,501,26],[609,27,501,29],[610,8,502,12,"automaticDataCollectionEnabled"],[610,38,502,42],[611,8,503,12],[611,11,503,15,"serverConfig"],[612,6,504,8],[612,7,504,9],[613,6,505,8],[614,6,506,8],[614,10,506,12],[614,14,506,16],[614,15,506,17,"_serverConfig"],[614,28,506,30],[614,29,506,31,"authIdToken"],[614,40,506,42],[614,42,506,44],[615,8,507,12,"validateTokenTTL"],[615,24,507,28],[615,25,507,29],[615,29,507,33],[615,30,507,34,"_serverConfig"],[615,43,507,47],[615,44,507,48,"authIdToken"],[615,55,507,59],[615,57,507,61],[615,70,507,74],[615,71,507,75],[616,6,508,8],[617,6,509,8],[618,6,510,8],[618,10,510,12],[618,14,510,16],[618,15,510,17,"_serverConfig"],[618,28,510,30],[618,29,510,31,"appCheckToken"],[618,42,510,44],[618,44,510,46],[619,8,511,12,"validateTokenTTL"],[619,24,511,28],[619,25,511,29],[619,29,511,33],[619,30,511,34,"_serverConfig"],[619,43,511,47],[619,44,511,48,"appCheckToken"],[619,57,511,61],[619,59,511,63],[619,74,511,78],[619,75,511,79],[620,6,512,8],[621,6,513,8],[621,10,513,12],[621,11,513,13,"_finalizationRegistry"],[621,32,513,34],[621,35,513,37],[621,39,513,41],[622,6,514,8],[622,10,514,12],[622,17,514,19,"FinalizationRegistry"],[622,37,514,39],[622,42,514,44],[622,53,514,55],[622,55,514,57],[623,8,515,12],[623,12,515,16],[623,13,515,17,"_finalizationRegistry"],[623,34,515,38],[623,37,515,41],[623,41,515,45,"FinalizationRegistry"],[623,61,515,65],[623,62,515,66],[623,68,515,72],[624,10,516,16],[624,14,516,20],[624,15,516,21,"automaticCleanup"],[624,31,516,37],[624,32,516,38],[624,33,516,39],[625,8,517,12],[625,9,517,13],[625,10,517,14],[626,6,518,8],[627,6,519,8],[627,10,519,12],[627,11,519,13,"_refCount"],[627,20,519,22],[627,23,519,25],[627,24,519,26],[628,6,520,8],[628,10,520,12],[628,11,520,13,"incRefCount"],[628,22,520,24],[628,23,520,25],[628,27,520,29],[628,28,520,30,"_serverConfig"],[628,41,520,43],[628,42,520,44,"releaseOnDeref"],[628,56,520,58],[628,57,520,59],[629,6,521,8],[630,6,522,8],[631,6,523,8],[631,10,523,12],[631,11,523,13,"_serverConfig"],[631,24,523,26],[631,25,523,27,"releaseOnDeref"],[631,39,523,41],[631,42,523,44,"undefined"],[631,51,523,53],[632,6,524,8,"serverConfig"],[632,18,524,20],[632,19,524,21,"releaseOnDeref"],[632,33,524,35],[632,36,524,38,"undefined"],[632,45,524,47],[633,6,525,8,"registerVersion"],[633,21,525,23],[633,22,525,24,"name$q"],[633,28,525,30],[633,30,525,32,"version$1"],[633,39,525,41],[633,41,525,43],[633,52,525,54],[633,53,525,55],[634,4,526,4],[635,4,527,4,"toJSON"],[635,10,527,10,"toJSON"],[635,11,527,10],[635,13,527,13],[636,6,528,8],[636,13,528,15,"undefined"],[636,22,528,24],[637,4,529,4],[638,4,530,4],[638,8,530,8,"refCount"],[638,16,530,16,"refCount"],[638,17,530,16],[638,19,530,19],[639,6,531,8],[639,13,531,15],[639,17,531,19],[639,18,531,20,"_refCount"],[639,27,531,29],[640,4,532,4],[641,4,533,4],[642,4,534,4],[643,4,535,4,"incRefCount"],[643,15,535,15,"incRefCount"],[643,16,535,16,"obj"],[643,19,535,19],[643,21,535,21],[644,6,536,8],[644,10,536,12],[644,14,536,16],[644,15,536,17,"isDeleted"],[644,24,536,26],[644,26,536,28],[645,8,537,12],[646,6,538,8],[647,6,539,8],[647,10,539,12],[647,11,539,13,"_refCount"],[647,20,539,22],[647,22,539,24],[648,6,540,8],[648,10,540,12,"obj"],[648,13,540,15],[648,18,540,20,"undefined"],[648,27,540,29],[648,31,540,33],[648,35,540,37],[648,36,540,38,"_finalizationRegistry"],[648,57,540,59],[648,62,540,64],[648,66,540,68],[648,68,540,70],[649,8,541,12],[649,12,541,16],[649,13,541,17,"_finalizationRegistry"],[649,34,541,38],[649,35,541,39,"register"],[649,43,541,47],[649,44,541,48,"obj"],[649,47,541,51],[649,49,541,53],[649,53,541,57],[649,54,541,58],[650,6,542,8],[651,4,543,4],[652,4,544,4],[653,4,545,4,"decRefCount"],[653,15,545,15,"decRefCount"],[653,16,545,15],[653,18,545,18],[654,6,546,8],[654,10,546,12],[654,14,546,16],[654,15,546,17,"isDeleted"],[654,24,546,26],[654,26,546,28],[655,8,547,12],[655,15,547,19],[655,16,547,20],[656,6,548,8],[657,6,549,8],[657,13,549,15],[657,15,549,17],[657,19,549,21],[657,20,549,22,"_refCount"],[657,29,549,31],[658,4,550,4],[659,4,551,4],[660,4,552,4],[661,4,553,4],[662,4,554,4,"automaticCleanup"],[662,20,554,20,"automaticCleanup"],[662,21,554,20],[662,23,554,23],[663,6,555,8],[663,11,555,13,"deleteApp"],[663,20,555,22],[663,21,555,23],[663,25,555,27],[663,26,555,28],[664,4,556,4],[665,4,557,4],[665,8,557,8,"settings"],[665,16,557,16,"settings"],[665,17,557,16],[665,19,557,19],[666,6,558,8],[666,10,558,12],[666,11,558,13,"checkDestroyed"],[666,25,558,27],[666,26,558,28],[666,27,558,29],[667,6,559,8],[667,13,559,15],[667,17,559,19],[667,18,559,20,"_serverConfig"],[667,31,559,33],[668,4,560,4],[669,4,561,4],[670,0,562,0],[671,0,563,0],[672,0,564,0],[673,4,565,4,"checkDestroyed"],[673,18,565,18,"checkDestroyed"],[673,19,565,18],[673,21,565,21],[674,6,566,8],[674,10,566,12],[674,14,566,16],[674,15,566,17,"isDeleted"],[674,24,566,26],[674,26,566,28],[675,8,567,12],[675,14,567,18,"ERROR_FACTORY"],[675,27,567,31],[675,28,567,32,"create"],[675,34,567,38],[675,35,567,39],[675,55,567,59],[675,56,567,60],[675,89,567,93],[675,90,567,94],[676,6,568,8],[677,4,569,4],[678,2,570,0],[680,2,572,0],[681,0,573,0],[682,0,574,0],[683,0,575,0],[684,0,576,0],[685,0,577,0],[686,0,578,0],[687,0,579,0],[688,0,580,0],[689,0,581,0],[690,0,582,0],[691,0,583,0],[692,0,584,0],[693,0,585,0],[694,0,586,0],[695,0,587,0],[696,2,588,0],[697,0,589,0],[698,0,590,0],[699,0,591,0],[700,0,592,0],[701,2,593,0],[701,8,593,6,"SDK_VERSION"],[701,19,593,17],[701,22,593,20,"version"],[701,29,593,27],[702,2,594,0],[702,11,594,9,"initializeApp"],[702,24,594,22,"initializeApp"],[702,25,594,23,"_options"],[702,33,594,31],[702,35,594,33,"rawConfig"],[702,44,594,42],[702,47,594,45],[702,48,594,46],[702,49,594,47],[702,51,594,49],[703,4,595,4],[703,8,595,8,"options"],[703,15,595,15],[703,18,595,18,"_options"],[703,26,595,26],[704,4,596,4],[704,8,596,8],[704,15,596,15,"rawConfig"],[704,24,596,24],[704,29,596,29],[704,37,596,37],[704,39,596,39],[705,6,597,8],[705,12,597,14,"name"],[705,16,597,18],[705,19,597,21,"rawConfig"],[705,28,597,30],[706,6,598,8,"rawConfig"],[706,15,598,17],[706,18,598,20],[707,8,598,22,"name"],[708,6,598,27],[708,7,598,28],[709,4,599,4],[710,4,600,4],[710,10,600,10,"config"],[710,16,600,16],[710,19,600,19],[711,6,601,8,"name"],[711,10,601,12],[711,12,601,14,"DEFAULT_ENTRY_NAME"],[711,30,601,32],[712,6,602,8,"automaticDataCollectionEnabled"],[712,36,602,38],[712,38,602,40],[712,42,602,44],[713,6,603,8],[713,9,603,11,"rawConfig"],[714,4,604,4],[714,5,604,5],[715,4,605,4],[715,10,605,10,"name"],[715,14,605,14],[715,17,605,17,"config"],[715,23,605,23],[715,24,605,24,"name"],[715,28,605,28],[716,4,606,4],[716,8,606,8],[716,15,606,15,"name"],[716,19,606,19],[716,24,606,24],[716,32,606,32],[716,36,606,36],[716,37,606,37,"name"],[716,41,606,41],[716,43,606,43],[717,6,607,8],[717,12,607,14,"ERROR_FACTORY"],[717,25,607,27],[717,26,607,28,"create"],[717,32,607,34],[717,33,607,35],[717,47,607,49],[717,48,607,50],[717,77,607,79],[718,8,608,12,"appName"],[718,15,608,19],[718,17,608,21,"String"],[718,23,608,27],[718,24,608,28,"name"],[718,28,608,32],[719,6,609,8],[719,7,609,9],[719,8,609,10],[720,4,610,4],[721,4,611,4,"options"],[721,11,611,11],[721,16,611,16,"options"],[721,23,611,23],[721,26,611,26],[721,30,611,26,"getDefaultAppConfig"],[721,43,611,45],[721,44,611,45,"getDefaultAppConfig"],[721,63,611,45],[721,65,611,46],[721,66,611,47],[721,67,611,48],[722,4,612,4],[722,8,612,8],[722,9,612,9,"options"],[722,16,612,16],[722,18,612,18],[723,6,613,8],[723,12,613,14,"ERROR_FACTORY"],[723,25,613,27],[723,26,613,28,"create"],[723,32,613,34],[723,33,613,35],[723,45,613,47],[723,46,613,48],[723,71,613,73],[723,72,613,74],[724,4,614,4],[725,4,615,4],[725,10,615,10,"existingApp"],[725,21,615,21],[725,24,615,24,"_apps"],[725,29,615,29],[725,30,615,30,"get"],[725,33,615,33],[725,34,615,34,"name"],[725,38,615,38],[725,39,615,39],[726,4,616,4],[726,8,616,8,"existingApp"],[726,19,616,19],[726,21,616,21],[727,6,617,8],[728,6,618,8],[728,10,618,12],[728,14,618,12,"deepEqual"],[728,27,618,21],[728,28,618,21,"deepEqual"],[728,37,618,21],[728,39,618,22,"options"],[728,46,618,29],[728,48,618,31,"existingApp"],[728,59,618,42],[728,60,618,43,"options"],[728,67,618,50],[728,68,618,51],[728,72,619,12],[728,76,619,12,"deepEqual"],[728,89,619,21],[728,90,619,21,"deepEqual"],[728,99,619,21],[728,101,619,22,"config"],[728,107,619,28],[728,109,619,30,"existingApp"],[728,120,619,41],[728,121,619,42,"config"],[728,127,619,48],[728,128,619,49],[728,130,619,51],[729,8,620,12],[729,15,620,19,"existingApp"],[729,26,620,30],[730,6,621,8],[730,7,621,9],[730,13,622,13],[731,8,623,12],[731,14,623,18,"ERROR_FACTORY"],[731,27,623,31],[731,28,623,32,"create"],[731,34,623,38],[731,35,623,39],[731,50,623,54],[731,51,623,55],[731,81,623,85],[732,10,623,87,"appName"],[732,17,623,94],[732,19,623,96,"name"],[733,8,623,101],[733,9,623,102],[733,10,623,103],[734,6,624,8],[735,4,625,4],[736,4,626,4],[736,10,626,10,"container"],[736,19,626,19],[736,22,626,22],[736,26,626,26,"ComponentContainer"],[736,44,626,44],[736,45,626,44,"ComponentContainer"],[736,63,626,44],[736,64,626,45,"name"],[736,68,626,49],[736,69,626,50],[737,4,627,4],[737,9,627,9],[737,15,627,15,"component"],[737,24,627,24],[737,28,627,28,"_components"],[737,39,627,39],[737,40,627,40,"values"],[737,46,627,46],[737,47,627,47],[737,48,627,48],[737,50,627,50],[738,6,628,8,"container"],[738,15,628,17],[738,16,628,18,"addComponent"],[738,28,628,30],[738,29,628,31,"component"],[738,38,628,40],[738,39,628,41],[739,4,629,4],[740,4,630,4],[740,10,630,10,"newApp"],[740,16,630,16],[740,19,630,19],[740,23,630,23,"FirebaseAppImpl"],[740,38,630,38],[740,39,630,39,"options"],[740,46,630,46],[740,48,630,48,"config"],[740,54,630,54],[740,56,630,56,"container"],[740,65,630,65],[740,66,630,66],[741,4,631,4,"_apps"],[741,9,631,9],[741,10,631,10,"set"],[741,13,631,13],[741,14,631,14,"name"],[741,18,631,18],[741,20,631,20,"newApp"],[741,26,631,26],[741,27,631,27],[742,4,632,4],[742,11,632,11,"newApp"],[742,17,632,17],[743,2,633,0],[744,2,634,0],[744,11,634,9,"initializeServerApp"],[744,30,634,28,"initializeServerApp"],[744,31,634,29,"_options"],[744,39,634,37],[744,41,634,39,"_serverAppConfig"],[744,57,634,55],[744,60,634,58],[744,61,634,59],[744,62,634,60],[744,64,634,62],[745,4,635,4],[745,8,635,8],[745,12,635,8,"isBrowser"],[745,25,635,17],[745,26,635,17,"isBrowser"],[745,35,635,17],[745,37,635,18],[745,38,635,19],[745,42,635,23],[745,43,635,24],[745,47,635,24,"isWebWorker"],[745,60,635,35],[745,61,635,35,"isWebWorker"],[745,72,635,35],[745,74,635,36],[745,75,635,37],[745,77,635,39],[746,6,636,8],[747,6,637,8],[747,12,637,14,"ERROR_FACTORY"],[747,25,637,27],[747,26,637,28,"create"],[747,32,637,34],[747,33,637,35],[747,65,637,67],[747,66,637,68],[747,111,637,113],[747,112,637,114],[748,4,638,4],[749,4,639,4],[749,8,639,8,"firebaseOptions"],[749,23,639,23],[750,4,640,4],[750,8,640,8,"serverAppSettings"],[750,25,640,25],[750,28,640,28,"_serverAppConfig"],[750,44,640,44],[750,48,640,48],[750,49,640,49],[750,50,640,50],[751,4,641,4],[751,8,641,8,"_options"],[751,16,641,16],[751,18,641,18],[752,6,642,8],[752,10,642,12,"_isFirebaseApp"],[752,24,642,26],[752,25,642,27,"_options"],[752,33,642,35],[752,34,642,36],[752,36,642,38],[753,8,643,12,"firebaseOptions"],[753,23,643,27],[753,26,643,30,"_options"],[753,34,643,38],[753,35,643,39,"options"],[753,42,643,46],[754,6,644,8],[754,7,644,9],[754,13,645,13],[754,17,645,17,"_isFirebaseServerAppSettings"],[754,45,645,45],[754,46,645,46,"_options"],[754,54,645,54],[754,55,645,55],[754,57,645,57],[755,8,646,12,"serverAppSettings"],[755,25,646,29],[755,28,646,32,"_options"],[755,36,646,40],[756,6,647,8],[756,7,647,9],[756,13,648,13],[757,8,649,12,"firebaseOptions"],[757,23,649,27],[757,26,649,30,"_options"],[757,34,649,38],[758,6,650,8],[759,4,651,4],[760,4,652,4],[760,8,652,8,"serverAppSettings"],[760,25,652,25],[760,26,652,26,"automaticDataCollectionEnabled"],[760,56,652,56],[760,61,652,61,"undefined"],[760,70,652,70],[760,72,652,72],[761,6,653,8,"serverAppSettings"],[761,23,653,25],[761,24,653,26,"automaticDataCollectionEnabled"],[761,54,653,56],[761,57,653,59],[761,61,653,63],[762,4,654,4],[763,4,655,4,"firebaseOptions"],[763,19,655,19],[763,24,655,24,"firebaseOptions"],[763,39,655,39],[763,42,655,42],[763,46,655,42,"getDefaultAppConfig"],[763,59,655,61],[763,60,655,61,"getDefaultAppConfig"],[763,79,655,61],[763,81,655,62],[763,82,655,63],[763,83,655,64],[764,4,656,4],[764,8,656,8],[764,9,656,9,"firebaseOptions"],[764,24,656,24],[764,26,656,26],[765,6,657,8],[765,12,657,14,"ERROR_FACTORY"],[765,25,657,27],[765,26,657,28,"create"],[765,32,657,34],[765,33,657,35],[765,45,657,47],[765,46,657,48],[765,71,657,73],[765,72,657,74],[766,4,658,4],[767,4,659,4],[768,4,660,4],[768,10,660,10,"nameObj"],[768,17,660,17],[768,20,660,20],[769,6,661,8],[769,9,661,11,"serverAppSettings"],[769,26,661,28],[770,6,662,8],[770,9,662,11,"firebaseOptions"],[771,4,663,4],[771,5,663,5],[772,4,664,4],[773,4,665,4],[774,4,666,4],[774,8,666,8,"nameObj"],[774,15,666,15],[774,16,666,16,"releaseOnDeref"],[774,30,666,30],[774,35,666,35,"undefined"],[774,44,666,44],[774,46,666,46],[775,6,667,8],[775,13,667,15,"nameObj"],[775,20,667,22],[775,21,667,23,"releaseOnDeref"],[775,35,667,37],[776,4,668,4],[777,4,669,4],[777,10,669,10,"hashCode"],[777,18,669,18],[777,21,669,22,"s"],[777,22,669,23],[777,26,669,28],[778,6,670,8],[778,13,670,15],[778,14,670,16],[778,17,670,19,"s"],[778,18,670,20],[778,19,670,21],[778,20,670,22,"reduce"],[778,26,670,28],[778,27,670,29],[778,28,670,30,"hash"],[778,32,670,34],[778,34,670,36,"c"],[778,35,670,37],[778,40,670,43,"Math"],[778,44,670,47],[778,45,670,48,"imul"],[778,49,670,52],[778,50,670,53],[778,52,670,55],[778,54,670,57,"hash"],[778,58,670,61],[778,59,670,62],[778,62,670,65,"c"],[778,63,670,66],[778,64,670,67,"charCodeAt"],[778,74,670,77],[778,75,670,78],[778,76,670,79],[778,77,670,80],[778,80,670,84],[778,81,670,85],[778,83,670,87],[778,84,670,88],[778,85,670,89],[779,4,671,4],[779,5,671,5],[780,4,672,4],[780,8,672,8,"serverAppSettings"],[780,25,672,25],[780,26,672,26,"releaseOnDeref"],[780,40,672,40],[780,45,672,45,"undefined"],[780,54,672,54],[780,56,672,56],[781,6,673,8],[781,10,673,12],[781,17,673,19,"FinalizationRegistry"],[781,37,673,39],[781,42,673,44],[781,53,673,55],[781,55,673,57],[782,8,674,12],[782,14,674,18,"ERROR_FACTORY"],[782,27,674,31],[782,28,674,32,"create"],[782,34,674,38],[782,35,674,39],[782,72,674,76],[782,73,674,77],[782,125,674,129],[782,126,674,130],[782,127,674,131],[782,128,674,132],[783,6,675,8],[784,4,676,4],[785,4,677,4],[785,10,677,10,"nameString"],[785,20,677,20],[785,23,677,23],[785,25,677,25],[785,28,677,28,"hashCode"],[785,36,677,36],[785,37,677,37,"JSON"],[785,41,677,41],[785,42,677,42,"stringify"],[785,51,677,51],[785,52,677,52,"nameObj"],[785,59,677,59],[785,60,677,60],[785,61,677,61],[786,4,678,4],[786,10,678,10,"existingApp"],[786,21,678,21],[786,24,678,24,"_serverApps"],[786,35,678,35],[786,36,678,36,"get"],[786,39,678,39],[786,40,678,40,"nameString"],[786,50,678,50],[786,51,678,51],[787,4,679,4],[787,8,679,8,"existingApp"],[787,19,679,19],[787,21,679,21],[788,6,680,8,"existingApp"],[788,17,680,19],[788,18,680,20,"incRefCount"],[788,29,680,31],[788,30,680,32,"serverAppSettings"],[788,47,680,49],[788,48,680,50,"releaseOnDeref"],[788,62,680,64],[788,63,680,65],[789,6,681,8],[789,13,681,15,"existingApp"],[789,24,681,26],[790,4,682,4],[791,4,683,4],[791,10,683,10,"container"],[791,19,683,19],[791,22,683,22],[791,26,683,26,"ComponentContainer"],[791,44,683,44],[791,45,683,44,"ComponentContainer"],[791,63,683,44],[791,64,683,45,"nameString"],[791,74,683,55],[791,75,683,56],[792,4,684,4],[792,9,684,9],[792,15,684,15,"component"],[792,24,684,24],[792,28,684,28,"_components"],[792,39,684,39],[792,40,684,40,"values"],[792,46,684,46],[792,47,684,47],[792,48,684,48],[792,50,684,50],[793,6,685,8,"container"],[793,15,685,17],[793,16,685,18,"addComponent"],[793,28,685,30],[793,29,685,31,"component"],[793,38,685,40],[793,39,685,41],[794,4,686,4],[795,4,687,4],[795,10,687,10,"newApp"],[795,16,687,16],[795,19,687,19],[795,23,687,23,"FirebaseServerAppImpl"],[795,44,687,44],[795,45,687,45,"firebaseOptions"],[795,60,687,60],[795,62,687,62,"serverAppSettings"],[795,79,687,79],[795,81,687,81,"nameString"],[795,91,687,91],[795,93,687,93,"container"],[795,102,687,102],[795,103,687,103],[796,4,688,4,"_serverApps"],[796,15,688,15],[796,16,688,16,"set"],[796,19,688,19],[796,20,688,20,"nameString"],[796,30,688,30],[796,32,688,32,"newApp"],[796,38,688,38],[796,39,688,39],[797,4,689,4],[797,11,689,11,"newApp"],[797,17,689,17],[798,2,690,0],[799,2,691,0],[800,0,692,0],[801,0,693,0],[802,0,694,0],[803,0,695,0],[804,0,696,0],[805,0,697,0],[806,0,698,0],[807,0,699,0],[808,0,700,0],[809,0,701,0],[810,0,702,0],[811,0,703,0],[812,0,704,0],[813,0,705,0],[814,0,706,0],[815,0,707,0],[816,0,708,0],[817,0,709,0],[818,0,710,0],[819,0,711,0],[820,0,712,0],[821,0,713,0],[822,0,714,0],[823,0,715,0],[824,0,716,0],[825,0,717,0],[826,0,718,0],[827,0,719,0],[828,2,720,0],[828,11,720,9,"getApp"],[828,17,720,15,"getApp"],[828,18,720,16,"name"],[828,22,720,20],[828,25,720,23,"DEFAULT_ENTRY_NAME"],[828,43,720,41],[828,45,720,43],[829,4,721,4],[829,10,721,10,"app"],[829,13,721,13],[829,16,721,16,"_apps"],[829,21,721,21],[829,22,721,22,"get"],[829,25,721,25],[829,26,721,26,"name"],[829,30,721,30],[829,31,721,31],[830,4,722,4],[830,8,722,8],[830,9,722,9,"app"],[830,12,722,12],[830,16,722,16,"name"],[830,20,722,20],[830,25,722,25,"DEFAULT_ENTRY_NAME"],[830,43,722,43],[830,47,722,47],[830,51,722,47,"getDefaultAppConfig"],[830,64,722,66],[830,65,722,66,"getDefaultAppConfig"],[830,84,722,66],[830,86,722,67],[830,87,722,68],[830,89,722,70],[831,6,723,8],[831,13,723,15,"initializeApp"],[831,26,723,28],[831,27,723,29],[831,28,723,30],[832,4,724,4],[833,4,725,4],[833,8,725,8],[833,9,725,9,"app"],[833,12,725,12],[833,14,725,14],[834,6,726,8],[834,12,726,14,"ERROR_FACTORY"],[834,25,726,27],[834,26,726,28,"create"],[834,32,726,34],[834,33,726,35],[834,41,726,43],[834,42,726,44],[834,65,726,67],[835,8,726,69,"appName"],[835,15,726,76],[835,17,726,78,"name"],[836,6,726,83],[836,7,726,84],[836,8,726,85],[837,4,727,4],[838,4,728,4],[838,11,728,11,"app"],[838,14,728,14],[839,2,729,0],[840,2,730,0],[841,0,731,0],[842,0,732,0],[843,0,733,0],[844,2,734,0],[844,11,734,9,"getApps"],[844,18,734,16,"getApps"],[844,19,734,16],[844,21,734,19],[845,4,735,4],[845,11,735,11,"Array"],[845,16,735,16],[845,17,735,17,"from"],[845,21,735,21],[845,22,735,22,"_apps"],[845,27,735,27],[845,28,735,28,"values"],[845,34,735,34],[845,35,735,35],[845,36,735,36],[845,37,735,37],[846,2,736,0],[847,2,737,0],[848,0,738,0],[849,0,739,0],[850,0,740,0],[851,0,741,0],[852,0,742,0],[853,0,743,0],[854,0,744,0],[855,0,745,0],[856,0,746,0],[857,0,747,0],[858,0,748,0],[859,0,749,0],[860,0,750,0],[861,0,751,0],[862,0,752,0],[863,0,753,0],[864,2,754,0],[864,17,754,15,"deleteApp"],[864,26,754,24,"deleteApp"],[864,27,754,25,"app"],[864,30,754,28],[864,32,754,30],[865,4,755,4],[865,8,755,8,"cleanupProviders"],[865,24,755,24],[865,27,755,27],[865,32,755,32],[866,4,756,4],[866,10,756,10,"name"],[866,14,756,14],[866,17,756,17,"app"],[866,20,756,20],[866,21,756,21,"name"],[866,25,756,25],[867,4,757,4],[867,8,757,8,"_apps"],[867,13,757,13],[867,14,757,14,"has"],[867,17,757,17],[867,18,757,18,"name"],[867,22,757,22],[867,23,757,23],[867,25,757,25],[868,6,758,8,"cleanupProviders"],[868,22,758,24],[868,25,758,27],[868,29,758,31],[869,6,759,8,"_apps"],[869,11,759,13],[869,12,759,14,"delete"],[869,18,759,20],[869,19,759,21,"name"],[869,23,759,25],[869,24,759,26],[870,4,760,4],[870,5,760,5],[870,11,761,9],[870,15,761,13,"_serverApps"],[870,26,761,24],[870,27,761,25,"has"],[870,30,761,28],[870,31,761,29,"name"],[870,35,761,33],[870,36,761,34],[870,38,761,36],[871,6,762,8],[871,12,762,14,"firebaseServerApp"],[871,29,762,31],[871,32,762,34,"app"],[871,35,762,37],[872,6,763,8],[872,10,763,12,"firebaseServerApp"],[872,27,763,29],[872,28,763,30,"decRefCount"],[872,39,763,41],[872,40,763,42],[872,41,763,43],[872,45,763,47],[872,46,763,48],[872,48,763,50],[873,8,764,12,"_serverApps"],[873,19,764,23],[873,20,764,24,"delete"],[873,26,764,30],[873,27,764,31,"name"],[873,31,764,35],[873,32,764,36],[874,8,765,12,"cleanupProviders"],[874,24,765,28],[874,27,765,31],[874,31,765,35],[875,6,766,8],[876,4,767,4],[877,4,768,4],[877,8,768,8,"cleanupProviders"],[877,24,768,24],[877,26,768,26],[878,6,769,8],[878,12,769,14,"Promise"],[878,19,769,21],[878,20,769,22,"all"],[878,23,769,25],[878,24,769,26,"app"],[878,27,769,29],[878,28,769,30,"container"],[878,37,769,39],[878,38,770,13,"getProviders"],[878,50,770,25],[878,51,770,26],[878,52,770,27],[878,53,771,13,"map"],[878,56,771,16],[878,57,771,17,"provider"],[878,65,771,25],[878,69,771,29,"provider"],[878,77,771,37],[878,78,771,38,"delete"],[878,84,771,44],[878,85,771,45],[878,86,771,46],[878,87,771,47],[878,88,771,48],[879,6,772,8,"app"],[879,9,772,11],[879,10,772,12,"isDeleted"],[879,19,772,21],[879,22,772,24],[879,26,772,28],[880,4,773,4],[881,2,774,0],[882,2,775,0],[883,0,776,0],[884,0,777,0],[885,0,778,0],[886,0,779,0],[887,0,780,0],[888,0,781,0],[889,0,782,0],[890,2,783,0],[890,11,783,9,"registerVersion"],[890,26,783,24,"registerVersion"],[890,27,783,25,"libraryKeyOrName"],[890,43,783,41],[890,45,783,43,"version"],[890,52,783,50],[890,54,783,52,"variant"],[890,61,783,59],[890,63,783,61],[891,4,784,4],[892,4,785,4],[893,4,786,4],[893,8,786,8,"library"],[893,15,786,15],[893,18,786,18,"PLATFORM_LOG_STRING"],[893,37,786,37],[893,38,786,38,"libraryKeyOrName"],[893,54,786,54],[893,55,786,55],[893,59,786,59,"libraryKeyOrName"],[893,75,786,75],[894,4,787,4],[894,8,787,8,"variant"],[894,15,787,15],[894,17,787,17],[895,6,788,8,"library"],[895,13,788,15],[895,17,788,19],[895,21,788,23,"variant"],[895,28,788,30],[895,30,788,32],[896,4,789,4],[897,4,790,4],[897,10,790,10,"libraryMismatch"],[897,25,790,25],[897,28,790,28,"library"],[897,35,790,35],[897,36,790,36,"match"],[897,41,790,41],[897,42,790,42],[897,49,790,49],[897,50,790,50],[898,4,791,4],[898,10,791,10,"versionMismatch"],[898,25,791,25],[898,28,791,28,"version"],[898,35,791,35],[898,36,791,36,"match"],[898,41,791,41],[898,42,791,42],[898,49,791,49],[898,50,791,50],[899,4,792,4],[899,8,792,8,"libraryMismatch"],[899,23,792,23],[899,27,792,27,"versionMismatch"],[899,42,792,42],[899,44,792,44],[900,6,793,8],[900,12,793,14,"warning"],[900,19,793,21],[900,22,793,24],[900,23,794,12],[900,54,794,43,"library"],[900,61,794,50],[900,80,794,69,"version"],[900,87,794,76],[900,91,794,80],[900,92,795,9],[901,6,796,8],[901,10,796,12,"libraryMismatch"],[901,25,796,27],[901,27,796,29],[902,8,797,12,"warning"],[902,15,797,19],[902,16,797,20,"push"],[902,20,797,24],[902,21,797,25],[902,38,797,42,"library"],[902,45,797,49],[902,96,797,100],[902,97,797,101],[903,6,798,8],[904,6,799,8],[904,10,799,12,"libraryMismatch"],[904,25,799,27],[904,29,799,31,"versionMismatch"],[904,44,799,46],[904,46,799,48],[905,8,800,12,"warning"],[905,15,800,19],[905,16,800,20,"push"],[905,20,800,24],[905,21,800,25],[905,26,800,30],[905,27,800,31],[906,6,801,8],[907,6,802,8],[907,10,802,12,"versionMismatch"],[907,25,802,27],[907,27,802,29],[908,8,803,12,"warning"],[908,15,803,19],[908,16,803,20,"push"],[908,20,803,24],[908,21,803,25],[908,38,803,42,"version"],[908,45,803,49],[908,96,803,100],[908,97,803,101],[909,6,804,8],[910,6,805,8,"logger"],[910,12,805,14],[910,13,805,15,"warn"],[910,17,805,19],[910,18,805,20,"warning"],[910,25,805,27],[910,26,805,28,"join"],[910,30,805,32],[910,31,805,33],[910,34,805,36],[910,35,805,37],[910,36,805,38],[911,6,806,8],[912,4,807,4],[913,4,808,4,"_registerComponent"],[913,22,808,22],[913,23,808,23],[913,27,808,27,"Component"],[913,45,808,36],[913,46,808,36,"Component"],[913,55,808,36],[913,56,808,37],[913,59,808,40,"library"],[913,66,808,47],[913,76,808,57],[913,78,808,59],[913,85,808,66],[914,6,808,68,"library"],[914,13,808,75],[915,6,808,77,"version"],[916,4,808,85],[916,5,808,86],[916,6,808,87],[916,8,808,89],[916,17,808,98],[916,18,808,99],[916,45,808,126],[916,46,808,127],[916,47,808,128],[917,2,809,0],[918,2,810,0],[919,0,811,0],[920,0,812,0],[921,0,813,0],[922,0,814,0],[923,0,815,0],[924,0,816,0],[925,2,817,0],[925,11,817,9,"onLog"],[925,16,817,14,"onLog"],[925,17,817,15,"logCallback"],[925,28,817,26],[925,30,817,28,"options"],[925,37,817,35],[925,39,817,37],[926,4,818,4],[926,8,818,8,"logCallback"],[926,19,818,19],[926,24,818,24],[926,28,818,28],[926,32,818,32],[926,39,818,39,"logCallback"],[926,50,818,50],[926,55,818,55],[926,65,818,65],[926,67,818,67],[927,6,819,8],[927,12,819,14,"ERROR_FACTORY"],[927,25,819,27],[927,26,819,28,"create"],[927,32,819,34],[927,33,819,35],[927,55,819,57],[927,56,819,58],[927,91,819,93],[927,92,819,94],[928,4,820,4],[929,4,821,4],[929,8,821,4,"setUserLogHandler"],[929,23,821,21],[929,24,821,21,"setUserLogHandler"],[929,41,821,21],[929,43,821,22,"logCallback"],[929,54,821,33],[929,56,821,35,"options"],[929,63,821,42],[929,64,821,43],[930,2,822,0],[931,2,823,0],[932,0,824,0],[933,0,825,0],[934,0,826,0],[935,0,827,0],[936,0,828,0],[937,0,829,0],[938,0,830,0],[939,0,831,0],[940,2,832,0],[940,11,832,9,"setLogLevel"],[940,22,832,20,"setLogLevel"],[940,23,832,21,"logLevel"],[940,31,832,29],[940,33,832,31],[941,4,833,4],[941,8,833,4,"setLogLevel$1"],[941,23,833,17],[941,24,833,17,"setLogLevel"],[941,35,833,17],[941,37,833,18,"logLevel"],[941,45,833,26],[941,46,833,27],[942,2,834,0],[944,2,836,0],[945,0,837,0],[946,0,838,0],[947,0,839,0],[948,0,840,0],[949,0,841,0],[950,0,842,0],[951,0,843,0],[952,0,844,0],[953,0,845,0],[954,0,846,0],[955,0,847,0],[956,0,848,0],[957,0,849,0],[958,0,850,0],[959,0,851,0],[960,2,852,0],[960,8,852,6,"DB_NAME"],[960,15,852,13],[960,18,852,16],[960,47,852,45],[961,2,853,0],[961,8,853,6,"DB_VERSION"],[961,18,853,16],[961,21,853,19],[961,22,853,20],[962,2,854,0],[962,8,854,6,"STORE_NAME"],[962,18,854,16],[962,21,854,19],[962,47,854,45],[963,2,855,0],[963,6,855,4,"dbPromise"],[963,15,855,13],[963,18,855,16],[963,22,855,20],[964,2,856,0],[964,11,856,9,"getDbPromise"],[964,23,856,21,"getDbPromise"],[964,24,856,21],[964,26,856,24],[965,4,857,4],[965,8,857,8],[965,9,857,9,"dbPromise"],[965,18,857,18],[965,20,857,20],[966,6,858,8,"dbPromise"],[966,15,858,17],[966,18,858,20],[966,22,858,20,"openDB"],[966,26,858,26],[966,27,858,26,"openDB"],[966,33,858,26],[966,35,858,27,"DB_NAME"],[966,42,858,34],[966,44,858,36,"DB_VERSION"],[966,54,858,46],[966,56,858,48],[967,8,859,12,"upgrade"],[967,15,859,19],[967,17,859,21,"upgrade"],[967,18,859,22,"db"],[967,20,859,24],[967,22,859,26,"oldVersion"],[967,32,859,36],[967,37,859,41],[968,10,860,16],[969,10,861,16],[970,10,862,16],[971,10,863,16],[972,10,864,16],[973,10,865,16],[973,18,865,24,"oldVersion"],[973,28,865,34],[974,12,866,20],[974,17,866,25],[974,18,866,26],[975,14,867,24],[975,18,867,28],[976,16,868,28,"db"],[976,18,868,30],[976,19,868,31,"createObjectStore"],[976,36,868,48],[976,37,868,49,"STORE_NAME"],[976,47,868,59],[976,48,868,60],[977,14,869,24],[977,15,869,25],[977,16,870,24],[977,23,870,31,"e"],[977,24,870,32],[977,26,870,34],[978,16,871,28],[979,16,872,28],[980,16,873,28],[981,16,874,28,"console"],[981,23,874,35],[981,24,874,36,"warn"],[981,28,874,40],[981,29,874,41,"e"],[981,30,874,42],[981,31,874,43],[982,14,875,24],[983,10,876,16],[984,8,877,12],[985,6,878,8],[985,7,878,9],[985,8,878,10],[985,9,878,11,"catch"],[985,14,878,16],[985,15,878,17,"e"],[985,16,878,18],[985,20,878,22],[986,8,879,12],[986,14,879,18,"ERROR_FACTORY"],[986,27,879,31],[986,28,879,32,"create"],[986,34,879,38],[986,35,879,39],[986,45,879,49],[986,46,879,50],[986,71,879,75],[987,10,880,16,"originalErrorMessage"],[987,30,880,36],[987,32,880,38,"e"],[987,33,880,39],[987,34,880,40,"message"],[988,8,881,12],[988,9,881,13],[988,10,881,14],[989,6,882,8],[989,7,882,9],[989,8,882,10],[990,4,883,4],[991,4,884,4],[991,11,884,11,"dbPromise"],[991,20,884,20],[992,2,885,0],[993,2,886,0],[993,17,886,15,"readHeartbeatsFromIndexedDB"],[993,44,886,42,"readHeartbeatsFromIndexedDB"],[993,45,886,43,"app"],[993,48,886,46],[993,50,886,48],[994,4,887,4],[994,8,887,8],[995,6,888,8],[995,12,888,14,"db"],[995,14,888,16],[995,17,888,19],[995,23,888,25,"getDbPromise"],[995,35,888,37],[995,36,888,38],[995,37,888,39],[996,6,889,8],[996,12,889,14,"tx"],[996,14,889,16],[996,17,889,19,"db"],[996,19,889,21],[996,20,889,22,"transaction"],[996,31,889,33],[996,32,889,34,"STORE_NAME"],[996,42,889,44],[996,43,889,45],[997,6,890,8],[997,12,890,14,"result"],[997,18,890,20],[997,21,890,23],[997,27,890,29,"tx"],[997,29,890,31],[997,30,890,32,"objectStore"],[997,41,890,43],[997,42,890,44,"STORE_NAME"],[997,52,890,54],[997,53,890,55],[997,54,890,56,"get"],[997,57,890,59],[997,58,890,60,"computeKey"],[997,68,890,70],[997,69,890,71,"app"],[997,72,890,74],[997,73,890,75],[997,74,890,76],[998,6,891,8],[999,6,892,8],[1000,6,893,8],[1000,12,893,14,"tx"],[1000,14,893,16],[1000,15,893,17,"done"],[1000,19,893,21],[1001,6,894,8],[1001,13,894,15,"result"],[1001,19,894,21],[1002,4,895,4],[1002,5,895,5],[1002,6,896,4],[1002,13,896,11,"e"],[1002,14,896,12],[1002,16,896,14],[1003,6,897,8],[1003,10,897,12,"e"],[1003,11,897,13],[1003,23,897,25,"FirebaseError"],[1003,36,897,38],[1003,37,897,38,"FirebaseError"],[1003,50,897,38],[1003,52,897,40],[1004,8,898,12,"logger"],[1004,14,898,18],[1004,15,898,19,"warn"],[1004,19,898,23],[1004,20,898,24,"e"],[1004,21,898,25],[1004,22,898,26,"message"],[1004,29,898,33],[1004,30,898,34],[1005,6,899,8],[1005,7,899,9],[1005,13,900,13],[1006,8,901,12],[1006,14,901,18,"idbGetError"],[1006,25,901,29],[1006,28,901,32,"ERROR_FACTORY"],[1006,41,901,45],[1006,42,901,46,"create"],[1006,48,901,52],[1006,49,901,53],[1006,58,901,62],[1006,59,901,63],[1006,83,901,87],[1007,10,902,16,"originalErrorMessage"],[1007,30,902,36],[1007,32,902,38,"e"],[1007,33,902,39],[1007,35,902,41,"message"],[1008,8,903,12],[1008,9,903,13],[1008,10,903,14],[1009,8,904,12,"logger"],[1009,14,904,18],[1009,15,904,19,"warn"],[1009,19,904,23],[1009,20,904,24,"idbGetError"],[1009,31,904,35],[1009,32,904,36,"message"],[1009,39,904,43],[1009,40,904,44],[1010,6,905,8],[1011,4,906,4],[1012,2,907,0],[1013,2,908,0],[1013,17,908,15,"writeHeartbeatsToIndexedDB"],[1013,43,908,41,"writeHeartbeatsToIndexedDB"],[1013,44,908,42,"app"],[1013,47,908,45],[1013,49,908,47,"heartbeatObject"],[1013,64,908,62],[1013,66,908,64],[1014,4,909,4],[1014,8,909,8],[1015,6,910,8],[1015,12,910,14,"db"],[1015,14,910,16],[1015,17,910,19],[1015,23,910,25,"getDbPromise"],[1015,35,910,37],[1015,36,910,38],[1015,37,910,39],[1016,6,911,8],[1016,12,911,14,"tx"],[1016,14,911,16],[1016,17,911,19,"db"],[1016,19,911,21],[1016,20,911,22,"transaction"],[1016,31,911,33],[1016,32,911,34,"STORE_NAME"],[1016,42,911,44],[1016,44,911,46],[1016,55,911,57],[1016,56,911,58],[1017,6,912,8],[1017,12,912,14,"objectStore"],[1017,23,912,25],[1017,26,912,28,"tx"],[1017,28,912,30],[1017,29,912,31,"objectStore"],[1017,40,912,42],[1017,41,912,43,"STORE_NAME"],[1017,51,912,53],[1017,52,912,54],[1018,6,913,8],[1018,12,913,14,"objectStore"],[1018,23,913,25],[1018,24,913,26,"put"],[1018,27,913,29],[1018,28,913,30,"heartbeatObject"],[1018,43,913,45],[1018,45,913,47,"computeKey"],[1018,55,913,57],[1018,56,913,58,"app"],[1018,59,913,61],[1018,60,913,62],[1018,61,913,63],[1019,6,914,8],[1019,12,914,14,"tx"],[1019,14,914,16],[1019,15,914,17,"done"],[1019,19,914,21],[1020,4,915,4],[1020,5,915,5],[1020,6,916,4],[1020,13,916,11,"e"],[1020,14,916,12],[1020,16,916,14],[1021,6,917,8],[1021,10,917,12,"e"],[1021,11,917,13],[1021,23,917,25,"FirebaseError"],[1021,36,917,38],[1021,37,917,38,"FirebaseError"],[1021,50,917,38],[1021,52,917,40],[1022,8,918,12,"logger"],[1022,14,918,18],[1022,15,918,19,"warn"],[1022,19,918,23],[1022,20,918,24,"e"],[1022,21,918,25],[1022,22,918,26,"message"],[1022,29,918,33],[1022,30,918,34],[1023,6,919,8],[1023,7,919,9],[1023,13,920,13],[1024,8,921,12],[1024,14,921,18,"idbGetError"],[1024,25,921,29],[1024,28,921,32,"ERROR_FACTORY"],[1024,41,921,45],[1024,42,921,46,"create"],[1024,48,921,52],[1024,49,921,53],[1024,58,921,62],[1024,59,921,63],[1024,85,921,89],[1025,10,922,16,"originalErrorMessage"],[1025,30,922,36],[1025,32,922,38,"e"],[1025,33,922,39],[1025,35,922,41,"message"],[1026,8,923,12],[1026,9,923,13],[1026,10,923,14],[1027,8,924,12,"logger"],[1027,14,924,18],[1027,15,924,19,"warn"],[1027,19,924,23],[1027,20,924,24,"idbGetError"],[1027,31,924,35],[1027,32,924,36,"message"],[1027,39,924,43],[1027,40,924,44],[1028,6,925,8],[1029,4,926,4],[1030,2,927,0],[1031,2,928,0],[1031,11,928,9,"computeKey"],[1031,21,928,19,"computeKey"],[1031,22,928,20,"app"],[1031,25,928,23],[1031,27,928,25],[1032,4,929,4],[1032,11,929,11],[1032,14,929,14,"app"],[1032,17,929,17],[1032,18,929,18,"name"],[1032,22,929,22],[1032,26,929,26,"app"],[1032,29,929,29],[1032,30,929,30,"options"],[1032,37,929,37],[1032,38,929,38,"appId"],[1032,43,929,43],[1032,45,929,45],[1033,2,930,0],[1035,2,932,0],[1036,0,933,0],[1037,0,934,0],[1038,0,935,0],[1039,0,936,0],[1040,0,937,0],[1041,0,938,0],[1042,0,939,0],[1043,0,940,0],[1044,0,941,0],[1045,0,942,0],[1046,0,943,0],[1047,0,944,0],[1048,0,945,0],[1049,0,946,0],[1050,0,947,0],[1051,2,948,0],[1051,8,948,6,"MAX_HEADER_BYTES"],[1051,24,948,22],[1051,27,948,25],[1051,31,948,29],[1052,2,949,0],[1052,8,949,6,"MAX_NUM_STORED_HEARTBEATS"],[1052,33,949,31],[1052,36,949,34],[1052,38,949,36],[1053,2,950,0],[1053,8,950,6,"HeartbeatServiceImpl"],[1053,28,950,26],[1053,29,950,27],[1054,4,951,4,"constructor"],[1054,15,951,15,"constructor"],[1054,16,951,16,"container"],[1054,25,951,25],[1054,27,951,27],[1055,6,952,8],[1055,10,952,12],[1055,11,952,13,"container"],[1055,20,952,22],[1055,23,952,25,"container"],[1055,32,952,34],[1056,6,953,8],[1057,0,954,0],[1058,0,955,0],[1059,0,956,0],[1060,0,957,0],[1061,0,958,0],[1062,0,959,0],[1063,0,960,0],[1064,0,961,0],[1065,6,962,8],[1065,10,962,12],[1065,11,962,13,"_heartbeatsCache"],[1065,27,962,29],[1065,30,962,32],[1065,34,962,36],[1066,6,963,8],[1066,12,963,14,"app"],[1066,15,963,17],[1066,18,963,20],[1066,22,963,24],[1066,23,963,25,"container"],[1066,32,963,34],[1066,33,963,35,"getProvider"],[1066,44,963,46],[1066,45,963,47],[1066,50,963,52],[1066,51,963,53],[1066,52,963,54,"getImmediate"],[1066,64,963,66],[1066,65,963,67],[1066,66,963,68],[1067,6,964,8],[1067,10,964,12],[1067,11,964,13,"_storage"],[1067,19,964,21],[1067,22,964,24],[1067,26,964,28,"HeartbeatStorageImpl"],[1067,46,964,48],[1067,47,964,49,"app"],[1067,50,964,52],[1067,51,964,53],[1068,6,965,8],[1068,10,965,12],[1068,11,965,13,"_heartbeatsCachePromise"],[1068,34,965,36],[1068,37,965,39],[1068,41,965,43],[1068,42,965,44,"_storage"],[1068,50,965,52],[1068,51,965,53,"read"],[1068,55,965,57],[1068,56,965,58],[1068,57,965,59],[1068,58,965,60,"then"],[1068,62,965,64],[1068,63,965,65,"result"],[1068,69,965,71],[1068,73,965,75],[1069,8,966,12],[1069,12,966,16],[1069,13,966,17,"_heartbeatsCache"],[1069,29,966,33],[1069,32,966,36,"result"],[1069,38,966,42],[1070,8,967,12],[1070,15,967,19,"result"],[1070,21,967,25],[1071,6,968,8],[1071,7,968,9],[1071,8,968,10],[1072,4,969,4],[1073,4,970,4],[1074,0,971,0],[1075,0,972,0],[1076,0,973,0],[1077,0,974,0],[1078,0,975,0],[1079,0,976,0],[1080,4,977,4],[1080,10,977,10,"triggerHeartbeat"],[1080,26,977,26,"triggerHeartbeat"],[1080,27,977,26],[1080,29,977,29],[1081,6,978,8],[1081,10,978,12],[1082,8,979,12],[1082,14,979,18,"platformLogger"],[1082,28,979,32],[1082,31,979,35],[1082,35,979,39],[1082,36,979,40,"container"],[1082,45,979,49],[1082,46,980,17,"getProvider"],[1082,57,980,28],[1082,58,980,29],[1082,75,980,46],[1082,76,980,47],[1082,77,981,17,"getImmediate"],[1082,89,981,29],[1082,90,981,30],[1082,91,981,31],[1083,8,982,12],[1084,8,983,12],[1085,8,984,12],[1085,14,984,18,"agent"],[1085,19,984,23],[1085,22,984,26,"platformLogger"],[1085,36,984,40],[1085,37,984,41,"getPlatformInfoString"],[1085,58,984,62],[1085,59,984,63],[1085,60,984,64],[1086,8,985,12],[1086,14,985,18,"date"],[1086,18,985,22],[1086,21,985,25,"getUTCDateString"],[1086,37,985,41],[1086,38,985,42],[1086,39,985,43],[1087,8,986,12],[1087,12,986,16],[1087,16,986,20],[1087,17,986,21,"_heartbeatsCache"],[1087,33,986,37],[1087,35,986,39,"heartbeats"],[1087,45,986,49],[1087,49,986,53],[1087,53,986,57],[1087,55,986,59],[1088,10,987,16],[1088,14,987,20],[1088,15,987,21,"_heartbeatsCache"],[1088,31,987,37],[1088,34,987,40],[1088,40,987,46],[1088,44,987,50],[1088,45,987,51,"_heartbeatsCachePromise"],[1088,68,987,74],[1089,10,988,16],[1090,10,989,16],[1090,14,989,20],[1090,18,989,24],[1090,19,989,25,"_heartbeatsCache"],[1090,35,989,41],[1090,37,989,43,"heartbeats"],[1090,47,989,53],[1090,51,989,57],[1090,55,989,61],[1090,57,989,63],[1091,12,990,20],[1092,10,991,16],[1093,8,992,12],[1094,8,993,12],[1095,8,994,12],[1096,8,995,12],[1096,12,995,16],[1096,16,995,20],[1096,17,995,21,"_heartbeatsCache"],[1096,33,995,37],[1096,34,995,38,"lastSentHeartbeatDate"],[1096,55,995,59],[1096,60,995,64,"date"],[1096,64,995,68],[1096,68,996,16],[1096,72,996,20],[1096,73,996,21,"_heartbeatsCache"],[1096,89,996,37],[1096,90,996,38,"heartbeats"],[1096,100,996,48],[1096,101,996,49,"some"],[1096,105,996,53],[1096,106,996,54,"singleDateHeartbeat"],[1096,125,996,73],[1096,129,996,77,"singleDateHeartbeat"],[1096,148,996,96],[1096,149,996,97,"date"],[1096,153,996,101],[1096,158,996,106,"date"],[1096,162,996,110],[1096,163,996,111],[1096,165,996,113],[1097,10,997,16],[1098,8,998,12],[1098,9,998,13],[1098,15,999,17],[1099,10,1000,16],[1100,10,1001,16],[1100,14,1001,20],[1100,15,1001,21,"_heartbeatsCache"],[1100,31,1001,37],[1100,32,1001,38,"heartbeats"],[1100,42,1001,48],[1100,43,1001,49,"push"],[1100,47,1001,53],[1100,48,1001,54],[1101,12,1001,56,"date"],[1101,16,1001,60],[1102,12,1001,62,"agent"],[1103,10,1001,68],[1103,11,1001,69],[1103,12,1001,70],[1104,10,1002,16],[1105,10,1003,16],[1106,10,1004,16],[1106,14,1004,20],[1106,18,1004,24],[1106,19,1004,25,"_heartbeatsCache"],[1106,35,1004,41],[1106,36,1004,42,"heartbeats"],[1106,46,1004,52],[1106,47,1004,53,"length"],[1106,53,1004,59],[1106,56,1004,62,"MAX_NUM_STORED_HEARTBEATS"],[1106,81,1004,87],[1106,83,1004,89],[1107,12,1005,20],[1107,18,1005,26,"earliestHeartbeatIdx"],[1107,38,1005,46],[1107,41,1005,49,"getEarliestHeartbeatIdx"],[1107,64,1005,72],[1107,65,1005,73],[1107,69,1005,77],[1107,70,1005,78,"_heartbeatsCache"],[1107,86,1005,94],[1107,87,1005,95,"heartbeats"],[1107,97,1005,105],[1107,98,1005,106],[1108,12,1006,20],[1108,16,1006,24],[1108,17,1006,25,"_heartbeatsCache"],[1108,33,1006,41],[1108,34,1006,42,"heartbeats"],[1108,44,1006,52],[1108,45,1006,53,"splice"],[1108,51,1006,59],[1108,52,1006,60,"earliestHeartbeatIdx"],[1108,72,1006,80],[1108,74,1006,82],[1108,75,1006,83],[1108,76,1006,84],[1109,10,1007,16],[1110,8,1008,12],[1111,8,1009,12],[1111,15,1009,19],[1111,19,1009,23],[1111,20,1009,24,"_storage"],[1111,28,1009,32],[1111,29,1009,33,"overwrite"],[1111,38,1009,42],[1111,39,1009,43],[1111,43,1009,47],[1111,44,1009,48,"_heartbeatsCache"],[1111,60,1009,64],[1111,61,1009,65],[1112,6,1010,8],[1112,7,1010,9],[1112,8,1011,8],[1112,15,1011,15,"e"],[1112,16,1011,16],[1112,18,1011,18],[1113,8,1012,12,"logger"],[1113,14,1012,18],[1113,15,1012,19,"warn"],[1113,19,1012,23],[1113,20,1012,24,"e"],[1113,21,1012,25],[1113,22,1012,26],[1114,6,1013,8],[1115,4,1014,4],[1116,4,1015,4],[1117,0,1016,0],[1118,0,1017,0],[1119,0,1018,0],[1120,0,1019,0],[1121,0,1020,0],[1122,0,1021,0],[1123,4,1022,4],[1123,10,1022,10,"getHeartbeatsHeader"],[1123,29,1022,29,"getHeartbeatsHeader"],[1123,30,1022,29],[1123,32,1022,32],[1124,6,1023,8],[1124,10,1023,12],[1125,8,1024,12],[1125,12,1024,16],[1125,16,1024,20],[1125,17,1024,21,"_heartbeatsCache"],[1125,33,1024,37],[1125,38,1024,42],[1125,42,1024,46],[1125,44,1024,48],[1126,10,1025,16],[1126,16,1025,22],[1126,20,1025,26],[1126,21,1025,27,"_heartbeatsCachePromise"],[1126,44,1025,50],[1127,8,1026,12],[1128,8,1027,12],[1129,8,1028,12],[1129,12,1028,16],[1129,16,1028,20],[1129,17,1028,21,"_heartbeatsCache"],[1129,33,1028,37],[1129,35,1028,39,"heartbeats"],[1129,45,1028,49],[1129,49,1028,53],[1129,53,1028,57],[1129,57,1029,16],[1129,61,1029,20],[1129,62,1029,21,"_heartbeatsCache"],[1129,78,1029,37],[1129,79,1029,38,"heartbeats"],[1129,89,1029,48],[1129,90,1029,49,"length"],[1129,96,1029,55],[1129,101,1029,60],[1129,102,1029,61],[1129,104,1029,63],[1130,10,1030,16],[1130,17,1030,23],[1130,19,1030,25],[1131,8,1031,12],[1132,8,1032,12],[1132,14,1032,18,"date"],[1132,18,1032,22],[1132,21,1032,25,"getUTCDateString"],[1132,37,1032,41],[1132,38,1032,42],[1132,39,1032,43],[1133,8,1033,12],[1134,8,1034,12],[1134,14,1034,18],[1135,10,1034,20,"heartbeatsToSend"],[1135,26,1034,36],[1136,10,1034,38,"unsentEntries"],[1137,8,1034,52],[1137,9,1034,53],[1137,12,1034,56,"extractHeartbeatsForHeader"],[1137,38,1034,82],[1137,39,1034,83],[1137,43,1034,87],[1137,44,1034,88,"_heartbeatsCache"],[1137,60,1034,104],[1137,61,1034,105,"heartbeats"],[1137,71,1034,115],[1137,72,1034,116],[1138,8,1035,12],[1138,14,1035,18,"headerString"],[1138,26,1035,30],[1138,29,1035,33],[1138,33,1035,33,"base64urlEncodeWithoutPadding"],[1138,46,1035,62],[1138,47,1035,62,"base64urlEncodeWithoutPadding"],[1138,76,1035,62],[1138,78,1035,63,"JSON"],[1138,82,1035,67],[1138,83,1035,68,"stringify"],[1138,92,1035,77],[1138,93,1035,78],[1139,10,1035,80,"version"],[1139,17,1035,87],[1139,19,1035,89],[1139,20,1035,90],[1140,10,1035,92,"heartbeats"],[1140,20,1035,102],[1140,22,1035,104,"heartbeatsToSend"],[1141,8,1035,121],[1141,9,1035,122],[1141,10,1035,123],[1141,11,1035,124],[1142,8,1036,12],[1143,8,1037,12],[1143,12,1037,16],[1143,13,1037,17,"_heartbeatsCache"],[1143,29,1037,33],[1143,30,1037,34,"lastSentHeartbeatDate"],[1143,51,1037,55],[1143,54,1037,58,"date"],[1143,58,1037,62],[1144,8,1038,12],[1144,12,1038,16,"unsentEntries"],[1144,25,1038,29],[1144,26,1038,30,"length"],[1144,32,1038,36],[1144,35,1038,39],[1144,36,1038,40],[1144,38,1038,42],[1145,10,1039,16],[1146,10,1040,16],[1146,14,1040,20],[1146,15,1040,21,"_heartbeatsCache"],[1146,31,1040,37],[1146,32,1040,38,"heartbeats"],[1146,42,1040,48],[1146,45,1040,51,"unsentEntries"],[1146,58,1040,64],[1147,10,1041,16],[1148,10,1042,16],[1149,10,1043,16],[1150,10,1044,16],[1150,16,1044,22],[1150,20,1044,26],[1150,21,1044,27,"_storage"],[1150,29,1044,35],[1150,30,1044,36,"overwrite"],[1150,39,1044,45],[1150,40,1044,46],[1150,44,1044,50],[1150,45,1044,51,"_heartbeatsCache"],[1150,61,1044,67],[1150,62,1044,68],[1151,8,1045,12],[1151,9,1045,13],[1151,15,1046,17],[1152,10,1047,16],[1152,14,1047,20],[1152,15,1047,21,"_heartbeatsCache"],[1152,31,1047,37],[1152,32,1047,38,"heartbeats"],[1152,42,1047,48],[1152,45,1047,51],[1152,47,1047,53],[1153,10,1048,16],[1154,10,1049,16],[1154,15,1049,21],[1154,19,1049,25],[1154,20,1049,26,"_storage"],[1154,28,1049,34],[1154,29,1049,35,"overwrite"],[1154,38,1049,44],[1154,39,1049,45],[1154,43,1049,49],[1154,44,1049,50,"_heartbeatsCache"],[1154,60,1049,66],[1154,61,1049,67],[1155,8,1050,12],[1156,8,1051,12],[1156,15,1051,19,"headerString"],[1156,27,1051,31],[1157,6,1052,8],[1157,7,1052,9],[1157,8,1053,8],[1157,15,1053,15,"e"],[1157,16,1053,16],[1157,18,1053,18],[1158,8,1054,12,"logger"],[1158,14,1054,18],[1158,15,1054,19,"warn"],[1158,19,1054,23],[1158,20,1054,24,"e"],[1158,21,1054,25],[1158,22,1054,26],[1159,8,1055,12],[1159,15,1055,19],[1159,17,1055,21],[1160,6,1056,8],[1161,4,1057,4],[1162,2,1058,0],[1163,2,1059,0],[1163,11,1059,9,"getUTCDateString"],[1163,27,1059,25,"getUTCDateString"],[1163,28,1059,25],[1163,30,1059,28],[1164,4,1060,4],[1164,10,1060,10,"today"],[1164,15,1060,15],[1164,18,1060,18],[1164,22,1060,22,"Date"],[1164,26,1060,26],[1164,27,1060,27],[1164,28,1060,28],[1165,4,1061,4],[1166,4,1062,4],[1166,11,1062,11,"today"],[1166,16,1062,16],[1166,17,1062,17,"toISOString"],[1166,28,1062,28],[1166,29,1062,29],[1166,30,1062,30],[1166,31,1062,31,"substring"],[1166,40,1062,40],[1166,41,1062,41],[1166,42,1062,42],[1166,44,1062,44],[1166,46,1062,46],[1166,47,1062,47],[1167,2,1063,0],[1168,2,1064,0],[1168,11,1064,9,"extractHeartbeatsForHeader"],[1168,37,1064,35,"extractHeartbeatsForHeader"],[1168,38,1064,36,"heartbeatsCache"],[1168,53,1064,51],[1168,55,1064,53,"maxSize"],[1168,62,1064,60],[1168,65,1064,63,"MAX_HEADER_BYTES"],[1168,81,1064,79],[1168,83,1064,81],[1169,4,1065,4],[1170,4,1066,4],[1171,4,1067,4],[1171,10,1067,10,"heartbeatsToSend"],[1171,26,1067,26],[1171,29,1067,29],[1171,31,1067,31],[1172,4,1068,4],[1173,4,1069,4],[1173,8,1069,8,"unsentEntries"],[1173,21,1069,21],[1173,24,1069,24,"heartbeatsCache"],[1173,39,1069,39],[1173,40,1069,40,"slice"],[1173,45,1069,45],[1173,46,1069,46],[1173,47,1069,47],[1174,4,1070,4],[1174,9,1070,9],[1174,15,1070,15,"singleDateHeartbeat"],[1174,34,1070,34],[1174,38,1070,38,"heartbeatsCache"],[1174,53,1070,53],[1174,55,1070,55],[1175,6,1071,8],[1176,6,1072,8],[1176,12,1072,14,"heartbeatEntry"],[1176,26,1072,28],[1176,29,1072,31,"heartbeatsToSend"],[1176,45,1072,47],[1176,46,1072,48,"find"],[1176,50,1072,52],[1176,51,1072,53,"hb"],[1176,53,1072,55],[1176,57,1072,59,"hb"],[1176,59,1072,61],[1176,60,1072,62,"agent"],[1176,65,1072,67],[1176,70,1072,72,"singleDateHeartbeat"],[1176,89,1072,91],[1176,90,1072,92,"agent"],[1176,95,1072,97],[1176,96,1072,98],[1177,6,1073,8],[1177,10,1073,12],[1177,11,1073,13,"heartbeatEntry"],[1177,25,1073,27],[1177,27,1073,29],[1178,8,1074,12],[1179,8,1075,12,"heartbeatsToSend"],[1179,24,1075,28],[1179,25,1075,29,"push"],[1179,29,1075,33],[1179,30,1075,34],[1180,10,1076,16,"agent"],[1180,15,1076,21],[1180,17,1076,23,"singleDateHeartbeat"],[1180,36,1076,42],[1180,37,1076,43,"agent"],[1180,42,1076,48],[1181,10,1077,16,"dates"],[1181,15,1077,21],[1181,17,1077,23],[1181,18,1077,24,"singleDateHeartbeat"],[1181,37,1077,43],[1181,38,1077,44,"date"],[1181,42,1077,48],[1182,8,1078,12],[1182,9,1078,13],[1182,10,1078,14],[1183,8,1079,12],[1183,12,1079,16,"countBytes"],[1183,22,1079,26],[1183,23,1079,27,"heartbeatsToSend"],[1183,39,1079,43],[1183,40,1079,44],[1183,43,1079,47,"maxSize"],[1183,50,1079,54],[1183,52,1079,56],[1184,10,1080,16],[1185,10,1081,16],[1186,10,1082,16,"heartbeatsToSend"],[1186,26,1082,32],[1186,27,1082,33,"pop"],[1186,30,1082,36],[1186,31,1082,37],[1186,32,1082,38],[1187,10,1083,16],[1188,8,1084,12],[1189,6,1085,8],[1189,7,1085,9],[1189,13,1086,13],[1190,8,1087,12,"heartbeatEntry"],[1190,22,1087,26],[1190,23,1087,27,"dates"],[1190,28,1087,32],[1190,29,1087,33,"push"],[1190,33,1087,37],[1190,34,1087,38,"singleDateHeartbeat"],[1190,53,1087,57],[1190,54,1087,58,"date"],[1190,58,1087,62],[1190,59,1087,63],[1191,8,1088,12],[1192,8,1089,12],[1193,8,1090,12],[1193,12,1090,16,"countBytes"],[1193,22,1090,26],[1193,23,1090,27,"heartbeatsToSend"],[1193,39,1090,43],[1193,40,1090,44],[1193,43,1090,47,"maxSize"],[1193,50,1090,54],[1193,52,1090,56],[1194,10,1091,16,"heartbeatEntry"],[1194,24,1091,30],[1194,25,1091,31,"dates"],[1194,30,1091,36],[1194,31,1091,37,"pop"],[1194,34,1091,40],[1194,35,1091,41],[1194,36,1091,42],[1195,10,1092,16],[1196,8,1093,12],[1197,6,1094,8],[1198,6,1095,8],[1199,6,1096,8],[1200,6,1097,8,"unsentEntries"],[1200,19,1097,21],[1200,22,1097,24,"unsentEntries"],[1200,35,1097,37],[1200,36,1097,38,"slice"],[1200,41,1097,43],[1200,42,1097,44],[1200,43,1097,45],[1200,44,1097,46],[1201,4,1098,4],[1202,4,1099,4],[1202,11,1099,11],[1203,6,1100,8,"heartbeatsToSend"],[1203,22,1100,24],[1204,6,1101,8,"unsentEntries"],[1205,4,1102,4],[1205,5,1102,5],[1206,2,1103,0],[1207,2,1104,0],[1207,8,1104,6,"HeartbeatStorageImpl"],[1207,28,1104,26],[1207,29,1104,27],[1208,4,1105,4,"constructor"],[1208,15,1105,15,"constructor"],[1208,16,1105,16,"app"],[1208,19,1105,19],[1208,21,1105,21],[1209,6,1106,8],[1209,10,1106,12],[1209,11,1106,13,"app"],[1209,14,1106,16],[1209,17,1106,19,"app"],[1209,20,1106,22],[1210,6,1107,8],[1210,10,1107,12],[1210,11,1107,13,"_canUseIndexedDBPromise"],[1210,34,1107,36],[1210,37,1107,39],[1210,41,1107,43],[1210,42,1107,44,"runIndexedDBEnvironmentCheck"],[1210,70,1107,72],[1210,71,1107,73],[1210,72,1107,74],[1211,4,1108,4],[1212,4,1109,4],[1212,10,1109,10,"runIndexedDBEnvironmentCheck"],[1212,38,1109,38,"runIndexedDBEnvironmentCheck"],[1212,39,1109,38],[1212,41,1109,41],[1213,6,1110,8],[1213,10,1110,12],[1213,11,1110,13],[1213,15,1110,13,"isIndexedDBAvailable"],[1213,28,1110,33],[1213,29,1110,33,"isIndexedDBAvailable"],[1213,49,1110,33],[1213,51,1110,34],[1213,52,1110,35],[1213,54,1110,37],[1214,8,1111,12],[1214,15,1111,19],[1214,20,1111,24],[1215,6,1112,8],[1215,7,1112,9],[1215,13,1113,13],[1216,8,1114,12],[1216,15,1114,19],[1216,19,1114,19,"validateIndexedDBOpenable"],[1216,32,1114,44],[1216,33,1114,44,"validateIndexedDBOpenable"],[1216,58,1114,44],[1216,60,1114,45],[1216,61,1114,46],[1216,62,1115,17,"then"],[1216,66,1115,21],[1216,67,1115,22],[1216,73,1115,28],[1216,77,1115,32],[1216,78,1115,33],[1216,79,1116,17,"catch"],[1216,84,1116,22],[1216,85,1116,23],[1216,91,1116,29],[1216,96,1116,34],[1216,97,1116,35],[1217,6,1117,8],[1218,4,1118,4],[1219,4,1119,4],[1220,0,1120,0],[1221,0,1121,0],[1222,4,1122,4],[1222,10,1122,10,"read"],[1222,14,1122,14,"read"],[1222,15,1122,14],[1222,17,1122,17],[1223,6,1123,8],[1223,12,1123,14,"canUseIndexedDB"],[1223,27,1123,29],[1223,30,1123,32],[1223,36,1123,38],[1223,40,1123,42],[1223,41,1123,43,"_canUseIndexedDBPromise"],[1223,64,1123,66],[1224,6,1124,8],[1224,10,1124,12],[1224,11,1124,13,"canUseIndexedDB"],[1224,26,1124,28],[1224,28,1124,30],[1225,8,1125,12],[1225,15,1125,19],[1226,10,1125,21,"heartbeats"],[1226,20,1125,31],[1226,22,1125,33],[1227,8,1125,36],[1227,9,1125,37],[1228,6,1126,8],[1228,7,1126,9],[1228,13,1127,13],[1229,8,1128,12],[1229,14,1128,18,"idbHeartbeatObject"],[1229,32,1128,36],[1229,35,1128,39],[1229,41,1128,45,"readHeartbeatsFromIndexedDB"],[1229,68,1128,72],[1229,69,1128,73],[1229,73,1128,77],[1229,74,1128,78,"app"],[1229,77,1128,81],[1229,78,1128,82],[1230,8,1129,12],[1230,12,1129,16,"idbHeartbeatObject"],[1230,30,1129,34],[1230,32,1129,36,"heartbeats"],[1230,42,1129,46],[1230,44,1129,48],[1231,10,1130,16],[1231,17,1130,23,"idbHeartbeatObject"],[1231,35,1130,41],[1232,8,1131,12],[1232,9,1131,13],[1232,15,1132,17],[1233,10,1133,16],[1233,17,1133,23],[1234,12,1133,25,"heartbeats"],[1234,22,1133,35],[1234,24,1133,37],[1235,10,1133,40],[1235,11,1133,41],[1236,8,1134,12],[1237,6,1135,8],[1238,4,1136,4],[1239,4,1137,4],[1240,4,1138,4],[1240,10,1138,10,"overwrite"],[1240,19,1138,19,"overwrite"],[1240,20,1138,20,"heartbeatsObject"],[1240,36,1138,36],[1240,38,1138,38],[1241,6,1139,8],[1241,12,1139,14,"canUseIndexedDB"],[1241,27,1139,29],[1241,30,1139,32],[1241,36,1139,38],[1241,40,1139,42],[1241,41,1139,43,"_canUseIndexedDBPromise"],[1241,64,1139,66],[1242,6,1140,8],[1242,10,1140,12],[1242,11,1140,13,"canUseIndexedDB"],[1242,26,1140,28],[1242,28,1140,30],[1243,8,1141,12],[1244,6,1142,8],[1244,7,1142,9],[1244,13,1143,13],[1245,8,1144,12],[1245,14,1144,18,"existingHeartbeatsObject"],[1245,38,1144,42],[1245,41,1144,45],[1245,47,1144,51],[1245,51,1144,55],[1245,52,1144,56,"read"],[1245,56,1144,60],[1245,57,1144,61],[1245,58,1144,62],[1246,8,1145,12],[1246,15,1145,19,"writeHeartbeatsToIndexedDB"],[1246,41,1145,45],[1246,42,1145,46],[1246,46,1145,50],[1246,47,1145,51,"app"],[1246,50,1145,54],[1246,52,1145,56],[1247,10,1146,16,"lastSentHeartbeatDate"],[1247,31,1146,37],[1247,33,1146,39,"heartbeatsObject"],[1247,49,1146,55],[1247,50,1146,56,"lastSentHeartbeatDate"],[1247,71,1146,77],[1247,75,1147,20,"existingHeartbeatsObject"],[1247,99,1147,44],[1247,100,1147,45,"lastSentHeartbeatDate"],[1247,121,1147,66],[1248,10,1148,16,"heartbeats"],[1248,20,1148,26],[1248,22,1148,28,"heartbeatsObject"],[1248,38,1148,44],[1248,39,1148,45,"heartbeats"],[1249,8,1149,12],[1249,9,1149,13],[1249,10,1149,14],[1250,6,1150,8],[1251,4,1151,4],[1252,4,1152,4],[1253,4,1153,4],[1253,10,1153,10,"add"],[1253,13,1153,13,"add"],[1253,14,1153,14,"heartbeatsObject"],[1253,30,1153,30],[1253,32,1153,32],[1254,6,1154,8],[1254,12,1154,14,"canUseIndexedDB"],[1254,27,1154,29],[1254,30,1154,32],[1254,36,1154,38],[1254,40,1154,42],[1254,41,1154,43,"_canUseIndexedDBPromise"],[1254,64,1154,66],[1255,6,1155,8],[1255,10,1155,12],[1255,11,1155,13,"canUseIndexedDB"],[1255,26,1155,28],[1255,28,1155,30],[1256,8,1156,12],[1257,6,1157,8],[1257,7,1157,9],[1257,13,1158,13],[1258,8,1159,12],[1258,14,1159,18,"existingHeartbeatsObject"],[1258,38,1159,42],[1258,41,1159,45],[1258,47,1159,51],[1258,51,1159,55],[1258,52,1159,56,"read"],[1258,56,1159,60],[1258,57,1159,61],[1258,58,1159,62],[1259,8,1160,12],[1259,15,1160,19,"writeHeartbeatsToIndexedDB"],[1259,41,1160,45],[1259,42,1160,46],[1259,46,1160,50],[1259,47,1160,51,"app"],[1259,50,1160,54],[1259,52,1160,56],[1260,10,1161,16,"lastSentHeartbeatDate"],[1260,31,1161,37],[1260,33,1161,39,"heartbeatsObject"],[1260,49,1161,55],[1260,50,1161,56,"lastSentHeartbeatDate"],[1260,71,1161,77],[1260,75,1162,20,"existingHeartbeatsObject"],[1260,99,1162,44],[1260,100,1162,45,"lastSentHeartbeatDate"],[1260,121,1162,66],[1261,10,1163,16,"heartbeats"],[1261,20,1163,26],[1261,22,1163,28],[1261,23,1164,20],[1261,26,1164,23,"existingHeartbeatsObject"],[1261,50,1164,47],[1261,51,1164,48,"heartbeats"],[1261,61,1164,58],[1261,63,1165,20],[1261,66,1165,23,"heartbeatsObject"],[1261,82,1165,39],[1261,83,1165,40,"heartbeats"],[1261,93,1165,50],[1262,8,1167,12],[1262,9,1167,13],[1262,10,1167,14],[1263,6,1168,8],[1264,4,1169,4],[1265,2,1170,0],[1266,2,1171,0],[1267,0,1172,0],[1268,0,1173,0],[1269,0,1174,0],[1270,0,1175,0],[1271,2,1176,0],[1271,11,1176,9,"countBytes"],[1271,21,1176,19,"countBytes"],[1271,22,1176,20,"heartbeatsCache"],[1271,37,1176,35],[1271,39,1176,37],[1272,4,1177,4],[1273,4,1178,4],[1273,11,1178,11],[1273,15,1178,11,"base64urlEncodeWithoutPadding"],[1273,28,1178,40],[1273,29,1178,40,"base64urlEncodeWithoutPadding"],[1273,58,1178,40],[1274,4,1179,4],[1275,4,1180,4,"JSON"],[1275,8,1180,8],[1275,9,1180,9,"stringify"],[1275,18,1180,18],[1275,19,1180,19],[1276,6,1180,21,"version"],[1276,13,1180,28],[1276,15,1180,30],[1276,16,1180,31],[1277,6,1180,33,"heartbeats"],[1277,16,1180,43],[1277,18,1180,45,"heartbeatsCache"],[1278,4,1180,61],[1278,5,1180,62],[1278,6,1180,63],[1278,7,1180,64],[1278,8,1180,65,"length"],[1278,14,1180,71],[1279,2,1181,0],[1280,2,1182,0],[1281,0,1183,0],[1282,0,1184,0],[1283,0,1185,0],[1284,2,1186,0],[1284,11,1186,9,"getEarliestHeartbeatIdx"],[1284,34,1186,32,"getEarliestHeartbeatIdx"],[1284,35,1186,33,"heartbeats"],[1284,45,1186,43],[1284,47,1186,45],[1285,4,1187,4],[1285,8,1187,8,"heartbeats"],[1285,18,1187,18],[1285,19,1187,19,"length"],[1285,25,1187,25],[1285,30,1187,30],[1285,31,1187,31],[1285,33,1187,33],[1286,6,1188,8],[1286,13,1188,15],[1286,14,1188,16],[1286,15,1188,17],[1287,4,1189,4],[1288,4,1190,4],[1288,8,1190,8,"earliestHeartbeatIdx"],[1288,28,1190,28],[1288,31,1190,31],[1288,32,1190,32],[1289,4,1191,4],[1289,8,1191,8,"earliestHeartbeatDate"],[1289,29,1191,29],[1289,32,1191,32,"heartbeats"],[1289,42,1191,42],[1289,43,1191,43],[1289,44,1191,44],[1289,45,1191,45],[1289,46,1191,46,"date"],[1289,50,1191,50],[1290,4,1192,4],[1290,9,1192,9],[1290,13,1192,13,"i"],[1290,14,1192,14],[1290,17,1192,17],[1290,18,1192,18],[1290,20,1192,20,"i"],[1290,21,1192,21],[1290,24,1192,24,"heartbeats"],[1290,34,1192,34],[1290,35,1192,35,"length"],[1290,41,1192,41],[1290,43,1192,43,"i"],[1290,44,1192,44],[1290,46,1192,46],[1290,48,1192,48],[1291,6,1193,8],[1291,10,1193,12,"heartbeats"],[1291,20,1193,22],[1291,21,1193,23,"i"],[1291,22,1193,24],[1291,23,1193,25],[1291,24,1193,26,"date"],[1291,28,1193,30],[1291,31,1193,33,"earliestHeartbeatDate"],[1291,52,1193,54],[1291,54,1193,56],[1292,8,1194,12,"earliestHeartbeatDate"],[1292,29,1194,33],[1292,32,1194,36,"heartbeats"],[1292,42,1194,46],[1292,43,1194,47,"i"],[1292,44,1194,48],[1292,45,1194,49],[1292,46,1194,50,"date"],[1292,50,1194,54],[1293,8,1195,12,"earliestHeartbeatIdx"],[1293,28,1195,32],[1293,31,1195,35,"i"],[1293,32,1195,36],[1294,6,1196,8],[1295,4,1197,4],[1296,4,1198,4],[1296,11,1198,11,"earliestHeartbeatIdx"],[1296,31,1198,31],[1297,2,1199,0],[1299,2,1201,0],[1300,0,1202,0],[1301,0,1203,0],[1302,0,1204,0],[1303,0,1205,0],[1304,0,1206,0],[1305,0,1207,0],[1306,0,1208,0],[1307,0,1209,0],[1308,0,1210,0],[1309,0,1211,0],[1310,0,1212,0],[1311,0,1213,0],[1312,0,1214,0],[1313,0,1215,0],[1314,0,1216,0],[1315,2,1217,0],[1315,11,1217,9,"registerCoreComponents"],[1315,33,1217,31,"registerCoreComponents"],[1315,34,1217,32,"variant"],[1315,41,1217,39],[1315,43,1217,41],[1316,4,1218,4,"_registerComponent"],[1316,22,1218,22],[1316,23,1218,23],[1316,27,1218,27,"Component"],[1316,45,1218,36],[1316,46,1218,36,"Component"],[1316,55,1218,36],[1316,56,1218,37],[1316,73,1218,54],[1316,75,1218,56,"container"],[1316,84,1218,65],[1316,88,1218,69],[1316,92,1218,73,"PlatformLoggerServiceImpl"],[1316,117,1218,98],[1316,118,1218,99,"container"],[1316,127,1218,108],[1316,128,1218,109],[1316,130,1218,111],[1316,139,1218,120],[1316,140,1218,121],[1316,167,1218,148],[1316,168,1218,149],[1316,169,1218,150],[1317,4,1219,4,"_registerComponent"],[1317,22,1219,22],[1317,23,1219,23],[1317,27,1219,27,"Component"],[1317,45,1219,36],[1317,46,1219,36,"Component"],[1317,55,1219,36],[1317,56,1219,37],[1317,67,1219,48],[1317,69,1219,50,"container"],[1317,78,1219,59],[1317,82,1219,63],[1317,86,1219,67,"HeartbeatServiceImpl"],[1317,106,1219,87],[1317,107,1219,88,"container"],[1317,116,1219,97],[1317,117,1219,98],[1317,119,1219,100],[1317,128,1219,109],[1317,129,1219,110],[1317,156,1219,137],[1317,157,1219,138],[1317,158,1219,139],[1318,4,1220,4],[1319,4,1221,4,"registerVersion"],[1319,19,1221,19],[1319,20,1221,20,"name$q"],[1319,26,1221,26],[1319,28,1221,28,"version$1"],[1319,37,1221,37],[1319,39,1221,39,"variant"],[1319,46,1221,46],[1319,47,1221,47],[1320,4,1222,4],[1321,4,1223,4,"registerVersion"],[1321,19,1223,19],[1321,20,1223,20,"name$q"],[1321,26,1223,26],[1321,28,1223,28,"version$1"],[1321,37,1223,37],[1321,39,1223,39],[1321,48,1223,48],[1321,49,1223,49],[1322,4,1224,4],[1323,4,1225,4,"registerVersion"],[1323,19,1225,19],[1323,20,1225,20],[1323,29,1225,29],[1323,31,1225,31],[1323,33,1225,33],[1323,34,1225,34],[1324,2,1226,0],[1326,2,1228,0],[1327,0,1229,0],[1328,0,1230,0],[1329,0,1231,0],[1330,0,1232,0],[1331,0,1233,0],[1332,2,1234,0,"registerCoreComponents"],[1332,24,1234,22],[1332,25,1234,23],[1332,27,1234,25],[1332,28,1234,26],[1333,0,1234,27],[1333,3]],"functionMap":{"names":["<global>","PlatformLoggerServiceImpl","PlatformLoggerServiceImpl#constructor","PlatformLoggerServiceImpl#getPlatformInfoString","providers.map$argument_0","providers.map.filter$argument_0","isVersionServiceProvider","_addComponent","_addOrOverwriteComponent","_registerComponent","_getProvider","_removeServiceInstance","_isFirebaseApp","_isFirebaseServerAppSettings","_isFirebaseServerApp","_clearComponents","FirebaseAppImpl","FirebaseAppImpl#constructor","Component$argument_1","FirebaseAppImpl#get__automaticDataCollectionEnabled","FirebaseAppImpl#set__automaticDataCollectionEnabled","FirebaseAppImpl#get__name","FirebaseAppImpl#get__options","FirebaseAppImpl#get__config","FirebaseAppImpl#get__container","FirebaseAppImpl#get__isDeleted","FirebaseAppImpl#set__isDeleted","FirebaseAppImpl#checkDestroyed","validateTokenTTL","FirebaseServerAppImpl","FirebaseServerAppImpl#constructor","FinalizationRegistry$argument_0","FirebaseServerAppImpl#toJSON","FirebaseServerAppImpl#get__refCount","FirebaseServerAppImpl#incRefCount","FirebaseServerAppImpl#decRefCount","FirebaseServerAppImpl#automaticCleanup","FirebaseServerAppImpl#get__settings","FirebaseServerAppImpl#checkDestroyed","initializeApp","initializeServerApp","hashCode","reduce$argument_0","getApp","getApps","deleteApp","app.container.getProviders.map$argument_0","registerVersion","onLog","setLogLevel","getDbPromise","openDB$argument_2.upgrade","openDB._catch$argument_0","readHeartbeatsFromIndexedDB","writeHeartbeatsToIndexedDB","computeKey","HeartbeatServiceImpl","HeartbeatServiceImpl#constructor","_storage.read.then$argument_0","HeartbeatServiceImpl#triggerHeartbeat","_heartbeatsCache.heartbeats.some$argument_0","HeartbeatServiceImpl#getHeartbeatsHeader","getUTCDateString","extractHeartbeatsForHeader","heartbeatsToSend.find$argument_0","HeartbeatStorageImpl","HeartbeatStorageImpl#constructor","HeartbeatStorageImpl#runIndexedDBEnvironmentCheck","validateIndexedDBOpenable.then$argument_0","validateIndexedDBOpenable.then._catch$argument_0","HeartbeatStorageImpl#read","HeartbeatStorageImpl#overwrite","HeartbeatStorageImpl#add","countBytes","getEarliestHeartbeatIdx","registerCoreComponents"],"mappings":"AAA;ACsB;ICC;KDE;IEG;iBCK;SDQ;oBEC,sBF;KFE;CDC;AMS;CNG;AOqK;CPO;AQK;CRE;ASQ;CTe;AUU;CVQ;AWS;CXE;AYS;CZE;AaS;CbQ;AcS;CdK;AeM;CfE;AgBsD;ICC;yDCQ,UD;KDC;IGC;KHG;IIC;KJG;IKC;KLG;IMC;KNG;IOC;KPG;IQC;KRE;ISC;KTE;IUC;KVE;IWK;KXI;ChBC;A4BqB;C5BiB;A6BC;ICC;kECiC;aDE;KDS;IGC;KHE;IIC;KJE;IKG;KLQ;IME;KNK;IOI;KPE;IQC;KRG;ISK;KTI;C7BC;AuCwB;CvCuC;AwCC;qBCmC;6BCC,wDD;KDC;CxCmB;A2C8B;C3CS;A4CK;C5CE;A6CkB;iBCiB,6BD;C7CG;A+CS;2D7ByB,4B6B;C/CC;AgDQ;ChDK;AiDU;CjDE;AkDsB;qBCG;aDkB;iBEC;SFI;ClDG;AqDC;CrDqB;AsDC;CtDmB;AuDC;CvDE;AwDoB;ICC;iECc;SDG;KDC;IGQ;sDCmB,wDD;KHkB;IKQ;KLmC;CxDC;A8DC;C9DI;A+DC;qDCQ,4CD;C/D+B;AiEC;ICC;KDG;IEC;sBCM,UD;uBEC,WF;KFE;IKI;KLc;IME;KNa;IOE;KPgB;CjEC;AyEM;CzEK;A0EK;C1Ea;A2EkB;wDzDC,qDyD;kDzDC,gDyD;C3EO"},"hasCjsExports":false},"type":"js/module"}]}