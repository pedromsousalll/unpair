{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"ErrorKind\", {\n    enumerable: true,\n    get: function () {\n      return ErrorKind;\n    }\n  });\n  var ErrorKind;\n  (function (ErrorKind) {\n    /** Argument is unclosed (e.g. `{0`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_CLOSING_BRACE\"] = 1] = \"EXPECT_ARGUMENT_CLOSING_BRACE\";\n    /** Argument is empty (e.g. `{}`). */\n    ErrorKind[ErrorKind[\"EMPTY_ARGUMENT\"] = 2] = \"EMPTY_ARGUMENT\";\n    /** Argument is malformed (e.g. `{foo!}``) */\n    ErrorKind[ErrorKind[\"MALFORMED_ARGUMENT\"] = 3] = \"MALFORMED_ARGUMENT\";\n    /** Expect an argument type (e.g. `{foo,}`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_TYPE\"] = 4] = \"EXPECT_ARGUMENT_TYPE\";\n    /** Unsupported argument type (e.g. `{foo,foo}`) */\n    ErrorKind[ErrorKind[\"INVALID_ARGUMENT_TYPE\"] = 5] = \"INVALID_ARGUMENT_TYPE\";\n    /** Expect an argument style (e.g. `{foo, number, }`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_STYLE\"] = 6] = \"EXPECT_ARGUMENT_STYLE\";\n    /** The number skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_NUMBER_SKELETON\"] = 7] = \"INVALID_NUMBER_SKELETON\";\n    /** The date time skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_DATE_TIME_SKELETON\"] = 8] = \"INVALID_DATE_TIME_SKELETON\";\n    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_NUMBER_SKELETON\"] = 9] = \"EXPECT_NUMBER_SKELETON\";\n    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_DATE_TIME_SKELETON\"] = 10] = \"EXPECT_DATE_TIME_SKELETON\";\n    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\"] = 11] = \"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\";\n    /** Missing select argument options (e.g. `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_OPTIONS\"] = 12] = \"EXPECT_SELECT_ARGUMENT_OPTIONS\";\n    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 13] = \"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 14] = \"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR\"] = 15] = \"EXPECT_SELECT_ARGUMENT_SELECTOR\";\n    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR\"] = 16] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR\";\n    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\"] = 17] = \"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\";\n    /**\n     * Expecting a message fragment after the `plural` or `selectordinal` selector\n     * (e.g. `{foo, plural, one}`)\n     */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\"] = 18] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\";\n    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_SELECTOR\"] = 19] = \"INVALID_PLURAL_ARGUMENT_SELECTOR\";\n    /**\n     * Duplicate selectors in `plural` or `selectordinal` argument.\n     * (e.g. {foo, plural, one {#} one {#}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\"] = 20] = \"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\";\n    /** Duplicate selectors in `select` argument.\n     * (e.g. {foo, select, apple {apple} apple {apple}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_SELECT_ARGUMENT_SELECTOR\"] = 21] = \"DUPLICATE_SELECT_ARGUMENT_SELECTOR\";\n    /** Plural or select argument option must have `other` clause. */\n    ErrorKind[ErrorKind[\"MISSING_OTHER_CLAUSE\"] = 22] = \"MISSING_OTHER_CLAUSE\";\n    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */\n    ErrorKind[ErrorKind[\"INVALID_TAG\"] = 23] = \"INVALID_TAG\";\n    /** The tag name is invalid. (e.g. `<123>foo</123>`) */\n    ErrorKind[ErrorKind[\"INVALID_TAG_NAME\"] = 25] = \"INVALID_TAG_NAME\";\n    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */\n    ErrorKind[ErrorKind[\"UNMATCHED_CLOSING_TAG\"] = 26] = \"UNMATCHED_CLOSING_TAG\";\n    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_TAG\"] = 27] = \"UNCLOSED_TAG\";\n  })(ErrorKind || (ErrorKind = {}));\n});","lineCount":76,"map":[[7,2,1,0,"Object"],[7,8,1,0],[7,9,1,0,"defineProperty"],[7,23,1,0],[7,24,1,0,"exports"],[7,31,1,0],[8,4,1,0,"enumerable"],[8,14,1,0],[9,4,1,0,"get"],[9,7,1,0],[9,18,1,0,"get"],[9,19,1,0],[10,6,1,0],[10,13,1,0,"ErrorKind"],[10,22,1,0],[11,4,1,0],[12,2,1,0],[13,2,1,7],[13,6,1,11,"ErrorKind"],[13,15,1,20],[14,2,2,0],[14,3,2,1],[14,13,2,11,"ErrorKind"],[14,22,2,20],[14,24,2,22],[15,4,3,4],[16,4,4,4,"ErrorKind"],[16,13,4,13],[16,14,4,14,"ErrorKind"],[16,23,4,23],[16,24,4,24],[16,55,4,55],[16,56,4,56],[16,59,4,59],[16,60,4,60],[16,61,4,61],[16,64,4,64],[16,95,4,95],[17,4,5,4],[18,4,6,4,"ErrorKind"],[18,13,6,13],[18,14,6,14,"ErrorKind"],[18,23,6,23],[18,24,6,24],[18,40,6,40],[18,41,6,41],[18,44,6,44],[18,45,6,45],[18,46,6,46],[18,49,6,49],[18,65,6,65],[19,4,7,4],[20,4,8,4,"ErrorKind"],[20,13,8,13],[20,14,8,14,"ErrorKind"],[20,23,8,23],[20,24,8,24],[20,44,8,44],[20,45,8,45],[20,48,8,48],[20,49,8,49],[20,50,8,50],[20,53,8,53],[20,73,8,73],[21,4,9,4],[22,4,10,4,"ErrorKind"],[22,13,10,13],[22,14,10,14,"ErrorKind"],[22,23,10,23],[22,24,10,24],[22,46,10,46],[22,47,10,47],[22,50,10,50],[22,51,10,51],[22,52,10,52],[22,55,10,55],[22,77,10,77],[23,4,11,4],[24,4,12,4,"ErrorKind"],[24,13,12,13],[24,14,12,14,"ErrorKind"],[24,23,12,23],[24,24,12,24],[24,47,12,47],[24,48,12,48],[24,51,12,51],[24,52,12,52],[24,53,12,53],[24,56,12,56],[24,79,12,79],[25,4,13,4],[26,4,14,4,"ErrorKind"],[26,13,14,13],[26,14,14,14,"ErrorKind"],[26,23,14,23],[26,24,14,24],[26,47,14,47],[26,48,14,48],[26,51,14,51],[26,52,14,52],[26,53,14,53],[26,56,14,56],[26,79,14,79],[27,4,15,4],[28,4,16,4,"ErrorKind"],[28,13,16,13],[28,14,16,14,"ErrorKind"],[28,23,16,23],[28,24,16,24],[28,49,16,49],[28,50,16,50],[28,53,16,53],[28,54,16,54],[28,55,16,55],[28,58,16,58],[28,83,16,83],[29,4,17,4],[30,4,18,4,"ErrorKind"],[30,13,18,13],[30,14,18,14,"ErrorKind"],[30,23,18,23],[30,24,18,24],[30,52,18,52],[30,53,18,53],[30,56,18,56],[30,57,18,57],[30,58,18,58],[30,61,18,61],[30,89,18,89],[31,4,19,4],[32,4,20,4,"ErrorKind"],[32,13,20,13],[32,14,20,14,"ErrorKind"],[32,23,20,23],[32,24,20,24],[32,48,20,48],[32,49,20,49],[32,52,20,52],[32,53,20,53],[32,54,20,54],[32,57,20,57],[32,81,20,81],[33,4,21,4],[34,4,22,4,"ErrorKind"],[34,13,22,13],[34,14,22,14,"ErrorKind"],[34,23,22,23],[34,24,22,24],[34,51,22,51],[34,52,22,52],[34,55,22,55],[34,57,22,57],[34,58,22,58],[34,61,22,61],[34,88,22,88],[35,4,23,4],[36,4,24,4,"ErrorKind"],[36,13,24,13],[36,14,24,14,"ErrorKind"],[36,23,24,23],[36,24,24,24],[36,58,24,58],[36,59,24,59],[36,62,24,62],[36,64,24,64],[36,65,24,65],[36,68,24,68],[36,102,24,102],[37,4,25,4],[38,4,26,4,"ErrorKind"],[38,13,26,13],[38,14,26,14,"ErrorKind"],[38,23,26,23],[38,24,26,24],[38,56,26,56],[38,57,26,57],[38,60,26,60],[38,62,26,62],[38,63,26,63],[38,66,26,66],[38,98,26,98],[39,4,27,4],[40,4,28,4,"ErrorKind"],[40,13,28,13],[40,14,28,14,"ErrorKind"],[40,23,28,23],[40,24,28,24],[40,61,28,61],[40,62,28,62],[40,65,28,65],[40,67,28,67],[40,68,28,68],[40,71,28,71],[40,108,28,108],[41,4,29,4],[42,4,30,4,"ErrorKind"],[42,13,30,13],[42,14,30,14,"ErrorKind"],[42,23,30,23],[42,24,30,24],[42,62,30,62],[42,63,30,63],[42,66,30,66],[42,68,30,68],[42,69,30,69],[42,72,30,72],[42,110,30,110],[43,4,31,4],[44,4,32,4,"ErrorKind"],[44,13,32,13],[44,14,32,14,"ErrorKind"],[44,23,32,23],[44,24,32,24],[44,57,32,57],[44,58,32,58],[44,61,32,61],[44,63,32,63],[44,64,32,64],[44,67,32,67],[44,100,32,100],[45,4,33,4],[46,4,34,4,"ErrorKind"],[46,13,34,13],[46,14,34,14,"ErrorKind"],[46,23,34,23],[46,24,34,24],[46,57,34,57],[46,58,34,58],[46,61,34,61],[46,63,34,63],[46,64,34,64],[46,67,34,67],[46,100,34,100],[47,4,35,4],[48,4,36,4,"ErrorKind"],[48,13,36,13],[48,14,36,14,"ErrorKind"],[48,23,36,23],[48,24,36,24],[48,66,36,66],[48,67,36,67],[48,70,36,70],[48,72,36,72],[48,73,36,73],[48,76,36,76],[48,118,36,118],[49,4,37,4],[50,0,38,0],[51,0,39,0],[52,0,40,0],[53,4,41,4,"ErrorKind"],[53,13,41,13],[53,14,41,14,"ErrorKind"],[53,23,41,23],[53,24,41,24],[53,66,41,66],[53,67,41,67],[53,70,41,70],[53,72,41,72],[53,73,41,73],[53,76,41,76],[53,118,41,118],[54,4,42,4],[55,4,43,4,"ErrorKind"],[55,13,43,13],[55,14,43,14,"ErrorKind"],[55,23,43,23],[55,24,43,24],[55,58,43,58],[55,59,43,59],[55,62,43,62],[55,64,43,64],[55,65,43,65],[55,68,43,68],[55,102,43,102],[56,4,44,4],[57,0,45,0],[58,0,46,0],[59,0,47,0],[60,4,48,4,"ErrorKind"],[60,13,48,13],[60,14,48,14,"ErrorKind"],[60,23,48,23],[60,24,48,24],[60,60,48,60],[60,61,48,61],[60,64,48,64],[60,66,48,66],[60,67,48,67],[60,70,48,70],[60,106,48,106],[61,4,49,4],[62,0,50,0],[63,0,51,0],[64,4,52,4,"ErrorKind"],[64,13,52,13],[64,14,52,14,"ErrorKind"],[64,23,52,23],[64,24,52,24],[64,60,52,60],[64,61,52,61],[64,64,52,64],[64,66,52,66],[64,67,52,67],[64,70,52,70],[64,106,52,106],[65,4,53,4],[66,4,54,4,"ErrorKind"],[66,13,54,13],[66,14,54,14,"ErrorKind"],[66,23,54,23],[66,24,54,24],[66,46,54,46],[66,47,54,47],[66,50,54,50],[66,52,54,52],[66,53,54,53],[66,56,54,56],[66,78,54,78],[67,4,55,4],[68,4,56,4,"ErrorKind"],[68,13,56,13],[68,14,56,14,"ErrorKind"],[68,23,56,23],[68,24,56,24],[68,37,56,37],[68,38,56,38],[68,41,56,41],[68,43,56,43],[68,44,56,44],[68,47,56,47],[68,60,56,60],[69,4,57,4],[70,4,58,4,"ErrorKind"],[70,13,58,13],[70,14,58,14,"ErrorKind"],[70,23,58,23],[70,24,58,24],[70,42,58,42],[70,43,58,43],[70,46,58,46],[70,48,58,48],[70,49,58,49],[70,52,58,52],[70,70,58,70],[71,4,59,4],[72,4,60,4,"ErrorKind"],[72,13,60,13],[72,14,60,14,"ErrorKind"],[72,23,60,23],[72,24,60,24],[72,47,60,47],[72,48,60,48],[72,51,60,51],[72,53,60,53],[72,54,60,54],[72,57,60,57],[72,80,60,80],[73,4,61,4],[74,4,62,4,"ErrorKind"],[74,13,62,13],[74,14,62,14,"ErrorKind"],[74,23,62,23],[74,24,62,24],[74,38,62,38],[74,39,62,39],[74,42,62,42],[74,44,62,44],[74,45,62,45],[74,48,62,48],[74,62,62,62],[75,2,63,0],[75,3,63,1],[75,5,63,3,"ErrorKind"],[75,14,63,12],[75,19,63,17,"ErrorKind"],[75,28,63,26],[75,31,63,29],[75,32,63,30],[75,33,63,31],[75,34,63,32],[75,35,63,33],[76,0,63,34],[76,3]],"functionMap":{"names":["<global>","<anonymous>"],"mappings":"AAA;CCC;CD6D"},"hasCjsExports":false},"type":"js/module"}]}