{"dependencies":[{"name":"dom-helpers/css","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":34,"index":224},"end":{"line":8,"column":60,"index":250}}],"key":"S+MYX4IIR4lR+pWu24Y3IweIC88=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/offset","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":37,"index":290},"end":{"line":9,"column":66,"index":319}}],"key":"6Xdyo+mO4MlinoIul+Qht8bTdlA=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/position","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":39,"index":361},"end":{"line":10,"column":70,"index":392}}],"key":"UVxqXY9UzzFP8fEp3c6ANVx0c3M=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/scrollLeft","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":41,"index":436},"end":{"line":11,"column":74,"index":469}}],"key":"L8//23nAmq9ilIl47uzsJbFqUhE=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/scrollTop","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":40,"index":512},"end":{"line":12,"column":72,"index":544}}],"key":"/O8Ll3HbfJx4w0OL2Q5sSmZNF4I=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/ownerDocument","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":44,"index":591},"end":{"line":13,"column":80,"index":627}}],"key":"S8clAOZrW49Hy6AG67egOYBbpYs=","exportNames":["*"],"imports":1}},{"name":"dom-helpers/getComputedStyle","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":47,"index":677},"end":{"line":14,"column":86,"index":716}}],"key":"F7zmH+VErC74ABVgttZTH0tYaGU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.calculatePosition = calculatePosition;\n  exports.calculatePositionInternal = calculatePositionInternal;\n  var _css = _interopRequireDefault(require(_dependencyMap[0], \"dom-helpers/css\"));\n  var _offset = _interopRequireDefault(require(_dependencyMap[1], \"dom-helpers/offset\"));\n  var _position = _interopRequireDefault(require(_dependencyMap[2], \"dom-helpers/position\"));\n  var _scrollLeft = _interopRequireDefault(require(_dependencyMap[3], \"dom-helpers/scrollLeft\"));\n  var _scrollTop = _interopRequireDefault(require(_dependencyMap[4], \"dom-helpers/scrollTop\"));\n  var _ownerDocument = _interopRequireDefault(require(_dependencyMap[5], \"dom-helpers/ownerDocument\"));\n  var _getComputedStyle = _interopRequireDefault(require(_dependencyMap[6], \"dom-helpers/getComputedStyle\"));\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  // @ts-nocheck\n  /* eslint @typescript-eslint/no-unused-vars: 2 */\n\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */\n\n  const AXIS = {\n    top: 'top',\n    bottom: 'top',\n    left: 'left',\n    right: 'left'\n  };\n  const FLIPPED_DIRECTION = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left'\n  };\n  const CROSS_AXIS = {\n    top: 'left',\n    left: 'top'\n  };\n  const AXIS_SIZE = {\n    top: 'height',\n    left: 'width'\n  };\n  const PARSED_PLACEMENT_CACHE = {};\n\n  // @ts-ignore\n  let visualViewport = false && window.visualViewport;\n  function getContainerDimensions(containerNode) {\n    let width = 0,\n      height = 0,\n      top = 0,\n      left = 0;\n    let scroll = {};\n    if (containerNode.tagName === 'BODY') {\n      width = (visualViewport === null || visualViewport === void 0 ? void 0 : visualViewport.width) ?? document.documentElement.clientWidth;\n      height = (visualViewport === null || visualViewport === void 0 ? void 0 : visualViewport.height) ?? document.documentElement.clientHeight;\n      scroll.top = (0, _scrollTop.default)((0, _ownerDocument.default)(containerNode).documentElement) || (0, _scrollTop.default)(containerNode);\n      scroll.left = (0, _scrollLeft.default)((0, _ownerDocument.default)(containerNode).documentElement) || (0, _scrollLeft.default)(containerNode);\n    } else {\n      ({\n        width,\n        height,\n        top,\n        left\n      } = (0, _offset.default)(containerNode));\n      scroll.top = (0, _scrollTop.default)(containerNode);\n      scroll.left = (0, _scrollLeft.default)(containerNode);\n    }\n    return {\n      width,\n      height,\n      scroll,\n      top,\n      left\n    };\n  }\n  function getScroll(node) {\n    return {\n      top: node.scrollTop,\n      left: node.scrollLeft,\n      width: node.scrollWidth,\n      height: node.scrollHeight\n    };\n  }\n  function getDelta(axis, offset, size, containerDimensions, padding) {\n    let containerScroll = containerDimensions.scroll[axis];\n    let containerHeight = containerDimensions[AXIS_SIZE[axis]];\n    let startEdgeOffset = offset - padding - containerScroll;\n    let endEdgeOffset = offset + padding - containerScroll + size;\n    if (startEdgeOffset < 0) {\n      return -startEdgeOffset;\n    } else if (endEdgeOffset > containerHeight) {\n      return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);\n    } else {\n      return 0;\n    }\n  }\n  function getMargins(node) {\n    let style = window.getComputedStyle(node);\n    return {\n      top: parseInt(style.marginTop, 10) || 0,\n      bottom: parseInt(style.marginBottom, 10) || 0,\n      left: parseInt(style.marginLeft, 10) || 0,\n      right: parseInt(style.marginRight, 10) || 0\n    };\n  }\n  function parsePlacement(input) {\n    if (PARSED_PLACEMENT_CACHE[input]) {\n      return PARSED_PLACEMENT_CACHE[input];\n    }\n    let [placement, crossPlacement] = input.split(' ');\n    let axis = AXIS[placement] || 'right';\n    let crossAxis = CROSS_AXIS[axis];\n    if (!AXIS[crossPlacement]) {\n      crossPlacement = 'center';\n    }\n    let size = AXIS_SIZE[axis];\n    let crossSize = AXIS_SIZE[crossAxis];\n    PARSED_PLACEMENT_CACHE[input] = {\n      placement,\n      crossPlacement,\n      axis,\n      crossAxis,\n      size,\n      crossSize\n    };\n    return PARSED_PLACEMENT_CACHE[input];\n  }\n  function computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned) {\n    let {\n      placement,\n      crossPlacement,\n      axis,\n      crossAxis,\n      size,\n      crossSize\n    } = placementInfo;\n    let position = {};\n\n    // button position\n    position[crossAxis] = childOffset[crossAxis];\n    if (crossPlacement === 'center') {\n      //  + (button size / 2) - (overlay size / 2)\n      // at this point the overlay center should match the button center\n      position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;\n    } else if (crossPlacement !== crossAxis) {\n      //  + (button size) - (overlay size)\n      // at this point the overlay bottom should match the button bottom\n      position[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];\n    } /* else {\n      the overlay top should match the button top\n      } */\n    // add the crossOffset from props\n    position[crossAxis] += crossOffset;\n\n    // // this is button center position - the overlay size + half of the button to align bottom of overlay with button center\n    // let minViablePosition =\n    //   childOffset[crossAxis] +\n    //   childOffset[crossSize] / 2 -\n    //   overlaySize[crossSize];\n    // // this is button position of center, aligns top of overlay with button center\n    // let maxViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2;\n\n    // // clamp it into the range of the min/max positions\n    // position[crossAxis] = Math.min(\n    //   Math.max(minViablePosition, position[crossAxis]),\n    //   maxViablePosition\n    // );\n\n    // Floor these so the position isn't placed on a partial pixel, only whole pixels. Shouldn't matter if it was floored or ceiled, so chose one.\n    if (placement === axis) {\n      // If the container is positioned (non-static), then we use the container's actual\n      // height, as `bottom` will be relative to this height.  But if the container is static,\n      // then it can only be the `document.body`, and `bottom` will be relative to _its_\n      // container, which should be as large as boundaryDimensions.\n      const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size];\n      position[FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);\n    } else {\n      position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);\n    }\n    return position;\n  }\n  function getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding) {\n    return position.top != null ?\n    // We want the distance between the top of the overlay to the bottom of the boundary\n    Math.max(0, boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top - (\n    // this is the bottom of the boundary\n    containerOffsetWithBoundary.top + position.top) - (\n    // this is the top of the overlay\n    margins.top + margins.bottom + padding) // save additional space for margin and padding\n    ) :\n    // We want the distance between the top of the trigger to the top of the boundary\n    Math.max(0, childOffset.top + containerOffsetWithBoundary.top - (\n    // this is the top of the trigger\n    boundaryDimensions.top + boundaryDimensions.scroll.top) - (\n    // this is the top of the boundary\n    margins.top + margins.bottom + padding) // save additional space for margin and padding\n    );\n  }\n  function getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding, placementInfo) {\n    let {\n      placement,\n      axis,\n      size\n    } = placementInfo;\n    if (placement === axis) {\n      return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n    }\n    return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n  }\n  function calculatePositionInternal(placementInput, childOffset, overlaySize, scrollSize, margins, padding, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, shouldOverlapWithTrigger) {\n    let placementInfo = parsePlacement(placementInput);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    let {\n      size,\n      crossAxis,\n      crossSize,\n      placement,\n      crossPlacement,\n      axis\n    } = placementInfo;\n    let position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n    let isFlipped = false;\n    let normalizedOffset = offset;\n    let space = getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, placementInfo);\n\n    // Check if the scroll size of the overlay is greater than the available space to determine if we need to flip\n    if (flip && scrollSize[size] > space) {\n      let flippedPlacementInfo = parsePlacement(`${FLIPPED_DIRECTION[placement]} ${crossPlacement}`);\n      let flippedPosition = computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n      let flippedSpace = getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, flippedPlacementInfo);\n\n      // If the available space for the flipped position is greater than the original available space, flip.\n      if (flippedSpace > space) {\n        isFlipped = true;\n        placementInfo = flippedPlacementInfo;\n        position = flippedPosition;\n        normalizedOffset = offset;\n      } else {\n        isFlipped = false;\n      }\n    } else {\n      isFlipped = false;\n    }\n    let delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n    position[crossAxis] += delta;\n    let maxHeight = getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding);\n    overlaySize.height = Math.min(overlaySize.height, maxHeight);\n    position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);\n    delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n    position[crossAxis] += delta;\n    let arrowPosition = {};\n    arrowPosition[crossAxis] = childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2;\n    if (shouldOverlapWithTrigger) {\n      position[FLIPPED_DIRECTION[placementInfo.placement]] = position[FLIPPED_DIRECTION[placementInfo.placement]] - childOffset[size];\n    }\n    return {\n      position,\n      maxHeight: maxHeight,\n      arrowOffsetLeft: arrowPosition.left,\n      arrowOffsetTop: arrowPosition.top,\n      placement: placementInfo.placement,\n      isFlipped\n    };\n  }\n\n  /**\n   * Determines where to place the overlay with regards to the target and the position of an optional indicator.\n   */\n  function calculatePosition(opts) {\n    let {\n      placement,\n      targetNode,\n      overlayNode,\n      scrollNode,\n      padding,\n      shouldFlip,\n      boundaryElement,\n      offset,\n      crossOffset,\n      shouldOverlapWithTrigger\n    } = opts;\n    let container = overlayNode.offsetParent || document.body;\n    let isBodyContainer = container.tagName === 'BODY';\n    const containerPositionStyle = window.getComputedStyle(container).position;\n    let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== 'static';\n    let childOffset = isBodyContainer ? (0, _offset.default)(targetNode) : (0, _position.default)(targetNode, container);\n    if (!isBodyContainer) {\n      childOffset.top += parseInt((0, _css.default)(targetNode, 'marginTop'), 10) || 0;\n      childOffset.left += parseInt((0, _css.default)(targetNode, 'marginLeft'), 10) || 0;\n    }\n    let overlaySize = (0, _offset.default)(overlayNode);\n    const matrix = (0, _getComputedStyle.default)(overlayNode).getPropertyValue('transform');\n    const transform = matrix;\n    const regex = /matrix\\((-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+),\\s*(-?\\d*\\.?\\d+)\\)/;\n    const matches = transform.match(regex);\n    let scaleX = 1;\n    let scaleY = 1;\n    if (matches) {\n      scaleX = parseFloat(matches[1]);\n      scaleY = parseFloat(matches[4]);\n      if (!scaleX || !Number.isFinite(scaleX)) {\n        scaleX = 1;\n      }\n      if (!scaleY || !Number.isFinite(scaleY)) {\n        scaleY = 1;\n      }\n    }\n    let margins = getMargins(overlayNode);\n    overlaySize.width += margins.left + margins.right;\n    overlaySize.height += margins.top + margins.bottom;\n    if (scaleX) {\n      overlaySize.width = overlaySize.width / scaleX;\n    }\n    if (scaleY) {\n      overlaySize.height = overlaySize.height / scaleY;\n    }\n    let scrollSize = getScroll(scrollNode);\n    let boundaryDimensions = getContainerDimensions(boundaryElement);\n    let containerOffsetWithBoundary = boundaryElement.tagName === 'BODY' ? (0, _offset.default)(container) : (0, _position.default)(container, boundaryElement);\n    return calculatePositionInternal(placement, childOffset, overlaySize, scrollSize, margins, padding, shouldFlip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, shouldOverlapWithTrigger);\n  }\n});","lineCount":335,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"calculatePosition"],[7,27,6,25],[7,30,6,28,"calculatePosition"],[7,47,6,45],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"calculatePositionInternal"],[8,35,7,33],[8,38,7,36,"calculatePositionInternal"],[8,63,7,61],[9,2,8,0],[9,6,8,4,"_css"],[9,10,8,8],[9,13,8,11,"_interopRequireDefault"],[9,35,8,33],[9,36,8,34,"require"],[9,43,8,41],[9,44,8,41,"_dependencyMap"],[9,58,8,41],[9,80,8,59],[9,81,8,60],[9,82,8,61],[10,2,9,0],[10,6,9,4,"_offset"],[10,13,9,11],[10,16,9,14,"_interopRequireDefault"],[10,38,9,36],[10,39,9,37,"require"],[10,46,9,44],[10,47,9,44,"_dependencyMap"],[10,61,9,44],[10,86,9,65],[10,87,9,66],[10,88,9,67],[11,2,10,0],[11,6,10,4,"_position"],[11,15,10,13],[11,18,10,16,"_interopRequireDefault"],[11,40,10,38],[11,41,10,39,"require"],[11,48,10,46],[11,49,10,46,"_dependencyMap"],[11,63,10,46],[11,90,10,69],[11,91,10,70],[11,92,10,71],[12,2,11,0],[12,6,11,4,"_scrollLeft"],[12,17,11,15],[12,20,11,18,"_interopRequireDefault"],[12,42,11,40],[12,43,11,41,"require"],[12,50,11,48],[12,51,11,48,"_dependencyMap"],[12,65,11,48],[12,94,11,73],[12,95,11,74],[12,96,11,75],[13,2,12,0],[13,6,12,4,"_scrollTop"],[13,16,12,14],[13,19,12,17,"_interopRequireDefault"],[13,41,12,39],[13,42,12,40,"require"],[13,49,12,47],[13,50,12,47,"_dependencyMap"],[13,64,12,47],[13,92,12,71],[13,93,12,72],[13,94,12,73],[14,2,13,0],[14,6,13,4,"_ownerDocument"],[14,20,13,18],[14,23,13,21,"_interopRequireDefault"],[14,45,13,43],[14,46,13,44,"require"],[14,53,13,51],[14,54,13,51,"_dependencyMap"],[14,68,13,51],[14,100,13,79],[14,101,13,80],[14,102,13,81],[15,2,14,0],[15,6,14,4,"_getComputedStyle"],[15,23,14,21],[15,26,14,24,"_interopRequireDefault"],[15,48,14,46],[15,49,14,47,"require"],[15,56,14,54],[15,57,14,54,"_dependencyMap"],[15,71,14,54],[15,106,14,85],[15,107,14,86],[15,108,14,87],[16,2,15,0],[16,11,15,9,"_interopRequireDefault"],[16,33,15,31,"_interopRequireDefault"],[16,34,15,32,"e"],[16,35,15,33],[16,37,15,35],[17,4,15,37],[17,11,15,44,"e"],[17,12,15,45],[17,16,15,49,"e"],[17,17,15,50],[17,18,15,51,"__esModule"],[17,28,15,61],[17,31,15,64,"e"],[17,32,15,65],[17,35,15,68],[18,6,15,70,"default"],[18,13,15,77],[18,15,15,79,"e"],[19,4,15,81],[19,5,15,82],[20,2,15,84],[21,2,16,0],[22,2,17,0],[24,2,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[36,2,31,0],[36,8,31,6,"AXIS"],[36,12,31,10],[36,15,31,13],[37,4,32,2,"top"],[37,7,32,5],[37,9,32,7],[37,14,32,12],[38,4,33,2,"bottom"],[38,10,33,8],[38,12,33,10],[38,17,33,15],[39,4,34,2,"left"],[39,8,34,6],[39,10,34,8],[39,16,34,14],[40,4,35,2,"right"],[40,9,35,7],[40,11,35,9],[41,2,36,0],[41,3,36,1],[42,2,37,0],[42,8,37,6,"FLIPPED_DIRECTION"],[42,25,37,23],[42,28,37,26],[43,4,38,2,"top"],[43,7,38,5],[43,9,38,7],[43,17,38,15],[44,4,39,2,"bottom"],[44,10,39,8],[44,12,39,10],[44,17,39,15],[45,4,40,2,"left"],[45,8,40,6],[45,10,40,8],[45,17,40,15],[46,4,41,2,"right"],[46,9,41,7],[46,11,41,9],[47,2,42,0],[47,3,42,1],[48,2,43,0],[48,8,43,6,"CROSS_AXIS"],[48,18,43,16],[48,21,43,19],[49,4,44,2,"top"],[49,7,44,5],[49,9,44,7],[49,15,44,13],[50,4,45,2,"left"],[50,8,45,6],[50,10,45,8],[51,2,46,0],[51,3,46,1],[52,2,47,0],[52,8,47,6,"AXIS_SIZE"],[52,17,47,15],[52,20,47,18],[53,4,48,2,"top"],[53,7,48,5],[53,9,48,7],[53,17,48,15],[54,4,49,2,"left"],[54,8,49,6],[54,10,49,8],[55,2,50,0],[55,3,50,1],[56,2,51,0],[56,8,51,6,"PARSED_PLACEMENT_CACHE"],[56,30,51,28],[56,33,51,31],[56,34,51,32],[56,35,51,33],[58,2,53,0],[59,2,54,0],[59,6,54,4,"visualViewport"],[59,20,54,18],[59,23,54,21],[59,32,54,54,"window"],[59,38,54,60],[59,39,54,61,"visualViewport"],[59,53,54,75],[60,2,55,0],[60,11,55,9,"getContainerDimensions"],[60,33,55,31,"getContainerDimensions"],[60,34,55,32,"containerNode"],[60,47,55,45],[60,49,55,47],[61,4,56,2],[61,8,56,6,"width"],[61,13,56,11],[61,16,56,14],[61,17,56,15],[62,6,57,4,"height"],[62,12,57,10],[62,15,57,13],[62,16,57,14],[63,6,58,4,"top"],[63,9,58,7],[63,12,58,10],[63,13,58,11],[64,6,59,4,"left"],[64,10,59,8],[64,13,59,11],[64,14,59,12],[65,4,60,2],[65,8,60,6,"scroll"],[65,14,60,12],[65,17,60,15],[65,18,60,16],[65,19,60,17],[66,4,61,2],[66,8,61,6,"containerNode"],[66,21,61,19],[66,22,61,20,"tagName"],[66,29,61,27],[66,34,61,32],[66,40,61,38],[66,42,61,40],[67,6,62,4,"width"],[67,11,62,9],[67,14,62,12],[67,15,62,13,"visualViewport"],[67,29,62,27],[67,34,62,32],[67,38,62,36],[67,42,62,40,"visualViewport"],[67,56,62,54],[67,61,62,59],[67,66,62,64],[67,67,62,65],[67,70,62,68],[67,75,62,73],[67,76,62,74],[67,79,62,77,"visualViewport"],[67,93,62,91],[67,94,62,92,"width"],[67,99,62,97],[67,104,62,102,"document"],[67,112,62,110],[67,113,62,111,"documentElement"],[67,128,62,126],[67,129,62,127,"clientWidth"],[67,140,62,138],[68,6,63,4,"height"],[68,12,63,10],[68,15,63,13],[68,16,63,14,"visualViewport"],[68,30,63,28],[68,35,63,33],[68,39,63,37],[68,43,63,41,"visualViewport"],[68,57,63,55],[68,62,63,60],[68,67,63,65],[68,68,63,66],[68,71,63,69],[68,76,63,74],[68,77,63,75],[68,80,63,78,"visualViewport"],[68,94,63,92],[68,95,63,93,"height"],[68,101,63,99],[68,106,63,104,"document"],[68,114,63,112],[68,115,63,113,"documentElement"],[68,130,63,128],[68,131,63,129,"clientHeight"],[68,143,63,141],[69,6,64,4,"scroll"],[69,12,64,10],[69,13,64,11,"top"],[69,16,64,14],[69,19,64,17],[69,20,64,18],[69,21,64,19],[69,23,64,21,"_scrollTop"],[69,33,64,31],[69,34,64,32,"default"],[69,41,64,39],[69,43,64,41],[69,44,64,42],[69,45,64,43],[69,47,64,45,"_ownerDocument"],[69,61,64,59],[69,62,64,60,"default"],[69,69,64,67],[69,71,64,69,"containerNode"],[69,84,64,82],[69,85,64,83],[69,86,64,84,"documentElement"],[69,101,64,99],[69,102,64,100],[69,106,64,104],[69,107,64,105],[69,108,64,106],[69,110,64,108,"_scrollTop"],[69,120,64,118],[69,121,64,119,"default"],[69,128,64,126],[69,130,64,128,"containerNode"],[69,143,64,141],[69,144,64,142],[70,6,65,4,"scroll"],[70,12,65,10],[70,13,65,11,"left"],[70,17,65,15],[70,20,65,18],[70,21,65,19],[70,22,65,20],[70,24,65,22,"_scrollLeft"],[70,35,65,33],[70,36,65,34,"default"],[70,43,65,41],[70,45,65,43],[70,46,65,44],[70,47,65,45],[70,49,65,47,"_ownerDocument"],[70,63,65,61],[70,64,65,62,"default"],[70,71,65,69],[70,73,65,71,"containerNode"],[70,86,65,84],[70,87,65,85],[70,88,65,86,"documentElement"],[70,103,65,101],[70,104,65,102],[70,108,65,106],[70,109,65,107],[70,110,65,108],[70,112,65,110,"_scrollLeft"],[70,123,65,121],[70,124,65,122,"default"],[70,131,65,129],[70,133,65,131,"containerNode"],[70,146,65,144],[70,147,65,145],[71,4,66,2],[71,5,66,3],[71,11,66,9],[72,6,67,4],[72,7,67,5],[73,8,68,6,"width"],[73,13,68,11],[74,8,69,6,"height"],[74,14,69,12],[75,8,70,6,"top"],[75,11,70,9],[76,8,71,6,"left"],[77,6,72,4],[77,7,72,5],[77,10,72,8],[77,11,72,9],[77,12,72,10],[77,14,72,12,"_offset"],[77,21,72,19],[77,22,72,20,"default"],[77,29,72,27],[77,31,72,29,"containerNode"],[77,44,72,42],[77,45,72,43],[78,6,73,4,"scroll"],[78,12,73,10],[78,13,73,11,"top"],[78,16,73,14],[78,19,73,17],[78,20,73,18],[78,21,73,19],[78,23,73,21,"_scrollTop"],[78,33,73,31],[78,34,73,32,"default"],[78,41,73,39],[78,43,73,41,"containerNode"],[78,56,73,54],[78,57,73,55],[79,6,74,4,"scroll"],[79,12,74,10],[79,13,74,11,"left"],[79,17,74,15],[79,20,74,18],[79,21,74,19],[79,22,74,20],[79,24,74,22,"_scrollLeft"],[79,35,74,33],[79,36,74,34,"default"],[79,43,74,41],[79,45,74,43,"containerNode"],[79,58,74,56],[79,59,74,57],[80,4,75,2],[81,4,76,2],[81,11,76,9],[82,6,77,4,"width"],[82,11,77,9],[83,6,78,4,"height"],[83,12,78,10],[84,6,79,4,"scroll"],[84,12,79,10],[85,6,80,4,"top"],[85,9,80,7],[86,6,81,4,"left"],[87,4,82,2],[87,5,82,3],[88,2,83,0],[89,2,84,0],[89,11,84,9,"getScroll"],[89,20,84,18,"getScroll"],[89,21,84,19,"node"],[89,25,84,23],[89,27,84,25],[90,4,85,2],[90,11,85,9],[91,6,86,4,"top"],[91,9,86,7],[91,11,86,9,"node"],[91,15,86,13],[91,16,86,14,"scrollTop"],[91,25,86,23],[92,6,87,4,"left"],[92,10,87,8],[92,12,87,10,"node"],[92,16,87,14],[92,17,87,15,"scrollLeft"],[92,27,87,25],[93,6,88,4,"width"],[93,11,88,9],[93,13,88,11,"node"],[93,17,88,15],[93,18,88,16,"scrollWidth"],[93,29,88,27],[94,6,89,4,"height"],[94,12,89,10],[94,14,89,12,"node"],[94,18,89,16],[94,19,89,17,"scrollHeight"],[95,4,90,2],[95,5,90,3],[96,2,91,0],[97,2,92,0],[97,11,92,9,"getDelta"],[97,19,92,17,"getDelta"],[97,20,92,18,"axis"],[97,24,92,22],[97,26,92,24,"offset"],[97,32,92,30],[97,34,92,32,"size"],[97,38,92,36],[97,40,92,38,"containerDimensions"],[97,59,92,57],[97,61,92,59,"padding"],[97,68,92,66],[97,70,92,68],[98,4,93,2],[98,8,93,6,"containerScroll"],[98,23,93,21],[98,26,93,24,"containerDimensions"],[98,45,93,43],[98,46,93,44,"scroll"],[98,52,93,50],[98,53,93,51,"axis"],[98,57,93,55],[98,58,93,56],[99,4,94,2],[99,8,94,6,"containerHeight"],[99,23,94,21],[99,26,94,24,"containerDimensions"],[99,45,94,43],[99,46,94,44,"AXIS_SIZE"],[99,55,94,53],[99,56,94,54,"axis"],[99,60,94,58],[99,61,94,59],[99,62,94,60],[100,4,95,2],[100,8,95,6,"startEdgeOffset"],[100,23,95,21],[100,26,95,24,"offset"],[100,32,95,30],[100,35,95,33,"padding"],[100,42,95,40],[100,45,95,43,"containerScroll"],[100,60,95,58],[101,4,96,2],[101,8,96,6,"endEdgeOffset"],[101,21,96,19],[101,24,96,22,"offset"],[101,30,96,28],[101,33,96,31,"padding"],[101,40,96,38],[101,43,96,41,"containerScroll"],[101,58,96,56],[101,61,96,59,"size"],[101,65,96,63],[102,4,97,2],[102,8,97,6,"startEdgeOffset"],[102,23,97,21],[102,26,97,24],[102,27,97,25],[102,29,97,27],[103,6,98,4],[103,13,98,11],[103,14,98,12,"startEdgeOffset"],[103,29,98,27],[104,4,99,2],[104,5,99,3],[104,11,99,9],[104,15,99,13,"endEdgeOffset"],[104,28,99,26],[104,31,99,29,"containerHeight"],[104,46,99,44],[104,48,99,46],[105,6,100,4],[105,13,100,11,"Math"],[105,17,100,15],[105,18,100,16,"max"],[105,21,100,19],[105,22,100,20,"containerHeight"],[105,37,100,35],[105,40,100,38,"endEdgeOffset"],[105,53,100,51],[105,55,100,53],[105,56,100,54,"startEdgeOffset"],[105,71,100,69],[105,72,100,70],[106,4,101,2],[106,5,101,3],[106,11,101,9],[107,6,102,4],[107,13,102,11],[107,14,102,12],[108,4,103,2],[109,2,104,0],[110,2,105,0],[110,11,105,9,"getMargins"],[110,21,105,19,"getMargins"],[110,22,105,20,"node"],[110,26,105,24],[110,28,105,26],[111,4,106,2],[111,8,106,6,"style"],[111,13,106,11],[111,16,106,14,"window"],[111,22,106,20],[111,23,106,21,"getComputedStyle"],[111,39,106,37],[111,40,106,38,"node"],[111,44,106,42],[111,45,106,43],[112,4,107,2],[112,11,107,9],[113,6,108,4,"top"],[113,9,108,7],[113,11,108,9,"parseInt"],[113,19,108,17],[113,20,108,18,"style"],[113,25,108,23],[113,26,108,24,"marginTop"],[113,35,108,33],[113,37,108,35],[113,39,108,37],[113,40,108,38],[113,44,108,42],[113,45,108,43],[114,6,109,4,"bottom"],[114,12,109,10],[114,14,109,12,"parseInt"],[114,22,109,20],[114,23,109,21,"style"],[114,28,109,26],[114,29,109,27,"marginBottom"],[114,41,109,39],[114,43,109,41],[114,45,109,43],[114,46,109,44],[114,50,109,48],[114,51,109,49],[115,6,110,4,"left"],[115,10,110,8],[115,12,110,10,"parseInt"],[115,20,110,18],[115,21,110,19,"style"],[115,26,110,24],[115,27,110,25,"marginLeft"],[115,37,110,35],[115,39,110,37],[115,41,110,39],[115,42,110,40],[115,46,110,44],[115,47,110,45],[116,6,111,4,"right"],[116,11,111,9],[116,13,111,11,"parseInt"],[116,21,111,19],[116,22,111,20,"style"],[116,27,111,25],[116,28,111,26,"marginRight"],[116,39,111,37],[116,41,111,39],[116,43,111,41],[116,44,111,42],[116,48,111,46],[117,4,112,2],[117,5,112,3],[118,2,113,0],[119,2,114,0],[119,11,114,9,"parsePlacement"],[119,25,114,23,"parsePlacement"],[119,26,114,24,"input"],[119,31,114,29],[119,33,114,31],[120,4,115,2],[120,8,115,6,"PARSED_PLACEMENT_CACHE"],[120,30,115,28],[120,31,115,29,"input"],[120,36,115,34],[120,37,115,35],[120,39,115,37],[121,6,116,4],[121,13,116,11,"PARSED_PLACEMENT_CACHE"],[121,35,116,33],[121,36,116,34,"input"],[121,41,116,39],[121,42,116,40],[122,4,117,2],[123,4,118,2],[123,8,118,6],[123,9,118,7,"placement"],[123,18,118,16],[123,20,118,18,"crossPlacement"],[123,34,118,32],[123,35,118,33],[123,38,118,36,"input"],[123,43,118,41],[123,44,118,42,"split"],[123,49,118,47],[123,50,118,48],[123,53,118,51],[123,54,118,52],[124,4,119,2],[124,8,119,6,"axis"],[124,12,119,10],[124,15,119,13,"AXIS"],[124,19,119,17],[124,20,119,18,"placement"],[124,29,119,27],[124,30,119,28],[124,34,119,32],[124,41,119,39],[125,4,120,2],[125,8,120,6,"crossAxis"],[125,17,120,15],[125,20,120,18,"CROSS_AXIS"],[125,30,120,28],[125,31,120,29,"axis"],[125,35,120,33],[125,36,120,34],[126,4,121,2],[126,8,121,6],[126,9,121,7,"AXIS"],[126,13,121,11],[126,14,121,12,"crossPlacement"],[126,28,121,26],[126,29,121,27],[126,31,121,29],[127,6,122,4,"crossPlacement"],[127,20,122,18],[127,23,122,21],[127,31,122,29],[128,4,123,2],[129,4,124,2],[129,8,124,6,"size"],[129,12,124,10],[129,15,124,13,"AXIS_SIZE"],[129,24,124,22],[129,25,124,23,"axis"],[129,29,124,27],[129,30,124,28],[130,4,125,2],[130,8,125,6,"crossSize"],[130,17,125,15],[130,20,125,18,"AXIS_SIZE"],[130,29,125,27],[130,30,125,28,"crossAxis"],[130,39,125,37],[130,40,125,38],[131,4,126,2,"PARSED_PLACEMENT_CACHE"],[131,26,126,24],[131,27,126,25,"input"],[131,32,126,30],[131,33,126,31],[131,36,126,34],[132,6,127,4,"placement"],[132,15,127,13],[133,6,128,4,"crossPlacement"],[133,20,128,18],[134,6,129,4,"axis"],[134,10,129,8],[135,6,130,4,"crossAxis"],[135,15,130,13],[136,6,131,4,"size"],[136,10,131,8],[137,6,132,4,"crossSize"],[138,4,133,2],[138,5,133,3],[139,4,134,2],[139,11,134,9,"PARSED_PLACEMENT_CACHE"],[139,33,134,31],[139,34,134,32,"input"],[139,39,134,37],[139,40,134,38],[140,2,135,0],[141,2,136,0],[141,11,136,9,"computePosition"],[141,26,136,24,"computePosition"],[141,27,136,25,"childOffset"],[141,38,136,36],[141,40,136,38,"boundaryDimensions"],[141,58,136,56],[141,60,136,58,"overlaySize"],[141,71,136,69],[141,73,136,71,"placementInfo"],[141,86,136,84],[141,88,136,86,"offset"],[141,94,136,92],[141,96,136,94,"crossOffset"],[141,107,136,105],[141,109,136,107,"containerOffsetWithBoundary"],[141,136,136,134],[141,138,136,136,"isContainerPositioned"],[141,159,136,157],[141,161,136,159],[142,4,137,2],[142,8,137,6],[143,6,138,4,"placement"],[143,15,138,13],[144,6,139,4,"crossPlacement"],[144,20,139,18],[145,6,140,4,"axis"],[145,10,140,8],[146,6,141,4,"crossAxis"],[146,15,141,13],[147,6,142,4,"size"],[147,10,142,8],[148,6,143,4,"crossSize"],[149,4,144,2],[149,5,144,3],[149,8,144,6,"placementInfo"],[149,21,144,19],[150,4,145,2],[150,8,145,6,"position"],[150,16,145,14],[150,19,145,17],[150,20,145,18],[150,21,145,19],[152,4,147,2],[153,4,148,2,"position"],[153,12,148,10],[153,13,148,11,"crossAxis"],[153,22,148,20],[153,23,148,21],[153,26,148,24,"childOffset"],[153,37,148,35],[153,38,148,36,"crossAxis"],[153,47,148,45],[153,48,148,46],[154,4,149,2],[154,8,149,6,"crossPlacement"],[154,22,149,20],[154,27,149,25],[154,35,149,33],[154,37,149,35],[155,6,150,4],[156,6,151,4],[157,6,152,4,"position"],[157,14,152,12],[157,15,152,13,"crossAxis"],[157,24,152,22],[157,25,152,23],[157,29,152,27],[157,30,152,28,"childOffset"],[157,41,152,39],[157,42,152,40,"crossSize"],[157,51,152,49],[157,52,152,50],[157,55,152,53,"overlaySize"],[157,66,152,64],[157,67,152,65,"crossSize"],[157,76,152,74],[157,77,152,75],[157,81,152,79],[157,82,152,80],[158,4,153,2],[158,5,153,3],[158,11,153,9],[158,15,153,13,"crossPlacement"],[158,29,153,27],[158,34,153,32,"crossAxis"],[158,43,153,41],[158,45,153,43],[159,6,154,4],[160,6,155,4],[161,6,156,4,"position"],[161,14,156,12],[161,15,156,13,"crossAxis"],[161,24,156,22],[161,25,156,23],[161,29,156,27,"childOffset"],[161,40,156,38],[161,41,156,39,"crossSize"],[161,50,156,48],[161,51,156,49],[161,54,156,52,"overlaySize"],[161,65,156,63],[161,66,156,64,"crossSize"],[161,75,156,73],[161,76,156,74],[162,4,157,2],[162,5,157,3],[162,6,157,4],[163,0,158,0],[164,0,159,0],[165,4,160,2],[166,4,161,2,"position"],[166,12,161,10],[166,13,161,11,"crossAxis"],[166,22,161,20],[166,23,161,21],[166,27,161,25,"crossOffset"],[166,38,161,36],[168,4,163,2],[169,4,164,2],[170,4,165,2],[171,4,166,2],[172,4,167,2],[173,4,168,2],[174,4,169,2],[176,4,171,2],[177,4,172,2],[178,4,173,2],[179,4,174,2],[180,4,175,2],[182,4,177,2],[183,4,178,2],[183,8,178,6,"placement"],[183,17,178,15],[183,22,178,20,"axis"],[183,26,178,24],[183,28,178,26],[184,6,179,4],[185,6,180,4],[186,6,181,4],[187,6,182,4],[188,6,183,4],[188,12,183,10,"containerHeight"],[188,27,183,25],[188,30,183,28,"isContainerPositioned"],[188,51,183,49],[188,54,183,52,"containerOffsetWithBoundary"],[188,81,183,79],[188,82,183,80,"size"],[188,86,183,84],[188,87,183,85],[188,90,183,88,"boundaryDimensions"],[188,108,183,106],[188,109,183,107,"size"],[188,113,183,111],[188,114,183,112],[189,6,184,4,"position"],[189,14,184,12],[189,15,184,13,"FLIPPED_DIRECTION"],[189,32,184,30],[189,33,184,31,"axis"],[189,37,184,35],[189,38,184,36],[189,39,184,37],[189,42,184,40,"Math"],[189,46,184,44],[189,47,184,45,"floor"],[189,52,184,50],[189,53,184,51,"containerHeight"],[189,68,184,66],[189,71,184,69,"childOffset"],[189,82,184,80],[189,83,184,81,"axis"],[189,87,184,85],[189,88,184,86],[189,91,184,89,"offset"],[189,97,184,95],[189,98,184,96],[190,4,185,2],[190,5,185,3],[190,11,185,9],[191,6,186,4,"position"],[191,14,186,12],[191,15,186,13,"axis"],[191,19,186,17],[191,20,186,18],[191,23,186,21,"Math"],[191,27,186,25],[191,28,186,26,"floor"],[191,33,186,31],[191,34,186,32,"childOffset"],[191,45,186,43],[191,46,186,44,"axis"],[191,50,186,48],[191,51,186,49],[191,54,186,52,"childOffset"],[191,65,186,63],[191,66,186,64,"size"],[191,70,186,68],[191,71,186,69],[191,74,186,72,"offset"],[191,80,186,78],[191,81,186,79],[192,4,187,2],[193,4,188,2],[193,11,188,9,"position"],[193,19,188,17],[194,2,189,0],[195,2,190,0],[195,11,190,9,"getMaxHeight"],[195,23,190,21,"getMaxHeight"],[195,24,190,22,"position"],[195,32,190,30],[195,34,190,32,"boundaryDimensions"],[195,52,190,50],[195,54,190,52,"containerOffsetWithBoundary"],[195,81,190,79],[195,83,190,81,"childOffset"],[195,94,190,92],[195,96,190,94,"margins"],[195,103,190,101],[195,105,190,103,"padding"],[195,112,190,110],[195,114,190,112],[196,4,191,2],[196,11,191,9,"position"],[196,19,191,17],[196,20,191,18,"top"],[196,23,191,21],[196,27,191,25],[196,31,191,29],[197,4,192,2],[198,4,193,2,"Math"],[198,8,193,6],[198,9,193,7,"max"],[198,12,193,10],[198,13,193,11],[198,14,193,12],[198,16,193,14,"boundaryDimensions"],[198,34,193,32],[198,35,193,33,"height"],[198,41,193,39],[198,44,193,42,"boundaryDimensions"],[198,62,193,60],[198,63,193,61,"top"],[198,66,193,64],[198,69,193,67,"boundaryDimensions"],[198,87,193,85],[198,88,193,86,"scroll"],[198,94,193,92],[198,95,193,93,"top"],[198,98,193,96],[199,4,194,2],[200,4,195,2,"containerOffsetWithBoundary"],[200,31,195,29],[200,32,195,30,"top"],[200,35,195,33],[200,38,195,36,"position"],[200,46,195,44],[200,47,195,45,"top"],[200,50,195,48],[200,51,195,49],[201,4,196,2],[202,4,197,2,"margins"],[202,11,197,9],[202,12,197,10,"top"],[202,15,197,13],[202,18,197,16,"margins"],[202,25,197,23],[202,26,197,24,"bottom"],[202,32,197,30],[202,35,197,33,"padding"],[202,42,197,40],[202,43,197,41],[202,44,197,42],[203,4,198,2],[203,5,198,3],[204,4,199,2],[205,4,200,2,"Math"],[205,8,200,6],[205,9,200,7,"max"],[205,12,200,10],[205,13,200,11],[205,14,200,12],[205,16,200,14,"childOffset"],[205,27,200,25],[205,28,200,26,"top"],[205,31,200,29],[205,34,200,32,"containerOffsetWithBoundary"],[205,61,200,59],[205,62,200,60,"top"],[205,65,200,63],[206,4,201,2],[207,4,202,2,"boundaryDimensions"],[207,22,202,20],[207,23,202,21,"top"],[207,26,202,24],[207,29,202,27,"boundaryDimensions"],[207,47,202,45],[207,48,202,46,"scroll"],[207,54,202,52],[207,55,202,53,"top"],[207,58,202,56],[207,59,202,57],[208,4,203,2],[209,4,204,2,"margins"],[209,11,204,9],[209,12,204,10,"top"],[209,15,204,13],[209,18,204,16,"margins"],[209,25,204,23],[209,26,204,24,"bottom"],[209,32,204,30],[209,35,204,33,"padding"],[209,42,204,40],[209,43,204,41],[209,44,204,42],[210,4,205,2],[210,5,205,3],[211,2,206,0],[212,2,207,0],[212,11,207,9,"getAvailableSpace"],[212,28,207,26,"getAvailableSpace"],[212,29,207,27,"boundaryDimensions"],[212,47,207,45],[212,49,207,47,"containerOffsetWithBoundary"],[212,76,207,74],[212,78,207,76,"childOffset"],[212,89,207,87],[212,91,207,89,"margins"],[212,98,207,96],[212,100,207,98,"padding"],[212,107,207,105],[212,109,207,107,"placementInfo"],[212,122,207,120],[212,124,207,122],[213,4,208,2],[213,8,208,6],[214,6,209,4,"placement"],[214,15,209,13],[215,6,210,4,"axis"],[215,10,210,8],[216,6,211,4,"size"],[217,4,212,2],[217,5,212,3],[217,8,212,6,"placementInfo"],[217,21,212,19],[218,4,213,2],[218,8,213,6,"placement"],[218,17,213,15],[218,22,213,20,"axis"],[218,26,213,24],[218,28,213,26],[219,6,214,4],[219,13,214,11,"Math"],[219,17,214,15],[219,18,214,16,"max"],[219,21,214,19],[219,22,214,20],[219,23,214,21],[219,25,214,23,"childOffset"],[219,36,214,34],[219,37,214,35,"axis"],[219,41,214,39],[219,42,214,40],[219,45,214,43,"boundaryDimensions"],[219,63,214,61],[219,64,214,62,"axis"],[219,68,214,66],[219,69,214,67],[219,72,214,70,"boundaryDimensions"],[219,90,214,88],[219,91,214,89,"scroll"],[219,97,214,95],[219,98,214,96,"axis"],[219,102,214,100],[219,103,214,101],[219,106,214,104,"containerOffsetWithBoundary"],[219,133,214,131],[219,134,214,132,"axis"],[219,138,214,136],[219,139,214,137],[219,142,214,140,"margins"],[219,149,214,147],[219,150,214,148,"axis"],[219,154,214,152],[219,155,214,153],[219,158,214,156,"margins"],[219,165,214,163],[219,166,214,164,"FLIPPED_DIRECTION"],[219,183,214,181],[219,184,214,182,"axis"],[219,188,214,186],[219,189,214,187],[219,190,214,188],[219,193,214,191,"padding"],[219,200,214,198],[219,201,214,199],[220,4,215,2],[221,4,216,2],[221,11,216,9,"Math"],[221,15,216,13],[221,16,216,14,"max"],[221,19,216,17],[221,20,216,18],[221,21,216,19],[221,23,216,21,"boundaryDimensions"],[221,41,216,39],[221,42,216,40,"size"],[221,46,216,44],[221,47,216,45],[221,50,216,48,"boundaryDimensions"],[221,68,216,66],[221,69,216,67,"axis"],[221,73,216,71],[221,74,216,72],[221,77,216,75,"boundaryDimensions"],[221,95,216,93],[221,96,216,94,"scroll"],[221,102,216,100],[221,103,216,101,"axis"],[221,107,216,105],[221,108,216,106],[221,111,216,109,"containerOffsetWithBoundary"],[221,138,216,136],[221,139,216,137,"axis"],[221,143,216,141],[221,144,216,142],[221,147,216,145,"childOffset"],[221,158,216,156],[221,159,216,157,"axis"],[221,163,216,161],[221,164,216,162],[221,167,216,165,"childOffset"],[221,178,216,176],[221,179,216,177,"size"],[221,183,216,181],[221,184,216,182],[221,187,216,185,"margins"],[221,194,216,192],[221,195,216,193,"axis"],[221,199,216,197],[221,200,216,198],[221,203,216,201,"margins"],[221,210,216,208],[221,211,216,209,"FLIPPED_DIRECTION"],[221,228,216,226],[221,229,216,227,"axis"],[221,233,216,231],[221,234,216,232],[221,235,216,233],[221,238,216,236,"padding"],[221,245,216,243],[221,246,216,244],[222,2,217,0],[223,2,218,0],[223,11,218,9,"calculatePositionInternal"],[223,36,218,34,"calculatePositionInternal"],[223,37,218,35,"placementInput"],[223,51,218,49],[223,53,218,51,"childOffset"],[223,64,218,62],[223,66,218,64,"overlaySize"],[223,77,218,75],[223,79,218,77,"scrollSize"],[223,89,218,87],[223,91,218,89,"margins"],[223,98,218,96],[223,100,218,98,"padding"],[223,107,218,105],[223,109,218,107,"flip"],[223,113,218,111],[223,115,218,113,"boundaryDimensions"],[223,133,218,131],[223,135,218,133,"containerOffsetWithBoundary"],[223,162,218,160],[223,164,218,162,"offset"],[223,170,218,168],[223,172,218,170,"crossOffset"],[223,183,218,181],[223,185,218,183,"isContainerPositioned"],[223,206,218,204],[223,208,218,206,"shouldOverlapWithTrigger"],[223,232,218,230],[223,234,218,232],[224,4,219,2],[224,8,219,6,"placementInfo"],[224,21,219,19],[224,24,219,22,"parsePlacement"],[224,38,219,36],[224,39,219,37,"placementInput"],[224,53,219,51],[224,54,219,52],[225,4,220,2],[226,4,221,2],[226,8,221,6],[227,6,222,4,"size"],[227,10,222,8],[228,6,223,4,"crossAxis"],[228,15,223,13],[229,6,224,4,"crossSize"],[229,15,224,13],[230,6,225,4,"placement"],[230,15,225,13],[231,6,226,4,"crossPlacement"],[231,20,226,18],[232,6,227,4,"axis"],[233,4,228,2],[233,5,228,3],[233,8,228,6,"placementInfo"],[233,21,228,19],[234,4,229,2],[234,8,229,6,"position"],[234,16,229,14],[234,19,229,17,"computePosition"],[234,34,229,32],[234,35,229,33,"childOffset"],[234,46,229,44],[234,48,229,46,"boundaryDimensions"],[234,66,229,64],[234,68,229,66,"overlaySize"],[234,79,229,77],[234,81,229,79,"placementInfo"],[234,94,229,92],[234,96,229,94,"offset"],[234,102,229,100],[234,104,229,102,"crossOffset"],[234,115,229,113],[234,117,229,115,"containerOffsetWithBoundary"],[234,144,229,142],[234,146,229,144,"isContainerPositioned"],[234,167,229,165],[234,168,229,166],[235,4,230,2],[235,8,230,6,"isFlipped"],[235,17,230,15],[235,20,230,18],[235,25,230,23],[236,4,231,2],[236,8,231,6,"normalizedOffset"],[236,24,231,22],[236,27,231,25,"offset"],[236,33,231,31],[237,4,232,2],[237,8,232,6,"space"],[237,13,232,11],[237,16,232,14,"getAvailableSpace"],[237,33,232,31],[237,34,232,32,"boundaryDimensions"],[237,52,232,50],[237,54,232,52,"containerOffsetWithBoundary"],[237,81,232,79],[237,83,232,81,"childOffset"],[237,94,232,92],[237,96,232,94,"margins"],[237,103,232,101],[237,105,232,103,"padding"],[237,112,232,110],[237,115,232,113,"offset"],[237,121,232,119],[237,123,232,121,"placementInfo"],[237,136,232,134],[237,137,232,135],[239,4,234,2],[240,4,235,2],[240,8,235,6,"flip"],[240,12,235,10],[240,16,235,14,"scrollSize"],[240,26,235,24],[240,27,235,25,"size"],[240,31,235,29],[240,32,235,30],[240,35,235,33,"space"],[240,40,235,38],[240,42,235,40],[241,6,236,4],[241,10,236,8,"flippedPlacementInfo"],[241,30,236,28],[241,33,236,31,"parsePlacement"],[241,47,236,45],[241,48,236,46],[241,51,236,49,"FLIPPED_DIRECTION"],[241,68,236,66],[241,69,236,67,"placement"],[241,78,236,76],[241,79,236,77],[241,83,236,81,"crossPlacement"],[241,97,236,95],[241,99,236,97],[241,100,236,98],[242,6,237,4],[242,10,237,8,"flippedPosition"],[242,25,237,23],[242,28,237,26,"computePosition"],[242,43,237,41],[242,44,237,42,"childOffset"],[242,55,237,53],[242,57,237,55,"boundaryDimensions"],[242,75,237,73],[242,77,237,75,"overlaySize"],[242,88,237,86],[242,90,237,88,"flippedPlacementInfo"],[242,110,237,108],[242,112,237,110,"offset"],[242,118,237,116],[242,120,237,118,"crossOffset"],[242,131,237,129],[242,133,237,131,"containerOffsetWithBoundary"],[242,160,237,158],[242,162,237,160,"isContainerPositioned"],[242,183,237,181],[242,184,237,182],[243,6,238,4],[243,10,238,8,"flippedSpace"],[243,22,238,20],[243,25,238,23,"getAvailableSpace"],[243,42,238,40],[243,43,238,41,"boundaryDimensions"],[243,61,238,59],[243,63,238,61,"containerOffsetWithBoundary"],[243,90,238,88],[243,92,238,90,"childOffset"],[243,103,238,101],[243,105,238,103,"margins"],[243,112,238,110],[243,114,238,112,"padding"],[243,121,238,119],[243,124,238,122,"offset"],[243,130,238,128],[243,132,238,130,"flippedPlacementInfo"],[243,152,238,150],[243,153,238,151],[245,6,240,4],[246,6,241,4],[246,10,241,8,"flippedSpace"],[246,22,241,20],[246,25,241,23,"space"],[246,30,241,28],[246,32,241,30],[247,8,242,6,"isFlipped"],[247,17,242,15],[247,20,242,18],[247,24,242,22],[248,8,243,6,"placementInfo"],[248,21,243,19],[248,24,243,22,"flippedPlacementInfo"],[248,44,243,42],[249,8,244,6,"position"],[249,16,244,14],[249,19,244,17,"flippedPosition"],[249,34,244,32],[250,8,245,6,"normalizedOffset"],[250,24,245,22],[250,27,245,25,"offset"],[250,33,245,31],[251,6,246,4],[251,7,246,5],[251,13,246,11],[252,8,247,6,"isFlipped"],[252,17,247,15],[252,20,247,18],[252,25,247,23],[253,6,248,4],[254,4,249,2],[254,5,249,3],[254,11,249,9],[255,6,250,4,"isFlipped"],[255,15,250,13],[255,18,250,16],[255,23,250,21],[256,4,251,2],[257,4,252,2],[257,8,252,6,"delta"],[257,13,252,11],[257,16,252,14,"getDelta"],[257,24,252,22],[257,25,252,23,"crossAxis"],[257,34,252,32],[257,36,252,34,"position"],[257,44,252,42],[257,45,252,43,"crossAxis"],[257,54,252,52],[257,55,252,53],[257,57,252,55,"overlaySize"],[257,68,252,66],[257,69,252,67,"crossSize"],[257,78,252,76],[257,79,252,77],[257,81,252,79,"boundaryDimensions"],[257,99,252,97],[257,101,252,99,"padding"],[257,108,252,106],[257,109,252,107],[258,4,253,2,"position"],[258,12,253,10],[258,13,253,11,"crossAxis"],[258,22,253,20],[258,23,253,21],[258,27,253,25,"delta"],[258,32,253,30],[259,4,254,2],[259,8,254,6,"maxHeight"],[259,17,254,15],[259,20,254,18,"getMaxHeight"],[259,32,254,30],[259,33,254,31,"position"],[259,41,254,39],[259,43,254,41,"boundaryDimensions"],[259,61,254,59],[259,63,254,61,"containerOffsetWithBoundary"],[259,90,254,88],[259,92,254,90,"childOffset"],[259,103,254,101],[259,105,254,103,"margins"],[259,112,254,110],[259,114,254,112,"padding"],[259,121,254,119],[259,122,254,120],[260,4,255,2,"overlaySize"],[260,15,255,13],[260,16,255,14,"height"],[260,22,255,20],[260,25,255,23,"Math"],[260,29,255,27],[260,30,255,28,"min"],[260,33,255,31],[260,34,255,32,"overlaySize"],[260,45,255,43],[260,46,255,44,"height"],[260,52,255,50],[260,54,255,52,"maxHeight"],[260,63,255,61],[260,64,255,62],[261,4,256,2,"position"],[261,12,256,10],[261,15,256,13,"computePosition"],[261,30,256,28],[261,31,256,29,"childOffset"],[261,42,256,40],[261,44,256,42,"boundaryDimensions"],[261,62,256,60],[261,64,256,62,"overlaySize"],[261,75,256,73],[261,77,256,75,"placementInfo"],[261,90,256,88],[261,92,256,90,"normalizedOffset"],[261,108,256,106],[261,110,256,108,"crossOffset"],[261,121,256,119],[261,123,256,121,"containerOffsetWithBoundary"],[261,150,256,148],[261,152,256,150,"isContainerPositioned"],[261,173,256,171],[261,174,256,172],[262,4,257,2,"delta"],[262,9,257,7],[262,12,257,10,"getDelta"],[262,20,257,18],[262,21,257,19,"crossAxis"],[262,30,257,28],[262,32,257,30,"position"],[262,40,257,38],[262,41,257,39,"crossAxis"],[262,50,257,48],[262,51,257,49],[262,53,257,51,"overlaySize"],[262,64,257,62],[262,65,257,63,"crossSize"],[262,74,257,72],[262,75,257,73],[262,77,257,75,"boundaryDimensions"],[262,95,257,93],[262,97,257,95,"padding"],[262,104,257,102],[262,105,257,103],[263,4,258,2,"position"],[263,12,258,10],[263,13,258,11,"crossAxis"],[263,22,258,20],[263,23,258,21],[263,27,258,25,"delta"],[263,32,258,30],[264,4,259,2],[264,8,259,6,"arrowPosition"],[264,21,259,19],[264,24,259,22],[264,25,259,23],[264,26,259,24],[265,4,260,2,"arrowPosition"],[265,17,260,15],[265,18,260,16,"crossAxis"],[265,27,260,25],[265,28,260,26],[265,31,260,29,"childOffset"],[265,42,260,40],[265,43,260,41,"crossAxis"],[265,52,260,50],[265,53,260,51],[265,56,260,54,"position"],[265,64,260,62],[265,65,260,63,"crossAxis"],[265,74,260,72],[265,75,260,73],[265,78,260,76,"childOffset"],[265,89,260,87],[265,90,260,88,"crossSize"],[265,99,260,97],[265,100,260,98],[265,103,260,101],[265,104,260,102],[266,4,261,2],[266,8,261,6,"shouldOverlapWithTrigger"],[266,32,261,30],[266,34,261,32],[267,6,262,4,"position"],[267,14,262,12],[267,15,262,13,"FLIPPED_DIRECTION"],[267,32,262,30],[267,33,262,31,"placementInfo"],[267,46,262,44],[267,47,262,45,"placement"],[267,56,262,54],[267,57,262,55],[267,58,262,56],[267,61,262,59,"position"],[267,69,262,67],[267,70,262,68,"FLIPPED_DIRECTION"],[267,87,262,85],[267,88,262,86,"placementInfo"],[267,101,262,99],[267,102,262,100,"placement"],[267,111,262,109],[267,112,262,110],[267,113,262,111],[267,116,262,114,"childOffset"],[267,127,262,125],[267,128,262,126,"size"],[267,132,262,130],[267,133,262,131],[268,4,263,2],[269,4,264,2],[269,11,264,9],[270,6,265,4,"position"],[270,14,265,12],[271,6,266,4,"maxHeight"],[271,15,266,13],[271,17,266,15,"maxHeight"],[271,26,266,24],[272,6,267,4,"arrowOffsetLeft"],[272,21,267,19],[272,23,267,21,"arrowPosition"],[272,36,267,34],[272,37,267,35,"left"],[272,41,267,39],[273,6,268,4,"arrowOffsetTop"],[273,20,268,18],[273,22,268,20,"arrowPosition"],[273,35,268,33],[273,36,268,34,"top"],[273,39,268,37],[274,6,269,4,"placement"],[274,15,269,13],[274,17,269,15,"placementInfo"],[274,30,269,28],[274,31,269,29,"placement"],[274,40,269,38],[275,6,270,4,"isFlipped"],[276,4,271,2],[276,5,271,3],[277,2,272,0],[279,2,274,0],[280,0,275,0],[281,0,276,0],[282,2,277,0],[282,11,277,9,"calculatePosition"],[282,28,277,26,"calculatePosition"],[282,29,277,27,"opts"],[282,33,277,31],[282,35,277,33],[283,4,278,2],[283,8,278,6],[284,6,279,4,"placement"],[284,15,279,13],[285,6,280,4,"targetNode"],[285,16,280,14],[286,6,281,4,"overlayNode"],[286,17,281,15],[287,6,282,4,"scrollNode"],[287,16,282,14],[288,6,283,4,"padding"],[288,13,283,11],[289,6,284,4,"shouldFlip"],[289,16,284,14],[290,6,285,4,"boundaryElement"],[290,21,285,19],[291,6,286,4,"offset"],[291,12,286,10],[292,6,287,4,"crossOffset"],[292,17,287,15],[293,6,288,4,"shouldOverlapWithTrigger"],[294,4,289,2],[294,5,289,3],[294,8,289,6,"opts"],[294,12,289,10],[295,4,290,2],[295,8,290,6,"container"],[295,17,290,15],[295,20,290,18,"overlayNode"],[295,31,290,29],[295,32,290,30,"offsetParent"],[295,44,290,42],[295,48,290,46,"document"],[295,56,290,54],[295,57,290,55,"body"],[295,61,290,59],[296,4,291,2],[296,8,291,6,"isBodyContainer"],[296,23,291,21],[296,26,291,24,"container"],[296,35,291,33],[296,36,291,34,"tagName"],[296,43,291,41],[296,48,291,46],[296,54,291,52],[297,4,292,2],[297,10,292,8,"containerPositionStyle"],[297,32,292,30],[297,35,292,33,"window"],[297,41,292,39],[297,42,292,40,"getComputedStyle"],[297,58,292,56],[297,59,292,57,"container"],[297,68,292,66],[297,69,292,67],[297,70,292,68,"position"],[297,78,292,76],[298,4,293,2],[298,8,293,6,"isContainerPositioned"],[298,29,293,27],[298,32,293,30],[298,33,293,31],[298,34,293,32,"containerPositionStyle"],[298,56,293,54],[298,60,293,58,"containerPositionStyle"],[298,82,293,80],[298,87,293,85],[298,95,293,93],[299,4,294,2],[299,8,294,6,"childOffset"],[299,19,294,17],[299,22,294,20,"isBodyContainer"],[299,37,294,35],[299,40,294,38],[299,41,294,39],[299,42,294,40],[299,44,294,42,"_offset"],[299,51,294,49],[299,52,294,50,"default"],[299,59,294,57],[299,61,294,59,"targetNode"],[299,71,294,69],[299,72,294,70],[299,75,294,73],[299,76,294,74],[299,77,294,75],[299,79,294,77,"_position"],[299,88,294,86],[299,89,294,87,"default"],[299,96,294,94],[299,98,294,96,"targetNode"],[299,108,294,106],[299,110,294,108,"container"],[299,119,294,117],[299,120,294,118],[300,4,295,2],[300,8,295,6],[300,9,295,7,"isBodyContainer"],[300,24,295,22],[300,26,295,24],[301,6,296,4,"childOffset"],[301,17,296,15],[301,18,296,16,"top"],[301,21,296,19],[301,25,296,23,"parseInt"],[301,33,296,31],[301,34,296,32],[301,35,296,33],[301,36,296,34],[301,38,296,36,"_css"],[301,42,296,40],[301,43,296,41,"default"],[301,50,296,48],[301,52,296,50,"targetNode"],[301,62,296,60],[301,64,296,62],[301,75,296,73],[301,76,296,74],[301,78,296,76],[301,80,296,78],[301,81,296,79],[301,85,296,83],[301,86,296,84],[302,6,297,4,"childOffset"],[302,17,297,15],[302,18,297,16,"left"],[302,22,297,20],[302,26,297,24,"parseInt"],[302,34,297,32],[302,35,297,33],[302,36,297,34],[302,37,297,35],[302,39,297,37,"_css"],[302,43,297,41],[302,44,297,42,"default"],[302,51,297,49],[302,53,297,51,"targetNode"],[302,63,297,61],[302,65,297,63],[302,77,297,75],[302,78,297,76],[302,80,297,78],[302,82,297,80],[302,83,297,81],[302,87,297,85],[302,88,297,86],[303,4,298,2],[304,4,299,2],[304,8,299,6,"overlaySize"],[304,19,299,17],[304,22,299,20],[304,23,299,21],[304,24,299,22],[304,26,299,24,"_offset"],[304,33,299,31],[304,34,299,32,"default"],[304,41,299,39],[304,43,299,41,"overlayNode"],[304,54,299,52],[304,55,299,53],[305,4,300,2],[305,10,300,8,"matrix"],[305,16,300,14],[305,19,300,17],[305,20,300,18],[305,21,300,19],[305,23,300,21,"_getComputedStyle"],[305,40,300,38],[305,41,300,39,"default"],[305,48,300,46],[305,50,300,48,"overlayNode"],[305,61,300,59],[305,62,300,60],[305,63,300,61,"getPropertyValue"],[305,79,300,77],[305,80,300,78],[305,91,300,89],[305,92,300,90],[306,4,301,2],[306,10,301,8,"transform"],[306,19,301,17],[306,22,301,20,"matrix"],[306,28,301,26],[307,4,302,2],[307,10,302,8,"regex"],[307,15,302,13],[307,18,302,16],[307,128,302,126],[308,4,303,2],[308,10,303,8,"matches"],[308,17,303,15],[308,20,303,18,"transform"],[308,29,303,27],[308,30,303,28,"match"],[308,35,303,33],[308,36,303,34,"regex"],[308,41,303,39],[308,42,303,40],[309,4,304,2],[309,8,304,6,"scaleX"],[309,14,304,12],[309,17,304,15],[309,18,304,16],[310,4,305,2],[310,8,305,6,"scaleY"],[310,14,305,12],[310,17,305,15],[310,18,305,16],[311,4,306,2],[311,8,306,6,"matches"],[311,15,306,13],[311,17,306,15],[312,6,307,4,"scaleX"],[312,12,307,10],[312,15,307,13,"parseFloat"],[312,25,307,23],[312,26,307,24,"matches"],[312,33,307,31],[312,34,307,32],[312,35,307,33],[312,36,307,34],[312,37,307,35],[313,6,308,4,"scaleY"],[313,12,308,10],[313,15,308,13,"parseFloat"],[313,25,308,23],[313,26,308,24,"matches"],[313,33,308,31],[313,34,308,32],[313,35,308,33],[313,36,308,34],[313,37,308,35],[314,6,309,4],[314,10,309,8],[314,11,309,9,"scaleX"],[314,17,309,15],[314,21,309,19],[314,22,309,20,"Number"],[314,28,309,26],[314,29,309,27,"isFinite"],[314,37,309,35],[314,38,309,36,"scaleX"],[314,44,309,42],[314,45,309,43],[314,47,309,45],[315,8,310,6,"scaleX"],[315,14,310,12],[315,17,310,15],[315,18,310,16],[316,6,311,4],[317,6,312,4],[317,10,312,8],[317,11,312,9,"scaleY"],[317,17,312,15],[317,21,312,19],[317,22,312,20,"Number"],[317,28,312,26],[317,29,312,27,"isFinite"],[317,37,312,35],[317,38,312,36,"scaleY"],[317,44,312,42],[317,45,312,43],[317,47,312,45],[318,8,313,6,"scaleY"],[318,14,313,12],[318,17,313,15],[318,18,313,16],[319,6,314,4],[320,4,315,2],[321,4,316,2],[321,8,316,6,"margins"],[321,15,316,13],[321,18,316,16,"getMargins"],[321,28,316,26],[321,29,316,27,"overlayNode"],[321,40,316,38],[321,41,316,39],[322,4,317,2,"overlaySize"],[322,15,317,13],[322,16,317,14,"width"],[322,21,317,19],[322,25,317,23,"margins"],[322,32,317,30],[322,33,317,31,"left"],[322,37,317,35],[322,40,317,38,"margins"],[322,47,317,45],[322,48,317,46,"right"],[322,53,317,51],[323,4,318,2,"overlaySize"],[323,15,318,13],[323,16,318,14,"height"],[323,22,318,20],[323,26,318,24,"margins"],[323,33,318,31],[323,34,318,32,"top"],[323,37,318,35],[323,40,318,38,"margins"],[323,47,318,45],[323,48,318,46,"bottom"],[323,54,318,52],[324,4,319,2],[324,8,319,6,"scaleX"],[324,14,319,12],[324,16,319,14],[325,6,320,4,"overlaySize"],[325,17,320,15],[325,18,320,16,"width"],[325,23,320,21],[325,26,320,24,"overlaySize"],[325,37,320,35],[325,38,320,36,"width"],[325,43,320,41],[325,46,320,44,"scaleX"],[325,52,320,50],[326,4,321,2],[327,4,322,2],[327,8,322,6,"scaleY"],[327,14,322,12],[327,16,322,14],[328,6,323,4,"overlaySize"],[328,17,323,15],[328,18,323,16,"height"],[328,24,323,22],[328,27,323,25,"overlaySize"],[328,38,323,36],[328,39,323,37,"height"],[328,45,323,43],[328,48,323,46,"scaleY"],[328,54,323,52],[329,4,324,2],[330,4,325,2],[330,8,325,6,"scrollSize"],[330,18,325,16],[330,21,325,19,"getScroll"],[330,30,325,28],[330,31,325,29,"scrollNode"],[330,41,325,39],[330,42,325,40],[331,4,326,2],[331,8,326,6,"boundaryDimensions"],[331,26,326,24],[331,29,326,27,"getContainerDimensions"],[331,51,326,49],[331,52,326,50,"boundaryElement"],[331,67,326,65],[331,68,326,66],[332,4,327,2],[332,8,327,6,"containerOffsetWithBoundary"],[332,35,327,33],[332,38,327,36,"boundaryElement"],[332,53,327,51],[332,54,327,52,"tagName"],[332,61,327,59],[332,66,327,64],[332,72,327,70],[332,75,327,73],[332,76,327,74],[332,77,327,75],[332,79,327,77,"_offset"],[332,86,327,84],[332,87,327,85,"default"],[332,94,327,92],[332,96,327,94,"container"],[332,105,327,103],[332,106,327,104],[332,109,327,107],[332,110,327,108],[332,111,327,109],[332,113,327,111,"_position"],[332,122,327,120],[332,123,327,121,"default"],[332,130,327,128],[332,132,327,130,"container"],[332,141,327,139],[332,143,327,141,"boundaryElement"],[332,158,327,156],[332,159,327,157],[333,4,328,2],[333,11,328,9,"calculatePositionInternal"],[333,36,328,34],[333,37,328,35,"placement"],[333,46,328,44],[333,48,328,46,"childOffset"],[333,59,328,57],[333,61,328,59,"overlaySize"],[333,72,328,70],[333,74,328,72,"scrollSize"],[333,84,328,82],[333,86,328,84,"margins"],[333,93,328,91],[333,95,328,93,"padding"],[333,102,328,100],[333,104,328,102,"shouldFlip"],[333,114,328,112],[333,116,328,114,"boundaryDimensions"],[333,134,328,132],[333,136,328,134,"containerOffsetWithBoundary"],[333,163,328,161],[333,165,328,163,"offset"],[333,171,328,169],[333,173,328,171,"crossOffset"],[333,184,328,182],[333,186,328,184,"isContainerPositioned"],[333,207,328,205],[333,209,328,207,"shouldOverlapWithTrigger"],[333,233,328,231],[333,234,328,232],[334,2,329,0],[335,0,329,1],[335,3]],"functionMap":{"names":["<global>","_interopRequireDefault","getContainerDimensions","getScroll","getDelta","getMargins","parsePlacement","computePosition","getMaxHeight","getAvailableSpace","calculatePositionInternal","calculatePosition"],"mappings":"AAA;ACc,qFD;AEwC;CF4B;AGC;CHO;AIC;CJY;AKC;CLQ;AMC;CNqB;AOC;CPqD;AQC;CRgB;ASC;CTU;AUC;CVsD;AWK;CXoD"},"hasCjsExports":true},"type":"js/module"}]}