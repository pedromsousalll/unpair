{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@react-aria/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":74,"index":74}}],"key":"1YkQy8j1AiEA5UJkjTUYe2TKBMU=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":75},"end":{"line":2,"column":54,"index":129}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":31,"index":161}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-aria/interactions","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":66,"index":228}}],"key":"FcpU6JkYHVe2vVdySmtNP/5zbkQ=","exportNames":["*"],"imports":1}},{"name":"@react-aria/label","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":229},"end":{"line":5,"column":45,"index":274}}],"key":"5wzhdZHdQjf2PCDavajv7B5b+u8=","exportNames":["*"],"imports":1}},{"name":"@react-native-aria/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":275},"end":{"line":6,"column":66,"index":341}}],"key":"ijskzN+IV/diNKTT1BJzRK8qf8I=","exportNames":["*"],"imports":1}},{"name":"./useMove","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":342},"end":{"line":7,"column":36,"index":378}}],"key":"1QtvBFz/7nWHkHHp1/BPdopX/5s=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"groupProps\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useSlider\", {\n    enumerable: true,\n    get: function () {\n      return useSlider;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _reactAriaUtils = require(_dependencyMap[1], \"@react-aria/utils\");\n  var _utils = require(_dependencyMap[2], \"./utils\");\n  var _react = require(_dependencyMap[3], \"react\");\n  var _reactAriaInteractions = require(_dependencyMap[4], \"@react-aria/interactions\");\n  var _reactAriaLabel = require(_dependencyMap[5], \"@react-aria/label\");\n  var _reactNativeAriaUtils = require(_dependencyMap[6], \"@react-native-aria/utils\");\n  var _useMove = require(_dependencyMap[7], \"./useMove\");\n  function useSliderWeb(props, state, trackLayout, isReversed) {\n    let {\n      labelProps,\n      fieldProps\n    } = (0, _reactAriaLabel.useLabel)(props);\n    let isVertical = props.orientation === 'vertical';\n\n    // Attach id of the label to the state so it can be accessed by useSliderThumb.\n    _utils.sliderIds.set(state, labelProps.id ?? fieldProps.id);\n    const direction = (0, _reactNativeAriaUtils.isRTL)() ? 'rtl' : undefined;\n    let {\n      addGlobalListener,\n      removeGlobalListener\n    } = (0, _reactAriaUtils.useGlobalListeners)();\n\n    // When the user clicks or drags the track, we want the motion to set and drag the\n    // closest thumb.  Hence we also need to install useMove() on the track element.\n    // Here, we keep track of which index is the \"closest\" to the drag start point.\n    // It is set onMouseDown/onTouchDown; see trackProps below.\n    const realTimeTrackDraggingIndex = (0, _react.useRef)(null);\n    const stateRef = (0, _react.useRef)(null);\n    stateRef.current = state;\n    const reverseX = isReversed || direction === 'rtl';\n    const currentPosition = (0, _react.useRef)(null);\n    const {\n      moveProps\n    } = (0, _useMove.useMove)({\n      onMoveStart() {\n        currentPosition.current = null;\n      },\n      onMove({\n        deltaX,\n        deltaY\n      }) {\n        let size = isVertical ? trackLayout.height : trackLayout.width;\n        if (currentPosition.current == null) {\n          currentPosition.current = stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) * size;\n        }\n        let delta = isVertical ? deltaY : deltaX;\n        if (reverseX) {\n          if (!isVertical) {\n            delta = -delta;\n          }\n        } else {\n          if (isVertical) {\n            delta = -delta;\n          }\n        }\n        currentPosition.current += delta;\n        if (realTimeTrackDraggingIndex.current != null) {\n          const percent = (0, _reactAriaUtils.clamp)(currentPosition.current / size, 0, 1);\n          stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n        }\n      },\n      onMoveEnd() {\n        if (realTimeTrackDraggingIndex.current != null) {\n          stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n          realTimeTrackDraggingIndex.current = null;\n        }\n      }\n    });\n    let currentPointer = (0, _react.useRef)(undefined);\n    let onDownTrack = (e, id, clientX, clientY) => {\n      // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n      if (!props.isDisabled && state.values.every((_, i) => !state.isThumbDragging(i))) {\n        let size = isVertical ? trackLayout.height : trackLayout.width;\n        // Find the closest thumb\n        const trackPosition = trackLayout[isVertical ? 'top' : 'left'];\n        const clickPosition = isVertical ? clientY : clientX;\n        const offset = clickPosition - trackPosition;\n        let percent = offset / size;\n        if (reverseX) {\n          if (!isVertical) {\n            percent = 1 - percent;\n          }\n        } else {\n          if (isVertical) {\n            percent = 1 - percent;\n          }\n        }\n        let value = state.getPercentValue(percent);\n\n        // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n        let closestThumb;\n        let split = state.values.findIndex(v => value - v < 0);\n        if (split === 0) {\n          // If the index is zero then the closetThumb is the first one\n          closestThumb = split;\n        } else if (split === -1) {\n          // If no index is found they've clicked past all the thumbs\n          closestThumb = state.values.length - 1;\n        } else {\n          let lastLeft = state.values[split - 1];\n          let firstRight = state.values[split];\n          // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n          if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n            closestThumb = split - 1;\n          } else {\n            closestThumb = split;\n          }\n        }\n\n        // Confirm that the found closest thumb is editable, not disabled, and move it\n        if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n          // Don't unfocus anything\n          e.preventDefault();\n          realTimeTrackDraggingIndex.current = closestThumb;\n          state.setFocusedThumb(closestThumb);\n          currentPointer.current = id;\n          state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n          state.setThumbValue(closestThumb, value);\n          addGlobalListener(window, 'mouseup', onUpTrack, false);\n          addGlobalListener(window, 'touchend', onUpTrack, false);\n          addGlobalListener(window, 'pointerup', onUpTrack, false);\n        } else {\n          realTimeTrackDraggingIndex.current = null;\n        }\n      }\n    };\n    let onUpTrack = e => {\n      var _e$changedTouches;\n      let id = e.pointerId ?? ((_e$changedTouches = e.changedTouches) === null || _e$changedTouches === void 0 ? void 0 : _e$changedTouches[0].identifier);\n      if (id === currentPointer.current) {\n        if (realTimeTrackDraggingIndex.current != null) {\n          state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n          realTimeTrackDraggingIndex.current = null;\n        }\n        removeGlobalListener(window, 'mouseup', onUpTrack, false);\n        removeGlobalListener(window, 'touchend', onUpTrack, false);\n        removeGlobalListener(window, 'pointerup', onUpTrack, false);\n      }\n    };\n\n    //@ts-ignore\n    if (labelProps.htmlFor !== undefined) {\n      // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n      // causes this to override the `aria-labelledby` on the thumb. This causes the first\n      // thumb to only be announced as the slider label rather than its individual name as well.\n      // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n      //@ts-ignore\n      delete labelProps.htmlFor;\n      labelProps.onClick = () => {\n        var _document$getElementB;\n        // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n        // so do it manually. In addition, make sure we show the focus ring.\n        (_document$getElementB = document.getElementById((0, _utils.getSliderThumbId)(state, 0))) === null || _document$getElementB === void 0 || _document$getElementB.focus();\n        (0, _reactAriaInteractions.setInteractionModality)('keyboard');\n      };\n    }\n    return {\n      labelProps,\n      // The root element of the Slider will have role=\"group\" to group together\n      // all the thumb inputs in the Slider.  The label of the Slider will\n      // be used to label the group.\n      groupProps: Object.assign({\n        role: 'group'\n      }, fieldProps),\n      trackProps: (0, _reactAriaUtils.mergeProps)({\n        onMouseDown(e) {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDownTrack(e, undefined, e.clientX, e.clientY);\n        },\n        onPointerDown(e) {\n          if (e.pointerType === 'mouse' && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) {\n            return;\n          }\n          onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n        },\n        onTouchStart(e) {\n          onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        }\n      }, moveProps),\n      outputProps: {\n        'htmlFor': state.values.map((_, index) => (0, _utils.getSliderThumbId)(state, index)).join(' '),\n        'aria-live': 'off'\n      }\n    };\n  }\n  const useSlider = (props, state, ref, isReversed) => {\n    let _useSliderWeb = useSliderWeb(props, state, ref, isReversed),\n      {\n        groupProps: webGroupProps\n      } = _useSliderWeb,\n      rest = (0, _objectWithoutPropertiesLoose.default)(_useSliderWeb, _excluded);\n    let groupProps = (0, _reactNativeAriaUtils.mapDomPropsToRN)(webGroupProps);\n    let labelProps = (0, _reactNativeAriaUtils.mapDomPropsToRN)(rest.labelProps);\n    return Object.assign({\n      groupProps\n    }, rest, {\n      labelProps\n    });\n  };\n});","lineCount":222,"map":[[13,2,189,0,"Object"],[13,8,189,0],[13,9,189,0,"defineProperty"],[13,23,189,0],[13,24,189,0,"exports"],[13,31,189,0],[14,4,189,0,"enumerable"],[14,14,189,0],[15,4,189,0,"get"],[15,7,189,0],[15,18,189,0,"get"],[15,19,189,0],[16,6,189,0],[16,13,189,0,"useSlider"],[16,22,189,0],[17,4,189,0],[18,2,189,0],[19,2,201,2],[19,6,201,2,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[19,54,201,2],[19,57,201,2,"require"],[19,64,201,2],[19,65,201,2,"_dependencyMap"],[19,79,201,2],[20,2,201,2],[20,6,201,2,"_objectWithoutPropertiesLoose"],[20,35,201,2],[20,38,201,2,"_interopDefault"],[20,53,201,2],[20,54,201,2,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[20,102,201,2],[21,2,1,0],[21,6,1,0,"_reactAriaUtils"],[21,21,1,0],[21,24,1,0,"require"],[21,31,1,0],[21,32,1,0,"_dependencyMap"],[21,46,1,0],[22,2,2,0],[22,6,2,0,"_utils"],[22,12,2,0],[22,15,2,0,"require"],[22,22,2,0],[22,23,2,0,"_dependencyMap"],[22,37,2,0],[23,2,3,0],[23,6,3,0,"_react"],[23,12,3,0],[23,15,3,0,"require"],[23,22,3,0],[23,23,3,0,"_dependencyMap"],[23,37,3,0],[24,2,4,0],[24,6,4,0,"_reactAriaInteractions"],[24,28,4,0],[24,31,4,0,"require"],[24,38,4,0],[24,39,4,0,"_dependencyMap"],[24,53,4,0],[25,2,5,0],[25,6,5,0,"_reactAriaLabel"],[25,21,5,0],[25,24,5,0,"require"],[25,31,5,0],[25,32,5,0,"_dependencyMap"],[25,46,5,0],[26,2,6,0],[26,6,6,0,"_reactNativeAriaUtils"],[26,27,6,0],[26,30,6,0,"require"],[26,37,6,0],[26,38,6,0,"_dependencyMap"],[26,52,6,0],[27,2,7,0],[27,6,7,0,"_useMove"],[27,14,7,0],[27,17,7,0,"require"],[27,24,7,0],[27,25,7,0,"_dependencyMap"],[27,39,7,0],[28,2,8,0],[28,11,8,9,"useSliderWeb"],[28,23,8,21,"useSliderWeb"],[28,24,8,22,"props"],[28,29,8,27],[28,31,8,29,"state"],[28,36,8,34],[28,38,8,36,"trackLayout"],[28,49,8,47],[28,51,8,49,"isReversed"],[28,61,8,59],[28,63,8,61],[29,4,9,2],[29,8,9,6],[30,6,10,4,"labelProps"],[30,16,10,14],[31,6,11,4,"fieldProps"],[32,4,12,2],[32,5,12,3],[32,8,12,6],[32,12,12,6,"useLabel"],[32,27,12,14],[32,28,12,14,"useLabel"],[32,36,12,14],[32,38,12,15,"props"],[32,43,12,20],[32,44,12,21],[33,4,13,2],[33,8,13,6,"isVertical"],[33,18,13,16],[33,21,13,19,"props"],[33,26,13,24],[33,27,13,25,"orientation"],[33,38,13,36],[33,43,13,41],[33,53,13,51],[35,4,15,2],[36,4,16,2,"sliderIds"],[36,10,16,11],[36,11,16,11,"sliderIds"],[36,20,16,11],[36,21,16,12,"set"],[36,24,16,15],[36,25,16,16,"state"],[36,30,16,21],[36,32,16,23,"labelProps"],[36,42,16,33],[36,43,16,34,"id"],[36,45,16,36],[36,49,16,40,"fieldProps"],[36,59,16,50],[36,60,16,51,"id"],[36,62,16,53],[36,63,16,54],[37,4,17,2],[37,10,17,8,"direction"],[37,19,17,17],[37,22,17,20],[37,26,17,20,"isRTL"],[37,47,17,25],[37,48,17,25,"isRTL"],[37,53,17,25],[37,55,17,26],[37,56,17,27],[37,59,17,30],[37,64,17,35],[37,67,17,38,"undefined"],[37,76,17,47],[38,4,18,2],[38,8,18,6],[39,6,19,4,"addGlobalListener"],[39,23,19,21],[40,6,20,4,"removeGlobalListener"],[41,4,21,2],[41,5,21,3],[41,8,21,6],[41,12,21,6,"useGlobalListeners"],[41,27,21,24],[41,28,21,24,"useGlobalListeners"],[41,46,21,24],[41,48,21,25],[41,49,21,26],[43,4,23,2],[44,4,24,2],[45,4,25,2],[46,4,26,2],[47,4,27,2],[47,10,27,8,"realTimeTrackDraggingIndex"],[47,36,27,34],[47,39,27,37],[47,43,27,37,"useRef"],[47,49,27,43],[47,50,27,43,"useRef"],[47,56,27,43],[47,58,27,44],[47,62,27,48],[47,63,27,49],[48,4,28,2],[48,10,28,8,"stateRef"],[48,18,28,16],[48,21,28,19],[48,25,28,19,"useRef"],[48,31,28,25],[48,32,28,25,"useRef"],[48,38,28,25],[48,40,28,26],[48,44,28,30],[48,45,28,31],[49,4,29,2,"stateRef"],[49,12,29,10],[49,13,29,11,"current"],[49,20,29,18],[49,23,29,21,"state"],[49,28,29,26],[50,4,30,2],[50,10,30,8,"reverseX"],[50,18,30,16],[50,21,30,19,"isReversed"],[50,31,30,29],[50,35,30,33,"direction"],[50,44,30,42],[50,49,30,47],[50,54,30,52],[51,4,31,2],[51,10,31,8,"currentPosition"],[51,25,31,23],[51,28,31,26],[51,32,31,26,"useRef"],[51,38,31,32],[51,39,31,32,"useRef"],[51,45,31,32],[51,47,31,33],[51,51,31,37],[51,52,31,38],[52,4,32,2],[52,10,32,8],[53,6,33,4,"moveProps"],[54,4,34,2],[54,5,34,3],[54,8,34,6],[54,12,34,6,"useMove"],[54,20,34,13],[54,21,34,13,"useMove"],[54,28,34,13],[54,30,34,14],[55,6,35,4,"onMoveStart"],[55,17,35,15,"onMoveStart"],[55,18,35,15],[55,20,35,18],[56,8,36,6,"currentPosition"],[56,23,36,21],[56,24,36,22,"current"],[56,31,36,29],[56,34,36,32],[56,38,36,36],[57,6,37,4],[57,7,37,5],[58,6,38,4,"onMove"],[58,12,38,10,"onMove"],[58,13,38,11],[59,8,39,6,"deltaX"],[59,14,39,12],[60,8,40,6,"deltaY"],[61,6,41,4],[61,7,41,5],[61,9,41,7],[62,8,42,6],[62,12,42,10,"size"],[62,16,42,14],[62,19,42,17,"isVertical"],[62,29,42,27],[62,32,42,30,"trackLayout"],[62,43,42,41],[62,44,42,42,"height"],[62,50,42,48],[62,53,42,51,"trackLayout"],[62,64,42,62],[62,65,42,63,"width"],[62,70,42,68],[63,8,43,6],[63,12,43,10,"currentPosition"],[63,27,43,25],[63,28,43,26,"current"],[63,35,43,33],[63,39,43,37],[63,43,43,41],[63,45,43,43],[64,10,44,8,"currentPosition"],[64,25,44,23],[64,26,44,24,"current"],[64,33,44,31],[64,36,44,34,"stateRef"],[64,44,44,42],[64,45,44,43,"current"],[64,52,44,50],[64,53,44,51,"getThumbPercent"],[64,68,44,66],[64,69,44,67,"realTimeTrackDraggingIndex"],[64,95,44,93],[64,96,44,94,"current"],[64,103,44,101],[64,104,44,102],[64,107,44,105,"size"],[64,111,44,109],[65,8,45,6],[66,8,46,6],[66,12,46,10,"delta"],[66,17,46,15],[66,20,46,18,"isVertical"],[66,30,46,28],[66,33,46,31,"deltaY"],[66,39,46,37],[66,42,46,40,"deltaX"],[66,48,46,46],[67,8,47,6],[67,12,47,10,"reverseX"],[67,20,47,18],[67,22,47,20],[68,10,48,8],[68,14,48,12],[68,15,48,13,"isVertical"],[68,25,48,23],[68,27,48,25],[69,12,49,10,"delta"],[69,17,49,15],[69,20,49,18],[69,21,49,19,"delta"],[69,26,49,24],[70,10,50,8],[71,8,51,6],[71,9,51,7],[71,15,51,13],[72,10,52,8],[72,14,52,12,"isVertical"],[72,24,52,22],[72,26,52,24],[73,12,53,10,"delta"],[73,17,53,15],[73,20,53,18],[73,21,53,19,"delta"],[73,26,53,24],[74,10,54,8],[75,8,55,6],[76,8,56,6,"currentPosition"],[76,23,56,21],[76,24,56,22,"current"],[76,31,56,29],[76,35,56,33,"delta"],[76,40,56,38],[77,8,57,6],[77,12,57,10,"realTimeTrackDraggingIndex"],[77,38,57,36],[77,39,57,37,"current"],[77,46,57,44],[77,50,57,48],[77,54,57,52],[77,56,57,54],[78,10,58,8],[78,16,58,14,"percent"],[78,23,58,21],[78,26,58,24],[78,30,58,24,"clamp"],[78,45,58,29],[78,46,58,29,"clamp"],[78,51,58,29],[78,53,58,30,"currentPosition"],[78,68,58,45],[78,69,58,46,"current"],[78,76,58,53],[78,79,58,56,"size"],[78,83,58,60],[78,85,58,62],[78,86,58,63],[78,88,58,65],[78,89,58,66],[78,90,58,67],[79,10,59,8,"stateRef"],[79,18,59,16],[79,19,59,17,"current"],[79,26,59,24],[79,27,59,25,"setThumbPercent"],[79,42,59,40],[79,43,59,41,"realTimeTrackDraggingIndex"],[79,69,59,67],[79,70,59,68,"current"],[79,77,59,75],[79,79,59,77,"percent"],[79,86,59,84],[79,87,59,85],[80,8,60,6],[81,6,61,4],[81,7,61,5],[82,6,62,4,"onMoveEnd"],[82,15,62,13,"onMoveEnd"],[82,16,62,13],[82,18,62,16],[83,8,63,6],[83,12,63,10,"realTimeTrackDraggingIndex"],[83,38,63,36],[83,39,63,37,"current"],[83,46,63,44],[83,50,63,48],[83,54,63,52],[83,56,63,54],[84,10,64,8,"stateRef"],[84,18,64,16],[84,19,64,17,"current"],[84,26,64,24],[84,27,64,25,"setThumbDragging"],[84,43,64,41],[84,44,64,42,"realTimeTrackDraggingIndex"],[84,70,64,68],[84,71,64,69,"current"],[84,78,64,76],[84,80,64,78],[84,85,64,83],[84,86,64,84],[85,10,65,8,"realTimeTrackDraggingIndex"],[85,36,65,34],[85,37,65,35,"current"],[85,44,65,42],[85,47,65,45],[85,51,65,49],[86,8,66,6],[87,6,67,4],[88,4,68,2],[88,5,68,3],[88,6,68,4],[89,4,69,2],[89,8,69,6,"currentPointer"],[89,22,69,20],[89,25,69,23],[89,29,69,23,"useRef"],[89,35,69,29],[89,36,69,29,"useRef"],[89,42,69,29],[89,44,69,30,"undefined"],[89,53,69,39],[89,54,69,40],[90,4,70,2],[90,8,70,6,"onDownTrack"],[90,19,70,17],[90,22,70,20,"onDownTrack"],[90,23,70,21,"e"],[90,24,70,22],[90,26,70,24,"id"],[90,28,70,26],[90,30,70,28,"clientX"],[90,37,70,35],[90,39,70,37,"clientY"],[90,46,70,44],[90,51,70,49],[91,6,71,4],[92,6,72,4],[92,10,72,8],[92,11,72,9,"props"],[92,16,72,14],[92,17,72,15,"isDisabled"],[92,27,72,25],[92,31,72,29,"state"],[92,36,72,34],[92,37,72,35,"values"],[92,43,72,41],[92,44,72,42,"every"],[92,49,72,47],[92,50,72,48],[92,51,72,49,"_"],[92,52,72,50],[92,54,72,52,"i"],[92,55,72,53],[92,60,72,58],[92,61,72,59,"state"],[92,66,72,64],[92,67,72,65,"isThumbDragging"],[92,82,72,80],[92,83,72,81,"i"],[92,84,72,82],[92,85,72,83],[92,86,72,84],[92,88,72,86],[93,8,73,6],[93,12,73,10,"size"],[93,16,73,14],[93,19,73,17,"isVertical"],[93,29,73,27],[93,32,73,30,"trackLayout"],[93,43,73,41],[93,44,73,42,"height"],[93,50,73,48],[93,53,73,51,"trackLayout"],[93,64,73,62],[93,65,73,63,"width"],[93,70,73,68],[94,8,74,6],[95,8,75,6],[95,14,75,12,"trackPosition"],[95,27,75,25],[95,30,75,28,"trackLayout"],[95,41,75,39],[95,42,75,40,"isVertical"],[95,52,75,50],[95,55,75,53],[95,60,75,58],[95,63,75,61],[95,69,75,67],[95,70,75,68],[96,8,76,6],[96,14,76,12,"clickPosition"],[96,27,76,25],[96,30,76,28,"isVertical"],[96,40,76,38],[96,43,76,41,"clientY"],[96,50,76,48],[96,53,76,51,"clientX"],[96,60,76,58],[97,8,77,6],[97,14,77,12,"offset"],[97,20,77,18],[97,23,77,21,"clickPosition"],[97,36,77,34],[97,39,77,37,"trackPosition"],[97,52,77,50],[98,8,78,6],[98,12,78,10,"percent"],[98,19,78,17],[98,22,78,20,"offset"],[98,28,78,26],[98,31,78,29,"size"],[98,35,78,33],[99,8,79,6],[99,12,79,10,"reverseX"],[99,20,79,18],[99,22,79,20],[100,10,80,8],[100,14,80,12],[100,15,80,13,"isVertical"],[100,25,80,23],[100,27,80,25],[101,12,81,10,"percent"],[101,19,81,17],[101,22,81,20],[101,23,81,21],[101,26,81,24,"percent"],[101,33,81,31],[102,10,82,8],[103,8,83,6],[103,9,83,7],[103,15,83,13],[104,10,84,8],[104,14,84,12,"isVertical"],[104,24,84,22],[104,26,84,24],[105,12,85,10,"percent"],[105,19,85,17],[105,22,85,20],[105,23,85,21],[105,26,85,24,"percent"],[105,33,85,31],[106,10,86,8],[107,8,87,6],[108,8,88,6],[108,12,88,10,"value"],[108,17,88,15],[108,20,88,18,"state"],[108,25,88,23],[108,26,88,24,"getPercentValue"],[108,41,88,39],[108,42,88,40,"percent"],[108,49,88,47],[108,50,88,48],[110,8,90,6],[111,8,91,6],[111,12,91,10,"closestThumb"],[111,24,91,22],[112,8,92,6],[112,12,92,10,"split"],[112,17,92,15],[112,20,92,18,"state"],[112,25,92,23],[112,26,92,24,"values"],[112,32,92,30],[112,33,92,31,"findIndex"],[112,42,92,40],[112,43,92,41,"v"],[112,44,92,42],[112,48,92,46,"value"],[112,53,92,51],[112,56,92,54,"v"],[112,57,92,55],[112,60,92,58],[112,61,92,59],[112,62,92,60],[113,8,93,6],[113,12,93,10,"split"],[113,17,93,15],[113,22,93,20],[113,23,93,21],[113,25,93,23],[114,10,94,8],[115,10,95,8,"closestThumb"],[115,22,95,20],[115,25,95,23,"split"],[115,30,95,28],[116,8,96,6],[116,9,96,7],[116,15,96,13],[116,19,96,17,"split"],[116,24,96,22],[116,29,96,27],[116,30,96,28],[116,31,96,29],[116,33,96,31],[117,10,97,8],[118,10,98,8,"closestThumb"],[118,22,98,20],[118,25,98,23,"state"],[118,30,98,28],[118,31,98,29,"values"],[118,37,98,35],[118,38,98,36,"length"],[118,44,98,42],[118,47,98,45],[118,48,98,46],[119,8,99,6],[119,9,99,7],[119,15,99,13],[120,10,100,8],[120,14,100,12,"lastLeft"],[120,22,100,20],[120,25,100,23,"state"],[120,30,100,28],[120,31,100,29,"values"],[120,37,100,35],[120,38,100,36,"split"],[120,43,100,41],[120,46,100,44],[120,47,100,45],[120,48,100,46],[121,10,101,8],[121,14,101,12,"firstRight"],[121,24,101,22],[121,27,101,25,"state"],[121,32,101,30],[121,33,101,31,"values"],[121,39,101,37],[121,40,101,38,"split"],[121,45,101,43],[121,46,101,44],[122,10,102,8],[123,10,103,8],[123,14,103,12,"Math"],[123,18,103,16],[123,19,103,17,"abs"],[123,22,103,20],[123,23,103,21,"lastLeft"],[123,31,103,29],[123,34,103,32,"value"],[123,39,103,37],[123,40,103,38],[123,43,103,41,"Math"],[123,47,103,45],[123,48,103,46,"abs"],[123,51,103,49],[123,52,103,50,"firstRight"],[123,62,103,60],[123,65,103,63,"value"],[123,70,103,68],[123,71,103,69],[123,73,103,71],[124,12,104,10,"closestThumb"],[124,24,104,22],[124,27,104,25,"split"],[124,32,104,30],[124,35,104,33],[124,36,104,34],[125,10,105,8],[125,11,105,9],[125,17,105,15],[126,12,106,10,"closestThumb"],[126,24,106,22],[126,27,106,25,"split"],[126,32,106,30],[127,10,107,8],[128,8,108,6],[130,8,110,6],[131,8,111,6],[131,12,111,10,"closestThumb"],[131,24,111,22],[131,28,111,26],[131,29,111,27],[131,33,111,31,"state"],[131,38,111,36],[131,39,111,37,"isThumbEditable"],[131,54,111,52],[131,55,111,53,"closestThumb"],[131,67,111,65],[131,68,111,66],[131,70,111,68],[132,10,112,8],[133,10,113,8,"e"],[133,11,113,9],[133,12,113,10,"preventDefault"],[133,26,113,24],[133,27,113,25],[133,28,113,26],[134,10,114,8,"realTimeTrackDraggingIndex"],[134,36,114,34],[134,37,114,35,"current"],[134,44,114,42],[134,47,114,45,"closestThumb"],[134,59,114,57],[135,10,115,8,"state"],[135,15,115,13],[135,16,115,14,"setFocusedThumb"],[135,31,115,29],[135,32,115,30,"closestThumb"],[135,44,115,42],[135,45,115,43],[136,10,116,8,"currentPointer"],[136,24,116,22],[136,25,116,23,"current"],[136,32,116,30],[136,35,116,33,"id"],[136,37,116,35],[137,10,117,8,"state"],[137,15,117,13],[137,16,117,14,"setThumbDragging"],[137,32,117,30],[137,33,117,31,"realTimeTrackDraggingIndex"],[137,59,117,57],[137,60,117,58,"current"],[137,67,117,65],[137,69,117,67],[137,73,117,71],[137,74,117,72],[138,10,118,8,"state"],[138,15,118,13],[138,16,118,14,"setThumbValue"],[138,29,118,27],[138,30,118,28,"closestThumb"],[138,42,118,40],[138,44,118,42,"value"],[138,49,118,47],[138,50,118,48],[139,10,119,8,"addGlobalListener"],[139,27,119,25],[139,28,119,26,"window"],[139,34,119,32],[139,36,119,34],[139,45,119,43],[139,47,119,45,"onUpTrack"],[139,56,119,54],[139,58,119,56],[139,63,119,61],[139,64,119,62],[140,10,120,8,"addGlobalListener"],[140,27,120,25],[140,28,120,26,"window"],[140,34,120,32],[140,36,120,34],[140,46,120,44],[140,48,120,46,"onUpTrack"],[140,57,120,55],[140,59,120,57],[140,64,120,62],[140,65,120,63],[141,10,121,8,"addGlobalListener"],[141,27,121,25],[141,28,121,26,"window"],[141,34,121,32],[141,36,121,34],[141,47,121,45],[141,49,121,47,"onUpTrack"],[141,58,121,56],[141,60,121,58],[141,65,121,63],[141,66,121,64],[142,8,122,6],[142,9,122,7],[142,15,122,13],[143,10,123,8,"realTimeTrackDraggingIndex"],[143,36,123,34],[143,37,123,35,"current"],[143,44,123,42],[143,47,123,45],[143,51,123,49],[144,8,124,6],[145,6,125,4],[146,4,126,2],[146,5,126,3],[147,4,127,2],[147,8,127,6,"onUpTrack"],[147,17,127,15],[147,20,127,18,"e"],[147,21,127,19],[147,25,127,23],[148,6,128,4],[148,10,128,8,"_e$changedTouches"],[148,27,128,25],[149,6,129,4],[149,10,129,8,"id"],[149,12,129,10],[149,15,129,13,"e"],[149,16,129,14],[149,17,129,15,"pointerId"],[149,26,129,24],[149,31,129,29],[149,32,129,30,"_e$changedTouches"],[149,49,129,47],[149,52,129,50,"e"],[149,53,129,51],[149,54,129,52,"changedTouches"],[149,68,129,66],[149,74,129,72],[149,78,129,76],[149,82,129,80,"_e$changedTouches"],[149,99,129,97],[149,104,129,102],[149,109,129,107],[149,110,129,108],[149,113,129,111],[149,118,129,116],[149,119,129,117],[149,122,129,120,"_e$changedTouches"],[149,139,129,137],[149,140,129,138],[149,141,129,139],[149,142,129,140],[149,143,129,141,"identifier"],[149,153,129,151],[149,154,129,152],[150,6,130,4],[150,10,130,8,"id"],[150,12,130,10],[150,17,130,15,"currentPointer"],[150,31,130,29],[150,32,130,30,"current"],[150,39,130,37],[150,41,130,39],[151,8,131,6],[151,12,131,10,"realTimeTrackDraggingIndex"],[151,38,131,36],[151,39,131,37,"current"],[151,46,131,44],[151,50,131,48],[151,54,131,52],[151,56,131,54],[152,10,132,8,"state"],[152,15,132,13],[152,16,132,14,"setThumbDragging"],[152,32,132,30],[152,33,132,31,"realTimeTrackDraggingIndex"],[152,59,132,57],[152,60,132,58,"current"],[152,67,132,65],[152,69,132,67],[152,74,132,72],[152,75,132,73],[153,10,133,8,"realTimeTrackDraggingIndex"],[153,36,133,34],[153,37,133,35,"current"],[153,44,133,42],[153,47,133,45],[153,51,133,49],[154,8,134,6],[155,8,135,6,"removeGlobalListener"],[155,28,135,26],[155,29,135,27,"window"],[155,35,135,33],[155,37,135,35],[155,46,135,44],[155,48,135,46,"onUpTrack"],[155,57,135,55],[155,59,135,57],[155,64,135,62],[155,65,135,63],[156,8,136,6,"removeGlobalListener"],[156,28,136,26],[156,29,136,27,"window"],[156,35,136,33],[156,37,136,35],[156,47,136,45],[156,49,136,47,"onUpTrack"],[156,58,136,56],[156,60,136,58],[156,65,136,63],[156,66,136,64],[157,8,137,6,"removeGlobalListener"],[157,28,137,26],[157,29,137,27,"window"],[157,35,137,33],[157,37,137,35],[157,48,137,46],[157,50,137,48,"onUpTrack"],[157,59,137,57],[157,61,137,59],[157,66,137,64],[157,67,137,65],[158,6,138,4],[159,4,139,2],[159,5,139,3],[161,4,141,2],[162,4,142,2],[162,8,142,6,"labelProps"],[162,18,142,16],[162,19,142,17,"htmlFor"],[162,26,142,24],[162,31,142,29,"undefined"],[162,40,142,38],[162,42,142,40],[163,6,143,4],[164,6,144,4],[165,6,145,4],[166,6,146,4],[167,6,147,4],[168,6,148,4],[168,13,148,11,"labelProps"],[168,23,148,21],[168,24,148,22,"htmlFor"],[168,31,148,29],[169,6,149,4,"labelProps"],[169,16,149,14],[169,17,149,15,"onClick"],[169,24,149,22],[169,27,149,25],[169,33,149,31],[170,8,150,6],[170,12,150,10,"_document$getElementB"],[170,33,150,31],[171,8,151,6],[172,8,152,6],[173,8,153,6],[173,9,153,7,"_document$getElementB"],[173,30,153,28],[173,33,153,31,"document"],[173,41,153,39],[173,42,153,40,"getElementById"],[173,56,153,54],[173,57,153,55],[173,61,153,55,"getSliderThumbId"],[173,67,153,71],[173,68,153,71,"getSliderThumbId"],[173,84,153,71],[173,86,153,72,"state"],[173,91,153,77],[173,93,153,79],[173,94,153,80],[173,95,153,81],[173,96,153,82],[173,102,153,88],[173,106,153,92],[173,110,153,96,"_document$getElementB"],[173,131,153,117],[173,136,153,122],[173,141,153,127],[173,142,153,128],[173,146,153,132,"_document$getElementB"],[173,167,153,153],[173,168,153,154,"focus"],[173,173,153,159],[173,174,153,160],[173,175,153,161],[174,8,154,6],[174,12,154,6,"setInteractionModality"],[174,34,154,28],[174,35,154,28,"setInteractionModality"],[174,57,154,28],[174,59,154,29],[174,69,154,39],[174,70,154,40],[175,6,155,4],[175,7,155,5],[176,4,156,2],[177,4,157,2],[177,11,157,9],[178,6,158,4,"labelProps"],[178,16,158,14],[179,6,159,4],[180,6,160,4],[181,6,161,4],[182,6,162,4,"groupProps"],[182,16,162,14],[182,18,162,14,"Object"],[182,24,162,14],[182,25,162,14,"assign"],[182,31,162,14],[183,8,163,6,"role"],[183,12,163,10],[183,14,163,12],[184,6,163,19],[184,9,164,9,"fieldProps"],[184,19,164,19],[184,20,165,5],[185,6,166,4,"trackProps"],[185,16,166,14],[185,18,166,16],[185,22,166,16,"mergeProps"],[185,37,166,26],[185,38,166,26,"mergeProps"],[185,48,166,26],[185,50,166,27],[186,8,167,6,"onMouseDown"],[186,19,167,17,"onMouseDown"],[186,20,167,18,"e"],[186,21,167,19],[186,23,167,21],[187,10,168,8],[187,14,168,12,"e"],[187,15,168,13],[187,16,168,14,"button"],[187,22,168,20],[187,27,168,25],[187,28,168,26],[187,32,168,30,"e"],[187,33,168,31],[187,34,168,32,"altKey"],[187,40,168,38],[187,44,168,42,"e"],[187,45,168,43],[187,46,168,44,"ctrlKey"],[187,53,168,51],[187,57,168,55,"e"],[187,58,168,56],[187,59,168,57,"metaKey"],[187,66,168,64],[187,68,168,66],[188,12,169,10],[189,10,170,8],[190,10,171,8,"onDownTrack"],[190,21,171,19],[190,22,171,20,"e"],[190,23,171,21],[190,25,171,23,"undefined"],[190,34,171,32],[190,36,171,34,"e"],[190,37,171,35],[190,38,171,36,"clientX"],[190,45,171,43],[190,47,171,45,"e"],[190,48,171,46],[190,49,171,47,"clientY"],[190,56,171,54],[190,57,171,55],[191,8,172,6],[191,9,172,7],[192,8,173,6,"onPointerDown"],[192,21,173,19,"onPointerDown"],[192,22,173,20,"e"],[192,23,173,21],[192,25,173,23],[193,10,174,8],[193,14,174,12,"e"],[193,15,174,13],[193,16,174,14,"pointerType"],[193,27,174,25],[193,32,174,30],[193,39,174,37],[193,44,174,42,"e"],[193,45,174,43],[193,46,174,44,"button"],[193,52,174,50],[193,57,174,55],[193,58,174,56],[193,62,174,60,"e"],[193,63,174,61],[193,64,174,62,"altKey"],[193,70,174,68],[193,74,174,72,"e"],[193,75,174,73],[193,76,174,74,"ctrlKey"],[193,83,174,81],[193,87,174,85,"e"],[193,88,174,86],[193,89,174,87,"metaKey"],[193,96,174,94],[193,97,174,95],[193,99,174,97],[194,12,175,10],[195,10,176,8],[196,10,177,8,"onDownTrack"],[196,21,177,19],[196,22,177,20,"e"],[196,23,177,21],[196,25,177,23,"e"],[196,26,177,24],[196,27,177,25,"pointerId"],[196,36,177,34],[196,38,177,36,"e"],[196,39,177,37],[196,40,177,38,"clientX"],[196,47,177,45],[196,49,177,47,"e"],[196,50,177,48],[196,51,177,49,"clientY"],[196,58,177,56],[196,59,177,57],[197,8,178,6],[197,9,178,7],[198,8,179,6,"onTouchStart"],[198,20,179,18,"onTouchStart"],[198,21,179,19,"e"],[198,22,179,20],[198,24,179,22],[199,10,180,8,"onDownTrack"],[199,21,180,19],[199,22,180,20,"e"],[199,23,180,21],[199,25,180,23,"e"],[199,26,180,24],[199,27,180,25,"changedTouches"],[199,41,180,39],[199,42,180,40],[199,43,180,41],[199,44,180,42],[199,45,180,43,"identifier"],[199,55,180,53],[199,57,180,55,"e"],[199,58,180,56],[199,59,180,57,"changedTouches"],[199,73,180,71],[199,74,180,72],[199,75,180,73],[199,76,180,74],[199,77,180,75,"clientX"],[199,84,180,82],[199,86,180,84,"e"],[199,87,180,85],[199,88,180,86,"changedTouches"],[199,102,180,100],[199,103,180,101],[199,104,180,102],[199,105,180,103],[199,106,180,104,"clientY"],[199,113,180,111],[199,114,180,112],[200,8,181,6],[201,6,182,4],[201,7,182,5],[201,9,182,7,"moveProps"],[201,18,182,16],[201,19,182,17],[202,6,183,4,"outputProps"],[202,17,183,15],[202,19,183,17],[203,8,184,6],[203,17,184,15],[203,19,184,17,"state"],[203,24,184,22],[203,25,184,23,"values"],[203,31,184,29],[203,32,184,30,"map"],[203,35,184,33],[203,36,184,34],[203,37,184,35,"_"],[203,38,184,36],[203,40,184,38,"index"],[203,45,184,43],[203,50,184,48],[203,54,184,48,"getSliderThumbId"],[203,60,184,64],[203,61,184,64,"getSliderThumbId"],[203,77,184,64],[203,79,184,65,"state"],[203,84,184,70],[203,86,184,72,"index"],[203,91,184,77],[203,92,184,78],[203,93,184,79],[203,94,184,80,"join"],[203,98,184,84],[203,99,184,85],[203,102,184,88],[203,103,184,89],[204,8,185,6],[204,19,185,17],[204,21,185,19],[205,6,186,4],[206,4,187,2],[206,5,187,3],[207,2,188,0],[208,2,189,7],[208,8,189,13,"useSlider"],[208,17,189,22],[208,20,189,25,"useSlider"],[208,21,189,26,"props"],[208,26,189,31],[208,28,189,33,"state"],[208,33,189,38],[208,35,189,40,"ref"],[208,38,189,43],[208,40,189,45,"isReversed"],[208,50,189,55],[208,55,189,60],[209,4,190,2],[209,8,190,2,"_useSliderWeb"],[209,21,190,2],[209,24,193,6,"useSliderWeb"],[209,36,193,18],[209,37,193,19,"props"],[209,42,193,24],[209,44,193,26,"state"],[209,49,193,31],[209,51,193,33,"ref"],[209,54,193,36],[209,56,193,38,"isReversed"],[209,66,193,48],[209,67,193,49],[210,6,190,6],[211,8,191,4,"groupProps"],[211,18,191,14],[211,20,191,16,"webGroupProps"],[212,6,193,2],[212,7,193,3],[212,10,193,3,"_useSliderWeb"],[212,23,193,3],[213,6,192,7,"rest"],[213,10,192,11],[213,17,192,11,"_objectWithoutPropertiesLoose"],[213,46,192,11],[213,47,192,11,"default"],[213,54,192,11],[213,56,192,11,"_useSliderWeb"],[213,69,192,11],[213,71,192,11,"_excluded"],[213,80,192,11],[214,4,194,2],[214,8,194,6,"groupProps"],[214,18,194,16],[214,21,194,19],[214,25,194,19,"mapDomPropsToRN"],[214,46,194,34],[214,47,194,34,"mapDomPropsToRN"],[214,62,194,34],[214,64,194,35,"webGroupProps"],[214,77,194,48],[214,78,194,49],[215,4,195,2],[215,8,195,6,"labelProps"],[215,18,195,16],[215,21,195,19],[215,25,195,19,"mapDomPropsToRN"],[215,46,195,34],[215,47,195,34,"mapDomPropsToRN"],[215,62,195,34],[215,64,195,35,"rest"],[215,68,195,39],[215,69,195,40,"labelProps"],[215,79,195,50],[215,80,195,51],[216,4,196,2],[216,11,196,2,"Object"],[216,17,196,2],[216,18,196,2,"assign"],[216,24,196,2],[217,6,197,4,"groupProps"],[218,4,197,14],[218,7,198,7,"rest"],[218,11,198,11],[219,6,199,4,"labelProps"],[220,4,199,14],[221,2,201,0],[221,3,201,1],[222,0,201,2],[222,3]],"functionMap":{"names":["<global>","useSliderWeb","useMove$argument_0.onMoveStart","useMove$argument_0.onMove","useMove$argument_0.onMoveEnd","onDownTrack","state.values.every$argument_0","state.values.findIndex$argument_0","onUpTrack","labelProps.onClick","mergeProps$argument_0.onMouseDown","mergeProps$argument_0.onPointerDown","mergeProps$argument_0.onTouchStart","state.values.map$argument_0","useSlider"],"mappings":"AAA;ACO;IC2B;KDE;IEC;KFuB;IGC;KHK;oBIG;gDCE,mCD;yCEoB,kBF;GJkC;kBOC;GPY;yBQU;KRM;MSY;OTK;MUC;OVK;MWC;OXE;kCYG,4CZ;CDI;yBcC;CdY"},"hasCjsExports":false},"type":"js/module"}]}