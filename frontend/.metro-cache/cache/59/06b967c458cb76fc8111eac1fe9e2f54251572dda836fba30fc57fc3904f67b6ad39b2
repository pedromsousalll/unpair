{"dependencies":[{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.SXResolvedToOrderedSXResolved = SXResolvedToOrderedSXResolved;\n  var _utils = require(_dependencyMap[0], \"../utils\");\n  function SXResolvedToOrderedSXResolved(sxResolved) {\n    var _sxResolved$styledVal;\n    let orderedSXResolved = [];\n    if (sxResolved !== null && sxResolved !== void 0 && (_sxResolved$styledVal = sxResolved.styledValueResolvedWithMeta) !== null && _sxResolved$styledVal !== void 0 && _sxResolved$styledVal.original) {\n      orderedSXResolved = [sxResolved.styledValueResolvedWithMeta];\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.platform) {\n      Object.keys(sxResolved.platform).forEach(key => {\n        //@ts-ignore\n        const platformSXResolved = sxResolved === null || sxResolved === void 0 ? void 0 : sxResolved.platform[key];\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(platformSXResolved));\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.colorMode) {\n      Object.keys(sxResolved.colorMode).forEach(key => {\n        //@ts-ignore\n        const colorModeSXResolved = sxResolved.colorMode[key];\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(colorModeSXResolved));\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.queriesResolved) {\n      const queriesResolved = {};\n      const breakpoints = [];\n      // order and push based on config media query order\n      sxResolved.queriesResolved.forEach(queryResolved => {\n        const queryCondition = queryResolved.resolved.value.styledValueResolvedWithMeta.meta.queryCondition;\n        const currentBreakpoint = (0, _utils.extractWidthValues)(queryCondition);\n        if (currentBreakpoint.length === 1) {\n          breakpoints.push(currentBreakpoint[0]);\n          if (!queriesResolved[currentBreakpoint]) queriesResolved[currentBreakpoint] = [];\n          queriesResolved[currentBreakpoint].push(...SXResolvedToOrderedSXResolved(queryResolved.resolved.value));\n        } else {\n          orderedSXResolved.push(...SXResolvedToOrderedSXResolved(queryResolved.resolved.value));\n        }\n\n        // orderedSXResolved.push(\n        //   //@ts-ignore\n        //   ...SXResolvedToOrderedSXResolved(queryResolved.resolved.value)\n        // );\n      });\n      breakpoints.sort((a, b) => a - b);\n      breakpoints.forEach(currentBreakpoint => {\n        if (queriesResolved[currentBreakpoint]) orderedSXResolved.push(...queriesResolved[currentBreakpoint]);\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.state) {\n      Object.keys(sxResolved.state).forEach(key => {\n        //@ts-ignore\n        const stateSXResolved = sxResolved.state[key];\n        // stateSXResolved.styledValueResolvedWithMeta.meta.weight =\n        //   SX_STYLE_PRECEDENCE.state + (STATE_PRECENDENCE[key] || 0) / 100;\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(stateSXResolved));\n        // orderedSXResolved.push(stateSXResolved.styledValueResolvedWithMeta);\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.theme) {\n      Object.keys(sxResolved.theme).forEach(key => {\n        //@ts-ignore\n        const themeSXResolved = sxResolved.theme[key];\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(themeSXResolved));\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.descendants) {\n      Object.keys(sxResolved.descendants).forEach(key => {\n        //@ts-ignore\n        const descendantSXResolved = sxResolved.descendants[key];\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(descendantSXResolved));\n      });\n    }\n    return orderedSXResolved.sort((a, b) => a.meta.weight - b.meta.weight);\n  }\n});","lineCount":80,"map":[[7,2,2,0,"exports"],[7,9,2,0],[7,10,2,0,"SXResolvedToOrderedSXResolved"],[7,39,2,0],[7,42,2,0,"SXResolvedToOrderedSXResolved"],[7,71,2,0],[8,2,1,0],[8,6,1,0,"_utils"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,7],[9,11,2,16,"SXResolvedToOrderedSXResolved"],[9,40,2,45,"SXResolvedToOrderedSXResolved"],[9,41,2,46,"sxResolved"],[9,51,2,56],[9,53,2,58],[10,4,3,2],[10,8,3,6,"_sxResolved$styledVal"],[10,29,3,27],[11,4,4,2],[11,8,4,6,"orderedSXResolved"],[11,25,4,23],[11,28,4,26],[11,30,4,28],[12,4,5,2],[12,8,5,6,"sxResolved"],[12,18,5,16],[12,23,5,21],[12,27,5,25],[12,31,5,29,"sxResolved"],[12,41,5,39],[12,46,5,44],[12,51,5,49],[12,52,5,50],[12,56,5,54],[12,57,5,55,"_sxResolved$styledVal"],[12,78,5,76],[12,81,5,79,"sxResolved"],[12,91,5,89],[12,92,5,90,"styledValueResolvedWithMeta"],[12,119,5,117],[12,125,5,123],[12,129,5,127],[12,133,5,131,"_sxResolved$styledVal"],[12,154,5,152],[12,159,5,157],[12,164,5,162],[12,165,5,163],[12,169,5,167,"_sxResolved$styledVal"],[12,190,5,188],[12,191,5,189,"original"],[12,199,5,197],[12,201,5,199],[13,6,6,4,"orderedSXResolved"],[13,23,6,21],[13,26,6,24],[13,27,6,25,"sxResolved"],[13,37,6,35],[13,38,6,36,"styledValueResolvedWithMeta"],[13,65,6,63],[13,66,6,64],[14,4,7,2],[15,4,8,2],[15,8,8,6,"sxResolved"],[15,18,8,16],[15,23,8,21],[15,27,8,25],[15,31,8,29,"sxResolved"],[15,41,8,39],[15,46,8,44],[15,51,8,49],[15,52,8,50],[15,56,8,54,"sxResolved"],[15,66,8,64],[15,67,8,65,"platform"],[15,75,8,73],[15,77,8,75],[16,6,9,4,"Object"],[16,12,9,10],[16,13,9,11,"keys"],[16,17,9,15],[16,18,9,16,"sxResolved"],[16,28,9,26],[16,29,9,27,"platform"],[16,37,9,35],[16,38,9,36],[16,39,9,37,"forEach"],[16,46,9,44],[16,47,9,45,"key"],[16,50,9,48],[16,54,9,52],[17,8,10,6],[18,8,11,6],[18,14,11,12,"platformSXResolved"],[18,32,11,30],[18,35,11,33,"sxResolved"],[18,45,11,43],[18,50,11,48],[18,54,11,52],[18,58,11,56,"sxResolved"],[18,68,11,66],[18,73,11,71],[18,78,11,76],[18,79,11,77],[18,82,11,80],[18,87,11,85],[18,88,11,86],[18,91,11,89,"sxResolved"],[18,101,11,99],[18,102,11,100,"platform"],[18,110,11,108],[18,111,11,109,"key"],[18,114,11,112],[18,115,11,113],[19,8,12,6,"orderedSXResolved"],[19,25,12,23],[19,26,12,24,"push"],[19,30,12,28],[19,31,12,29],[19,34,12,32,"SXResolvedToOrderedSXResolved"],[19,63,12,61],[19,64,12,62,"platformSXResolved"],[19,82,12,80],[19,83,12,81],[19,84,12,82],[20,6,13,4],[20,7,13,5],[20,8,13,6],[21,4,14,2],[22,4,15,2],[22,8,15,6,"sxResolved"],[22,18,15,16],[22,23,15,21],[22,27,15,25],[22,31,15,29,"sxResolved"],[22,41,15,39],[22,46,15,44],[22,51,15,49],[22,52,15,50],[22,56,15,54,"sxResolved"],[22,66,15,64],[22,67,15,65,"colorMode"],[22,76,15,74],[22,78,15,76],[23,6,16,4,"Object"],[23,12,16,10],[23,13,16,11,"keys"],[23,17,16,15],[23,18,16,16,"sxResolved"],[23,28,16,26],[23,29,16,27,"colorMode"],[23,38,16,36],[23,39,16,37],[23,40,16,38,"forEach"],[23,47,16,45],[23,48,16,46,"key"],[23,51,16,49],[23,55,16,53],[24,8,17,6],[25,8,18,6],[25,14,18,12,"colorModeSXResolved"],[25,33,18,31],[25,36,18,34,"sxResolved"],[25,46,18,44],[25,47,18,45,"colorMode"],[25,56,18,54],[25,57,18,55,"key"],[25,60,18,58],[25,61,18,59],[26,8,19,6,"orderedSXResolved"],[26,25,19,23],[26,26,19,24,"push"],[26,30,19,28],[26,31,19,29],[26,34,19,32,"SXResolvedToOrderedSXResolved"],[26,63,19,61],[26,64,19,62,"colorModeSXResolved"],[26,83,19,81],[26,84,19,82],[26,85,19,83],[27,6,20,4],[27,7,20,5],[27,8,20,6],[28,4,21,2],[29,4,22,2],[29,8,22,6,"sxResolved"],[29,18,22,16],[29,23,22,21],[29,27,22,25],[29,31,22,29,"sxResolved"],[29,41,22,39],[29,46,22,44],[29,51,22,49],[29,52,22,50],[29,56,22,54,"sxResolved"],[29,66,22,64],[29,67,22,65,"queriesResolved"],[29,82,22,80],[29,84,22,82],[30,6,23,4],[30,12,23,10,"queriesResolved"],[30,27,23,25],[30,30,23,28],[30,31,23,29],[30,32,23,30],[31,6,24,4],[31,12,24,10,"breakpoints"],[31,23,24,21],[31,26,24,24],[31,28,24,26],[32,6,25,4],[33,6,26,4,"sxResolved"],[33,16,26,14],[33,17,26,15,"queriesResolved"],[33,32,26,30],[33,33,26,31,"forEach"],[33,40,26,38],[33,41,26,39,"queryResolved"],[33,54,26,52],[33,58,26,56],[34,8,27,6],[34,14,27,12,"queryCondition"],[34,28,27,26],[34,31,27,29,"queryResolved"],[34,44,27,42],[34,45,27,43,"resolved"],[34,53,27,51],[34,54,27,52,"value"],[34,59,27,57],[34,60,27,58,"styledValueResolvedWithMeta"],[34,87,27,85],[34,88,27,86,"meta"],[34,92,27,90],[34,93,27,91,"queryCondition"],[34,107,27,105],[35,8,28,6],[35,14,28,12,"currentBreakpoint"],[35,31,28,29],[35,34,28,32],[35,38,28,32,"extractWidthValues"],[35,44,28,50],[35,45,28,50,"extractWidthValues"],[35,63,28,50],[35,65,28,51,"queryCondition"],[35,79,28,65],[35,80,28,66],[36,8,29,6],[36,12,29,10,"currentBreakpoint"],[36,29,29,27],[36,30,29,28,"length"],[36,36,29,34],[36,41,29,39],[36,42,29,40],[36,44,29,42],[37,10,30,8,"breakpoints"],[37,21,30,19],[37,22,30,20,"push"],[37,26,30,24],[37,27,30,25,"currentBreakpoint"],[37,44,30,42],[37,45,30,43],[37,46,30,44],[37,47,30,45],[37,48,30,46],[38,10,31,8],[38,14,31,12],[38,15,31,13,"queriesResolved"],[38,30,31,28],[38,31,31,29,"currentBreakpoint"],[38,48,31,46],[38,49,31,47],[38,51,31,49,"queriesResolved"],[38,66,31,64],[38,67,31,65,"currentBreakpoint"],[38,84,31,82],[38,85,31,83],[38,88,31,86],[38,90,31,88],[39,10,32,8,"queriesResolved"],[39,25,32,23],[39,26,32,24,"currentBreakpoint"],[39,43,32,41],[39,44,32,42],[39,45,32,43,"push"],[39,49,32,47],[39,50,32,48],[39,53,32,51,"SXResolvedToOrderedSXResolved"],[39,82,32,80],[39,83,32,81,"queryResolved"],[39,96,32,94],[39,97,32,95,"resolved"],[39,105,32,103],[39,106,32,104,"value"],[39,111,32,109],[39,112,32,110],[39,113,32,111],[40,8,33,6],[40,9,33,7],[40,15,33,13],[41,10,34,8,"orderedSXResolved"],[41,27,34,25],[41,28,34,26,"push"],[41,32,34,30],[41,33,34,31],[41,36,34,34,"SXResolvedToOrderedSXResolved"],[41,65,34,63],[41,66,34,64,"queryResolved"],[41,79,34,77],[41,80,34,78,"resolved"],[41,88,34,86],[41,89,34,87,"value"],[41,94,34,92],[41,95,34,93],[41,96,34,94],[42,8,35,6],[44,8,37,6],[45,8,38,6],[46,8,39,6],[47,8,40,6],[48,6,41,4],[48,7,41,5],[48,8,41,6],[49,6,42,4,"breakpoints"],[49,17,42,15],[49,18,42,16,"sort"],[49,22,42,20],[49,23,42,21],[49,24,42,22,"a"],[49,25,42,23],[49,27,42,25,"b"],[49,28,42,26],[49,33,42,31,"a"],[49,34,42,32],[49,37,42,35,"b"],[49,38,42,36],[49,39,42,37],[50,6,43,4,"breakpoints"],[50,17,43,15],[50,18,43,16,"forEach"],[50,25,43,23],[50,26,43,24,"currentBreakpoint"],[50,43,43,41],[50,47,43,45],[51,8,44,6],[51,12,44,10,"queriesResolved"],[51,27,44,25],[51,28,44,26,"currentBreakpoint"],[51,45,44,43],[51,46,44,44],[51,48,44,46,"orderedSXResolved"],[51,65,44,63],[51,66,44,64,"push"],[51,70,44,68],[51,71,44,69],[51,74,44,72,"queriesResolved"],[51,89,44,87],[51,90,44,88,"currentBreakpoint"],[51,107,44,105],[51,108,44,106],[51,109,44,107],[52,6,45,4],[52,7,45,5],[52,8,45,6],[53,4,46,2],[54,4,47,2],[54,8,47,6,"sxResolved"],[54,18,47,16],[54,23,47,21],[54,27,47,25],[54,31,47,29,"sxResolved"],[54,41,47,39],[54,46,47,44],[54,51,47,49],[54,52,47,50],[54,56,47,54,"sxResolved"],[54,66,47,64],[54,67,47,65,"state"],[54,72,47,70],[54,74,47,72],[55,6,48,4,"Object"],[55,12,48,10],[55,13,48,11,"keys"],[55,17,48,15],[55,18,48,16,"sxResolved"],[55,28,48,26],[55,29,48,27,"state"],[55,34,48,32],[55,35,48,33],[55,36,48,34,"forEach"],[55,43,48,41],[55,44,48,42,"key"],[55,47,48,45],[55,51,48,49],[56,8,49,6],[57,8,50,6],[57,14,50,12,"stateSXResolved"],[57,29,50,27],[57,32,50,30,"sxResolved"],[57,42,50,40],[57,43,50,41,"state"],[57,48,50,46],[57,49,50,47,"key"],[57,52,50,50],[57,53,50,51],[58,8,51,6],[59,8,52,6],[60,8,53,6,"orderedSXResolved"],[60,25,53,23],[60,26,53,24,"push"],[60,30,53,28],[60,31,53,29],[60,34,53,32,"SXResolvedToOrderedSXResolved"],[60,63,53,61],[60,64,53,62,"stateSXResolved"],[60,79,53,77],[60,80,53,78],[60,81,53,79],[61,8,54,6],[62,6,55,4],[62,7,55,5],[62,8,55,6],[63,4,56,2],[64,4,57,2],[64,8,57,6,"sxResolved"],[64,18,57,16],[64,23,57,21],[64,27,57,25],[64,31,57,29,"sxResolved"],[64,41,57,39],[64,46,57,44],[64,51,57,49],[64,52,57,50],[64,56,57,54,"sxResolved"],[64,66,57,64],[64,67,57,65,"theme"],[64,72,57,70],[64,74,57,72],[65,6,58,4,"Object"],[65,12,58,10],[65,13,58,11,"keys"],[65,17,58,15],[65,18,58,16,"sxResolved"],[65,28,58,26],[65,29,58,27,"theme"],[65,34,58,32],[65,35,58,33],[65,36,58,34,"forEach"],[65,43,58,41],[65,44,58,42,"key"],[65,47,58,45],[65,51,58,49],[66,8,59,6],[67,8,60,6],[67,14,60,12,"themeSXResolved"],[67,29,60,27],[67,32,60,30,"sxResolved"],[67,42,60,40],[67,43,60,41,"theme"],[67,48,60,46],[67,49,60,47,"key"],[67,52,60,50],[67,53,60,51],[68,8,61,6,"orderedSXResolved"],[68,25,61,23],[68,26,61,24,"push"],[68,30,61,28],[68,31,61,29],[68,34,61,32,"SXResolvedToOrderedSXResolved"],[68,63,61,61],[68,64,61,62,"themeSXResolved"],[68,79,61,77],[68,80,61,78],[68,81,61,79],[69,6,62,4],[69,7,62,5],[69,8,62,6],[70,4,63,2],[71,4,64,2],[71,8,64,6,"sxResolved"],[71,18,64,16],[71,23,64,21],[71,27,64,25],[71,31,64,29,"sxResolved"],[71,41,64,39],[71,46,64,44],[71,51,64,49],[71,52,64,50],[71,56,64,54,"sxResolved"],[71,66,64,64],[71,67,64,65,"descendants"],[71,78,64,76],[71,80,64,78],[72,6,65,4,"Object"],[72,12,65,10],[72,13,65,11,"keys"],[72,17,65,15],[72,18,65,16,"sxResolved"],[72,28,65,26],[72,29,65,27,"descendants"],[72,40,65,38],[72,41,65,39],[72,42,65,40,"forEach"],[72,49,65,47],[72,50,65,48,"key"],[72,53,65,51],[72,57,65,55],[73,8,66,6],[74,8,67,6],[74,14,67,12,"descendantSXResolved"],[74,34,67,32],[74,37,67,35,"sxResolved"],[74,47,67,45],[74,48,67,46,"descendants"],[74,59,67,57],[74,60,67,58,"key"],[74,63,67,61],[74,64,67,62],[75,8,68,6,"orderedSXResolved"],[75,25,68,23],[75,26,68,24,"push"],[75,30,68,28],[75,31,68,29],[75,34,68,32,"SXResolvedToOrderedSXResolved"],[75,63,68,61],[75,64,68,62,"descendantSXResolved"],[75,84,68,82],[75,85,68,83],[75,86,68,84],[76,6,69,4],[76,7,69,5],[76,8,69,6],[77,4,70,2],[78,4,71,2],[78,11,71,9,"orderedSXResolved"],[78,28,71,26],[78,29,71,27,"sort"],[78,33,71,31],[78,34,71,32],[78,35,71,33,"a"],[78,36,71,34],[78,38,71,36,"b"],[78,39,71,37],[78,44,71,42,"a"],[78,45,71,43],[78,46,71,44,"meta"],[78,50,71,48],[78,51,71,49,"weight"],[78,57,71,55],[78,60,71,58,"b"],[78,61,71,59],[78,62,71,60,"meta"],[78,66,71,64],[78,67,71,65,"weight"],[78,73,71,71],[78,74,71,72],[79,2,72,0],[80,0,72,1],[80,3]],"functionMap":{"names":["<global>","SXResolvedToOrderedSXResolved","Object.keys.forEach$argument_0","sxResolved.queriesResolved.forEach$argument_0","breakpoints.sort$argument_0","breakpoints.forEach$argument_0","orderedSXResolved.sort$argument_0"],"mappings":"AAA;OCC;6CCO;KDI;8CCG;KDI;uCEM;KFe;qBGC,eH;wBIC;KJE;0CCG;KDO;0CCG;KDI;gDCG;KDI;gCKE,uCL;CDC"},"hasCjsExports":false},"type":"js/module"}]}