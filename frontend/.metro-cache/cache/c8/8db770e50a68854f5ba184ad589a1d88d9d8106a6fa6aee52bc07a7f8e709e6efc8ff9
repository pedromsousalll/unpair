{"dependencies":[{"name":"@react-aria/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":74,"index":74}}],"key":"1YkQy8j1AiEA5UJkjTUYe2TKBMU=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":75},"end":{"line":2,"column":54,"index":129}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":31,"index":161}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-aria/interactions","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":66,"index":228}}],"key":"FcpU6JkYHVe2vVdySmtNP/5zbkQ=","exportNames":["*"],"imports":1}},{"name":"@react-aria/label","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":229},"end":{"line":5,"column":45,"index":274}}],"key":"5wzhdZHdQjf2PCDavajv7B5b+u8=","exportNames":["*"],"imports":1}},{"name":"@react-native-aria/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":275},"end":{"line":6,"column":66,"index":341}}],"key":"ijskzN+IV/diNKTT1BJzRK8qf8I=","exportNames":["*"],"imports":1}},{"name":"./useMove","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":342},"end":{"line":7,"column":36,"index":378}}],"key":"1QtvBFz/7nWHkHHp1/BPdopX/5s=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useSlider\", {\n    enumerable: true,\n    get: function () {\n      return useSlider;\n    }\n  });\n  var _reactAriaUtils = require(_dependencyMap[0], \"@react-aria/utils\");\n  var _utils = require(_dependencyMap[1], \"./utils\");\n  var _react = require(_dependencyMap[2], \"react\");\n  var _reactAriaInteractions = require(_dependencyMap[3], \"@react-aria/interactions\");\n  var _reactAriaLabel = require(_dependencyMap[4], \"@react-aria/label\");\n  var _reactNativeAriaUtils = require(_dependencyMap[5], \"@react-native-aria/utils\");\n  var _useMove = require(_dependencyMap[6], \"./useMove\");\n  function useSliderWeb(props, state, trackLayout, isReversed) {\n    let {\n      labelProps,\n      fieldProps\n    } = (0, _reactAriaLabel.useLabel)(props);\n    let isVertical = props.orientation === 'vertical';\n\n    // Attach id of the label to the state so it can be accessed by useSliderThumb.\n    _utils.sliderIds.set(state, labelProps.id ?? fieldProps.id);\n    const direction = (0, _reactNativeAriaUtils.isRTL)() ? 'rtl' : undefined;\n    let {\n      addGlobalListener,\n      removeGlobalListener\n    } = (0, _reactAriaUtils.useGlobalListeners)();\n\n    // When the user clicks or drags the track, we want the motion to set and drag the\n    // closest thumb.  Hence we also need to install useMove() on the track element.\n    // Here, we keep track of which index is the \"closest\" to the drag start point.\n    // It is set onMouseDown/onTouchDown; see trackProps below.\n    const realTimeTrackDraggingIndex = (0, _react.useRef)(null);\n    const stateRef = (0, _react.useRef)(null);\n    stateRef.current = state;\n    const reverseX = isReversed || direction === 'rtl';\n    const currentPosition = (0, _react.useRef)(null);\n    const {\n      moveProps\n    } = (0, _useMove.useMove)({\n      onMoveStart() {\n        currentPosition.current = null;\n      },\n      onMove({\n        deltaX,\n        deltaY\n      }) {\n        let size = isVertical ? trackLayout.height : trackLayout.width;\n        if (currentPosition.current == null) {\n          currentPosition.current = stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) * size;\n        }\n        let delta = isVertical ? deltaY : deltaX;\n        if (reverseX) {\n          if (!isVertical) {\n            delta = -delta;\n          }\n        } else {\n          if (isVertical) {\n            delta = -delta;\n          }\n        }\n        currentPosition.current += delta;\n        if (realTimeTrackDraggingIndex.current != null) {\n          const percent = (0, _reactAriaUtils.clamp)(currentPosition.current / size, 0, 1);\n          stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n        }\n      },\n      onMoveEnd() {\n        if (realTimeTrackDraggingIndex.current != null) {\n          stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n          realTimeTrackDraggingIndex.current = null;\n        }\n      }\n    });\n    let currentPointer = (0, _react.useRef)(undefined);\n    let onDownTrack = (e, id, clientX, clientY) => {\n      // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n      if (!props.isDisabled && state.values.every((_, i) => !state.isThumbDragging(i))) {\n        let size = isVertical ? trackLayout.height : trackLayout.width;\n        // Find the closest thumb\n        const trackPosition = trackLayout[isVertical ? 'top' : 'left'];\n        const clickPosition = isVertical ? clientY : clientX;\n        const offset = clickPosition - trackPosition;\n        let percent = offset / size;\n        if (reverseX) {\n          if (!isVertical) {\n            percent = 1 - percent;\n          }\n        } else {\n          if (isVertical) {\n            percent = 1 - percent;\n          }\n        }\n        let value = state.getPercentValue(percent);\n\n        // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n        let closestThumb;\n        let split = state.values.findIndex(v => value - v < 0);\n        if (split === 0) {\n          // If the index is zero then the closetThumb is the first one\n          closestThumb = split;\n        } else if (split === -1) {\n          // If no index is found they've clicked past all the thumbs\n          closestThumb = state.values.length - 1;\n        } else {\n          let lastLeft = state.values[split - 1];\n          let firstRight = state.values[split];\n          // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n          if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n            closestThumb = split - 1;\n          } else {\n            closestThumb = split;\n          }\n        }\n\n        // Confirm that the found closest thumb is editable, not disabled, and move it\n        if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n          // Don't unfocus anything\n          e.preventDefault();\n          realTimeTrackDraggingIndex.current = closestThumb;\n          state.setFocusedThumb(closestThumb);\n          currentPointer.current = id;\n          state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n          state.setThumbValue(closestThumb, value);\n          addGlobalListener(window, 'mouseup', onUpTrack, false);\n          addGlobalListener(window, 'touchend', onUpTrack, false);\n          addGlobalListener(window, 'pointerup', onUpTrack, false);\n        } else {\n          realTimeTrackDraggingIndex.current = null;\n        }\n      }\n    };\n    let onUpTrack = e => {\n      var _e$changedTouches;\n      let id = e.pointerId ?? ((_e$changedTouches = e.changedTouches) === null || _e$changedTouches === void 0 ? void 0 : _e$changedTouches[0].identifier);\n      if (id === currentPointer.current) {\n        if (realTimeTrackDraggingIndex.current != null) {\n          state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n          realTimeTrackDraggingIndex.current = null;\n        }\n        removeGlobalListener(window, 'mouseup', onUpTrack, false);\n        removeGlobalListener(window, 'touchend', onUpTrack, false);\n        removeGlobalListener(window, 'pointerup', onUpTrack, false);\n      }\n    };\n\n    //@ts-ignore\n    if (labelProps.htmlFor !== undefined) {\n      // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n      // causes this to override the `aria-labelledby` on the thumb. This causes the first\n      // thumb to only be announced as the slider label rather than its individual name as well.\n      // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n      //@ts-ignore\n      delete labelProps.htmlFor;\n      labelProps.onClick = () => {\n        var _document$getElementB;\n        // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n        // so do it manually. In addition, make sure we show the focus ring.\n        (_document$getElementB = document.getElementById((0, _utils.getSliderThumbId)(state, 0))) === null || _document$getElementB === void 0 || _document$getElementB.focus();\n        (0, _reactAriaInteractions.setInteractionModality)('keyboard');\n      };\n    }\n    return {\n      labelProps,\n      // The root element of the Slider will have role=\"group\" to group together\n      // all the thumb inputs in the Slider.  The label of the Slider will\n      // be used to label the group.\n      groupProps: {\n        role: 'group',\n        ...fieldProps\n      },\n      trackProps: (0, _reactAriaUtils.mergeProps)({\n        onMouseDown(e) {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDownTrack(e, undefined, e.clientX, e.clientY);\n        },\n        onPointerDown(e) {\n          if (e.pointerType === 'mouse' && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) {\n            return;\n          }\n          onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n        },\n        onTouchStart(e) {\n          onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        }\n      }, moveProps),\n      outputProps: {\n        'htmlFor': state.values.map((_, index) => (0, _utils.getSliderThumbId)(state, index)).join(' '),\n        'aria-live': 'off'\n      }\n    };\n  }\n  const useSlider = (props, state, ref, isReversed) => {\n    let {\n      groupProps: webGroupProps,\n      ...rest\n    } = useSliderWeb(props, state, ref, isReversed);\n    let groupProps = (0, _reactNativeAriaUtils.mapDomPropsToRN)(webGroupProps);\n    let labelProps = (0, _reactNativeAriaUtils.mapDomPropsToRN)(rest.labelProps);\n    return {\n      groupProps,\n      ...rest,\n      labelProps\n    };\n  };\n});","lineCount":214,"map":[[7,2,189,0,"Object"],[7,8,189,0],[7,9,189,0,"defineProperty"],[7,23,189,0],[7,24,189,0,"exports"],[7,31,189,0],[8,4,189,0,"enumerable"],[8,14,189,0],[9,4,189,0,"get"],[9,7,189,0],[9,18,189,0,"get"],[9,19,189,0],[10,6,189,0],[10,13,189,0,"useSlider"],[10,22,189,0],[11,4,189,0],[12,2,189,0],[13,2,1,0],[13,6,1,0,"_reactAriaUtils"],[13,21,1,0],[13,24,1,0,"require"],[13,31,1,0],[13,32,1,0,"_dependencyMap"],[13,46,1,0],[14,2,2,0],[14,6,2,0,"_utils"],[14,12,2,0],[14,15,2,0,"require"],[14,22,2,0],[14,23,2,0,"_dependencyMap"],[14,37,2,0],[15,2,3,0],[15,6,3,0,"_react"],[15,12,3,0],[15,15,3,0,"require"],[15,22,3,0],[15,23,3,0,"_dependencyMap"],[15,37,3,0],[16,2,4,0],[16,6,4,0,"_reactAriaInteractions"],[16,28,4,0],[16,31,4,0,"require"],[16,38,4,0],[16,39,4,0,"_dependencyMap"],[16,53,4,0],[17,2,5,0],[17,6,5,0,"_reactAriaLabel"],[17,21,5,0],[17,24,5,0,"require"],[17,31,5,0],[17,32,5,0,"_dependencyMap"],[17,46,5,0],[18,2,6,0],[18,6,6,0,"_reactNativeAriaUtils"],[18,27,6,0],[18,30,6,0,"require"],[18,37,6,0],[18,38,6,0,"_dependencyMap"],[18,52,6,0],[19,2,7,0],[19,6,7,0,"_useMove"],[19,14,7,0],[19,17,7,0,"require"],[19,24,7,0],[19,25,7,0,"_dependencyMap"],[19,39,7,0],[20,2,8,0],[20,11,8,9,"useSliderWeb"],[20,23,8,21,"useSliderWeb"],[20,24,8,22,"props"],[20,29,8,27],[20,31,8,29,"state"],[20,36,8,34],[20,38,8,36,"trackLayout"],[20,49,8,47],[20,51,8,49,"isReversed"],[20,61,8,59],[20,63,8,61],[21,4,9,2],[21,8,9,6],[22,6,10,4,"labelProps"],[22,16,10,14],[23,6,11,4,"fieldProps"],[24,4,12,2],[24,5,12,3],[24,8,12,6],[24,12,12,6,"useLabel"],[24,27,12,14],[24,28,12,14,"useLabel"],[24,36,12,14],[24,38,12,15,"props"],[24,43,12,20],[24,44,12,21],[25,4,13,2],[25,8,13,6,"isVertical"],[25,18,13,16],[25,21,13,19,"props"],[25,26,13,24],[25,27,13,25,"orientation"],[25,38,13,36],[25,43,13,41],[25,53,13,51],[27,4,15,2],[28,4,16,2,"sliderIds"],[28,10,16,11],[28,11,16,11,"sliderIds"],[28,20,16,11],[28,21,16,12,"set"],[28,24,16,15],[28,25,16,16,"state"],[28,30,16,21],[28,32,16,23,"labelProps"],[28,42,16,33],[28,43,16,34,"id"],[28,45,16,36],[28,49,16,40,"fieldProps"],[28,59,16,50],[28,60,16,51,"id"],[28,62,16,53],[28,63,16,54],[29,4,17,2],[29,10,17,8,"direction"],[29,19,17,17],[29,22,17,20],[29,26,17,20,"isRTL"],[29,47,17,25],[29,48,17,25,"isRTL"],[29,53,17,25],[29,55,17,26],[29,56,17,27],[29,59,17,30],[29,64,17,35],[29,67,17,38,"undefined"],[29,76,17,47],[30,4,18,2],[30,8,18,6],[31,6,19,4,"addGlobalListener"],[31,23,19,21],[32,6,20,4,"removeGlobalListener"],[33,4,21,2],[33,5,21,3],[33,8,21,6],[33,12,21,6,"useGlobalListeners"],[33,27,21,24],[33,28,21,24,"useGlobalListeners"],[33,46,21,24],[33,48,21,25],[33,49,21,26],[35,4,23,2],[36,4,24,2],[37,4,25,2],[38,4,26,2],[39,4,27,2],[39,10,27,8,"realTimeTrackDraggingIndex"],[39,36,27,34],[39,39,27,37],[39,43,27,37,"useRef"],[39,49,27,43],[39,50,27,43,"useRef"],[39,56,27,43],[39,58,27,44],[39,62,27,48],[39,63,27,49],[40,4,28,2],[40,10,28,8,"stateRef"],[40,18,28,16],[40,21,28,19],[40,25,28,19,"useRef"],[40,31,28,25],[40,32,28,25,"useRef"],[40,38,28,25],[40,40,28,26],[40,44,28,30],[40,45,28,31],[41,4,29,2,"stateRef"],[41,12,29,10],[41,13,29,11,"current"],[41,20,29,18],[41,23,29,21,"state"],[41,28,29,26],[42,4,30,2],[42,10,30,8,"reverseX"],[42,18,30,16],[42,21,30,19,"isReversed"],[42,31,30,29],[42,35,30,33,"direction"],[42,44,30,42],[42,49,30,47],[42,54,30,52],[43,4,31,2],[43,10,31,8,"currentPosition"],[43,25,31,23],[43,28,31,26],[43,32,31,26,"useRef"],[43,38,31,32],[43,39,31,32,"useRef"],[43,45,31,32],[43,47,31,33],[43,51,31,37],[43,52,31,38],[44,4,32,2],[44,10,32,8],[45,6,33,4,"moveProps"],[46,4,34,2],[46,5,34,3],[46,8,34,6],[46,12,34,6,"useMove"],[46,20,34,13],[46,21,34,13,"useMove"],[46,28,34,13],[46,30,34,14],[47,6,35,4,"onMoveStart"],[47,17,35,15,"onMoveStart"],[47,18,35,15],[47,20,35,18],[48,8,36,6,"currentPosition"],[48,23,36,21],[48,24,36,22,"current"],[48,31,36,29],[48,34,36,32],[48,38,36,36],[49,6,37,4],[49,7,37,5],[50,6,38,4,"onMove"],[50,12,38,10,"onMove"],[50,13,38,11],[51,8,39,6,"deltaX"],[51,14,39,12],[52,8,40,6,"deltaY"],[53,6,41,4],[53,7,41,5],[53,9,41,7],[54,8,42,6],[54,12,42,10,"size"],[54,16,42,14],[54,19,42,17,"isVertical"],[54,29,42,27],[54,32,42,30,"trackLayout"],[54,43,42,41],[54,44,42,42,"height"],[54,50,42,48],[54,53,42,51,"trackLayout"],[54,64,42,62],[54,65,42,63,"width"],[54,70,42,68],[55,8,43,6],[55,12,43,10,"currentPosition"],[55,27,43,25],[55,28,43,26,"current"],[55,35,43,33],[55,39,43,37],[55,43,43,41],[55,45,43,43],[56,10,44,8,"currentPosition"],[56,25,44,23],[56,26,44,24,"current"],[56,33,44,31],[56,36,44,34,"stateRef"],[56,44,44,42],[56,45,44,43,"current"],[56,52,44,50],[56,53,44,51,"getThumbPercent"],[56,68,44,66],[56,69,44,67,"realTimeTrackDraggingIndex"],[56,95,44,93],[56,96,44,94,"current"],[56,103,44,101],[56,104,44,102],[56,107,44,105,"size"],[56,111,44,109],[57,8,45,6],[58,8,46,6],[58,12,46,10,"delta"],[58,17,46,15],[58,20,46,18,"isVertical"],[58,30,46,28],[58,33,46,31,"deltaY"],[58,39,46,37],[58,42,46,40,"deltaX"],[58,48,46,46],[59,8,47,6],[59,12,47,10,"reverseX"],[59,20,47,18],[59,22,47,20],[60,10,48,8],[60,14,48,12],[60,15,48,13,"isVertical"],[60,25,48,23],[60,27,48,25],[61,12,49,10,"delta"],[61,17,49,15],[61,20,49,18],[61,21,49,19,"delta"],[61,26,49,24],[62,10,50,8],[63,8,51,6],[63,9,51,7],[63,15,51,13],[64,10,52,8],[64,14,52,12,"isVertical"],[64,24,52,22],[64,26,52,24],[65,12,53,10,"delta"],[65,17,53,15],[65,20,53,18],[65,21,53,19,"delta"],[65,26,53,24],[66,10,54,8],[67,8,55,6],[68,8,56,6,"currentPosition"],[68,23,56,21],[68,24,56,22,"current"],[68,31,56,29],[68,35,56,33,"delta"],[68,40,56,38],[69,8,57,6],[69,12,57,10,"realTimeTrackDraggingIndex"],[69,38,57,36],[69,39,57,37,"current"],[69,46,57,44],[69,50,57,48],[69,54,57,52],[69,56,57,54],[70,10,58,8],[70,16,58,14,"percent"],[70,23,58,21],[70,26,58,24],[70,30,58,24,"clamp"],[70,45,58,29],[70,46,58,29,"clamp"],[70,51,58,29],[70,53,58,30,"currentPosition"],[70,68,58,45],[70,69,58,46,"current"],[70,76,58,53],[70,79,58,56,"size"],[70,83,58,60],[70,85,58,62],[70,86,58,63],[70,88,58,65],[70,89,58,66],[70,90,58,67],[71,10,59,8,"stateRef"],[71,18,59,16],[71,19,59,17,"current"],[71,26,59,24],[71,27,59,25,"setThumbPercent"],[71,42,59,40],[71,43,59,41,"realTimeTrackDraggingIndex"],[71,69,59,67],[71,70,59,68,"current"],[71,77,59,75],[71,79,59,77,"percent"],[71,86,59,84],[71,87,59,85],[72,8,60,6],[73,6,61,4],[73,7,61,5],[74,6,62,4,"onMoveEnd"],[74,15,62,13,"onMoveEnd"],[74,16,62,13],[74,18,62,16],[75,8,63,6],[75,12,63,10,"realTimeTrackDraggingIndex"],[75,38,63,36],[75,39,63,37,"current"],[75,46,63,44],[75,50,63,48],[75,54,63,52],[75,56,63,54],[76,10,64,8,"stateRef"],[76,18,64,16],[76,19,64,17,"current"],[76,26,64,24],[76,27,64,25,"setThumbDragging"],[76,43,64,41],[76,44,64,42,"realTimeTrackDraggingIndex"],[76,70,64,68],[76,71,64,69,"current"],[76,78,64,76],[76,80,64,78],[76,85,64,83],[76,86,64,84],[77,10,65,8,"realTimeTrackDraggingIndex"],[77,36,65,34],[77,37,65,35,"current"],[77,44,65,42],[77,47,65,45],[77,51,65,49],[78,8,66,6],[79,6,67,4],[80,4,68,2],[80,5,68,3],[80,6,68,4],[81,4,69,2],[81,8,69,6,"currentPointer"],[81,22,69,20],[81,25,69,23],[81,29,69,23,"useRef"],[81,35,69,29],[81,36,69,29,"useRef"],[81,42,69,29],[81,44,69,30,"undefined"],[81,53,69,39],[81,54,69,40],[82,4,70,2],[82,8,70,6,"onDownTrack"],[82,19,70,17],[82,22,70,20,"onDownTrack"],[82,23,70,21,"e"],[82,24,70,22],[82,26,70,24,"id"],[82,28,70,26],[82,30,70,28,"clientX"],[82,37,70,35],[82,39,70,37,"clientY"],[82,46,70,44],[82,51,70,49],[83,6,71,4],[84,6,72,4],[84,10,72,8],[84,11,72,9,"props"],[84,16,72,14],[84,17,72,15,"isDisabled"],[84,27,72,25],[84,31,72,29,"state"],[84,36,72,34],[84,37,72,35,"values"],[84,43,72,41],[84,44,72,42,"every"],[84,49,72,47],[84,50,72,48],[84,51,72,49,"_"],[84,52,72,50],[84,54,72,52,"i"],[84,55,72,53],[84,60,72,58],[84,61,72,59,"state"],[84,66,72,64],[84,67,72,65,"isThumbDragging"],[84,82,72,80],[84,83,72,81,"i"],[84,84,72,82],[84,85,72,83],[84,86,72,84],[84,88,72,86],[85,8,73,6],[85,12,73,10,"size"],[85,16,73,14],[85,19,73,17,"isVertical"],[85,29,73,27],[85,32,73,30,"trackLayout"],[85,43,73,41],[85,44,73,42,"height"],[85,50,73,48],[85,53,73,51,"trackLayout"],[85,64,73,62],[85,65,73,63,"width"],[85,70,73,68],[86,8,74,6],[87,8,75,6],[87,14,75,12,"trackPosition"],[87,27,75,25],[87,30,75,28,"trackLayout"],[87,41,75,39],[87,42,75,40,"isVertical"],[87,52,75,50],[87,55,75,53],[87,60,75,58],[87,63,75,61],[87,69,75,67],[87,70,75,68],[88,8,76,6],[88,14,76,12,"clickPosition"],[88,27,76,25],[88,30,76,28,"isVertical"],[88,40,76,38],[88,43,76,41,"clientY"],[88,50,76,48],[88,53,76,51,"clientX"],[88,60,76,58],[89,8,77,6],[89,14,77,12,"offset"],[89,20,77,18],[89,23,77,21,"clickPosition"],[89,36,77,34],[89,39,77,37,"trackPosition"],[89,52,77,50],[90,8,78,6],[90,12,78,10,"percent"],[90,19,78,17],[90,22,78,20,"offset"],[90,28,78,26],[90,31,78,29,"size"],[90,35,78,33],[91,8,79,6],[91,12,79,10,"reverseX"],[91,20,79,18],[91,22,79,20],[92,10,80,8],[92,14,80,12],[92,15,80,13,"isVertical"],[92,25,80,23],[92,27,80,25],[93,12,81,10,"percent"],[93,19,81,17],[93,22,81,20],[93,23,81,21],[93,26,81,24,"percent"],[93,33,81,31],[94,10,82,8],[95,8,83,6],[95,9,83,7],[95,15,83,13],[96,10,84,8],[96,14,84,12,"isVertical"],[96,24,84,22],[96,26,84,24],[97,12,85,10,"percent"],[97,19,85,17],[97,22,85,20],[97,23,85,21],[97,26,85,24,"percent"],[97,33,85,31],[98,10,86,8],[99,8,87,6],[100,8,88,6],[100,12,88,10,"value"],[100,17,88,15],[100,20,88,18,"state"],[100,25,88,23],[100,26,88,24,"getPercentValue"],[100,41,88,39],[100,42,88,40,"percent"],[100,49,88,47],[100,50,88,48],[102,8,90,6],[103,8,91,6],[103,12,91,10,"closestThumb"],[103,24,91,22],[104,8,92,6],[104,12,92,10,"split"],[104,17,92,15],[104,20,92,18,"state"],[104,25,92,23],[104,26,92,24,"values"],[104,32,92,30],[104,33,92,31,"findIndex"],[104,42,92,40],[104,43,92,41,"v"],[104,44,92,42],[104,48,92,46,"value"],[104,53,92,51],[104,56,92,54,"v"],[104,57,92,55],[104,60,92,58],[104,61,92,59],[104,62,92,60],[105,8,93,6],[105,12,93,10,"split"],[105,17,93,15],[105,22,93,20],[105,23,93,21],[105,25,93,23],[106,10,94,8],[107,10,95,8,"closestThumb"],[107,22,95,20],[107,25,95,23,"split"],[107,30,95,28],[108,8,96,6],[108,9,96,7],[108,15,96,13],[108,19,96,17,"split"],[108,24,96,22],[108,29,96,27],[108,30,96,28],[108,31,96,29],[108,33,96,31],[109,10,97,8],[110,10,98,8,"closestThumb"],[110,22,98,20],[110,25,98,23,"state"],[110,30,98,28],[110,31,98,29,"values"],[110,37,98,35],[110,38,98,36,"length"],[110,44,98,42],[110,47,98,45],[110,48,98,46],[111,8,99,6],[111,9,99,7],[111,15,99,13],[112,10,100,8],[112,14,100,12,"lastLeft"],[112,22,100,20],[112,25,100,23,"state"],[112,30,100,28],[112,31,100,29,"values"],[112,37,100,35],[112,38,100,36,"split"],[112,43,100,41],[112,46,100,44],[112,47,100,45],[112,48,100,46],[113,10,101,8],[113,14,101,12,"firstRight"],[113,24,101,22],[113,27,101,25,"state"],[113,32,101,30],[113,33,101,31,"values"],[113,39,101,37],[113,40,101,38,"split"],[113,45,101,43],[113,46,101,44],[114,10,102,8],[115,10,103,8],[115,14,103,12,"Math"],[115,18,103,16],[115,19,103,17,"abs"],[115,22,103,20],[115,23,103,21,"lastLeft"],[115,31,103,29],[115,34,103,32,"value"],[115,39,103,37],[115,40,103,38],[115,43,103,41,"Math"],[115,47,103,45],[115,48,103,46,"abs"],[115,51,103,49],[115,52,103,50,"firstRight"],[115,62,103,60],[115,65,103,63,"value"],[115,70,103,68],[115,71,103,69],[115,73,103,71],[116,12,104,10,"closestThumb"],[116,24,104,22],[116,27,104,25,"split"],[116,32,104,30],[116,35,104,33],[116,36,104,34],[117,10,105,8],[117,11,105,9],[117,17,105,15],[118,12,106,10,"closestThumb"],[118,24,106,22],[118,27,106,25,"split"],[118,32,106,30],[119,10,107,8],[120,8,108,6],[122,8,110,6],[123,8,111,6],[123,12,111,10,"closestThumb"],[123,24,111,22],[123,28,111,26],[123,29,111,27],[123,33,111,31,"state"],[123,38,111,36],[123,39,111,37,"isThumbEditable"],[123,54,111,52],[123,55,111,53,"closestThumb"],[123,67,111,65],[123,68,111,66],[123,70,111,68],[124,10,112,8],[125,10,113,8,"e"],[125,11,113,9],[125,12,113,10,"preventDefault"],[125,26,113,24],[125,27,113,25],[125,28,113,26],[126,10,114,8,"realTimeTrackDraggingIndex"],[126,36,114,34],[126,37,114,35,"current"],[126,44,114,42],[126,47,114,45,"closestThumb"],[126,59,114,57],[127,10,115,8,"state"],[127,15,115,13],[127,16,115,14,"setFocusedThumb"],[127,31,115,29],[127,32,115,30,"closestThumb"],[127,44,115,42],[127,45,115,43],[128,10,116,8,"currentPointer"],[128,24,116,22],[128,25,116,23,"current"],[128,32,116,30],[128,35,116,33,"id"],[128,37,116,35],[129,10,117,8,"state"],[129,15,117,13],[129,16,117,14,"setThumbDragging"],[129,32,117,30],[129,33,117,31,"realTimeTrackDraggingIndex"],[129,59,117,57],[129,60,117,58,"current"],[129,67,117,65],[129,69,117,67],[129,73,117,71],[129,74,117,72],[130,10,118,8,"state"],[130,15,118,13],[130,16,118,14,"setThumbValue"],[130,29,118,27],[130,30,118,28,"closestThumb"],[130,42,118,40],[130,44,118,42,"value"],[130,49,118,47],[130,50,118,48],[131,10,119,8,"addGlobalListener"],[131,27,119,25],[131,28,119,26,"window"],[131,34,119,32],[131,36,119,34],[131,45,119,43],[131,47,119,45,"onUpTrack"],[131,56,119,54],[131,58,119,56],[131,63,119,61],[131,64,119,62],[132,10,120,8,"addGlobalListener"],[132,27,120,25],[132,28,120,26,"window"],[132,34,120,32],[132,36,120,34],[132,46,120,44],[132,48,120,46,"onUpTrack"],[132,57,120,55],[132,59,120,57],[132,64,120,62],[132,65,120,63],[133,10,121,8,"addGlobalListener"],[133,27,121,25],[133,28,121,26,"window"],[133,34,121,32],[133,36,121,34],[133,47,121,45],[133,49,121,47,"onUpTrack"],[133,58,121,56],[133,60,121,58],[133,65,121,63],[133,66,121,64],[134,8,122,6],[134,9,122,7],[134,15,122,13],[135,10,123,8,"realTimeTrackDraggingIndex"],[135,36,123,34],[135,37,123,35,"current"],[135,44,123,42],[135,47,123,45],[135,51,123,49],[136,8,124,6],[137,6,125,4],[138,4,126,2],[138,5,126,3],[139,4,127,2],[139,8,127,6,"onUpTrack"],[139,17,127,15],[139,20,127,18,"e"],[139,21,127,19],[139,25,127,23],[140,6,128,4],[140,10,128,8,"_e$changedTouches"],[140,27,128,25],[141,6,129,4],[141,10,129,8,"id"],[141,12,129,10],[141,15,129,13,"e"],[141,16,129,14],[141,17,129,15,"pointerId"],[141,26,129,24],[141,31,129,29],[141,32,129,30,"_e$changedTouches"],[141,49,129,47],[141,52,129,50,"e"],[141,53,129,51],[141,54,129,52,"changedTouches"],[141,68,129,66],[141,74,129,72],[141,78,129,76],[141,82,129,80,"_e$changedTouches"],[141,99,129,97],[141,104,129,102],[141,109,129,107],[141,110,129,108],[141,113,129,111],[141,118,129,116],[141,119,129,117],[141,122,129,120,"_e$changedTouches"],[141,139,129,137],[141,140,129,138],[141,141,129,139],[141,142,129,140],[141,143,129,141,"identifier"],[141,153,129,151],[141,154,129,152],[142,6,130,4],[142,10,130,8,"id"],[142,12,130,10],[142,17,130,15,"currentPointer"],[142,31,130,29],[142,32,130,30,"current"],[142,39,130,37],[142,41,130,39],[143,8,131,6],[143,12,131,10,"realTimeTrackDraggingIndex"],[143,38,131,36],[143,39,131,37,"current"],[143,46,131,44],[143,50,131,48],[143,54,131,52],[143,56,131,54],[144,10,132,8,"state"],[144,15,132,13],[144,16,132,14,"setThumbDragging"],[144,32,132,30],[144,33,132,31,"realTimeTrackDraggingIndex"],[144,59,132,57],[144,60,132,58,"current"],[144,67,132,65],[144,69,132,67],[144,74,132,72],[144,75,132,73],[145,10,133,8,"realTimeTrackDraggingIndex"],[145,36,133,34],[145,37,133,35,"current"],[145,44,133,42],[145,47,133,45],[145,51,133,49],[146,8,134,6],[147,8,135,6,"removeGlobalListener"],[147,28,135,26],[147,29,135,27,"window"],[147,35,135,33],[147,37,135,35],[147,46,135,44],[147,48,135,46,"onUpTrack"],[147,57,135,55],[147,59,135,57],[147,64,135,62],[147,65,135,63],[148,8,136,6,"removeGlobalListener"],[148,28,136,26],[148,29,136,27,"window"],[148,35,136,33],[148,37,136,35],[148,47,136,45],[148,49,136,47,"onUpTrack"],[148,58,136,56],[148,60,136,58],[148,65,136,63],[148,66,136,64],[149,8,137,6,"removeGlobalListener"],[149,28,137,26],[149,29,137,27,"window"],[149,35,137,33],[149,37,137,35],[149,48,137,46],[149,50,137,48,"onUpTrack"],[149,59,137,57],[149,61,137,59],[149,66,137,64],[149,67,137,65],[150,6,138,4],[151,4,139,2],[151,5,139,3],[153,4,141,2],[154,4,142,2],[154,8,142,6,"labelProps"],[154,18,142,16],[154,19,142,17,"htmlFor"],[154,26,142,24],[154,31,142,29,"undefined"],[154,40,142,38],[154,42,142,40],[155,6,143,4],[156,6,144,4],[157,6,145,4],[158,6,146,4],[159,6,147,4],[160,6,148,4],[160,13,148,11,"labelProps"],[160,23,148,21],[160,24,148,22,"htmlFor"],[160,31,148,29],[161,6,149,4,"labelProps"],[161,16,149,14],[161,17,149,15,"onClick"],[161,24,149,22],[161,27,149,25],[161,33,149,31],[162,8,150,6],[162,12,150,10,"_document$getElementB"],[162,33,150,31],[163,8,151,6],[164,8,152,6],[165,8,153,6],[165,9,153,7,"_document$getElementB"],[165,30,153,28],[165,33,153,31,"document"],[165,41,153,39],[165,42,153,40,"getElementById"],[165,56,153,54],[165,57,153,55],[165,61,153,55,"getSliderThumbId"],[165,67,153,71],[165,68,153,71,"getSliderThumbId"],[165,84,153,71],[165,86,153,72,"state"],[165,91,153,77],[165,93,153,79],[165,94,153,80],[165,95,153,81],[165,96,153,82],[165,102,153,88],[165,106,153,92],[165,110,153,96,"_document$getElementB"],[165,131,153,117],[165,136,153,122],[165,141,153,127],[165,142,153,128],[165,146,153,132,"_document$getElementB"],[165,167,153,153],[165,168,153,154,"focus"],[165,173,153,159],[165,174,153,160],[165,175,153,161],[166,8,154,6],[166,12,154,6,"setInteractionModality"],[166,34,154,28],[166,35,154,28,"setInteractionModality"],[166,57,154,28],[166,59,154,29],[166,69,154,39],[166,70,154,40],[167,6,155,4],[167,7,155,5],[168,4,156,2],[169,4,157,2],[169,11,157,9],[170,6,158,4,"labelProps"],[170,16,158,14],[171,6,159,4],[172,6,160,4],[173,6,161,4],[174,6,162,4,"groupProps"],[174,16,162,14],[174,18,162,16],[175,8,163,6,"role"],[175,12,163,10],[175,14,163,12],[175,21,163,19],[176,8,164,6],[176,11,164,9,"fieldProps"],[177,6,165,4],[177,7,165,5],[178,6,166,4,"trackProps"],[178,16,166,14],[178,18,166,16],[178,22,166,16,"mergeProps"],[178,37,166,26],[178,38,166,26,"mergeProps"],[178,48,166,26],[178,50,166,27],[179,8,167,6,"onMouseDown"],[179,19,167,17,"onMouseDown"],[179,20,167,18,"e"],[179,21,167,19],[179,23,167,21],[180,10,168,8],[180,14,168,12,"e"],[180,15,168,13],[180,16,168,14,"button"],[180,22,168,20],[180,27,168,25],[180,28,168,26],[180,32,168,30,"e"],[180,33,168,31],[180,34,168,32,"altKey"],[180,40,168,38],[180,44,168,42,"e"],[180,45,168,43],[180,46,168,44,"ctrlKey"],[180,53,168,51],[180,57,168,55,"e"],[180,58,168,56],[180,59,168,57,"metaKey"],[180,66,168,64],[180,68,168,66],[181,12,169,10],[182,10,170,8],[183,10,171,8,"onDownTrack"],[183,21,171,19],[183,22,171,20,"e"],[183,23,171,21],[183,25,171,23,"undefined"],[183,34,171,32],[183,36,171,34,"e"],[183,37,171,35],[183,38,171,36,"clientX"],[183,45,171,43],[183,47,171,45,"e"],[183,48,171,46],[183,49,171,47,"clientY"],[183,56,171,54],[183,57,171,55],[184,8,172,6],[184,9,172,7],[185,8,173,6,"onPointerDown"],[185,21,173,19,"onPointerDown"],[185,22,173,20,"e"],[185,23,173,21],[185,25,173,23],[186,10,174,8],[186,14,174,12,"e"],[186,15,174,13],[186,16,174,14,"pointerType"],[186,27,174,25],[186,32,174,30],[186,39,174,37],[186,44,174,42,"e"],[186,45,174,43],[186,46,174,44,"button"],[186,52,174,50],[186,57,174,55],[186,58,174,56],[186,62,174,60,"e"],[186,63,174,61],[186,64,174,62,"altKey"],[186,70,174,68],[186,74,174,72,"e"],[186,75,174,73],[186,76,174,74,"ctrlKey"],[186,83,174,81],[186,87,174,85,"e"],[186,88,174,86],[186,89,174,87,"metaKey"],[186,96,174,94],[186,97,174,95],[186,99,174,97],[187,12,175,10],[188,10,176,8],[189,10,177,8,"onDownTrack"],[189,21,177,19],[189,22,177,20,"e"],[189,23,177,21],[189,25,177,23,"e"],[189,26,177,24],[189,27,177,25,"pointerId"],[189,36,177,34],[189,38,177,36,"e"],[189,39,177,37],[189,40,177,38,"clientX"],[189,47,177,45],[189,49,177,47,"e"],[189,50,177,48],[189,51,177,49,"clientY"],[189,58,177,56],[189,59,177,57],[190,8,178,6],[190,9,178,7],[191,8,179,6,"onTouchStart"],[191,20,179,18,"onTouchStart"],[191,21,179,19,"e"],[191,22,179,20],[191,24,179,22],[192,10,180,8,"onDownTrack"],[192,21,180,19],[192,22,180,20,"e"],[192,23,180,21],[192,25,180,23,"e"],[192,26,180,24],[192,27,180,25,"changedTouches"],[192,41,180,39],[192,42,180,40],[192,43,180,41],[192,44,180,42],[192,45,180,43,"identifier"],[192,55,180,53],[192,57,180,55,"e"],[192,58,180,56],[192,59,180,57,"changedTouches"],[192,73,180,71],[192,74,180,72],[192,75,180,73],[192,76,180,74],[192,77,180,75,"clientX"],[192,84,180,82],[192,86,180,84,"e"],[192,87,180,85],[192,88,180,86,"changedTouches"],[192,102,180,100],[192,103,180,101],[192,104,180,102],[192,105,180,103],[192,106,180,104,"clientY"],[192,113,180,111],[192,114,180,112],[193,8,181,6],[194,6,182,4],[194,7,182,5],[194,9,182,7,"moveProps"],[194,18,182,16],[194,19,182,17],[195,6,183,4,"outputProps"],[195,17,183,15],[195,19,183,17],[196,8,184,6],[196,17,184,15],[196,19,184,17,"state"],[196,24,184,22],[196,25,184,23,"values"],[196,31,184,29],[196,32,184,30,"map"],[196,35,184,33],[196,36,184,34],[196,37,184,35,"_"],[196,38,184,36],[196,40,184,38,"index"],[196,45,184,43],[196,50,184,48],[196,54,184,48,"getSliderThumbId"],[196,60,184,64],[196,61,184,64,"getSliderThumbId"],[196,77,184,64],[196,79,184,65,"state"],[196,84,184,70],[196,86,184,72,"index"],[196,91,184,77],[196,92,184,78],[196,93,184,79],[196,94,184,80,"join"],[196,98,184,84],[196,99,184,85],[196,102,184,88],[196,103,184,89],[197,8,185,6],[197,19,185,17],[197,21,185,19],[198,6,186,4],[199,4,187,2],[199,5,187,3],[200,2,188,0],[201,2,189,7],[201,8,189,13,"useSlider"],[201,17,189,22],[201,20,189,25,"useSlider"],[201,21,189,26,"props"],[201,26,189,31],[201,28,189,33,"state"],[201,33,189,38],[201,35,189,40,"ref"],[201,38,189,43],[201,40,189,45,"isReversed"],[201,50,189,55],[201,55,189,60],[202,4,190,2],[202,8,190,6],[203,6,191,4,"groupProps"],[203,16,191,14],[203,18,191,16,"webGroupProps"],[203,31,191,29],[204,6,192,4],[204,9,192,7,"rest"],[205,4,193,2],[205,5,193,3],[205,8,193,6,"useSliderWeb"],[205,20,193,18],[205,21,193,19,"props"],[205,26,193,24],[205,28,193,26,"state"],[205,33,193,31],[205,35,193,33,"ref"],[205,38,193,36],[205,40,193,38,"isReversed"],[205,50,193,48],[205,51,193,49],[206,4,194,2],[206,8,194,6,"groupProps"],[206,18,194,16],[206,21,194,19],[206,25,194,19,"mapDomPropsToRN"],[206,46,194,34],[206,47,194,34,"mapDomPropsToRN"],[206,62,194,34],[206,64,194,35,"webGroupProps"],[206,77,194,48],[206,78,194,49],[207,4,195,2],[207,8,195,6,"labelProps"],[207,18,195,16],[207,21,195,19],[207,25,195,19,"mapDomPropsToRN"],[207,46,195,34],[207,47,195,34,"mapDomPropsToRN"],[207,62,195,34],[207,64,195,35,"rest"],[207,68,195,39],[207,69,195,40,"labelProps"],[207,79,195,50],[207,80,195,51],[208,4,196,2],[208,11,196,9],[209,6,197,4,"groupProps"],[209,16,197,14],[210,6,198,4],[210,9,198,7,"rest"],[210,13,198,11],[211,6,199,4,"labelProps"],[212,4,200,2],[212,5,200,3],[213,2,201,0],[213,3,201,1],[214,0,201,2],[214,3]],"functionMap":{"names":["<global>","useSliderWeb","useMove$argument_0.onMoveStart","useMove$argument_0.onMove","useMove$argument_0.onMoveEnd","onDownTrack","state.values.every$argument_0","state.values.findIndex$argument_0","onUpTrack","labelProps.onClick","mergeProps$argument_0.onMouseDown","mergeProps$argument_0.onPointerDown","mergeProps$argument_0.onTouchStart","state.values.map$argument_0","useSlider"],"mappings":"AAA;ACO;IC2B;KDE;IEC;KFuB;IGC;KHK;oBIG;gDCE,mCD;yCEoB,kBF;GJkC;kBOC;GPY;yBQU;KRM;MSY;OTK;MUC;OVK;MWC;OXE;kCYG,4CZ;CDI;yBcC;CdY"},"hasCjsExports":false},"type":"js/module"}]}