{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"./Color.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":144,"index":144}}],"key":"4tp3V9pW9gW7bLe8SMeKz6FZ0vU=","exportNames":["*"],"imports":1}},{"name":"@react-stately/slider","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":145},"end":{"line":2,"column":78,"index":223}}],"key":"myVHO1kcTGhZmol1O6+qe0DCpTE=","exportNames":["*"],"imports":1}},{"name":"@react-stately/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":224},"end":{"line":3,"column":85,"index":309}}],"key":"UWd/F16JM6opz+K5fhKP3CQOwig=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":310},"end":{"line":4,"column":77,"index":387}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"channel\", \"colorSpace\", \"value\", \"defaultValue\", \"onChange\", \"locale\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useColorSliderState\", {\n    enumerable: true,\n    get: function () {\n      return $25a25ac0d1624665$export$57bc203e1c9c6d44;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _ColorMjs = require(_dependencyMap[1], \"./Color.mjs\");\n  var _reactStatelySlider = require(_dependencyMap[2], \"@react-stately/slider\");\n  var _reactStatelyUtils = require(_dependencyMap[3], \"@react-stately/utils\");\n  var _react = require(_dependencyMap[4], \"react\");\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */\n\n  function $25a25ac0d1624665$export$57bc203e1c9c6d44(props) {\n    let {\n        channel: channel,\n        colorSpace: colorSpace,\n        value: value,\n        defaultValue: defaultValue,\n        onChange: onChange,\n        locale: locale\n      } = props,\n      otherProps = (0, _objectWithoutPropertiesLoose.default)(props, _excluded);\n    if (value == null && defaultValue == null) throw new Error('useColorSliderState requires a value or defaultValue');\n    if (value) value = (0, _ColorMjs.normalizeColor)(value);\n    if (defaultValue) defaultValue = (0, _ColorMjs.normalizeColor)(defaultValue);\n    // safe to cast value and defaultValue to Color, one of them will always be defined because if neither are, we throw an error\n    let [colorValue, setColor] = (0, _reactStatelyUtils.useControlledState)(value, defaultValue, onChange);\n    let color = (0, _react.useMemo)(() => colorSpace && colorValue ? colorValue.toFormat(colorSpace) : colorValue, [colorValue, colorSpace]);\n    let [initialValue] = (0, _react.useState)(colorValue);\n    let defaultColorValue = defaultValue !== null && defaultValue !== void 0 ? defaultValue : initialValue;\n    let defaultColor = (0, _react.useMemo)(() => colorSpace && defaultColorValue ? defaultColorValue.toFormat(colorSpace) : defaultColorValue, [defaultColorValue, colorSpace]);\n    let sliderState = (0, _reactStatelySlider.useSliderState)(Object.assign({}, color.getChannelRange(channel), otherProps, {\n      // Unused except in getThumbValueLabel, which is overridden below. null to localize the TypeScript error for ignoring.\n      // @ts-ignore\n      numberFormatter: null,\n      value: color.getChannelValue(channel),\n      defaultValue: defaultColor.getChannelValue(channel),\n      onChange(v) {\n        setColor(color.withChannelValue(channel, v));\n      },\n      onChangeEnd(v) {\n        // onChange will have already been called with the right value, this is just to trigger onChangeEnd\n        if (props.onChangeEnd) props.onChangeEnd(color.withChannelValue(channel, v));\n      }\n    }));\n    let {\n      step: step,\n      pageSize: pageSize\n    } = color.getChannelRange(channel);\n    return Object.assign({}, sliderState, {\n      value: color,\n      setValue(value) {\n        setColor((0, _ColorMjs.normalizeColor)(value));\n      },\n      getDisplayColor() {\n        switch (channel) {\n          case 'hue':\n            return (0, _ColorMjs.parseColor)(`hsl(${color.getChannelValue('hue')}, 100%, 50%)`);\n          case 'lightness':\n          case 'brightness':\n          case 'saturation':\n          case 'red':\n          case 'green':\n          case 'blue':\n            return color.withChannelValue('alpha', 1);\n          case 'alpha':\n            return color;\n          default:\n            throw new Error('Unknown color channel: ' + channel);\n        }\n      },\n      getThumbValueLabel() {\n        return color.formatChannelValue(channel, locale);\n      },\n      step: step,\n      pageSize: pageSize,\n      isDragging: sliderState.isThumbDragging(0)\n    });\n  }\n});","lineCount":104,"map":[[13,2,87,0,"Object"],[13,8,87,0],[13,9,87,0,"defineProperty"],[13,23,87,0],[13,24,87,0,"exports"],[13,31,87,0],[14,4,87,0,"enumerable"],[14,14,87,0],[15,4,87,0,"get"],[15,7,87,0],[15,18,87,0,"get"],[15,19,87,0],[16,6,87,0],[16,13,87,8,"$25a25ac0d1624665$export$57bc203e1c9c6d44"],[16,54,87,49],[17,4,87,49],[18,2,87,49],[19,2,87,74],[19,6,87,74,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[19,54,87,74],[19,57,87,74,"require"],[19,64,87,74],[19,65,87,74,"_dependencyMap"],[19,79,87,74],[20,2,87,74],[20,6,87,74,"_objectWithoutPropertiesLoose"],[20,35,87,74],[20,38,87,74,"_interopDefault"],[20,53,87,74],[20,54,87,74,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[20,102,87,74],[21,2,1,0],[21,6,1,0,"_ColorMjs"],[21,15,1,0],[21,18,1,0,"require"],[21,25,1,0],[21,26,1,0,"_dependencyMap"],[21,40,1,0],[22,2,2,0],[22,6,2,0,"_reactStatelySlider"],[22,25,2,0],[22,28,2,0,"require"],[22,35,2,0],[22,36,2,0,"_dependencyMap"],[22,50,2,0],[23,2,3,0],[23,6,3,0,"_reactStatelyUtils"],[23,24,3,0],[23,27,3,0,"require"],[23,34,3,0],[23,35,3,0,"_dependencyMap"],[23,49,3,0],[24,2,4,0],[24,6,4,0,"_react"],[24,12,4,0],[24,15,4,0,"require"],[24,22,4,0],[24,23,4,0,"_dependencyMap"],[24,37,4,0],[25,2,6,0],[26,0,7,0],[27,0,8,0],[28,0,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[32,0,13,0],[33,0,14,0],[34,0,15,0],[35,0,16,0],[37,2,20,0],[37,11,20,9,"$25a25ac0d1624665$export$57bc203e1c9c6d44"],[37,52,20,50,"$25a25ac0d1624665$export$57bc203e1c9c6d44"],[37,53,20,51,"props"],[37,58,20,56],[37,60,20,58],[38,4,21,4],[38,8,21,8],[39,8,21,10,"channel"],[39,15,21,17],[39,17,21,19,"channel"],[39,24,21,26],[40,8,21,28,"colorSpace"],[40,18,21,38],[40,20,21,40,"colorSpace"],[40,30,21,50],[41,8,21,52,"value"],[41,13,21,57],[41,15,21,59,"value"],[41,20,21,64],[42,8,21,66,"defaultValue"],[42,20,21,78],[42,22,21,80,"defaultValue"],[42,34,21,92],[43,8,21,94,"onChange"],[43,16,21,102],[43,18,21,104,"onChange"],[43,26,21,112],[44,8,21,114,"locale"],[44,14,21,120],[44,16,21,122,"locale"],[45,6,21,144],[45,7,21,145],[45,10,21,148,"props"],[45,15,21,153],[46,6,21,133,"otherProps"],[46,16,21,143],[46,23,21,143,"_objectWithoutPropertiesLoose"],[46,52,21,143],[46,53,21,143,"default"],[46,60,21,143],[46,62,21,148,"props"],[46,67,21,153],[46,69,21,153,"_excluded"],[46,78,21,153],[47,4,22,4],[47,8,22,8,"value"],[47,13,22,13],[47,17,22,17],[47,21,22,21],[47,25,22,25,"defaultValue"],[47,37,22,37],[47,41,22,41],[47,45,22,45],[47,47,22,47],[47,53,22,53],[47,57,22,57,"Error"],[47,62,22,62],[47,63,22,63],[47,117,22,117],[47,118,22,118],[48,4,23,4],[48,8,23,8,"value"],[48,13,23,13],[48,15,23,15,"value"],[48,20,23,20],[48,23,23,23],[48,24,23,24],[48,25,23,25],[48,27,23,27,"$799cddbef784668f$export$4cde5df63f53f473"],[48,36,23,68],[48,37,23,68,"normalizeColor"],[48,51,23,68],[48,53,23,70,"value"],[48,58,23,75],[48,59,23,76],[49,4,24,4],[49,8,24,8,"defaultValue"],[49,20,24,20],[49,22,24,22,"defaultValue"],[49,34,24,34],[49,37,24,37],[49,38,24,38],[49,39,24,39],[49,41,24,41,"$799cddbef784668f$export$4cde5df63f53f473"],[49,50,24,82],[49,51,24,82,"normalizeColor"],[49,65,24,82],[49,67,24,84,"defaultValue"],[49,79,24,96],[49,80,24,97],[50,4,25,4],[51,4,26,4],[51,8,26,8],[51,9,26,9,"colorValue"],[51,19,26,19],[51,21,26,21,"setColor"],[51,29,26,29],[51,30,26,30],[51,33,26,33],[51,34,26,34],[51,35,26,35],[51,37,26,37,"$1Eavr$useControlledState"],[51,55,26,62],[51,56,26,62,"useControlledState"],[51,74,26,62],[51,76,26,64,"value"],[51,81,26,69],[51,83,26,71,"defaultValue"],[51,95,26,83],[51,97,26,85,"onChange"],[51,105,26,93],[51,106,26,94],[52,4,27,4],[52,8,27,8,"color"],[52,13,27,13],[52,16,27,16],[52,17,27,17],[52,18,27,18],[52,20,27,20,"$1Eavr$useMemo"],[52,26,27,34],[52,27,27,34,"useMemo"],[52,34,27,34],[52,36,27,36],[52,42,27,40,"colorSpace"],[52,52,27,50],[52,56,27,54,"colorValue"],[52,66,27,64],[52,69,27,67,"colorValue"],[52,79,27,77],[52,80,27,78,"toFormat"],[52,88,27,86],[52,89,27,87,"colorSpace"],[52,99,27,97],[52,100,27,98],[52,103,27,101,"colorValue"],[52,113,27,111],[52,115,27,113],[52,116,28,8,"colorValue"],[52,126,28,18],[52,128,29,8,"colorSpace"],[52,138,29,18],[52,139,30,5],[52,140,30,6],[53,4,31,4],[53,8,31,8],[53,9,31,9,"initialValue"],[53,21,31,21],[53,22,31,22],[53,25,31,25],[53,26,31,26],[53,27,31,27],[53,29,31,29,"$1Eavr$useState"],[53,35,31,44],[53,36,31,44,"useState"],[53,44,31,44],[53,46,31,46,"colorValue"],[53,56,31,56],[53,57,31,57],[54,4,32,4],[54,8,32,8,"defaultColorValue"],[54,25,32,25],[54,28,32,28,"defaultValue"],[54,40,32,40],[54,45,32,45],[54,49,32,49],[54,53,32,53,"defaultValue"],[54,65,32,65],[54,70,32,70],[54,75,32,75],[54,76,32,76],[54,79,32,79,"defaultValue"],[54,91,32,91],[54,94,32,94,"initialValue"],[54,106,32,106],[55,4,33,4],[55,8,33,8,"defaultColor"],[55,20,33,20],[55,23,33,23],[55,24,33,24],[55,25,33,25],[55,27,33,27,"$1Eavr$useMemo"],[55,33,33,41],[55,34,33,41,"useMemo"],[55,41,33,41],[55,43,33,43],[55,49,33,47,"colorSpace"],[55,59,33,57],[55,63,33,61,"defaultColorValue"],[55,80,33,78],[55,83,33,81,"defaultColorValue"],[55,100,33,98],[55,101,33,99,"toFormat"],[55,109,33,107],[55,110,33,108,"colorSpace"],[55,120,33,118],[55,121,33,119],[55,124,33,122,"defaultColorValue"],[55,141,33,139],[55,143,33,141],[55,144,34,8,"defaultColorValue"],[55,161,34,25],[55,163,35,8,"colorSpace"],[55,173,35,18],[55,174,36,5],[55,175,36,6],[56,4,37,4],[56,8,37,8,"sliderState"],[56,19,37,19],[56,22,37,22],[56,23,37,23],[56,24,37,24],[56,26,37,26,"$1Eavr$useSliderState"],[56,45,37,47],[56,46,37,47,"useSliderState"],[56,60,37,47],[56,62,37,47,"Object"],[56,68,37,47],[56,69,37,47,"assign"],[56,75,37,47],[56,80,38,11,"color"],[56,85,38,16],[56,86,38,17,"getChannelRange"],[56,101,38,32],[56,102,38,33,"channel"],[56,109,38,40],[56,110,38,41],[56,112,39,11,"otherProps"],[56,122,39,21],[57,6,40,8],[58,6,41,8],[59,6,42,8,"numberFormatter"],[59,21,42,23],[59,23,42,25],[59,27,42,29],[60,6,43,8,"value"],[60,11,43,13],[60,13,43,15,"color"],[60,18,43,20],[60,19,43,21,"getChannelValue"],[60,34,43,36],[60,35,43,37,"channel"],[60,42,43,44],[60,43,43,45],[61,6,44,8,"defaultValue"],[61,18,44,20],[61,20,44,22,"defaultColor"],[61,32,44,34],[61,33,44,35,"getChannelValue"],[61,48,44,50],[61,49,44,51,"channel"],[61,56,44,58],[61,57,44,59],[62,6,45,8,"onChange"],[62,14,45,16,"onChange"],[62,15,45,18,"v"],[62,16,45,19],[62,18,45,21],[63,8,46,12,"setColor"],[63,16,46,20],[63,17,46,21,"color"],[63,22,46,26],[63,23,46,27,"withChannelValue"],[63,39,46,43],[63,40,46,44,"channel"],[63,47,46,51],[63,49,46,53,"v"],[63,50,46,54],[63,51,46,55],[63,52,46,56],[64,6,47,8],[64,7,47,9],[65,6,48,8,"onChangeEnd"],[65,17,48,19,"onChangeEnd"],[65,18,48,21,"v"],[65,19,48,22],[65,21,48,24],[66,8,49,12],[67,8,50,12],[67,12,50,16,"props"],[67,17,50,21],[67,18,50,22,"onChangeEnd"],[67,29,50,33],[67,31,50,35,"props"],[67,36,50,40],[67,37,50,41,"onChangeEnd"],[67,48,50,52],[67,49,50,53,"color"],[67,54,50,58],[67,55,50,59,"withChannelValue"],[67,71,50,75],[67,72,50,76,"channel"],[67,79,50,83],[67,81,50,85,"v"],[67,82,50,86],[67,83,50,87],[67,84,50,88],[68,6,51,8],[69,4,51,9],[69,6,52,5],[69,7,52,6],[70,4,53,4],[70,8,53,8],[71,6,53,10,"step"],[71,10,53,14],[71,12,53,16,"step"],[71,16,53,20],[72,6,53,22,"pageSize"],[72,14,53,30],[72,16,53,32,"pageSize"],[73,4,53,41],[73,5,53,42],[73,8,53,45,"color"],[73,13,53,50],[73,14,53,51,"getChannelRange"],[73,29,53,66],[73,30,53,67,"channel"],[73,37,53,74],[73,38,53,75],[74,4,54,4],[74,11,54,4,"Object"],[74,17,54,4],[74,18,54,4,"assign"],[74,24,54,4],[74,29,55,11,"sliderState"],[74,40,55,22],[75,6,56,8,"value"],[75,11,56,13],[75,13,56,15,"color"],[75,18,56,20],[76,6,57,8,"setValue"],[76,14,57,16,"setValue"],[76,15,57,18,"value"],[76,20,57,23],[76,22,57,25],[77,8,58,12,"setColor"],[77,16,58,20],[77,17,58,21],[77,18,58,22],[77,19,58,23],[77,21,58,25,"$799cddbef784668f$export$4cde5df63f53f473"],[77,30,58,66],[77,31,58,66,"normalizeColor"],[77,45,58,66],[77,47,58,68,"value"],[77,52,58,73],[77,53,58,74],[77,54,58,75],[78,6,59,8],[78,7,59,9],[79,6,60,8,"getDisplayColor"],[79,21,60,23,"getDisplayColor"],[79,22,60,23],[79,24,60,27],[80,8,61,12],[80,16,61,19,"channel"],[80,23,61,26],[81,10,62,16],[81,15,62,21],[81,20,62,26],[82,12,63,20],[82,19,63,27],[82,20,63,28],[82,21,63,29],[82,23,63,31,"$799cddbef784668f$export$6e865ea70d7724f"],[82,32,63,71],[82,33,63,71,"parseColor"],[82,43,63,71],[82,45,63,73],[82,52,63,80,"color"],[82,57,63,85],[82,58,63,86,"getChannelValue"],[82,73,63,101],[82,74,63,102],[82,79,63,107],[82,80,63,108],[82,94,63,122],[82,95,63,123],[83,10,64,16],[83,15,64,21],[83,26,64,32],[84,10,65,16],[84,15,65,21],[84,27,65,33],[85,10,66,16],[85,15,66,21],[85,27,66,33],[86,10,67,16],[86,15,67,21],[86,20,67,26],[87,10,68,16],[87,15,68,21],[87,22,68,28],[88,10,69,16],[88,15,69,21],[88,21,69,27],[89,12,70,20],[89,19,70,27,"color"],[89,24,70,32],[89,25,70,33,"withChannelValue"],[89,41,70,49],[89,42,70,50],[89,49,70,57],[89,51,70,59],[89,52,70,60],[89,53,70,61],[90,10,71,16],[90,15,71,21],[90,22,71,28],[91,12,72,20],[91,19,72,27,"color"],[91,24,72,32],[92,10,73,16],[93,12,74,20],[93,18,74,26],[93,22,74,30,"Error"],[93,27,74,35],[93,28,74,36],[93,53,74,61],[93,56,74,64,"channel"],[93,63,74,71],[93,64,74,72],[94,8,75,12],[95,6,76,8],[95,7,76,9],[96,6,77,8,"getThumbValueLabel"],[96,24,77,26,"getThumbValueLabel"],[96,25,77,26],[96,27,77,30],[97,8,78,12],[97,15,78,19,"color"],[97,20,78,24],[97,21,78,25,"formatChannelValue"],[97,39,78,43],[97,40,78,44,"channel"],[97,47,78,51],[97,49,78,53,"locale"],[97,55,78,59],[97,56,78,60],[98,6,79,8],[98,7,79,9],[99,6,80,8,"step"],[99,10,80,12],[99,12,80,14,"step"],[99,16,80,18],[100,6,81,8,"pageSize"],[100,14,81,16],[100,16,81,18,"pageSize"],[100,24,81,26],[101,6,82,8,"isDragging"],[101,16,82,18],[101,18,82,20,"sliderState"],[101,29,82,31],[101,30,82,32,"isThumbDragging"],[101,45,82,47],[101,46,82,48],[101,47,82,49],[102,4,82,50],[103,2,84,0],[104,0,84,1],[104,3]],"functionMap":{"names":["<global>","$25a25ac0d1624665$export$57bc203e1c9c6d44","<anonymous>","onChange","onChangeEnd","setValue","getDisplayColor","getThumbValueLabel"],"mappings":"AAA;ACmB;oCCO,2ED;2CCM,gGD;QEY;SFE;QGC;SHG;QIM;SJE;QKC;SLgB;QMC;SNE;CDK"},"hasCjsExports":false},"type":"js/module"}]}