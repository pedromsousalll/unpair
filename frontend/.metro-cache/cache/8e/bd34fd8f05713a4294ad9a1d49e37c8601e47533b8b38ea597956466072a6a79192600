{"dependencies":[{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":164},"end":{"line":7,"column":32,"index":183}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SXResolvedToOrderedSXResolved = SXResolvedToOrderedSXResolved;\n  var _utils = require(_dependencyMap[0], \"../utils\");\n  function SXResolvedToOrderedSXResolved(sxResolved) {\n    var _sxResolved$styledVal;\n    let orderedSXResolved = [];\n    if (sxResolved !== null && sxResolved !== void 0 && (_sxResolved$styledVal = sxResolved.styledValueResolvedWithMeta) !== null && _sxResolved$styledVal !== void 0 && _sxResolved$styledVal.original) {\n      orderedSXResolved = [sxResolved.styledValueResolvedWithMeta];\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.platform) {\n      Object.keys(sxResolved.platform).forEach(key => {\n        //@ts-ignore\n        const platformSXResolved = sxResolved === null || sxResolved === void 0 ? void 0 : sxResolved.platform[key];\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(platformSXResolved));\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.colorMode) {\n      Object.keys(sxResolved.colorMode).forEach(key => {\n        //@ts-ignore\n        const colorModeSXResolved = sxResolved.colorMode[key];\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(colorModeSXResolved));\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.queriesResolved) {\n      const queriesResolved = {};\n      const breakpoints = [];\n      // order and push based on config media query order\n      sxResolved.queriesResolved.forEach(queryResolved => {\n        const queryCondition = queryResolved.resolved.value.styledValueResolvedWithMeta.meta.queryCondition;\n        const currentBreakpoint = (0, _utils.extractWidthValues)(queryCondition);\n        if (currentBreakpoint.length === 1) {\n          breakpoints.push(currentBreakpoint[0]);\n          if (!queriesResolved[currentBreakpoint]) queriesResolved[currentBreakpoint] = [];\n          queriesResolved[currentBreakpoint].push(...SXResolvedToOrderedSXResolved(queryResolved.resolved.value));\n        } else {\n          orderedSXResolved.push(...SXResolvedToOrderedSXResolved(queryResolved.resolved.value));\n        }\n\n        // orderedSXResolved.push(\n        //   //@ts-ignore\n        //   ...SXResolvedToOrderedSXResolved(queryResolved.resolved.value)\n        // );\n      });\n      breakpoints.sort((a, b) => a - b);\n      breakpoints.forEach(currentBreakpoint => {\n        if (queriesResolved[currentBreakpoint]) orderedSXResolved.push(...queriesResolved[currentBreakpoint]);\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.state) {\n      Object.keys(sxResolved.state).forEach(key => {\n        //@ts-ignore\n        const stateSXResolved = sxResolved.state[key];\n        // stateSXResolved.styledValueResolvedWithMeta.meta.weight =\n        //   SX_STYLE_PRECEDENCE.state + (STATE_PRECENDENCE[key] || 0) / 100;\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(stateSXResolved));\n        // orderedSXResolved.push(stateSXResolved.styledValueResolvedWithMeta);\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.theme) {\n      Object.keys(sxResolved.theme).forEach(key => {\n        //@ts-ignore\n        const themeSXResolved = sxResolved.theme[key];\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(themeSXResolved));\n      });\n    }\n    if (sxResolved !== null && sxResolved !== void 0 && sxResolved.descendants) {\n      Object.keys(sxResolved.descendants).forEach(key => {\n        //@ts-ignore\n        const descendantSXResolved = sxResolved.descendants[key];\n        orderedSXResolved.push(...SXResolvedToOrderedSXResolved(descendantSXResolved));\n      });\n    }\n    return orderedSXResolved.sort((a, b) => a.meta.weight - b.meta.weight);\n  }\n});","lineCount":80,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"SXResolvedToOrderedSXResolved"],[7,39,6,37],[7,42,6,40,"SXResolvedToOrderedSXResolved"],[7,71,6,69],[8,2,7,0],[8,6,7,4,"_utils"],[8,12,7,10],[8,15,7,13,"require"],[8,22,7,20],[8,23,7,20,"_dependencyMap"],[8,37,7,20],[8,52,7,31],[8,53,7,32],[9,2,8,0],[9,11,8,9,"SXResolvedToOrderedSXResolved"],[9,40,8,38,"SXResolvedToOrderedSXResolved"],[9,41,8,39,"sxResolved"],[9,51,8,49],[9,53,8,51],[10,4,9,2],[10,8,9,6,"_sxResolved$styledVal"],[10,29,9,27],[11,4,10,2],[11,8,10,6,"orderedSXResolved"],[11,25,10,23],[11,28,10,26],[11,30,10,28],[12,4,11,2],[12,8,11,6,"sxResolved"],[12,18,11,16],[12,23,11,21],[12,27,11,25],[12,31,11,29,"sxResolved"],[12,41,11,39],[12,46,11,44],[12,51,11,49],[12,52,11,50],[12,56,11,54],[12,57,11,55,"_sxResolved$styledVal"],[12,78,11,76],[12,81,11,79,"sxResolved"],[12,91,11,89],[12,92,11,90,"styledValueResolvedWithMeta"],[12,119,11,117],[12,125,11,123],[12,129,11,127],[12,133,11,131,"_sxResolved$styledVal"],[12,154,11,152],[12,159,11,157],[12,164,11,162],[12,165,11,163],[12,169,11,167,"_sxResolved$styledVal"],[12,190,11,188],[12,191,11,189,"original"],[12,199,11,197],[12,201,11,199],[13,6,12,4,"orderedSXResolved"],[13,23,12,21],[13,26,12,24],[13,27,12,25,"sxResolved"],[13,37,12,35],[13,38,12,36,"styledValueResolvedWithMeta"],[13,65,12,63],[13,66,12,64],[14,4,13,2],[15,4,14,2],[15,8,14,6,"sxResolved"],[15,18,14,16],[15,23,14,21],[15,27,14,25],[15,31,14,29,"sxResolved"],[15,41,14,39],[15,46,14,44],[15,51,14,49],[15,52,14,50],[15,56,14,54,"sxResolved"],[15,66,14,64],[15,67,14,65,"platform"],[15,75,14,73],[15,77,14,75],[16,6,15,4,"Object"],[16,12,15,10],[16,13,15,11,"keys"],[16,17,15,15],[16,18,15,16,"sxResolved"],[16,28,15,26],[16,29,15,27,"platform"],[16,37,15,35],[16,38,15,36],[16,39,15,37,"forEach"],[16,46,15,44],[16,47,15,45,"key"],[16,50,15,48],[16,54,15,52],[17,8,16,6],[18,8,17,6],[18,14,17,12,"platformSXResolved"],[18,32,17,30],[18,35,17,33,"sxResolved"],[18,45,17,43],[18,50,17,48],[18,54,17,52],[18,58,17,56,"sxResolved"],[18,68,17,66],[18,73,17,71],[18,78,17,76],[18,79,17,77],[18,82,17,80],[18,87,17,85],[18,88,17,86],[18,91,17,89,"sxResolved"],[18,101,17,99],[18,102,17,100,"platform"],[18,110,17,108],[18,111,17,109,"key"],[18,114,17,112],[18,115,17,113],[19,8,18,6,"orderedSXResolved"],[19,25,18,23],[19,26,18,24,"push"],[19,30,18,28],[19,31,18,29],[19,34,18,32,"SXResolvedToOrderedSXResolved"],[19,63,18,61],[19,64,18,62,"platformSXResolved"],[19,82,18,80],[19,83,18,81],[19,84,18,82],[20,6,19,4],[20,7,19,5],[20,8,19,6],[21,4,20,2],[22,4,21,2],[22,8,21,6,"sxResolved"],[22,18,21,16],[22,23,21,21],[22,27,21,25],[22,31,21,29,"sxResolved"],[22,41,21,39],[22,46,21,44],[22,51,21,49],[22,52,21,50],[22,56,21,54,"sxResolved"],[22,66,21,64],[22,67,21,65,"colorMode"],[22,76,21,74],[22,78,21,76],[23,6,22,4,"Object"],[23,12,22,10],[23,13,22,11,"keys"],[23,17,22,15],[23,18,22,16,"sxResolved"],[23,28,22,26],[23,29,22,27,"colorMode"],[23,38,22,36],[23,39,22,37],[23,40,22,38,"forEach"],[23,47,22,45],[23,48,22,46,"key"],[23,51,22,49],[23,55,22,53],[24,8,23,6],[25,8,24,6],[25,14,24,12,"colorModeSXResolved"],[25,33,24,31],[25,36,24,34,"sxResolved"],[25,46,24,44],[25,47,24,45,"colorMode"],[25,56,24,54],[25,57,24,55,"key"],[25,60,24,58],[25,61,24,59],[26,8,25,6,"orderedSXResolved"],[26,25,25,23],[26,26,25,24,"push"],[26,30,25,28],[26,31,25,29],[26,34,25,32,"SXResolvedToOrderedSXResolved"],[26,63,25,61],[26,64,25,62,"colorModeSXResolved"],[26,83,25,81],[26,84,25,82],[26,85,25,83],[27,6,26,4],[27,7,26,5],[27,8,26,6],[28,4,27,2],[29,4,28,2],[29,8,28,6,"sxResolved"],[29,18,28,16],[29,23,28,21],[29,27,28,25],[29,31,28,29,"sxResolved"],[29,41,28,39],[29,46,28,44],[29,51,28,49],[29,52,28,50],[29,56,28,54,"sxResolved"],[29,66,28,64],[29,67,28,65,"queriesResolved"],[29,82,28,80],[29,84,28,82],[30,6,29,4],[30,12,29,10,"queriesResolved"],[30,27,29,25],[30,30,29,28],[30,31,29,29],[30,32,29,30],[31,6,30,4],[31,12,30,10,"breakpoints"],[31,23,30,21],[31,26,30,24],[31,28,30,26],[32,6,31,4],[33,6,32,4,"sxResolved"],[33,16,32,14],[33,17,32,15,"queriesResolved"],[33,32,32,30],[33,33,32,31,"forEach"],[33,40,32,38],[33,41,32,39,"queryResolved"],[33,54,32,52],[33,58,32,56],[34,8,33,6],[34,14,33,12,"queryCondition"],[34,28,33,26],[34,31,33,29,"queryResolved"],[34,44,33,42],[34,45,33,43,"resolved"],[34,53,33,51],[34,54,33,52,"value"],[34,59,33,57],[34,60,33,58,"styledValueResolvedWithMeta"],[34,87,33,85],[34,88,33,86,"meta"],[34,92,33,90],[34,93,33,91,"queryCondition"],[34,107,33,105],[35,8,34,6],[35,14,34,12,"currentBreakpoint"],[35,31,34,29],[35,34,34,32],[35,35,34,33],[35,36,34,34],[35,38,34,36,"_utils"],[35,44,34,42],[35,45,34,43,"extractWidthValues"],[35,63,34,61],[35,65,34,63,"queryCondition"],[35,79,34,77],[35,80,34,78],[36,8,35,6],[36,12,35,10,"currentBreakpoint"],[36,29,35,27],[36,30,35,28,"length"],[36,36,35,34],[36,41,35,39],[36,42,35,40],[36,44,35,42],[37,10,36,8,"breakpoints"],[37,21,36,19],[37,22,36,20,"push"],[37,26,36,24],[37,27,36,25,"currentBreakpoint"],[37,44,36,42],[37,45,36,43],[37,46,36,44],[37,47,36,45],[37,48,36,46],[38,10,37,8],[38,14,37,12],[38,15,37,13,"queriesResolved"],[38,30,37,28],[38,31,37,29,"currentBreakpoint"],[38,48,37,46],[38,49,37,47],[38,51,37,49,"queriesResolved"],[38,66,37,64],[38,67,37,65,"currentBreakpoint"],[38,84,37,82],[38,85,37,83],[38,88,37,86],[38,90,37,88],[39,10,38,8,"queriesResolved"],[39,25,38,23],[39,26,38,24,"currentBreakpoint"],[39,43,38,41],[39,44,38,42],[39,45,38,43,"push"],[39,49,38,47],[39,50,38,48],[39,53,38,51,"SXResolvedToOrderedSXResolved"],[39,82,38,80],[39,83,38,81,"queryResolved"],[39,96,38,94],[39,97,38,95,"resolved"],[39,105,38,103],[39,106,38,104,"value"],[39,111,38,109],[39,112,38,110],[39,113,38,111],[40,8,39,6],[40,9,39,7],[40,15,39,13],[41,10,40,8,"orderedSXResolved"],[41,27,40,25],[41,28,40,26,"push"],[41,32,40,30],[41,33,40,31],[41,36,40,34,"SXResolvedToOrderedSXResolved"],[41,65,40,63],[41,66,40,64,"queryResolved"],[41,79,40,77],[41,80,40,78,"resolved"],[41,88,40,86],[41,89,40,87,"value"],[41,94,40,92],[41,95,40,93],[41,96,40,94],[42,8,41,6],[44,8,43,6],[45,8,44,6],[46,8,45,6],[47,8,46,6],[48,6,47,4],[48,7,47,5],[48,8,47,6],[49,6,48,4,"breakpoints"],[49,17,48,15],[49,18,48,16,"sort"],[49,22,48,20],[49,23,48,21],[49,24,48,22,"a"],[49,25,48,23],[49,27,48,25,"b"],[49,28,48,26],[49,33,48,31,"a"],[49,34,48,32],[49,37,48,35,"b"],[49,38,48,36],[49,39,48,37],[50,6,49,4,"breakpoints"],[50,17,49,15],[50,18,49,16,"forEach"],[50,25,49,23],[50,26,49,24,"currentBreakpoint"],[50,43,49,41],[50,47,49,45],[51,8,50,6],[51,12,50,10,"queriesResolved"],[51,27,50,25],[51,28,50,26,"currentBreakpoint"],[51,45,50,43],[51,46,50,44],[51,48,50,46,"orderedSXResolved"],[51,65,50,63],[51,66,50,64,"push"],[51,70,50,68],[51,71,50,69],[51,74,50,72,"queriesResolved"],[51,89,50,87],[51,90,50,88,"currentBreakpoint"],[51,107,50,105],[51,108,50,106],[51,109,50,107],[52,6,51,4],[52,7,51,5],[52,8,51,6],[53,4,52,2],[54,4,53,2],[54,8,53,6,"sxResolved"],[54,18,53,16],[54,23,53,21],[54,27,53,25],[54,31,53,29,"sxResolved"],[54,41,53,39],[54,46,53,44],[54,51,53,49],[54,52,53,50],[54,56,53,54,"sxResolved"],[54,66,53,64],[54,67,53,65,"state"],[54,72,53,70],[54,74,53,72],[55,6,54,4,"Object"],[55,12,54,10],[55,13,54,11,"keys"],[55,17,54,15],[55,18,54,16,"sxResolved"],[55,28,54,26],[55,29,54,27,"state"],[55,34,54,32],[55,35,54,33],[55,36,54,34,"forEach"],[55,43,54,41],[55,44,54,42,"key"],[55,47,54,45],[55,51,54,49],[56,8,55,6],[57,8,56,6],[57,14,56,12,"stateSXResolved"],[57,29,56,27],[57,32,56,30,"sxResolved"],[57,42,56,40],[57,43,56,41,"state"],[57,48,56,46],[57,49,56,47,"key"],[57,52,56,50],[57,53,56,51],[58,8,57,6],[59,8,58,6],[60,8,59,6,"orderedSXResolved"],[60,25,59,23],[60,26,59,24,"push"],[60,30,59,28],[60,31,59,29],[60,34,59,32,"SXResolvedToOrderedSXResolved"],[60,63,59,61],[60,64,59,62,"stateSXResolved"],[60,79,59,77],[60,80,59,78],[60,81,59,79],[61,8,60,6],[62,6,61,4],[62,7,61,5],[62,8,61,6],[63,4,62,2],[64,4,63,2],[64,8,63,6,"sxResolved"],[64,18,63,16],[64,23,63,21],[64,27,63,25],[64,31,63,29,"sxResolved"],[64,41,63,39],[64,46,63,44],[64,51,63,49],[64,52,63,50],[64,56,63,54,"sxResolved"],[64,66,63,64],[64,67,63,65,"theme"],[64,72,63,70],[64,74,63,72],[65,6,64,4,"Object"],[65,12,64,10],[65,13,64,11,"keys"],[65,17,64,15],[65,18,64,16,"sxResolved"],[65,28,64,26],[65,29,64,27,"theme"],[65,34,64,32],[65,35,64,33],[65,36,64,34,"forEach"],[65,43,64,41],[65,44,64,42,"key"],[65,47,64,45],[65,51,64,49],[66,8,65,6],[67,8,66,6],[67,14,66,12,"themeSXResolved"],[67,29,66,27],[67,32,66,30,"sxResolved"],[67,42,66,40],[67,43,66,41,"theme"],[67,48,66,46],[67,49,66,47,"key"],[67,52,66,50],[67,53,66,51],[68,8,67,6,"orderedSXResolved"],[68,25,67,23],[68,26,67,24,"push"],[68,30,67,28],[68,31,67,29],[68,34,67,32,"SXResolvedToOrderedSXResolved"],[68,63,67,61],[68,64,67,62,"themeSXResolved"],[68,79,67,77],[68,80,67,78],[68,81,67,79],[69,6,68,4],[69,7,68,5],[69,8,68,6],[70,4,69,2],[71,4,70,2],[71,8,70,6,"sxResolved"],[71,18,70,16],[71,23,70,21],[71,27,70,25],[71,31,70,29,"sxResolved"],[71,41,70,39],[71,46,70,44],[71,51,70,49],[71,52,70,50],[71,56,70,54,"sxResolved"],[71,66,70,64],[71,67,70,65,"descendants"],[71,78,70,76],[71,80,70,78],[72,6,71,4,"Object"],[72,12,71,10],[72,13,71,11,"keys"],[72,17,71,15],[72,18,71,16,"sxResolved"],[72,28,71,26],[72,29,71,27,"descendants"],[72,40,71,38],[72,41,71,39],[72,42,71,40,"forEach"],[72,49,71,47],[72,50,71,48,"key"],[72,53,71,51],[72,57,71,55],[73,8,72,6],[74,8,73,6],[74,14,73,12,"descendantSXResolved"],[74,34,73,32],[74,37,73,35,"sxResolved"],[74,47,73,45],[74,48,73,46,"descendants"],[74,59,73,57],[74,60,73,58,"key"],[74,63,73,61],[74,64,73,62],[75,8,74,6,"orderedSXResolved"],[75,25,74,23],[75,26,74,24,"push"],[75,30,74,28],[75,31,74,29],[75,34,74,32,"SXResolvedToOrderedSXResolved"],[75,63,74,61],[75,64,74,62,"descendantSXResolved"],[75,84,74,82],[75,85,74,83],[75,86,74,84],[76,6,75,4],[76,7,75,5],[76,8,75,6],[77,4,76,2],[78,4,77,2],[78,11,77,9,"orderedSXResolved"],[78,28,77,26],[78,29,77,27,"sort"],[78,33,77,31],[78,34,77,32],[78,35,77,33,"a"],[78,36,77,34],[78,38,77,36,"b"],[78,39,77,37],[78,44,77,42,"a"],[78,45,77,43],[78,46,77,44,"meta"],[78,50,77,48],[78,51,77,49,"weight"],[78,57,77,55],[78,60,77,58,"b"],[78,61,77,59],[78,62,77,60,"meta"],[78,66,77,64],[78,67,77,65,"weight"],[78,73,77,71],[78,74,77,72],[79,2,78,0],[80,0,78,1],[80,3]],"functionMap":{"names":["<global>","SXResolvedToOrderedSXResolved","Object.keys.forEach$argument_0","sxResolved.queriesResolved.forEach$argument_0","breakpoints.sort$argument_0","breakpoints.forEach$argument_0","orderedSXResolved.sort$argument_0"],"mappings":"AAA;ACO;6CCO;KDI;8CCG;KDI;uCEM;KFe;qBGC,eH;wBIC;KJE;0CCG;KDO;0CCG;KDI;gDCG;KDI;gCKE,uCL;CDC"},"hasCjsExports":true},"type":"js/module"}]}