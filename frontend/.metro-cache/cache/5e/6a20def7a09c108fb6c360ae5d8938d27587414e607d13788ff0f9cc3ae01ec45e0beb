{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":181},"end":{"line":5,"column":30,"index":197}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"],"imports":1}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":213},"end":{"line":6,"column":32,"index":231}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.hoistSelectors = hoistSelectors;\n  exports.isStructurallySame = isStructurallySame;\n  var tslib_1 = require(_dependencyMap[0], \"tslib\");\n  var types_1 = require(_dependencyMap[1], \"./types\");\n  function cloneDeep(obj) {\n    if (Array.isArray(obj)) {\n      // @ts-expect-error meh\n      return tslib_1.__spreadArray([], obj.map(cloneDeep), true);\n    }\n    if (obj !== null && typeof obj === 'object') {\n      // @ts-expect-error meh\n      return Object.keys(obj).reduce(function (cloned, k) {\n        // @ts-expect-error meh\n        cloned[k] = cloneDeep(obj[k]);\n        return cloned;\n      }, {});\n    }\n    return obj;\n  }\n  function hoistPluralOrSelectElement(ast, el, positionToInject) {\n    // pull this out of the ast and move it to the top\n    var cloned = cloneDeep(el);\n    var options = cloned.options;\n    cloned.options = Object.keys(options).reduce(function (all, k) {\n      var newValue = hoistSelectors(tslib_1.__spreadArray(tslib_1.__spreadArray(tslib_1.__spreadArray([], ast.slice(0, positionToInject), true), options[k].value, true), ast.slice(positionToInject + 1), true));\n      all[k] = {\n        value: newValue\n      };\n      return all;\n    }, {});\n    return cloned;\n  }\n  function isPluralOrSelectElement(el) {\n    return (0, types_1.isPluralElement)(el) || (0, types_1.isSelectElement)(el);\n  }\n  function findPluralOrSelectElement(ast) {\n    return !!ast.find(function (el) {\n      if (isPluralOrSelectElement(el)) {\n        return true;\n      }\n      if ((0, types_1.isTagElement)(el)) {\n        return findPluralOrSelectElement(el.children);\n      }\n      return false;\n    });\n  }\n  /**\n   * Hoist all selectors to the beginning of the AST & flatten the\n   * resulting options. E.g:\n   * \"I have {count, plural, one{a dog} other{many dogs}}\"\n   * becomes \"{count, plural, one{I have a dog} other{I have many dogs}}\".\n   * If there are multiple selectors, the order of which one is hoisted 1st\n   * is non-deterministic.\n   * The goal is to provide as many full sentences as possible since fragmented\n   * sentences are not translator-friendly\n   * @param ast AST\n   */\n  function hoistSelectors(ast) {\n    for (var i = 0; i < ast.length; i++) {\n      var el = ast[i];\n      if (isPluralOrSelectElement(el)) {\n        return [hoistPluralOrSelectElement(ast, el, i)];\n      }\n      if ((0, types_1.isTagElement)(el) && findPluralOrSelectElement([el])) {\n        throw new Error('Cannot hoist plural/select within a tag element. Please put the tag element inside each plural/select option');\n      }\n    }\n    return ast;\n  }\n  /**\n   * Collect all variables in an AST to Record<string, TYPE>\n   * @param ast AST to collect variables from\n   * @param vars Record of variable name to variable type\n   */\n  function collectVariables(ast, vars) {\n    if (vars === void 0) {\n      vars = new Map();\n    }\n    ast.forEach(function (el) {\n      if ((0, types_1.isArgumentElement)(el) || (0, types_1.isDateElement)(el) || (0, types_1.isTimeElement)(el) || (0, types_1.isNumberElement)(el)) {\n        if (el.value in vars && vars.get(el.value) !== el.type) {\n          throw new Error(\"Variable \".concat(el.value, \" has conflicting types\"));\n        }\n        vars.set(el.value, el.type);\n      }\n      if ((0, types_1.isPluralElement)(el) || (0, types_1.isSelectElement)(el)) {\n        vars.set(el.value, el.type);\n        Object.keys(el.options).forEach(function (k) {\n          collectVariables(el.options[k].value, vars);\n        });\n      }\n      if ((0, types_1.isTagElement)(el)) {\n        vars.set(el.value, el.type);\n        collectVariables(el.children, vars);\n      }\n    });\n  }\n  /**\n   * Check if 2 ASTs are structurally the same. This primarily means that\n   * they have the same variables with the same type\n   * @param a\n   * @param b\n   * @returns\n   */\n  function isStructurallySame(a, b) {\n    var aVars = new Map();\n    var bVars = new Map();\n    collectVariables(a, aVars);\n    collectVariables(b, bVars);\n    if (aVars.size !== bVars.size) {\n      return {\n        success: false,\n        error: new Error(\"Different number of variables: [\".concat(Array.from(aVars.keys()).join(', '), \"] vs [\").concat(Array.from(bVars.keys()).join(', '), \"]\"))\n      };\n    }\n    return Array.from(aVars.entries()).reduce(function (result, _a) {\n      var key = _a[0],\n        type = _a[1];\n      if (!result.success) {\n        return result;\n      }\n      var bType = bVars.get(key);\n      if (bType == null) {\n        return {\n          success: false,\n          error: new Error(\"Missing variable \".concat(key, \" in message\"))\n        };\n      }\n      if (bType !== type) {\n        return {\n          success: false,\n          error: new Error(\"Variable \".concat(key, \" has conflicting types: \").concat(types_1.TYPE[type], \" vs \").concat(types_1.TYPE[bType]))\n        };\n      }\n      return result;\n    }, {\n      success: true\n    });\n  }\n});","lineCount":146,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"hoistSelectors"],[7,24,3,22],[7,27,3,25,"hoistSelectors"],[7,41,3,39],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"isStructurallySame"],[8,28,4,26],[8,31,4,29,"isStructurallySame"],[8,49,4,47],[9,2,5,0],[9,6,5,4,"tslib_1"],[9,13,5,11],[9,16,5,14,"require"],[9,23,5,21],[9,24,5,21,"_dependencyMap"],[9,38,5,21],[9,50,5,29],[9,51,5,30],[10,2,6,0],[10,6,6,4,"types_1"],[10,13,6,11],[10,16,6,14,"require"],[10,23,6,21],[10,24,6,21,"_dependencyMap"],[10,38,6,21],[10,52,6,31],[10,53,6,32],[11,2,7,0],[11,11,7,9,"cloneDeep"],[11,20,7,18,"cloneDeep"],[11,21,7,19,"obj"],[11,24,7,22],[11,26,7,24],[12,4,8,4],[12,8,8,8,"Array"],[12,13,8,13],[12,14,8,14,"isArray"],[12,21,8,21],[12,22,8,22,"obj"],[12,25,8,25],[12,26,8,26],[12,28,8,28],[13,6,9,8],[14,6,10,8],[14,13,10,15,"tslib_1"],[14,20,10,22],[14,21,10,23,"__spreadArray"],[14,34,10,36],[14,35,10,37],[14,37,10,39],[14,39,10,41,"obj"],[14,42,10,44],[14,43,10,45,"map"],[14,46,10,48],[14,47,10,49,"cloneDeep"],[14,56,10,58],[14,57,10,59],[14,59,10,61],[14,63,10,65],[14,64,10,66],[15,4,11,4],[16,4,12,4],[16,8,12,8,"obj"],[16,11,12,11],[16,16,12,16],[16,20,12,20],[16,24,12,24],[16,31,12,31,"obj"],[16,34,12,34],[16,39,12,39],[16,47,12,47],[16,49,12,49],[17,6,13,8],[18,6,14,8],[18,13,14,15,"Object"],[18,19,14,21],[18,20,14,22,"keys"],[18,24,14,26],[18,25,14,27,"obj"],[18,28,14,30],[18,29,14,31],[18,30,14,32,"reduce"],[18,36,14,38],[18,37,14,39],[18,47,14,49,"cloned"],[18,53,14,55],[18,55,14,57,"k"],[18,56,14,58],[18,58,14,60],[19,8,15,12],[20,8,16,12,"cloned"],[20,14,16,18],[20,15,16,19,"k"],[20,16,16,20],[20,17,16,21],[20,20,16,24,"cloneDeep"],[20,29,16,33],[20,30,16,34,"obj"],[20,33,16,37],[20,34,16,38,"k"],[20,35,16,39],[20,36,16,40],[20,37,16,41],[21,8,17,12],[21,15,17,19,"cloned"],[21,21,17,25],[22,6,18,8],[22,7,18,9],[22,9,18,11],[22,10,18,12],[22,11,18,13],[22,12,18,14],[23,4,19,4],[24,4,20,4],[24,11,20,11,"obj"],[24,14,20,14],[25,2,21,0],[26,2,22,0],[26,11,22,9,"hoistPluralOrSelectElement"],[26,37,22,35,"hoistPluralOrSelectElement"],[26,38,22,36,"ast"],[26,41,22,39],[26,43,22,41,"el"],[26,45,22,43],[26,47,22,45,"positionToInject"],[26,63,22,61],[26,65,22,63],[27,4,23,4],[28,4,24,4],[28,8,24,8,"cloned"],[28,14,24,14],[28,17,24,17,"cloneDeep"],[28,26,24,26],[28,27,24,27,"el"],[28,29,24,29],[28,30,24,30],[29,4,25,4],[29,8,25,8,"options"],[29,15,25,15],[29,18,25,18,"cloned"],[29,24,25,24],[29,25,25,25,"options"],[29,32,25,32],[30,4,26,4,"cloned"],[30,10,26,10],[30,11,26,11,"options"],[30,18,26,18],[30,21,26,21,"Object"],[30,27,26,27],[30,28,26,28,"keys"],[30,32,26,32],[30,33,26,33,"options"],[30,40,26,40],[30,41,26,41],[30,42,26,42,"reduce"],[30,48,26,48],[30,49,26,49],[30,59,26,59,"all"],[30,62,26,62],[30,64,26,64,"k"],[30,65,26,65],[30,67,26,67],[31,6,27,8],[31,10,27,12,"newValue"],[31,18,27,20],[31,21,27,23,"hoistSelectors"],[31,35,27,37],[31,36,27,38,"tslib_1"],[31,43,27,45],[31,44,27,46,"__spreadArray"],[31,57,27,59],[31,58,27,60,"tslib_1"],[31,65,27,67],[31,66,27,68,"__spreadArray"],[31,79,27,81],[31,80,27,82,"tslib_1"],[31,87,27,89],[31,88,27,90,"__spreadArray"],[31,101,27,103],[31,102,27,104],[31,104,27,106],[31,106,27,108,"ast"],[31,109,27,111],[31,110,27,112,"slice"],[31,115,27,117],[31,116,27,118],[31,117,27,119],[31,119,27,121,"positionToInject"],[31,135,27,137],[31,136,27,138],[31,138,27,140],[31,142,27,144],[31,143,27,145],[31,145,27,147,"options"],[31,152,27,154],[31,153,27,155,"k"],[31,154,27,156],[31,155,27,157],[31,156,27,158,"value"],[31,161,27,163],[31,163,27,165],[31,167,27,169],[31,168,27,170],[31,170,27,172,"ast"],[31,173,27,175],[31,174,27,176,"slice"],[31,179,27,181],[31,180,27,182,"positionToInject"],[31,196,27,198],[31,199,27,201],[31,200,27,202],[31,201,27,203],[31,203,27,205],[31,207,27,209],[31,208,27,210],[31,209,27,211],[32,6,28,8,"all"],[32,9,28,11],[32,10,28,12,"k"],[32,11,28,13],[32,12,28,14],[32,15,28,17],[33,8,29,12,"value"],[33,13,29,17],[33,15,29,19,"newValue"],[34,6,30,8],[34,7,30,9],[35,6,31,8],[35,13,31,15,"all"],[35,16,31,18],[36,4,32,4],[36,5,32,5],[36,7,32,7],[36,8,32,8],[36,9,32,9],[36,10,32,10],[37,4,33,4],[37,11,33,11,"cloned"],[37,17,33,17],[38,2,34,0],[39,2,35,0],[39,11,35,9,"isPluralOrSelectElement"],[39,34,35,32,"isPluralOrSelectElement"],[39,35,35,33,"el"],[39,37,35,35],[39,39,35,37],[40,4,36,4],[40,11,36,11],[40,12,36,12],[40,13,36,13],[40,15,36,15,"types_1"],[40,22,36,22],[40,23,36,23,"isPluralElement"],[40,38,36,38],[40,40,36,40,"el"],[40,42,36,42],[40,43,36,43],[40,47,36,47],[40,48,36,48],[40,49,36,49],[40,51,36,51,"types_1"],[40,58,36,58],[40,59,36,59,"isSelectElement"],[40,74,36,74],[40,76,36,76,"el"],[40,78,36,78],[40,79,36,79],[41,2,37,0],[42,2,38,0],[42,11,38,9,"findPluralOrSelectElement"],[42,36,38,34,"findPluralOrSelectElement"],[42,37,38,35,"ast"],[42,40,38,38],[42,42,38,40],[43,4,39,4],[43,11,39,11],[43,12,39,12],[43,13,39,13,"ast"],[43,16,39,16],[43,17,39,17,"find"],[43,21,39,21],[43,22,39,22],[43,32,39,32,"el"],[43,34,39,34],[43,36,39,36],[44,6,40,8],[44,10,40,12,"isPluralOrSelectElement"],[44,33,40,35],[44,34,40,36,"el"],[44,36,40,38],[44,37,40,39],[44,39,40,41],[45,8,41,12],[45,15,41,19],[45,19,41,23],[46,6,42,8],[47,6,43,8],[47,10,43,12],[47,11,43,13],[47,12,43,14],[47,14,43,16,"types_1"],[47,21,43,23],[47,22,43,24,"isTagElement"],[47,34,43,36],[47,36,43,38,"el"],[47,38,43,40],[47,39,43,41],[47,41,43,43],[48,8,44,12],[48,15,44,19,"findPluralOrSelectElement"],[48,40,44,44],[48,41,44,45,"el"],[48,43,44,47],[48,44,44,48,"children"],[48,52,44,56],[48,53,44,57],[49,6,45,8],[50,6,46,8],[50,13,46,15],[50,18,46,20],[51,4,47,4],[51,5,47,5],[51,6,47,6],[52,2,48,0],[53,2,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,0,54,0],[59,0,55,0],[60,0,56,0],[61,0,57,0],[62,0,58,0],[63,0,59,0],[64,2,60,0],[64,11,60,9,"hoistSelectors"],[64,25,60,23,"hoistSelectors"],[64,26,60,24,"ast"],[64,29,60,27],[64,31,60,29],[65,4,61,4],[65,9,61,9],[65,13,61,13,"i"],[65,14,61,14],[65,17,61,17],[65,18,61,18],[65,20,61,20,"i"],[65,21,61,21],[65,24,61,24,"ast"],[65,27,61,27],[65,28,61,28,"length"],[65,34,61,34],[65,36,61,36,"i"],[65,37,61,37],[65,39,61,39],[65,41,61,41],[66,6,62,8],[66,10,62,12,"el"],[66,12,62,14],[66,15,62,17,"ast"],[66,18,62,20],[66,19,62,21,"i"],[66,20,62,22],[66,21,62,23],[67,6,63,8],[67,10,63,12,"isPluralOrSelectElement"],[67,33,63,35],[67,34,63,36,"el"],[67,36,63,38],[67,37,63,39],[67,39,63,41],[68,8,64,12],[68,15,64,19],[68,16,64,20,"hoistPluralOrSelectElement"],[68,42,64,46],[68,43,64,47,"ast"],[68,46,64,50],[68,48,64,52,"el"],[68,50,64,54],[68,52,64,56,"i"],[68,53,64,57],[68,54,64,58],[68,55,64,59],[69,6,65,8],[70,6,66,8],[70,10,66,12],[70,11,66,13],[70,12,66,14],[70,14,66,16,"types_1"],[70,21,66,23],[70,22,66,24,"isTagElement"],[70,34,66,36],[70,36,66,38,"el"],[70,38,66,40],[70,39,66,41],[70,43,66,45,"findPluralOrSelectElement"],[70,68,66,70],[70,69,66,71],[70,70,66,72,"el"],[70,72,66,74],[70,73,66,75],[70,74,66,76],[70,76,66,78],[71,8,67,12],[71,14,67,18],[71,18,67,22,"Error"],[71,23,67,27],[71,24,67,28],[71,134,67,138],[71,135,67,139],[72,6,68,8],[73,4,69,4],[74,4,70,4],[74,11,70,11,"ast"],[74,14,70,14],[75,2,71,0],[76,2,72,0],[77,0,73,0],[78,0,74,0],[79,0,75,0],[80,0,76,0],[81,2,77,0],[81,11,77,9,"collectVariables"],[81,27,77,25,"collectVariables"],[81,28,77,26,"ast"],[81,31,77,29],[81,33,77,31,"vars"],[81,37,77,35],[81,39,77,37],[82,4,78,4],[82,8,78,8,"vars"],[82,12,78,12],[82,17,78,17],[82,22,78,22],[82,23,78,23],[82,25,78,25],[83,6,78,27,"vars"],[83,10,78,31],[83,13,78,34],[83,17,78,38,"Map"],[83,20,78,41],[83,21,78,42],[83,22,78,43],[84,4,78,45],[85,4,79,4,"ast"],[85,7,79,7],[85,8,79,8,"forEach"],[85,15,79,15],[85,16,79,16],[85,26,79,26,"el"],[85,28,79,28],[85,30,79,30],[86,6,80,8],[86,10,80,12],[86,11,80,13],[86,12,80,14],[86,14,80,16,"types_1"],[86,21,80,23],[86,22,80,24,"isArgumentElement"],[86,39,80,41],[86,41,80,43,"el"],[86,43,80,45],[86,44,80,46],[86,48,81,12],[86,49,81,13],[86,50,81,14],[86,52,81,16,"types_1"],[86,59,81,23],[86,60,81,24,"isDateElement"],[86,73,81,37],[86,75,81,39,"el"],[86,77,81,41],[86,78,81,42],[86,82,82,12],[86,83,82,13],[86,84,82,14],[86,86,82,16,"types_1"],[86,93,82,23],[86,94,82,24,"isTimeElement"],[86,107,82,37],[86,109,82,39,"el"],[86,111,82,41],[86,112,82,42],[86,116,83,12],[86,117,83,13],[86,118,83,14],[86,120,83,16,"types_1"],[86,127,83,23],[86,128,83,24,"isNumberElement"],[86,143,83,39],[86,145,83,41,"el"],[86,147,83,43],[86,148,83,44],[86,150,83,46],[87,8,84,12],[87,12,84,16,"el"],[87,14,84,18],[87,15,84,19,"value"],[87,20,84,24],[87,24,84,28,"vars"],[87,28,84,32],[87,32,84,36,"vars"],[87,36,84,40],[87,37,84,41,"get"],[87,40,84,44],[87,41,84,45,"el"],[87,43,84,47],[87,44,84,48,"value"],[87,49,84,53],[87,50,84,54],[87,55,84,59,"el"],[87,57,84,61],[87,58,84,62,"type"],[87,62,84,66],[87,64,84,68],[88,10,85,16],[88,16,85,22],[88,20,85,26,"Error"],[88,25,85,31],[88,26,85,32],[88,37,85,43],[88,38,85,44,"concat"],[88,44,85,50],[88,45,85,51,"el"],[88,47,85,53],[88,48,85,54,"value"],[88,53,85,59],[88,55,85,61],[88,79,85,85],[88,80,85,86],[88,81,85,87],[89,8,86,12],[90,8,87,12,"vars"],[90,12,87,16],[90,13,87,17,"set"],[90,16,87,20],[90,17,87,21,"el"],[90,19,87,23],[90,20,87,24,"value"],[90,25,87,29],[90,27,87,31,"el"],[90,29,87,33],[90,30,87,34,"type"],[90,34,87,38],[90,35,87,39],[91,6,88,8],[92,6,89,8],[92,10,89,12],[92,11,89,13],[92,12,89,14],[92,14,89,16,"types_1"],[92,21,89,23],[92,22,89,24,"isPluralElement"],[92,37,89,39],[92,39,89,41,"el"],[92,41,89,43],[92,42,89,44],[92,46,89,48],[92,47,89,49],[92,48,89,50],[92,50,89,52,"types_1"],[92,57,89,59],[92,58,89,60,"isSelectElement"],[92,73,89,75],[92,75,89,77,"el"],[92,77,89,79],[92,78,89,80],[92,80,89,82],[93,8,90,12,"vars"],[93,12,90,16],[93,13,90,17,"set"],[93,16,90,20],[93,17,90,21,"el"],[93,19,90,23],[93,20,90,24,"value"],[93,25,90,29],[93,27,90,31,"el"],[93,29,90,33],[93,30,90,34,"type"],[93,34,90,38],[93,35,90,39],[94,8,91,12,"Object"],[94,14,91,18],[94,15,91,19,"keys"],[94,19,91,23],[94,20,91,24,"el"],[94,22,91,26],[94,23,91,27,"options"],[94,30,91,34],[94,31,91,35],[94,32,91,36,"forEach"],[94,39,91,43],[94,40,91,44],[94,50,91,54,"k"],[94,51,91,55],[94,53,91,57],[95,10,92,16,"collectVariables"],[95,26,92,32],[95,27,92,33,"el"],[95,29,92,35],[95,30,92,36,"options"],[95,37,92,43],[95,38,92,44,"k"],[95,39,92,45],[95,40,92,46],[95,41,92,47,"value"],[95,46,92,52],[95,48,92,54,"vars"],[95,52,92,58],[95,53,92,59],[96,8,93,12],[96,9,93,13],[96,10,93,14],[97,6,94,8],[98,6,95,8],[98,10,95,12],[98,11,95,13],[98,12,95,14],[98,14,95,16,"types_1"],[98,21,95,23],[98,22,95,24,"isTagElement"],[98,34,95,36],[98,36,95,38,"el"],[98,38,95,40],[98,39,95,41],[98,41,95,43],[99,8,96,12,"vars"],[99,12,96,16],[99,13,96,17,"set"],[99,16,96,20],[99,17,96,21,"el"],[99,19,96,23],[99,20,96,24,"value"],[99,25,96,29],[99,27,96,31,"el"],[99,29,96,33],[99,30,96,34,"type"],[99,34,96,38],[99,35,96,39],[100,8,97,12,"collectVariables"],[100,24,97,28],[100,25,97,29,"el"],[100,27,97,31],[100,28,97,32,"children"],[100,36,97,40],[100,38,97,42,"vars"],[100,42,97,46],[100,43,97,47],[101,6,98,8],[102,4,99,4],[102,5,99,5],[102,6,99,6],[103,2,100,0],[104,2,101,0],[105,0,102,0],[106,0,103,0],[107,0,104,0],[108,0,105,0],[109,0,106,0],[110,0,107,0],[111,2,108,0],[111,11,108,9,"isStructurallySame"],[111,29,108,27,"isStructurallySame"],[111,30,108,28,"a"],[111,31,108,29],[111,33,108,31,"b"],[111,34,108,32],[111,36,108,34],[112,4,109,4],[112,8,109,8,"aVars"],[112,13,109,13],[112,16,109,16],[112,20,109,20,"Map"],[112,23,109,23],[112,24,109,24],[112,25,109,25],[113,4,110,4],[113,8,110,8,"bVars"],[113,13,110,13],[113,16,110,16],[113,20,110,20,"Map"],[113,23,110,23],[113,24,110,24],[113,25,110,25],[114,4,111,4,"collectVariables"],[114,20,111,20],[114,21,111,21,"a"],[114,22,111,22],[114,24,111,24,"aVars"],[114,29,111,29],[114,30,111,30],[115,4,112,4,"collectVariables"],[115,20,112,20],[115,21,112,21,"b"],[115,22,112,22],[115,24,112,24,"bVars"],[115,29,112,29],[115,30,112,30],[116,4,113,4],[116,8,113,8,"aVars"],[116,13,113,13],[116,14,113,14,"size"],[116,18,113,18],[116,23,113,23,"bVars"],[116,28,113,28],[116,29,113,29,"size"],[116,33,113,33],[116,35,113,35],[117,6,114,8],[117,13,114,15],[118,8,115,12,"success"],[118,15,115,19],[118,17,115,21],[118,22,115,26],[119,8,116,12,"error"],[119,13,116,17],[119,15,116,19],[119,19,116,23,"Error"],[119,24,116,28],[119,25,116,29],[119,59,116,63],[119,60,116,64,"concat"],[119,66,116,70],[119,67,116,71,"Array"],[119,72,116,76],[119,73,116,77,"from"],[119,77,116,81],[119,78,116,82,"aVars"],[119,83,116,87],[119,84,116,88,"keys"],[119,88,116,92],[119,89,116,93],[119,90,116,94],[119,91,116,95],[119,92,116,96,"join"],[119,96,116,100],[119,97,116,101],[119,101,116,105],[119,102,116,106],[119,104,116,108],[119,112,116,116],[119,113,116,117],[119,114,116,118,"concat"],[119,120,116,124],[119,121,116,125,"Array"],[119,126,116,130],[119,127,116,131,"from"],[119,131,116,135],[119,132,116,136,"bVars"],[119,137,116,141],[119,138,116,142,"keys"],[119,142,116,146],[119,143,116,147],[119,144,116,148],[119,145,116,149],[119,146,116,150,"join"],[119,150,116,154],[119,151,116,155],[119,155,116,159],[119,156,116,160],[119,158,116,162],[119,161,116,165],[119,162,116,166],[120,6,117,8],[120,7,117,9],[121,4,118,4],[122,4,119,4],[122,11,119,11,"Array"],[122,16,119,16],[122,17,119,17,"from"],[122,21,119,21],[122,22,119,22,"aVars"],[122,27,119,27],[122,28,119,28,"entries"],[122,35,119,35],[122,36,119,36],[122,37,119,37],[122,38,119,38],[122,39,119,39,"reduce"],[122,45,119,45],[122,46,119,46],[122,56,119,56,"result"],[122,62,119,62],[122,64,119,64,"_a"],[122,66,119,66],[122,68,119,68],[123,6,120,8],[123,10,120,12,"key"],[123,13,120,15],[123,16,120,18,"_a"],[123,18,120,20],[123,19,120,21],[123,20,120,22],[123,21,120,23],[124,8,120,25,"type"],[124,12,120,29],[124,15,120,32,"_a"],[124,17,120,34],[124,18,120,35],[124,19,120,36],[124,20,120,37],[125,6,121,8],[125,10,121,12],[125,11,121,13,"result"],[125,17,121,19],[125,18,121,20,"success"],[125,25,121,27],[125,27,121,29],[126,8,122,12],[126,15,122,19,"result"],[126,21,122,25],[127,6,123,8],[128,6,124,8],[128,10,124,12,"bType"],[128,15,124,17],[128,18,124,20,"bVars"],[128,23,124,25],[128,24,124,26,"get"],[128,27,124,29],[128,28,124,30,"key"],[128,31,124,33],[128,32,124,34],[129,6,125,8],[129,10,125,12,"bType"],[129,15,125,17],[129,19,125,21],[129,23,125,25],[129,25,125,27],[130,8,126,12],[130,15,126,19],[131,10,127,16,"success"],[131,17,127,23],[131,19,127,25],[131,24,127,30],[132,10,128,16,"error"],[132,15,128,21],[132,17,128,23],[132,21,128,27,"Error"],[132,26,128,32],[132,27,128,33],[132,46,128,52],[132,47,128,53,"concat"],[132,53,128,59],[132,54,128,60,"key"],[132,57,128,63],[132,59,128,65],[132,72,128,78],[132,73,128,79],[133,8,129,12],[133,9,129,13],[134,6,130,8],[135,6,131,8],[135,10,131,12,"bType"],[135,15,131,17],[135,20,131,22,"type"],[135,24,131,26],[135,26,131,28],[136,8,132,12],[136,15,132,19],[137,10,133,16,"success"],[137,17,133,23],[137,19,133,25],[137,24,133,30],[138,10,134,16,"error"],[138,15,134,21],[138,17,134,23],[138,21,134,27,"Error"],[138,26,134,32],[138,27,134,33],[138,38,134,44],[138,39,134,45,"concat"],[138,45,134,51],[138,46,134,52,"key"],[138,49,134,55],[138,51,134,57],[138,77,134,83],[138,78,134,84],[138,79,134,85,"concat"],[138,85,134,91],[138,86,134,92,"types_1"],[138,93,134,99],[138,94,134,100,"TYPE"],[138,98,134,104],[138,99,134,105,"type"],[138,103,134,109],[138,104,134,110],[138,106,134,112],[138,112,134,118],[138,113,134,119],[138,114,134,120,"concat"],[138,120,134,126],[138,121,134,127,"types_1"],[138,128,134,134],[138,129,134,135,"TYPE"],[138,133,134,139],[138,134,134,140,"bType"],[138,139,134,145],[138,140,134,146],[138,141,134,147],[139,8,135,12],[139,9,135,13],[140,6,136,8],[141,6,137,8],[141,13,137,15,"result"],[141,19,137,21],[142,4,138,4],[142,5,138,5],[142,7,138,7],[143,6,138,9,"success"],[143,13,138,16],[143,15,138,18],[144,4,138,23],[144,5,138,24],[144,6,138,25],[145,2,139,0],[146,0,139,1],[146,3]],"functionMap":{"names":["<global>","cloneDeep","Object.keys.reduce$argument_0","hoistPluralOrSelectElement","isPluralOrSelectElement","findPluralOrSelectElement","ast.find$argument_0","hoistSelectors","collectVariables","ast.forEach$argument_0","Object.keys.forEach$argument_0","isStructurallySame","Array.from.reduce$argument_0"],"mappings":"AAA;ACM;uCCO;SDI;CDG;AGC;iDDI;KCM;CHE;AIC;CJE;AKC;sBCC;KDQ;CLC;AOY;CPW;AQM;gBCE;4CCY;aDE;KDM;CRC;AWQ;8CCW;KDmB;CXC"},"hasCjsExports":true},"type":"js/module"}]}