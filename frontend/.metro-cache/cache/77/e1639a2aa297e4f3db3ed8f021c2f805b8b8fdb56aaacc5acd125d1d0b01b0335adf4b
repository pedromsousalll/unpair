{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"Row\", {\n    enumerable: true,\n    get: function () {\n      return $70d70eb16ea48428$export$b59bdbef9ce70de2;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var $7GIZw$react = _interopDefault(_react);\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */\n  function $70d70eb16ea48428$var$Row(props) {\n    return null;\n  }\n  $70d70eb16ea48428$var$Row.getCollectionNode = function* getCollectionNode(props, context) {\n    let {\n      children: children,\n      textValue: textValue,\n      UNSTABLE_childItems: UNSTABLE_childItems\n    } = props;\n    yield {\n      type: 'item',\n      props: props,\n      textValue: textValue,\n      'aria-label': props['aria-label'],\n      hasChildNodes: true,\n      *childNodes() {\n        // Process cells first\n        if (context.showDragButtons) yield {\n          type: 'cell',\n          key: 'header-drag',\n          props: {\n            isDragButtonCell: true\n          }\n        };\n        if (context.showSelectionCheckboxes && context.selectionMode !== 'none') yield {\n          type: 'cell',\n          key: 'header',\n          props: {\n            isSelectionCell: true\n          }\n        };\n        if (typeof children === 'function') {\n          for (let column of context.columns) yield {\n            type: 'cell',\n            element: children(column.key),\n            key: column.key // this is combined with the row key by CollectionBuilder\n          };\n          if (UNSTABLE_childItems) for (let child of UNSTABLE_childItems)\n          // Note: in order to reuse the render function of TableBody for our child rows, we just need to yield a type and a value here. CollectionBuilder will then look up\n          // the parent renderer and use that to build the full node of this child row, using the value provided here to generate the cells\n          yield {\n            type: 'item',\n            value: child\n          };\n        } else {\n          let cells = [];\n          let childRows = [];\n          let columnCount = 0;\n          (0, $7GIZw$react.default).Children.forEach(children, node => {\n            if (node.type === $70d70eb16ea48428$var$Row) {\n              if (cells.length < context.columns.length) throw new Error('All of a Row\\'s child Cells must be positioned before any child Rows.');\n              childRows.push({\n                type: 'item',\n                element: node\n              });\n            } else {\n              cells.push({\n                type: 'cell',\n                element: node\n              });\n              var _node_props_colSpan;\n              columnCount += (_node_props_colSpan = node.props.colSpan) !== null && _node_props_colSpan !== void 0 ? _node_props_colSpan : 1;\n            }\n          });\n          if (columnCount !== context.columns.length) throw new Error(`Cell count must match column count. Found ${columnCount} cells and ${context.columns.length} columns.`);\n          yield* cells;\n          yield* childRows;\n        }\n      },\n      shouldInvalidate(newContext) {\n        // Invalidate all rows if the columns changed.\n        return newContext.columns.length !== context.columns.length || newContext.columns.some((c, i) => c.key !== context.columns[i].key) || newContext.showSelectionCheckboxes !== context.showSelectionCheckboxes || newContext.showDragButtons !== context.showDragButtons || newContext.selectionMode !== context.selectionMode;\n      }\n    };\n  };\n  /**\n   * A Row represents a single item in a Table and contains Cell elements for each column.\n   * Cells can be statically defined as children, or generated dynamically using a function\n   * based on the columns defined in the TableHeader.\n   */ // We don't want getCollectionNode to show up in the type definition\n  let $70d70eb16ea48428$export$b59bdbef9ce70de2 = $70d70eb16ea48428$var$Row;\n});","lineCount":112,"map":[[12,2,92,0,"Object"],[12,8,92,0],[12,9,92,0,"defineProperty"],[12,23,92,0],[12,24,92,0,"exports"],[12,31,92,0],[13,4,92,0,"enumerable"],[13,14,92,0],[14,4,92,0,"get"],[14,7,92,0],[14,18,92,0,"get"],[14,19,92,0],[15,6,92,0],[15,13,92,8,"$70d70eb16ea48428$export$b59bdbef9ce70de2"],[15,54,92,49],[16,4,92,49],[17,2,92,49],[18,2,1,0],[18,6,1,0,"_react"],[18,12,1,0],[18,15,1,0,"require"],[18,22,1,0],[18,23,1,0,"_dependencyMap"],[18,37,1,0],[19,2,1,0],[19,6,1,0,"$7GIZw$react"],[19,18,1,0],[19,21,1,0,"_interopDefault"],[19,36,1,0],[19,37,1,0,"_react"],[19,43,1,0],[20,2,3,0],[21,0,4,0],[22,0,5,0],[23,0,6,0],[24,0,7,0],[25,0,8,0],[26,0,9,0],[27,0,10,0],[28,0,11,0],[29,0,12,0],[30,0,13,0],[31,2,14,0],[31,11,14,9,"$70d70eb16ea48428$var$Row"],[31,36,14,34,"$70d70eb16ea48428$var$Row"],[31,37,14,35,"props"],[31,42,14,40],[31,44,14,42],[32,4,15,4],[32,11,15,11],[32,15,15,15],[33,2,16,0],[34,2,17,0,"$70d70eb16ea48428$var$Row"],[34,27,17,25],[34,28,17,26,"getCollectionNode"],[34,45,17,43],[34,48,17,46],[34,58,17,56,"getCollectionNode"],[34,75,17,73,"getCollectionNode"],[34,76,17,74,"props"],[34,81,17,79],[34,83,17,81,"context"],[34,90,17,88],[34,92,17,90],[35,4,18,4],[35,8,18,8],[36,6,18,10,"children"],[36,14,18,18],[36,16,18,20,"children"],[36,24,18,28],[37,6,18,30,"textValue"],[37,15,18,39],[37,17,18,41,"textValue"],[37,26,18,50],[38,6,18,52,"UNSTABLE_childItems"],[38,25,18,71],[38,27,18,73,"UNSTABLE_childItems"],[39,4,18,93],[39,5,18,94],[39,8,18,97,"props"],[39,13,18,102],[40,4,19,4],[40,10,19,10],[41,6,20,8,"type"],[41,10,20,12],[41,12,20,14],[41,18,20,20],[42,6,21,8,"props"],[42,11,21,13],[42,13,21,15,"props"],[42,18,21,20],[43,6,22,8,"textValue"],[43,15,22,17],[43,17,22,19,"textValue"],[43,26,22,28],[44,6,23,8],[44,18,23,20],[44,20,23,22,"props"],[44,25,23,27],[44,26,23,28],[44,38,23,40],[44,39,23,41],[45,6,24,8,"hasChildNodes"],[45,19,24,21],[45,21,24,23],[45,25,24,27],[46,6,25,8],[46,7,25,9,"childNodes"],[46,17,25,19,"childNodes"],[46,18,25,19],[46,20,25,23],[47,8,26,12],[48,8,27,12],[48,12,27,16,"context"],[48,19,27,23],[48,20,27,24,"showDragButtons"],[48,35,27,39],[48,37,27,41],[48,43,27,47],[49,10,28,16,"type"],[49,14,28,20],[49,16,28,22],[49,22,28,28],[50,10,29,16,"key"],[50,13,29,19],[50,15,29,21],[50,28,29,34],[51,10,30,16,"props"],[51,15,30,21],[51,17,30,23],[52,12,31,20,"isDragButtonCell"],[52,28,31,36],[52,30,31,38],[53,10,32,16],[54,8,33,12],[54,9,33,13],[55,8,34,12],[55,12,34,16,"context"],[55,19,34,23],[55,20,34,24,"showSelectionCheckboxes"],[55,43,34,47],[55,47,34,51,"context"],[55,54,34,58],[55,55,34,59,"selectionMode"],[55,68,34,72],[55,73,34,77],[55,79,34,83],[55,81,34,85],[55,87,34,91],[56,10,35,16,"type"],[56,14,35,20],[56,16,35,22],[56,22,35,28],[57,10,36,16,"key"],[57,13,36,19],[57,15,36,21],[57,23,36,29],[58,10,37,16,"props"],[58,15,37,21],[58,17,37,23],[59,12,38,20,"isSelectionCell"],[59,27,38,35],[59,29,38,37],[60,10,39,16],[61,8,40,12],[61,9,40,13],[62,8,41,12],[62,12,41,16],[62,19,41,23,"children"],[62,27,41,31],[62,32,41,36],[62,42,41,46],[62,44,41,48],[63,10,42,16],[63,15,42,21],[63,19,42,25,"column"],[63,25,42,31],[63,29,42,35,"context"],[63,36,42,42],[63,37,42,43,"columns"],[63,44,42,50],[63,46,42,51],[63,52,42,57],[64,12,43,20,"type"],[64,16,43,24],[64,18,43,26],[64,24,43,32],[65,12,44,20,"element"],[65,19,44,27],[65,21,44,29,"children"],[65,29,44,37],[65,30,44,38,"column"],[65,36,44,44],[65,37,44,45,"key"],[65,40,44,48],[65,41,44,49],[66,12,45,20,"key"],[66,15,45,23],[66,17,45,25,"column"],[66,23,45,31],[66,24,45,32,"key"],[66,27,45,35],[66,28,45,36],[67,10,46,16],[67,11,46,17],[68,10,47,16],[68,14,47,20,"UNSTABLE_childItems"],[68,33,47,39],[68,35,47,41],[68,40,47,46],[68,44,47,50,"child"],[68,49,47,55],[68,53,47,59,"UNSTABLE_childItems"],[68,72,47,78],[69,10,47,79],[70,10,48,16],[71,10,49,16],[71,16,49,22],[72,12,50,20,"type"],[72,16,50,24],[72,18,50,26],[72,24,50,32],[73,12,51,20,"value"],[73,17,51,25],[73,19,51,27,"child"],[74,10,52,16],[74,11,52,17],[75,8,53,12],[75,9,53,13],[75,15,53,19],[76,10,54,16],[76,14,54,20,"cells"],[76,19,54,25],[76,22,54,28],[76,24,54,30],[77,10,55,16],[77,14,55,20,"childRows"],[77,23,55,29],[77,26,55,32],[77,28,55,34],[78,10,56,16],[78,14,56,20,"columnCount"],[78,25,56,31],[78,28,56,34],[78,29,56,35],[79,10,57,16],[79,11,57,17],[79,12,57,18],[79,14,57,20,"$7GIZw$react"],[79,26,57,32],[79,27,57,32,"default"],[79,34,57,32],[79,36,57,34,"Children"],[79,44,57,42],[79,45,57,43,"forEach"],[79,52,57,50],[79,53,57,51,"children"],[79,61,57,59],[79,63,57,62,"node"],[79,67,57,66],[79,71,57,69],[80,12,58,20],[80,16,58,24,"node"],[80,20,58,28],[80,21,58,29,"type"],[80,25,58,33],[80,30,58,38,"$70d70eb16ea48428$var$Row"],[80,55,58,63],[80,57,58,65],[81,14,59,24],[81,18,59,28,"cells"],[81,23,59,33],[81,24,59,34,"length"],[81,30,59,40],[81,33,59,43,"context"],[81,40,59,50],[81,41,59,51,"columns"],[81,48,59,58],[81,49,59,59,"length"],[81,55,59,65],[81,57,59,67],[81,63,59,73],[81,67,59,77,"Error"],[81,72,59,82],[81,73,59,83],[81,144,59,154],[81,145,59,155],[82,14,60,24,"childRows"],[82,23,60,33],[82,24,60,34,"push"],[82,28,60,38],[82,29,60,39],[83,16,61,28,"type"],[83,20,61,32],[83,22,61,34],[83,28,61,40],[84,16,62,28,"element"],[84,23,62,35],[84,25,62,37,"node"],[85,14,63,24],[85,15,63,25],[85,16,63,26],[86,12,64,20],[86,13,64,21],[86,19,64,27],[87,14,65,24,"cells"],[87,19,65,29],[87,20,65,30,"push"],[87,24,65,34],[87,25,65,35],[88,16,66,28,"type"],[88,20,66,32],[88,22,66,34],[88,28,66,40],[89,16,67,28,"element"],[89,23,67,35],[89,25,67,37,"node"],[90,14,68,24],[90,15,68,25],[90,16,68,26],[91,14,69,24],[91,18,69,28,"_node_props_colSpan"],[91,37,69,47],[92,14,70,24,"columnCount"],[92,25,70,35],[92,29,70,39],[92,30,70,40,"_node_props_colSpan"],[92,49,70,59],[92,52,70,62,"node"],[92,56,70,66],[92,57,70,67,"props"],[92,62,70,72],[92,63,70,73,"colSpan"],[92,70,70,80],[92,76,70,86],[92,80,70,90],[92,84,70,94,"_node_props_colSpan"],[92,103,70,113],[92,108,70,118],[92,113,70,123],[92,114,70,124],[92,117,70,127,"_node_props_colSpan"],[92,136,70,146],[92,139,70,149],[92,140,70,150],[93,12,71,20],[94,10,72,16],[94,11,72,17],[94,12,72,18],[95,10,73,16],[95,14,73,20,"columnCount"],[95,25,73,31],[95,30,73,36,"context"],[95,37,73,43],[95,38,73,44,"columns"],[95,45,73,51],[95,46,73,52,"length"],[95,52,73,58],[95,54,73,60],[95,60,73,66],[95,64,73,70,"Error"],[95,69,73,75],[95,70,73,76],[95,115,73,121,"columnCount"],[95,126,73,132],[95,140,73,146,"context"],[95,147,73,153],[95,148,73,154,"columns"],[95,155,73,161],[95,156,73,162,"length"],[95,162,73,168],[95,173,73,179],[95,174,73,180],[96,10,74,16],[96,17,74,23,"cells"],[96,22,74,28],[97,10,75,16],[97,17,75,23,"childRows"],[97,26,75,32],[98,8,76,12],[99,6,77,8],[99,7,77,9],[100,6,78,8,"shouldInvalidate"],[100,22,78,24,"shouldInvalidate"],[100,23,78,26,"newContext"],[100,33,78,36],[100,35,78,38],[101,8,79,12],[102,8,80,12],[102,15,80,19,"newContext"],[102,25,80,29],[102,26,80,30,"columns"],[102,33,80,37],[102,34,80,38,"length"],[102,40,80,44],[102,45,80,49,"context"],[102,52,80,56],[102,53,80,57,"columns"],[102,60,80,64],[102,61,80,65,"length"],[102,67,80,71],[102,71,80,75,"newContext"],[102,81,80,85],[102,82,80,86,"columns"],[102,89,80,93],[102,90,80,94,"some"],[102,94,80,98],[102,95,80,99],[102,96,80,100,"c"],[102,97,80,101],[102,99,80,103,"i"],[102,100,80,104],[102,105,80,107,"c"],[102,106,80,108],[102,107,80,109,"key"],[102,110,80,112],[102,115,80,117,"context"],[102,122,80,124],[102,123,80,125,"columns"],[102,130,80,132],[102,131,80,133,"i"],[102,132,80,134],[102,133,80,135],[102,134,80,136,"key"],[102,137,80,139],[102,138,80,140],[102,142,80,144,"newContext"],[102,152,80,154],[102,153,80,155,"showSelectionCheckboxes"],[102,176,80,178],[102,181,80,183,"context"],[102,188,80,190],[102,189,80,191,"showSelectionCheckboxes"],[102,212,80,214],[102,216,80,218,"newContext"],[102,226,80,228],[102,227,80,229,"showDragButtons"],[102,242,80,244],[102,247,80,249,"context"],[102,254,80,256],[102,255,80,257,"showDragButtons"],[102,270,80,272],[102,274,80,276,"newContext"],[102,284,80,286],[102,285,80,287,"selectionMode"],[102,298,80,300],[102,303,80,305,"context"],[102,310,80,312],[102,311,80,313,"selectionMode"],[102,324,80,326],[103,6,81,8],[104,4,82,4],[104,5,82,5],[105,2,83,0],[105,3,83,1],[106,2,84,0],[107,0,85,0],[108,0,86,0],[109,0,87,0],[110,0,88,0],[110,5,84,0],[110,6,88,4],[111,2,89,0],[111,6,89,4,"$70d70eb16ea48428$export$b59bdbef9ce70de2"],[111,47,89,45],[111,50,89,48,"$70d70eb16ea48428$var$Row"],[111,75,89,73],[112,0,89,74],[112,3]],"functionMap":{"names":["<global>","$70d70eb16ea48428$var$Row","getCollectionNode","childNodes","Children.forEach$argument_1","shouldInvalidate","newContext.columns.some$argument_0"],"mappings":"AAA;ACa;CDE;8CEC;QCQ;6DCgC;iBDe;SDK;QGC;mGCE,wCD;SHC;CFE"},"hasCjsExports":false},"type":"js/module"}]}