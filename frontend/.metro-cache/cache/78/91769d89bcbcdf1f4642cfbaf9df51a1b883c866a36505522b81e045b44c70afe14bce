{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":53,"index":102}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./ProviderUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":144},"end":{"line":4,"column":73,"index":217}}],"key":"3McbOTBpufzGiY7DyBTqBkGjrFQ=","exportNames":["*"],"imports":1}},{"name":"../AuthRequest","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":218},"end":{"line":5,"column":45,"index":263}}],"key":"gMV5usom2+XLLnyk+wx/3jVUVOw=","exportNames":["*"],"imports":1}},{"name":"../AuthRequest.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":264},"end":{"line":6,"column":61,"index":325}}],"key":"oJAxeM97ELbPsokkvBL6RHT6FvM=","exportNames":["*"],"imports":1}},{"name":"../AuthRequestHooks","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":326},"end":{"line":7,"column":81,"index":407}}],"key":"OChfWKVO1k4smmk4GZz/98WaM/U=","exportNames":["*"],"imports":1}},{"name":"../AuthSession","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":408},"end":{"line":8,"column":49,"index":457}}],"key":"NEiIEpzTpy3gL+QP2mEyQz2DX/A=","exportNames":["*"],"imports":1}},{"name":"../PKCE","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":458},"end":{"line":9,"column":49,"index":507}}],"key":"chClTscode2727RE9rl0bncshz0=","exportNames":["*"],"imports":1}},{"name":"../TokenRequest","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":508},"end":{"line":10,"column":53,"index":561}}],"key":"LRHZhTF+zvS77EpZyNeADoCmWXg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"language\", \"loginHint\", \"selectAccount\", \"extraParams\", \"clientSecret\"],\n    _excluded2 = [\"extraParams\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"discovery\", {\n    enumerable: true,\n    get: function () {\n      return discovery;\n    }\n  });\n  exports.useIdTokenAuthRequest = useIdTokenAuthRequest;\n  exports.useAuthRequest = useAuthRequest;\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _expoApplication = require(_dependencyMap[1], \"expo-application\");\n  var Application = _interopNamespace(_expoApplication);\n  var _react = require(_dependencyMap[2], \"react\");\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _ProviderUtils = require(_dependencyMap[4], \"./ProviderUtils\");\n  var _AuthRequest = require(_dependencyMap[5], \"../AuthRequest\");\n  var _AuthRequestTypes = require(_dependencyMap[6], \"../AuthRequest.types\");\n  var _AuthRequestHooks = require(_dependencyMap[7], \"../AuthRequestHooks\");\n  var _AuthSession = require(_dependencyMap[8], \"../AuthSession\");\n  var _PKCE = require(_dependencyMap[9], \"../PKCE\");\n  var _TokenRequest = require(_dependencyMap[10], \"../TokenRequest\");\n  const settings = {\n    windowFeatures: {\n      width: 515,\n      height: 680\n    },\n    minimumScopes: ['openid', 'https://www.googleapis.com/auth/userinfo.profile', 'https://www.googleapis.com/auth/userinfo.email']\n  };\n  const discovery = {\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\n    tokenEndpoint: 'https://oauth2.googleapis.com/token',\n    revocationEndpoint: 'https://oauth2.googleapis.com/revoke',\n    userInfoEndpoint: 'https://openidconnect.googleapis.com/v1/userinfo'\n  };\n  // @needsAudit\n  /**\n   * Extends [`AuthRequest`](#authrequest) and accepts [`GoogleAuthRequestConfig`](#googleauthrequestconfig) in the constructor.\n   */\n  class GoogleAuthRequest extends _AuthRequest.AuthRequest {\n    constructor(_ref) {\n      let {\n          language,\n          loginHint,\n          selectAccount,\n          extraParams = {},\n          clientSecret\n        } = _ref,\n        config = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      const inputParams = Object.assign({}, extraParams);\n      if (language) inputParams.hl = language;\n      if (loginHint) inputParams.login_hint = loginHint;\n      if (selectAccount) inputParams.prompt = _AuthRequestTypes.Prompt.SelectAccount;\n      // Apply the default scopes\n      const scopes = (0, _ProviderUtils.applyRequiredScopes)(config.scopes, settings.minimumScopes);\n      const isImplicit = config.responseType === _AuthRequestTypes.ResponseType.Token || config.responseType === _AuthRequestTypes.ResponseType.IdToken;\n      if (isImplicit) {\n        // PKCE must be disabled in implicit mode.\n        config.usePKCE = false;\n      }\n      let inputClientSecret;\n      //  Google will throw if you attempt to use the client secret\n      if (config.responseType && config.responseType !== _AuthRequestTypes.ResponseType.Code) {\n        // TODO: maybe warn that you shouldn't store the client secret on the client\n        inputClientSecret = clientSecret;\n      }\n      super(Object.assign({}, config, {\n        clientSecret: inputClientSecret,\n        scopes,\n        extraParams: inputParams\n      }));\n    }\n    /**\n     * Load and return a valid auth request based on the input config.\n     */\n    async getAuthRequestConfigAsync() {\n      const _await$super$getAuthR = await super.getAuthRequestConfigAsync(),\n        {\n          extraParams = {}\n        } = _await$super$getAuthR,\n        config = (0, _objectWithoutPropertiesLoose.default)(_await$super$getAuthR, _excluded2);\n      if (config.responseType === _AuthRequestTypes.ResponseType.IdToken && !extraParams.nonce && !this.nonce) {\n        if (!this.nonce) {\n          this.nonce = await (0, _PKCE.generateHexStringAsync)(16);\n        }\n        extraParams.nonce = this.nonce;\n      }\n      return Object.assign({}, config, {\n        extraParams\n      });\n    }\n  }\n  /**\n   * Load an authorization request with an ID Token for authentication with Firebase.\n   *\n   * Returns a loaded request, a response, and a prompt method.\n   * When the prompt method completes then the response will be fulfilled.\n   *\n   * The id token can be retrieved with `response.params.id_token`.\n   *\n   * - [Get Started](https://docs.expo.dev/guides/authentication/#google)\n   *\n   * @param config\n   * @param redirectUriOptions\n   */\n  function useIdTokenAuthRequest(config, redirectUriOptions = {}) {\n    const isWebAuth = Platform.default.OS === 'web';\n    return useAuthRequest(Object.assign({}, config, {\n      responseType:\n      // If the client secret is provided then code can be used\n      !config.clientSecret &&\n      // When web auth is used, we can request the `id_token` directly without exchanging a code.\n      isWebAuth ? _AuthRequestTypes.ResponseType.IdToken : undefined\n    }), Object.assign({}, redirectUriOptions));\n  }\n  /**\n   * Load an authorization request.\n   * Returns a loaded request, a response, and a prompt method.\n   * When the prompt method completes, then the response will be fulfilled.\n   *\n   * - [Get Started](https://docs.expo.dev/guides/authentication/#google)\n   *\n   * @param config\n   * @param redirectUriOptions\n   */\n  function useAuthRequest(config = {}, redirectUriOptions = {}) {\n    const clientId = (0, _react.useMemo)(() => {\n      const propertyName = Platform.default.select({\n        ios: 'iosClientId',\n        android: 'androidClientId',\n        default: 'webClientId'\n      });\n      const clientId = config[propertyName] ?? config.clientId;\n      (0, _ProviderUtils.invariantClientId)(propertyName, clientId, 'Google');\n      return clientId;\n    }, [config.iosClientId, config.androidClientId, config.webClientId, config.clientId]);\n    const responseType = (0, _react.useMemo)(() => {\n      // Allow overrides.\n      if (typeof config.responseType !== 'undefined') {\n        return config.responseType;\n      }\n      // You can only use `response_token=code` on installed apps (iOS, Android without proxy).\n      // Installed apps can auto exchange without a client secret and get the token and id-token (Firebase).\n      const isInstalledApp = Platform.default.OS !== 'web';\n      // If the user provided the client secret (they shouldn't!) then use code exchange by default.\n      if (config.clientSecret || isInstalledApp) {\n        return _AuthRequestTypes.ResponseType.Code;\n      }\n      // This seems the most pragmatic option since it can result in a full authentication on web and proxy platforms as expected.\n      return _AuthRequestTypes.ResponseType.Token;\n    }, [config.responseType, config.clientSecret]);\n    const redirectUri = (0, _react.useMemo)(() => {\n      if (typeof config.redirectUri !== 'undefined') {\n        return config.redirectUri;\n      }\n      return (0, _AuthSession.makeRedirectUri)(Object.assign({\n        native: `${Application.applicationId}:/oauthredirect`\n      }, redirectUriOptions));\n    }, [config.redirectUri, redirectUriOptions]);\n    const extraParams = (0, _react.useMemo)(() => {\n      const output = config.extraParams ? Object.assign({}, config.extraParams) : {};\n      if (config.language) {\n        output.hl = output.language;\n      }\n      if (config.loginHint) {\n        output.login_hint = output.loginHint;\n      }\n      if (config.selectAccount) {\n        output.prompt = _AuthRequestTypes.Prompt.SelectAccount;\n      }\n      return output;\n    }, [config.extraParams, config.language, config.loginHint, config.selectAccount]);\n    const request = (0, _AuthRequestHooks.useLoadedAuthRequest)(Object.assign({}, config, {\n      responseType,\n      extraParams,\n      clientId,\n      redirectUri\n    }), discovery, GoogleAuthRequest);\n    const [result, promptAsync] = (0, _AuthRequestHooks.useAuthRequestResult)(request, discovery, {\n      windowFeatures: settings.windowFeatures\n    });\n    const [fullResult, setFullResult] = (0, _react.useState)(null);\n    const shouldAutoExchangeCode = (0, _react.useMemo)(() => {\n      // allow overrides\n      if (typeof config.shouldAutoExchangeCode !== 'undefined') {\n        return config.shouldAutoExchangeCode;\n      }\n      // has a code to exchange and doesn't have an authentication yet.\n      return result?.type === 'success' && result.params.code && !result.authentication;\n    }, [config.shouldAutoExchangeCode, result?.type]);\n    (0, _react.useEffect)(() => {\n      let isMounted = true;\n      if (shouldAutoExchangeCode && result?.type === 'success') {\n        const exchangeRequest = new _TokenRequest.AccessTokenRequest({\n          clientId,\n          clientSecret: config.clientSecret,\n          redirectUri,\n          scopes: config.scopes,\n          code: result.params.code,\n          extraParams: {\n            code_verifier: request?.codeVerifier || ''\n          }\n        });\n        exchangeRequest.performAsync(discovery).then(authentication => {\n          if (isMounted) {\n            setFullResult(Object.assign({}, result, {\n              params: Object.assign({\n                id_token: authentication?.idToken || '',\n                access_token: authentication.accessToken\n              }, result.params),\n              authentication\n            }));\n          }\n        });\n      } else {\n        setFullResult(result);\n      }\n      return () => {\n        isMounted = false;\n      };\n    }, [clientId, redirectUri, shouldAutoExchangeCode, config.clientSecret, config.scopes?.join(','), request?.codeVerifier, result]);\n    return [request, fullResult, promptAsync];\n  }\n});","lineCount":252,"map":[[29,2,19,0,"Object"],[29,8,19,0],[29,9,19,0,"defineProperty"],[29,23,19,0],[29,24,19,0,"exports"],[29,31,19,0],[30,4,19,0,"enumerable"],[30,14,19,0],[31,4,19,0,"get"],[31,7,19,0],[31,18,19,0,"get"],[31,19,19,0],[32,6,19,0],[32,13,19,0,"discovery"],[32,22,19,0],[33,4,19,0],[34,2,19,0],[35,2,91,0,"exports"],[35,9,91,0],[35,10,91,0,"useIdTokenAuthRequest"],[35,31,91,0],[35,34,91,0,"useIdTokenAuthRequest"],[35,55,91,0],[36,2,114,0,"exports"],[36,9,114,0],[36,10,114,0,"useAuthRequest"],[36,24,114,0],[36,27,114,0,"useAuthRequest"],[36,41,114,0],[37,2,225,1],[37,6,225,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[37,54,225,1],[37,57,225,1,"require"],[37,64,225,1],[37,65,225,1,"_dependencyMap"],[37,79,225,1],[38,2,225,1],[38,6,225,1,"_objectWithoutPropertiesLoose"],[38,35,225,1],[38,38,225,1,"_interopDefault"],[38,53,225,1],[38,54,225,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[38,102,225,1],[39,2,1,0],[39,6,1,0,"_expoApplication"],[39,22,1,0],[39,25,1,0,"require"],[39,32,1,0],[39,33,1,0,"_dependencyMap"],[39,47,1,0],[40,2,1,0],[40,6,1,0,"Application"],[40,17,1,0],[40,20,1,0,"_interopNamespace"],[40,37,1,0],[40,38,1,0,"_expoApplication"],[40,54,1,0],[41,2,2,0],[41,6,2,0,"_react"],[41,12,2,0],[41,15,2,0,"require"],[41,22,2,0],[41,23,2,0,"_dependencyMap"],[41,37,2,0],[42,2,2,53],[42,6,2,53,"_reactNativeWebDistExportsPlatform"],[42,40,2,53],[42,43,2,53,"require"],[42,50,2,53],[42,51,2,53,"_dependencyMap"],[42,65,2,53],[43,2,2,53],[43,6,2,53,"Platform"],[43,14,2,53],[43,17,2,53,"_interopDefault"],[43,32,2,53],[43,33,2,53,"_reactNativeWebDistExportsPlatform"],[43,67,2,53],[44,2,4,0],[44,6,4,0,"_ProviderUtils"],[44,20,4,0],[44,23,4,0,"require"],[44,30,4,0],[44,31,4,0,"_dependencyMap"],[44,45,4,0],[45,2,5,0],[45,6,5,0,"_AuthRequest"],[45,18,5,0],[45,21,5,0,"require"],[45,28,5,0],[45,29,5,0,"_dependencyMap"],[45,43,5,0],[46,2,6,0],[46,6,6,0,"_AuthRequestTypes"],[46,23,6,0],[46,26,6,0,"require"],[46,33,6,0],[46,34,6,0,"_dependencyMap"],[46,48,6,0],[47,2,7,0],[47,6,7,0,"_AuthRequestHooks"],[47,23,7,0],[47,26,7,0,"require"],[47,33,7,0],[47,34,7,0,"_dependencyMap"],[47,48,7,0],[48,2,8,0],[48,6,8,0,"_AuthSession"],[48,18,8,0],[48,21,8,0,"require"],[48,28,8,0],[48,29,8,0,"_dependencyMap"],[48,43,8,0],[49,2,9,0],[49,6,9,0,"_PKCE"],[49,11,9,0],[49,14,9,0,"require"],[49,21,9,0],[49,22,9,0,"_dependencyMap"],[49,36,9,0],[50,2,10,0],[50,6,10,0,"_TokenRequest"],[50,19,10,0],[50,22,10,0,"require"],[50,29,10,0],[50,30,10,0,"_dependencyMap"],[50,44,10,0],[51,2,11,0],[51,8,11,6,"settings"],[51,16,11,14],[51,19,11,17],[52,4,12,4,"windowFeatures"],[52,18,12,18],[52,20,12,20],[53,6,12,22,"width"],[53,11,12,27],[53,13,12,29],[53,16,12,32],[54,6,12,34,"height"],[54,12,12,40],[54,14,12,42],[55,4,12,46],[55,5,12,47],[56,4,13,4,"minimumScopes"],[56,17,13,17],[56,19,13,19],[56,20,14,8],[56,28,14,16],[56,30,15,8],[56,80,15,58],[56,82,16,8],[56,130,16,56],[57,2,18,0],[57,3,18,1],[58,2,19,7],[58,8,19,13,"discovery"],[58,17,19,22],[58,20,19,25],[59,4,20,4,"authorizationEndpoint"],[59,25,20,25],[59,27,20,27],[59,73,20,73],[60,4,21,4,"tokenEndpoint"],[60,17,21,17],[60,19,21,19],[60,56,21,56],[61,4,22,4,"revocationEndpoint"],[61,22,22,22],[61,24,22,24],[61,62,22,62],[62,4,23,4,"userInfoEndpoint"],[62,20,23,20],[62,22,23,22],[63,2,24,0],[63,3,24,1],[64,2,25,0],[65,2,26,0],[66,0,27,0],[67,0,28,0],[68,2,29,0],[68,8,29,6,"GoogleAuthRequest"],[68,25,29,23],[68,34,29,32,"AuthRequest"],[68,46,29,43],[68,47,29,43,"AuthRequest"],[68,58,29,43],[68,59,29,44],[69,4,31,4,"constructor"],[69,15,31,15,"constructor"],[69,16,31,15,"_ref"],[69,20,31,15],[69,22,31,99],[70,6,31,99],[70,10,31,16],[71,10,31,18,"language"],[71,18,31,26],[72,10,31,28,"loginHint"],[72,19,31,37],[73,10,31,39,"selectAccount"],[73,23,31,52],[74,10,31,54,"extraParams"],[74,21,31,65],[74,24,31,68],[74,25,31,69],[74,26,31,70],[75,10,31,72,"clientSecret"],[76,8,31,96],[76,9,31,97],[76,12,31,97,"_ref"],[76,16,31,97],[77,8,31,89,"config"],[77,14,31,95],[77,21,31,95,"_objectWithoutPropertiesLoose"],[77,50,31,95],[77,51,31,95,"default"],[77,58,31,95],[77,60,31,95,"_ref"],[77,64,31,95],[77,66,31,95,"_excluded"],[77,75,31,95],[78,6,32,8],[78,12,32,14,"inputParams"],[78,23,32,25],[78,26,32,25,"Object"],[78,32,32,25],[78,33,32,25,"assign"],[78,39,32,25],[78,44,33,15,"extraParams"],[78,55,33,26],[78,56,34,9],[79,6,35,8],[79,10,35,12,"language"],[79,18,35,20],[79,20,36,12,"inputParams"],[79,31,36,23],[79,32,36,24,"hl"],[79,34,36,26],[79,37,36,29,"language"],[79,45,36,37],[80,6,37,8],[80,10,37,12,"loginHint"],[80,19,37,21],[80,21,38,12,"inputParams"],[80,32,38,23],[80,33,38,24,"login_hint"],[80,43,38,34],[80,46,38,37,"loginHint"],[80,55,38,46],[81,6,39,8],[81,10,39,12,"selectAccount"],[81,23,39,25],[81,25,40,12,"inputParams"],[81,36,40,23],[81,37,40,24,"prompt"],[81,43,40,30],[81,46,40,33,"Prompt"],[81,63,40,39],[81,64,40,39,"Prompt"],[81,70,40,39],[81,71,40,40,"SelectAccount"],[81,84,40,53],[82,6,41,8],[83,6,42,8],[83,12,42,14,"scopes"],[83,18,42,20],[83,21,42,23],[83,25,42,23,"applyRequiredScopes"],[83,39,42,42],[83,40,42,42,"applyRequiredScopes"],[83,59,42,42],[83,61,42,43,"config"],[83,67,42,49],[83,68,42,50,"scopes"],[83,74,42,56],[83,76,42,58,"settings"],[83,84,42,66],[83,85,42,67,"minimumScopes"],[83,98,42,80],[83,99,42,81],[84,6,43,8],[84,12,43,14,"isImplicit"],[84,22,43,24],[84,25,43,27,"config"],[84,31,43,33],[84,32,43,34,"responseType"],[84,44,43,46],[84,49,43,51,"ResponseType"],[84,66,43,63],[84,67,43,63,"ResponseType"],[84,79,43,63],[84,80,43,64,"Token"],[84,85,43,69],[84,89,43,73,"config"],[84,95,43,79],[84,96,43,80,"responseType"],[84,108,43,92],[84,113,43,97,"ResponseType"],[84,130,43,109],[84,131,43,109,"ResponseType"],[84,143,43,109],[84,144,43,110,"IdToken"],[84,151,43,117],[85,6,44,8],[85,10,44,12,"isImplicit"],[85,20,44,22],[85,22,44,24],[86,8,45,12],[87,8,46,12,"config"],[87,14,46,18],[87,15,46,19,"usePKCE"],[87,22,46,26],[87,25,46,29],[87,30,46,34],[88,6,47,8],[89,6,48,8],[89,10,48,12,"inputClientSecret"],[89,27,48,29],[90,6,49,8],[91,6,50,8],[91,10,50,12,"config"],[91,16,50,18],[91,17,50,19,"responseType"],[91,29,50,31],[91,33,50,35,"config"],[91,39,50,41],[91,40,50,42,"responseType"],[91,52,50,54],[91,57,50,59,"ResponseType"],[91,74,50,71],[91,75,50,71,"ResponseType"],[91,87,50,71],[91,88,50,72,"Code"],[91,92,50,76],[91,94,50,78],[92,8,51,12],[93,8,52,12,"inputClientSecret"],[93,25,52,29],[93,28,52,32,"clientSecret"],[93,40,52,44],[94,6,53,8],[95,6,54,8],[95,11,54,13],[95,12,54,13,"Object"],[95,18,54,13],[95,19,54,13,"assign"],[95,25,54,13],[95,30,55,15,"config"],[95,36,55,21],[96,8,56,12,"clientSecret"],[96,20,56,24],[96,22,56,26,"inputClientSecret"],[96,39,56,43],[97,8,57,12,"scopes"],[97,14,57,18],[98,8,58,12,"extraParams"],[98,19,58,23],[98,21,58,25,"inputParams"],[99,6,58,36],[99,8,59,9],[99,9,59,10],[100,4,60,4],[101,4,61,4],[102,0,62,0],[103,0,63,0],[104,4,64,4],[104,10,64,10,"getAuthRequestConfigAsync"],[104,35,64,35,"getAuthRequestConfigAsync"],[104,36,64,35],[104,38,64,38],[105,6,65,8],[105,12,65,8,"_await$super$getAuthR"],[105,33,65,8],[105,36,65,48],[105,42,65,54],[105,47,65,59],[105,48,65,60,"getAuthRequestConfigAsync"],[105,73,65,85],[105,74,65,86],[105,75,65,87],[106,8,65,14],[107,10,65,16,"extraParams"],[107,21,65,27],[107,24,65,30],[107,25,65,31],[108,8,65,44],[108,9,65,45],[108,12,65,45,"_await$super$getAuthR"],[108,33,65,45],[109,8,65,37,"config"],[109,14,65,43],[109,21,65,43,"_objectWithoutPropertiesLoose"],[109,50,65,43],[109,51,65,43,"default"],[109,58,65,43],[109,60,65,43,"_await$super$getAuthR"],[109,81,65,43],[109,83,65,43,"_excluded2"],[109,93,65,43],[110,6,66,8],[110,10,66,12,"config"],[110,16,66,18],[110,17,66,19,"responseType"],[110,29,66,31],[110,34,66,36,"ResponseType"],[110,51,66,48],[110,52,66,48,"ResponseType"],[110,64,66,48],[110,65,66,49,"IdToken"],[110,72,66,56],[110,76,66,60],[110,77,66,61,"extraParams"],[110,88,66,72],[110,89,66,73,"nonce"],[110,94,66,78],[110,98,66,82],[110,99,66,83],[110,103,66,87],[110,104,66,88,"nonce"],[110,109,66,93],[110,111,66,95],[111,8,67,12],[111,12,67,16],[111,13,67,17],[111,17,67,21],[111,18,67,22,"nonce"],[111,23,67,27],[111,25,67,29],[112,10,68,16],[112,14,68,20],[112,15,68,21,"nonce"],[112,20,68,26],[112,23,68,29],[112,29,68,35],[112,33,68,35,"generateHexStringAsync"],[112,38,68,57],[112,39,68,57,"generateHexStringAsync"],[112,61,68,57],[112,63,68,58],[112,65,68,60],[112,66,68,61],[113,8,69,12],[114,8,70,12,"extraParams"],[114,19,70,23],[114,20,70,24,"nonce"],[114,25,70,29],[114,28,70,32],[114,32,70,36],[114,33,70,37,"nonce"],[114,38,70,42],[115,6,71,8],[116,6,72,8],[116,13,72,8,"Object"],[116,19,72,8],[116,20,72,8,"assign"],[116,26,72,8],[116,31,73,15,"config"],[116,37,73,21],[117,8,74,12,"extraParams"],[118,6,74,23],[119,4,76,4],[120,2,77,0],[121,2,78,0],[122,0,79,0],[123,0,80,0],[124,0,81,0],[125,0,82,0],[126,0,83,0],[127,0,84,0],[128,0,85,0],[129,0,86,0],[130,0,87,0],[131,0,88,0],[132,0,89,0],[133,0,90,0],[134,2,91,7],[134,11,91,16,"useIdTokenAuthRequest"],[134,32,91,37,"useIdTokenAuthRequest"],[134,33,91,38,"config"],[134,39,91,44],[134,41,91,46,"redirectUriOptions"],[134,59,91,64],[134,62,91,67],[134,63,91,68],[134,64,91,69],[134,66,91,71],[135,4,92,4],[135,10,92,10,"isWebAuth"],[135,19,92,19],[135,22,92,22,"Platform"],[135,30,92,30],[135,31,92,30,"default"],[135,38,92,30],[135,39,92,31,"OS"],[135,41,92,33],[135,46,92,38],[135,51,92,43],[136,4,93,4],[136,11,93,11,"useAuthRequest"],[136,25,93,25],[136,26,93,25,"Object"],[136,32,93,25],[136,33,93,25,"assign"],[136,39,93,25],[136,44,94,11,"config"],[136,50,94,17],[137,6,95,8,"responseType"],[137,18,95,20],[138,6,96,8],[139,6,97,8],[139,7,97,9,"config"],[139,13,97,15],[139,14,97,16,"clientSecret"],[139,26,97,28],[140,6,98,12],[141,6,99,12,"isWebAuth"],[141,15,99,21],[141,18,100,14,"ResponseType"],[141,35,100,26],[141,36,100,26,"ResponseType"],[141,48,100,26],[141,49,100,27,"IdToken"],[141,56,100,34],[141,59,101,14,"undefined"],[142,4,101,23],[142,8,101,23,"Object"],[142,14,101,23],[142,15,101,23,"assign"],[142,21,101,23],[142,26,102,12,"redirectUriOptions"],[142,44,102,30],[142,45,102,32],[142,46,102,33],[143,2,103,0],[144,2,104,0],[145,0,105,0],[146,0,106,0],[147,0,107,0],[148,0,108,0],[149,0,109,0],[150,0,110,0],[151,0,111,0],[152,0,112,0],[153,0,113,0],[154,2,114,7],[154,11,114,16,"useAuthRequest"],[154,25,114,30,"useAuthRequest"],[154,26,114,31,"config"],[154,32,114,37],[154,35,114,40],[154,36,114,41],[154,37,114,42],[154,39,114,44,"redirectUriOptions"],[154,57,114,62],[154,60,114,65],[154,61,114,66],[154,62,114,67],[154,64,114,69],[155,4,115,4],[155,10,115,10,"clientId"],[155,18,115,18],[155,21,115,21],[155,25,115,21,"useMemo"],[155,31,115,28],[155,32,115,28,"useMemo"],[155,39,115,28],[155,41,115,29],[155,47,115,35],[156,6,116,8],[156,12,116,14,"propertyName"],[156,24,116,26],[156,27,116,29,"Platform"],[156,35,116,37],[156,36,116,37,"default"],[156,43,116,37],[156,44,116,38,"select"],[156,50,116,44],[156,51,116,45],[157,8,117,12,"ios"],[157,11,117,15],[157,13,117,17],[157,26,117,30],[158,8,118,12,"android"],[158,15,118,19],[158,17,118,21],[158,34,118,38],[159,8,119,12,"default"],[159,15,119,19],[159,17,119,21],[160,6,120,8],[160,7,120,9],[160,8,120,10],[161,6,121,8],[161,12,121,14,"clientId"],[161,20,121,22],[161,23,121,25,"config"],[161,29,121,31],[161,30,121,32,"propertyName"],[161,42,121,44],[161,43,121,45],[161,47,121,49,"config"],[161,53,121,55],[161,54,121,56,"clientId"],[161,62,121,64],[162,6,122,8],[162,10,122,8,"invariantClientId"],[162,24,122,25],[162,25,122,25,"invariantClientId"],[162,42,122,25],[162,44,122,26,"propertyName"],[162,56,122,38],[162,58,122,40,"clientId"],[162,66,122,48],[162,68,122,50],[162,76,122,58],[162,77,122,59],[163,6,123,8],[163,13,123,15,"clientId"],[163,21,123,23],[164,4,124,4],[164,5,124,5],[164,7,124,7],[164,8,124,8,"config"],[164,14,124,14],[164,15,124,15,"iosClientId"],[164,26,124,26],[164,28,124,28,"config"],[164,34,124,34],[164,35,124,35,"androidClientId"],[164,50,124,50],[164,52,124,52,"config"],[164,58,124,58],[164,59,124,59,"webClientId"],[164,70,124,70],[164,72,124,72,"config"],[164,78,124,78],[164,79,124,79,"clientId"],[164,87,124,87],[164,88,124,88],[164,89,124,89],[165,4,125,4],[165,10,125,10,"responseType"],[165,22,125,22],[165,25,125,25],[165,29,125,25,"useMemo"],[165,35,125,32],[165,36,125,32,"useMemo"],[165,43,125,32],[165,45,125,33],[165,51,125,39],[166,6,126,8],[167,6,127,8],[167,10,127,12],[167,17,127,19,"config"],[167,23,127,25],[167,24,127,26,"responseType"],[167,36,127,38],[167,41,127,43],[167,52,127,54],[167,54,127,56],[168,8,128,12],[168,15,128,19,"config"],[168,21,128,25],[168,22,128,26,"responseType"],[168,34,128,38],[169,6,129,8],[170,6,130,8],[171,6,131,8],[172,6,132,8],[172,12,132,14,"isInstalledApp"],[172,26,132,28],[172,29,132,31,"Platform"],[172,37,132,39],[172,38,132,39,"default"],[172,45,132,39],[172,46,132,40,"OS"],[172,48,132,42],[172,53,132,47],[172,58,132,52],[173,6,133,8],[174,6,134,8],[174,10,134,12,"config"],[174,16,134,18],[174,17,134,19,"clientSecret"],[174,29,134,31],[174,33,134,35,"isInstalledApp"],[174,47,134,49],[174,49,134,51],[175,8,135,12],[175,15,135,19,"ResponseType"],[175,32,135,31],[175,33,135,31,"ResponseType"],[175,45,135,31],[175,46,135,32,"Code"],[175,50,135,36],[176,6,136,8],[177,6,137,8],[178,6,138,8],[178,13,138,15,"ResponseType"],[178,30,138,27],[178,31,138,27,"ResponseType"],[178,43,138,27],[178,44,138,28,"Token"],[178,49,138,33],[179,4,139,4],[179,5,139,5],[179,7,139,7],[179,8,139,8,"config"],[179,14,139,14],[179,15,139,15,"responseType"],[179,27,139,27],[179,29,139,29,"config"],[179,35,139,35],[179,36,139,36,"clientSecret"],[179,48,139,48],[179,49,139,49],[179,50,139,50],[180,4,140,4],[180,10,140,10,"redirectUri"],[180,21,140,21],[180,24,140,24],[180,28,140,24,"useMemo"],[180,34,140,31],[180,35,140,31,"useMemo"],[180,42,140,31],[180,44,140,32],[180,50,140,38],[181,6,141,8],[181,10,141,12],[181,17,141,19,"config"],[181,23,141,25],[181,24,141,26,"redirectUri"],[181,35,141,37],[181,40,141,42],[181,51,141,53],[181,53,141,55],[182,8,142,12],[182,15,142,19,"config"],[182,21,142,25],[182,22,142,26,"redirectUri"],[182,33,142,37],[183,6,143,8],[184,6,144,8],[184,13,144,15],[184,17,144,15,"makeRedirectUri"],[184,29,144,30],[184,30,144,30,"makeRedirectUri"],[184,45,144,30],[184,47,144,30,"Object"],[184,53,144,30],[184,54,144,30,"assign"],[184,60,144,30],[185,8,145,12,"native"],[185,14,145,18],[185,16,145,20],[185,19,145,23,"Application"],[185,30,145,34],[185,31,145,35,"applicationId"],[185,44,145,48],[186,6,145,65],[186,9,146,15,"redirectUriOptions"],[186,27,146,33],[186,28,148,9],[186,29,148,10],[187,4,149,4],[187,5,149,5],[187,7,149,7],[187,8,149,8,"config"],[187,14,149,14],[187,15,149,15,"redirectUri"],[187,26,149,26],[187,28,149,28,"redirectUriOptions"],[187,46,149,46],[187,47,149,47],[187,48,149,48],[188,4,150,4],[188,10,150,10,"extraParams"],[188,21,150,21],[188,24,150,24],[188,28,150,24,"useMemo"],[188,34,150,31],[188,35,150,31,"useMemo"],[188,42,150,31],[188,44,150,32],[188,50,150,38],[189,6,151,8],[189,12,151,14,"output"],[189,18,151,20],[189,21,151,23,"config"],[189,27,151,29],[189,28,151,30,"extraParams"],[189,39,151,41],[189,42,151,41,"Object"],[189,48,151,41],[189,49,151,41,"assign"],[189,55,151,41],[189,60,151,49,"config"],[189,66,151,55],[189,67,151,56,"extraParams"],[189,78,151,67],[189,82,151,72],[189,83,151,73],[189,84,151,74],[190,6,152,8],[190,10,152,12,"config"],[190,16,152,18],[190,17,152,19,"language"],[190,25,152,27],[190,27,152,29],[191,8,153,12,"output"],[191,14,153,18],[191,15,153,19,"hl"],[191,17,153,21],[191,20,153,24,"output"],[191,26,153,30],[191,27,153,31,"language"],[191,35,153,39],[192,6,154,8],[193,6,155,8],[193,10,155,12,"config"],[193,16,155,18],[193,17,155,19,"loginHint"],[193,26,155,28],[193,28,155,30],[194,8,156,12,"output"],[194,14,156,18],[194,15,156,19,"login_hint"],[194,25,156,29],[194,28,156,32,"output"],[194,34,156,38],[194,35,156,39,"loginHint"],[194,44,156,48],[195,6,157,8],[196,6,158,8],[196,10,158,12,"config"],[196,16,158,18],[196,17,158,19,"selectAccount"],[196,30,158,32],[196,32,158,34],[197,8,159,12,"output"],[197,14,159,18],[197,15,159,19,"prompt"],[197,21,159,25],[197,24,159,28,"Prompt"],[197,41,159,34],[197,42,159,34,"Prompt"],[197,48,159,34],[197,49,159,35,"SelectAccount"],[197,62,159,48],[198,6,160,8],[199,6,161,8],[199,13,161,15,"output"],[199,19,161,21],[200,4,162,4],[200,5,162,5],[200,7,162,7],[200,8,162,8,"config"],[200,14,162,14],[200,15,162,15,"extraParams"],[200,26,162,26],[200,28,162,28,"config"],[200,34,162,34],[200,35,162,35,"language"],[200,43,162,43],[200,45,162,45,"config"],[200,51,162,51],[200,52,162,52,"loginHint"],[200,61,162,61],[200,63,162,63,"config"],[200,69,162,69],[200,70,162,70,"selectAccount"],[200,83,162,83],[200,84,162,84],[200,85,162,85],[201,4,163,4],[201,10,163,10,"request"],[201,17,163,17],[201,20,163,20],[201,24,163,20,"useLoadedAuthRequest"],[201,41,163,40],[201,42,163,40,"useLoadedAuthRequest"],[201,62,163,40],[201,64,163,40,"Object"],[201,70,163,40],[201,71,163,40,"assign"],[201,77,163,40],[201,82,164,11,"config"],[201,88,164,17],[202,6,165,8,"responseType"],[202,18,165,20],[203,6,166,8,"extraParams"],[203,17,166,19],[204,6,167,8,"clientId"],[204,14,167,16],[205,6,168,8,"redirectUri"],[206,4,168,19],[206,8,169,7,"discovery"],[206,17,169,16],[206,19,169,18,"GoogleAuthRequest"],[206,36,169,35],[206,37,169,36],[207,4,170,4],[207,10,170,10],[207,11,170,11,"result"],[207,17,170,17],[207,19,170,19,"promptAsync"],[207,30,170,30],[207,31,170,31],[207,34,170,34],[207,38,170,34,"useAuthRequestResult"],[207,55,170,54],[207,56,170,54,"useAuthRequestResult"],[207,76,170,54],[207,78,170,55,"request"],[207,85,170,62],[207,87,170,64,"discovery"],[207,96,170,73],[207,98,170,75],[208,6,171,8,"windowFeatures"],[208,20,171,22],[208,22,171,24,"settings"],[208,30,171,32],[208,31,171,33,"windowFeatures"],[209,4,172,4],[209,5,172,5],[209,6,172,6],[210,4,173,4],[210,10,173,10],[210,11,173,11,"fullResult"],[210,21,173,21],[210,23,173,23,"setFullResult"],[210,36,173,36],[210,37,173,37],[210,40,173,40],[210,44,173,40,"useState"],[210,50,173,48],[210,51,173,48,"useState"],[210,59,173,48],[210,61,173,49],[210,65,173,53],[210,66,173,54],[211,4,174,4],[211,10,174,10,"shouldAutoExchangeCode"],[211,32,174,32],[211,35,174,35],[211,39,174,35,"useMemo"],[211,45,174,42],[211,46,174,42,"useMemo"],[211,53,174,42],[211,55,174,43],[211,61,174,49],[212,6,175,8],[213,6,176,8],[213,10,176,12],[213,17,176,19,"config"],[213,23,176,25],[213,24,176,26,"shouldAutoExchangeCode"],[213,46,176,48],[213,51,176,53],[213,62,176,64],[213,64,176,66],[214,8,177,12],[214,15,177,19,"config"],[214,21,177,25],[214,22,177,26,"shouldAutoExchangeCode"],[214,44,177,48],[215,6,178,8],[216,6,179,8],[217,6,180,8],[217,13,180,15,"result"],[217,19,180,21],[217,21,180,23,"type"],[217,25,180,27],[217,30,180,32],[217,39,180,41],[217,43,180,45,"result"],[217,49,180,51],[217,50,180,52,"params"],[217,56,180,58],[217,57,180,59,"code"],[217,61,180,63],[217,65,180,67],[217,66,180,68,"result"],[217,72,180,74],[217,73,180,75,"authentication"],[217,87,180,89],[218,4,181,4],[218,5,181,5],[218,7,181,7],[218,8,181,8,"config"],[218,14,181,14],[218,15,181,15,"shouldAutoExchangeCode"],[218,37,181,37],[218,39,181,39,"result"],[218,45,181,45],[218,47,181,47,"type"],[218,51,181,51],[218,52,181,52],[218,53,181,53],[219,4,182,4],[219,8,182,4,"useEffect"],[219,14,182,13],[219,15,182,13,"useEffect"],[219,24,182,13],[219,26,182,14],[219,32,182,20],[220,6,183,8],[220,10,183,12,"isMounted"],[220,19,183,21],[220,22,183,24],[220,26,183,28],[221,6,184,8],[221,10,184,12,"shouldAutoExchangeCode"],[221,32,184,34],[221,36,184,38,"result"],[221,42,184,44],[221,44,184,46,"type"],[221,48,184,50],[221,53,184,55],[221,62,184,64],[221,64,184,66],[222,8,185,12],[222,14,185,18,"exchangeRequest"],[222,29,185,33],[222,32,185,36],[222,36,185,40,"AccessTokenRequest"],[222,49,185,58],[222,50,185,58,"AccessTokenRequest"],[222,68,185,58],[222,69,185,59],[223,10,186,16,"clientId"],[223,18,186,24],[224,10,187,16,"clientSecret"],[224,22,187,28],[224,24,187,30,"config"],[224,30,187,36],[224,31,187,37,"clientSecret"],[224,43,187,49],[225,10,188,16,"redirectUri"],[225,21,188,27],[226,10,189,16,"scopes"],[226,16,189,22],[226,18,189,24,"config"],[226,24,189,30],[226,25,189,31,"scopes"],[226,31,189,37],[227,10,190,16,"code"],[227,14,190,20],[227,16,190,22,"result"],[227,22,190,28],[227,23,190,29,"params"],[227,29,190,35],[227,30,190,36,"code"],[227,34,190,40],[228,10,191,16,"extraParams"],[228,21,191,27],[228,23,191,29],[229,12,192,20,"code_verifier"],[229,25,192,33],[229,27,192,35,"request"],[229,34,192,42],[229,36,192,44,"codeVerifier"],[229,48,192,56],[229,52,192,60],[230,10,193,16],[231,8,194,12],[231,9,194,13],[231,10,194,14],[232,8,195,12,"exchangeRequest"],[232,23,195,27],[232,24,195,28,"performAsync"],[232,36,195,40],[232,37,195,41,"discovery"],[232,46,195,50],[232,47,195,51],[232,48,195,52,"then"],[232,52,195,56],[232,53,195,58,"authentication"],[232,67,195,72],[232,71,195,77],[233,10,196,16],[233,14,196,20,"isMounted"],[233,23,196,29],[233,25,196,31],[234,12,197,20,"setFullResult"],[234,25,197,33],[234,26,197,33,"Object"],[234,32,197,33],[234,33,197,33,"assign"],[234,39,197,33],[234,44,198,27,"result"],[234,50,198,33],[235,14,199,24,"params"],[235,20,199,30],[235,22,199,30,"Object"],[235,28,199,30],[235,29,199,30,"assign"],[235,35,199,30],[236,16,200,28,"id_token"],[236,24,200,36],[236,26,200,38,"authentication"],[236,40,200,52],[236,42,200,54,"idToken"],[236,49,200,61],[236,53,200,65],[236,55,200,67],[237,16,201,28,"access_token"],[237,28,201,40],[237,30,201,42,"authentication"],[237,44,201,56],[237,45,201,57,"accessToken"],[238,14,201,68],[238,17,202,31,"result"],[238,23,202,37],[238,24,202,38,"params"],[238,30,202,44],[238,31,203,25],[239,14,204,24,"authentication"],[240,12,204,38],[240,14,205,21],[240,15,205,22],[241,10,206,16],[242,8,207,12],[242,9,207,13],[242,10,207,14],[243,6,208,8],[243,7,208,9],[243,13,209,13],[244,8,210,12,"setFullResult"],[244,21,210,25],[244,22,210,26,"result"],[244,28,210,32],[244,29,210,33],[245,6,211,8],[246,6,212,8],[246,13,212,15],[246,19,212,21],[247,8,213,12,"isMounted"],[247,17,213,21],[247,20,213,24],[247,25,213,29],[248,6,214,8],[248,7,214,9],[249,4,215,4],[249,5,215,5],[249,7,215,7],[249,8,216,8,"clientId"],[249,16,216,16],[249,18,217,8,"redirectUri"],[249,29,217,19],[249,31,218,8,"shouldAutoExchangeCode"],[249,53,218,30],[249,55,219,8,"config"],[249,61,219,14],[249,62,219,15,"clientSecret"],[249,74,219,27],[249,76,220,8,"config"],[249,82,220,14],[249,83,220,15,"scopes"],[249,89,220,21],[249,91,220,23,"join"],[249,95,220,27],[249,96,220,28],[249,99,220,31],[249,100,220,32],[249,102,221,8,"request"],[249,109,221,15],[249,111,221,17,"codeVerifier"],[249,123,221,29],[249,125,222,8,"result"],[249,131,222,14],[249,132,223,5],[249,133,223,6],[250,4,224,4],[250,11,224,11],[250,12,224,12,"request"],[250,19,224,19],[250,21,224,21,"fullResult"],[250,31,224,31],[250,33,224,33,"promptAsync"],[250,44,224,44],[250,45,224,45],[251,2,225,0],[252,0,225,1],[252,3]],"functionMap":{"names":["<global>","GoogleAuthRequest","GoogleAuthRequest#constructor","GoogleAuthRequest#getAuthRequestConfigAsync","useIdTokenAuthRequest","useAuthRequest","useMemo$argument_0","useEffect$argument_0","exchangeRequest.performAsync.then$argument_0","<anonymous>"],"mappings":"AAA;AC4B;ICE;KD6B;IEI;KFY;CDC;OIc;CJY;OKW;6BCC;KDS;iCCC;KDc;gCCC;KDS;gCCC;KDY;2CCY;KDO;cEC;yDCa;aDY;eEK;SFE;KFC;CLU"},"hasCjsExports":false},"type":"js/module"}]}