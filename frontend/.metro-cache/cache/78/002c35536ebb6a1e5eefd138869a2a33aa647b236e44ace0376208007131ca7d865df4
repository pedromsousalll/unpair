{"dependencies":[{"name":"./CalendarDate.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":93,"index":93}}],"key":"+Ce5zPsmFJthCm+yjLFXHR3oGo0=","exportNames":["*"],"imports":1}},{"name":"./GregorianCalendar.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":94},"end":{"line":2,"column":290,"index":384}}],"key":"d1o+/Xa23yVfGOc8xZF6bMw+XFo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"IndianCalendar\", {\n    enumerable: true,\n    get: function () {\n      return $82c358003bdda0a8$export$39f31c639fa15726;\n    }\n  });\n  var _CalendarDateMjs = require(_dependencyMap[0], \"./CalendarDate.mjs\");\n  var _GregorianCalendarMjs = require(_dependencyMap[1], \"./GregorianCalendar.mjs\");\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */ // Portions of the code in this file are based on code from ICU.\n  // Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\n  // Starts in 78 AD,\n  const $82c358003bdda0a8$var$INDIAN_ERA_START = 78;\n  // The Indian year starts 80 days later than the Gregorian year.\n  const $82c358003bdda0a8$var$INDIAN_YEAR_START = 80;\n  class $82c358003bdda0a8$export$39f31c639fa15726 extends (0, _GregorianCalendarMjs.GregorianCalendar) {\n    fromJulianDay(jd) {\n      // Gregorian date for Julian day\n      let date = super.fromJulianDay(jd);\n      // Year in Saka era\n      let indianYear = date.year - $82c358003bdda0a8$var$INDIAN_ERA_START;\n      // Day number in Gregorian year (starting from 0)\n      let yDay = jd - (0, _GregorianCalendarMjs.gregorianToJulianDay)(date.era, date.year, 1, 1);\n      let leapMonth;\n      if (yDay < $82c358003bdda0a8$var$INDIAN_YEAR_START) {\n        //  Day is at the end of the preceding Saka year\n        indianYear--;\n        // Days in leapMonth this year, previous Gregorian year\n        leapMonth = (0, _GregorianCalendarMjs.isLeapYear)(date.year - 1) ? 31 : 30;\n        yDay += leapMonth + 155 + 90 + 10;\n      } else {\n        // Days in leapMonth this year\n        leapMonth = (0, _GregorianCalendarMjs.isLeapYear)(date.year) ? 31 : 30;\n        yDay -= $82c358003bdda0a8$var$INDIAN_YEAR_START;\n      }\n      let indianMonth;\n      let indianDay;\n      if (yDay < leapMonth) {\n        indianMonth = 1;\n        indianDay = yDay + 1;\n      } else {\n        let mDay = yDay - leapMonth;\n        if (mDay < 155) {\n          indianMonth = Math.floor(mDay / 31) + 2;\n          indianDay = mDay % 31 + 1;\n        } else {\n          mDay -= 155;\n          indianMonth = Math.floor(mDay / 30) + 7;\n          indianDay = mDay % 30 + 1;\n        }\n      }\n      return new (0, _CalendarDateMjs.CalendarDate)(this, indianYear, indianMonth, indianDay);\n    }\n    toJulianDay(date) {\n      let extendedYear = date.year + $82c358003bdda0a8$var$INDIAN_ERA_START;\n      let [era, year] = (0, _GregorianCalendarMjs.fromExtendedYear)(extendedYear);\n      let leapMonth;\n      let jd;\n      if ((0, _GregorianCalendarMjs.isLeapYear)(year)) {\n        leapMonth = 31;\n        jd = (0, _GregorianCalendarMjs.gregorianToJulianDay)(era, year, 3, 21);\n      } else {\n        leapMonth = 30;\n        jd = (0, _GregorianCalendarMjs.gregorianToJulianDay)(era, year, 3, 22);\n      }\n      if (date.month === 1) return jd + date.day - 1;\n      jd += leapMonth + Math.min(date.month - 2, 5) * 31;\n      if (date.month >= 8) jd += (date.month - 7) * 30;\n      jd += date.day - 1;\n      return jd;\n    }\n    getDaysInMonth(date) {\n      if (date.month === 1 && (0, _GregorianCalendarMjs.isLeapYear)(date.year + $82c358003bdda0a8$var$INDIAN_ERA_START)) return 31;\n      if (date.month >= 2 && date.month <= 6) return 31;\n      return 30;\n    }\n    getYearsInEra() {\n      // 9999-12-31 gregorian is 9920-10-10 indian.\n      // Round down to 9919 for the last full year.\n      return 9919;\n    }\n    getEras() {\n      return ['saka'];\n    }\n    balanceDate() {}\n    constructor(...args) {\n      super(...args), this.identifier = 'indian';\n    }\n  }\n});","lineCount":106,"map":[[7,2,100,0,"Object"],[7,8,100,0],[7,9,100,0,"defineProperty"],[7,23,100,0],[7,24,100,0,"exports"],[7,31,100,0],[8,4,100,0,"enumerable"],[8,14,100,0],[9,4,100,0,"get"],[9,7,100,0],[9,18,100,0,"get"],[9,19,100,0],[10,6,100,0],[10,13,100,8,"$82c358003bdda0a8$export$39f31c639fa15726"],[10,54,100,49],[11,4,100,49],[12,2,100,49],[13,2,1,0],[13,6,1,0,"_CalendarDateMjs"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_GregorianCalendarMjs"],[14,27,2,0],[14,30,2,0,"require"],[14,37,2,0],[14,38,2,0,"_dependencyMap"],[14,52,2,0],[15,2,4,0],[16,0,5,0],[17,0,6,0],[18,0,7,0],[19,0,8,0],[20,0,9,0],[21,0,10,0],[22,0,11,0],[23,0,12,0],[24,0,13,0],[25,0,14,0],[25,5,4,0],[25,6,14,4],[26,2,15,0],[28,2,18,0],[29,2,19,0],[29,8,19,6,"$82c358003bdda0a8$var$INDIAN_ERA_START"],[29,46,19,44],[29,49,19,47],[29,51,19,49],[30,2,20,0],[31,2,21,0],[31,8,21,6,"$82c358003bdda0a8$var$INDIAN_YEAR_START"],[31,47,21,45],[31,50,21,48],[31,52,21,50],[32,2,22,0],[32,8,22,6,"$82c358003bdda0a8$export$39f31c639fa15726"],[32,49,22,47],[32,59,22,57],[32,60,22,58],[32,62,22,60,"$3b62074eb05584b2$export$80ee6245ec4f29ec"],[32,83,22,101],[32,84,22,101,"GregorianCalendar"],[32,101,22,101],[32,103,22,103],[33,4,23,4,"fromJulianDay"],[33,17,23,17,"fromJulianDay"],[33,18,23,18,"jd"],[33,20,23,20],[33,22,23,22],[34,6,24,8],[35,6,25,8],[35,10,25,12,"date"],[35,14,25,16],[35,17,25,19],[35,22,25,24],[35,23,25,25,"fromJulianDay"],[35,36,25,38],[35,37,25,39,"jd"],[35,39,25,41],[35,40,25,42],[36,6,26,8],[37,6,27,8],[37,10,27,12,"indianYear"],[37,20,27,22],[37,23,27,25,"date"],[37,27,27,29],[37,28,27,30,"year"],[37,32,27,34],[37,35,27,37,"$82c358003bdda0a8$var$INDIAN_ERA_START"],[37,73,27,75],[38,6,28,8],[39,6,29,8],[39,10,29,12,"yDay"],[39,14,29,16],[39,17,29,19,"jd"],[39,19,29,21],[39,22,29,24],[39,23,29,25],[39,24,29,26],[39,26,29,28,"$3b62074eb05584b2$export$f297eb839006d339"],[39,47,29,69],[39,48,29,69,"gregorianToJulianDay"],[39,68,29,69],[39,70,29,71,"date"],[39,74,29,75],[39,75,29,76,"era"],[39,78,29,79],[39,80,29,81,"date"],[39,84,29,85],[39,85,29,86,"year"],[39,89,29,90],[39,91,29,92],[39,92,29,93],[39,94,29,95],[39,95,29,96],[39,96,29,97],[40,6,30,8],[40,10,30,12,"leapMonth"],[40,19,30,21],[41,6,31,8],[41,10,31,12,"yDay"],[41,14,31,16],[41,17,31,19,"$82c358003bdda0a8$var$INDIAN_YEAR_START"],[41,56,31,58],[41,58,31,60],[42,8,32,12],[43,8,33,12,"indianYear"],[43,18,33,22],[43,20,33,24],[44,8,34,12],[45,8,35,12,"leapMonth"],[45,17,35,21],[45,20,35,24],[45,21,35,25],[45,22,35,26],[45,24,35,28,"$3b62074eb05584b2$export$553d7fa8e3805fc0"],[45,45,35,69],[45,46,35,69,"isLeapYear"],[45,56,35,69],[45,58,35,71,"date"],[45,62,35,75],[45,63,35,76,"year"],[45,67,35,80],[45,70,35,83],[45,71,35,84],[45,72,35,85],[45,75,35,88],[45,77,35,90],[45,80,35,93],[45,82,35,95],[46,8,36,12,"yDay"],[46,12,36,16],[46,16,36,20,"leapMonth"],[46,25,36,29],[46,28,36,32],[46,31,36,35],[46,34,36,38],[46,36,36,40],[46,39,36,43],[46,41,36,45],[47,6,37,8],[47,7,37,9],[47,13,37,15],[48,8,38,12],[49,8,39,12,"leapMonth"],[49,17,39,21],[49,20,39,24],[49,21,39,25],[49,22,39,26],[49,24,39,28,"$3b62074eb05584b2$export$553d7fa8e3805fc0"],[49,45,39,69],[49,46,39,69,"isLeapYear"],[49,56,39,69],[49,58,39,71,"date"],[49,62,39,75],[49,63,39,76,"year"],[49,67,39,80],[49,68,39,81],[49,71,39,84],[49,73,39,86],[49,76,39,89],[49,78,39,91],[50,8,40,12,"yDay"],[50,12,40,16],[50,16,40,20,"$82c358003bdda0a8$var$INDIAN_YEAR_START"],[50,55,40,59],[51,6,41,8],[52,6,42,8],[52,10,42,12,"indianMonth"],[52,21,42,23],[53,6,43,8],[53,10,43,12,"indianDay"],[53,19,43,21],[54,6,44,8],[54,10,44,12,"yDay"],[54,14,44,16],[54,17,44,19,"leapMonth"],[54,26,44,28],[54,28,44,30],[55,8,45,12,"indianMonth"],[55,19,45,23],[55,22,45,26],[55,23,45,27],[56,8,46,12,"indianDay"],[56,17,46,21],[56,20,46,24,"yDay"],[56,24,46,28],[56,27,46,31],[56,28,46,32],[57,6,47,8],[57,7,47,9],[57,13,47,15],[58,8,48,12],[58,12,48,16,"mDay"],[58,16,48,20],[58,19,48,23,"yDay"],[58,23,48,27],[58,26,48,30,"leapMonth"],[58,35,48,39],[59,8,49,12],[59,12,49,16,"mDay"],[59,16,49,20],[59,19,49,23],[59,22,49,26],[59,24,49,28],[60,10,50,16,"indianMonth"],[60,21,50,27],[60,24,50,30,"Math"],[60,28,50,34],[60,29,50,35,"floor"],[60,34,50,40],[60,35,50,41,"mDay"],[60,39,50,45],[60,42,50,48],[60,44,50,50],[60,45,50,51],[60,48,50,54],[60,49,50,55],[61,10,51,16,"indianDay"],[61,19,51,25],[61,22,51,28,"mDay"],[61,26,51,32],[61,29,51,35],[61,31,51,37],[61,34,51,40],[61,35,51,41],[62,8,52,12],[62,9,52,13],[62,15,52,19],[63,10,53,16,"mDay"],[63,14,53,20],[63,18,53,24],[63,21,53,27],[64,10,54,16,"indianMonth"],[64,21,54,27],[64,24,54,30,"Math"],[64,28,54,34],[64,29,54,35,"floor"],[64,34,54,40],[64,35,54,41,"mDay"],[64,39,54,45],[64,42,54,48],[64,44,54,50],[64,45,54,51],[64,48,54,54],[64,49,54,55],[65,10,55,16,"indianDay"],[65,19,55,25],[65,22,55,28,"mDay"],[65,26,55,32],[65,29,55,35],[65,31,55,37],[65,34,55,40],[65,35,55,41],[66,8,56,12],[67,6,57,8],[68,6,58,8],[68,13,58,15],[68,18,58,20],[68,19,58,21],[68,21,58,23,"$35ea8db9cb2ccb90$export$99faa760c7908e4f"],[68,37,58,64],[68,38,58,64,"CalendarDate"],[68,50,58,64],[68,52,58,66],[68,56,58,70],[68,58,58,72,"indianYear"],[68,68,58,82],[68,70,58,84,"indianMonth"],[68,81,58,95],[68,83,58,97,"indianDay"],[68,92,58,106],[68,93,58,107],[69,4,59,4],[70,4,60,4,"toJulianDay"],[70,15,60,15,"toJulianDay"],[70,16,60,16,"date"],[70,20,60,20],[70,22,60,22],[71,6,61,8],[71,10,61,12,"extendedYear"],[71,22,61,24],[71,25,61,27,"date"],[71,29,61,31],[71,30,61,32,"year"],[71,34,61,36],[71,37,61,39,"$82c358003bdda0a8$var$INDIAN_ERA_START"],[71,75,61,77],[72,6,62,8],[72,10,62,12],[72,11,62,13,"era"],[72,14,62,16],[72,16,62,18,"year"],[72,20,62,22],[72,21,62,23],[72,24,62,26],[72,25,62,27],[72,26,62,28],[72,28,62,30,"$3b62074eb05584b2$export$4475b7e617eb123c"],[72,49,62,71],[72,50,62,71,"fromExtendedYear"],[72,66,62,71],[72,68,62,73,"extendedYear"],[72,80,62,85],[72,81,62,86],[73,6,63,8],[73,10,63,12,"leapMonth"],[73,19,63,21],[74,6,64,8],[74,10,64,12,"jd"],[74,12,64,14],[75,6,65,8],[75,10,65,12],[75,11,65,13],[75,12,65,14],[75,14,65,16,"$3b62074eb05584b2$export$553d7fa8e3805fc0"],[75,35,65,57],[75,36,65,57,"isLeapYear"],[75,46,65,57],[75,48,65,59,"year"],[75,52,65,63],[75,53,65,64],[75,55,65,66],[76,8,66,12,"leapMonth"],[76,17,66,21],[76,20,66,24],[76,22,66,26],[77,8,67,12,"jd"],[77,10,67,14],[77,13,67,17],[77,14,67,18],[77,15,67,19],[77,17,67,21,"$3b62074eb05584b2$export$f297eb839006d339"],[77,38,67,62],[77,39,67,62,"gregorianToJulianDay"],[77,59,67,62],[77,61,67,64,"era"],[77,64,67,67],[77,66,67,69,"year"],[77,70,67,73],[77,72,67,75],[77,73,67,76],[77,75,67,78],[77,77,67,80],[77,78,67,81],[78,6,68,8],[78,7,68,9],[78,13,68,15],[79,8,69,12,"leapMonth"],[79,17,69,21],[79,20,69,24],[79,22,69,26],[80,8,70,12,"jd"],[80,10,70,14],[80,13,70,17],[80,14,70,18],[80,15,70,19],[80,17,70,21,"$3b62074eb05584b2$export$f297eb839006d339"],[80,38,70,62],[80,39,70,62,"gregorianToJulianDay"],[80,59,70,62],[80,61,70,64,"era"],[80,64,70,67],[80,66,70,69,"year"],[80,70,70,73],[80,72,70,75],[80,73,70,76],[80,75,70,78],[80,77,70,80],[80,78,70,81],[81,6,71,8],[82,6,72,8],[82,10,72,12,"date"],[82,14,72,16],[82,15,72,17,"month"],[82,20,72,22],[82,25,72,27],[82,26,72,28],[82,28,72,30],[82,35,72,37,"jd"],[82,37,72,39],[82,40,72,42,"date"],[82,44,72,46],[82,45,72,47,"day"],[82,48,72,50],[82,51,72,53],[82,52,72,54],[83,6,73,8,"jd"],[83,8,73,10],[83,12,73,14,"leapMonth"],[83,21,73,23],[83,24,73,26,"Math"],[83,28,73,30],[83,29,73,31,"min"],[83,32,73,34],[83,33,73,35,"date"],[83,37,73,39],[83,38,73,40,"month"],[83,43,73,45],[83,46,73,48],[83,47,73,49],[83,49,73,51],[83,50,73,52],[83,51,73,53],[83,54,73,56],[83,56,73,58],[84,6,74,8],[84,10,74,12,"date"],[84,14,74,16],[84,15,74,17,"month"],[84,20,74,22],[84,24,74,26],[84,25,74,27],[84,27,74,29,"jd"],[84,29,74,31],[84,33,74,35],[84,34,74,36,"date"],[84,38,74,40],[84,39,74,41,"month"],[84,44,74,46],[84,47,74,49],[84,48,74,50],[84,52,74,54],[84,54,74,56],[85,6,75,8,"jd"],[85,8,75,10],[85,12,75,14,"date"],[85,16,75,18],[85,17,75,19,"day"],[85,20,75,22],[85,23,75,25],[85,24,75,26],[86,6,76,8],[86,13,76,15,"jd"],[86,15,76,17],[87,4,77,4],[88,4,78,4,"getDaysInMonth"],[88,18,78,18,"getDaysInMonth"],[88,19,78,19,"date"],[88,23,78,23],[88,25,78,25],[89,6,79,8],[89,10,79,12,"date"],[89,14,79,16],[89,15,79,17,"month"],[89,20,79,22],[89,25,79,27],[89,26,79,28],[89,30,79,32],[89,31,79,33],[89,32,79,34],[89,34,79,36,"$3b62074eb05584b2$export$553d7fa8e3805fc0"],[89,55,79,77],[89,56,79,77,"isLeapYear"],[89,66,79,77],[89,68,79,79,"date"],[89,72,79,83],[89,73,79,84,"year"],[89,77,79,88],[89,80,79,91,"$82c358003bdda0a8$var$INDIAN_ERA_START"],[89,118,79,129],[89,119,79,130],[89,121,79,132],[89,128,79,139],[89,130,79,141],[90,6,80,8],[90,10,80,12,"date"],[90,14,80,16],[90,15,80,17,"month"],[90,20,80,22],[90,24,80,26],[90,25,80,27],[90,29,80,31,"date"],[90,33,80,35],[90,34,80,36,"month"],[90,39,80,41],[90,43,80,45],[90,44,80,46],[90,46,80,48],[90,53,80,55],[90,55,80,57],[91,6,81,8],[91,13,81,15],[91,15,81,17],[92,4,82,4],[93,4,83,4,"getYearsInEra"],[93,17,83,17,"getYearsInEra"],[93,18,83,17],[93,20,83,20],[94,6,84,8],[95,6,85,8],[96,6,86,8],[96,13,86,15],[96,17,86,19],[97,4,87,4],[98,4,88,4,"getEras"],[98,11,88,11,"getEras"],[98,12,88,11],[98,14,88,14],[99,6,89,8],[99,13,89,15],[99,14,90,12],[99,20,90,18],[99,21,91,9],[100,4,92,4],[101,4,93,4,"balanceDate"],[101,15,93,15,"balanceDate"],[101,16,93,15],[101,18,93,18],[101,19,93,19],[102,4,94,4,"constructor"],[102,15,94,15,"constructor"],[102,16,94,16],[102,19,94,19,"args"],[102,23,94,23],[102,25,94,24],[103,6,95,8],[103,11,95,13],[103,12,95,14],[103,15,95,17,"args"],[103,19,95,21],[103,20,95,22],[103,22,95,24],[103,26,95,28],[103,27,95,29,"identifier"],[103,37,95,39],[103,40,95,42],[103,48,95,50],[104,4,96,4],[105,2,97,0],[106,0,97,1],[106,3]],"functionMap":{"names":["<global>","$82c358003bdda0a8$export$39f31c639fa15726","$82c358003bdda0a8$export$39f31c639fa15726#fromJulianDay","$82c358003bdda0a8$export$39f31c639fa15726#toJulianDay","$82c358003bdda0a8$export$39f31c639fa15726#getDaysInMonth","$82c358003bdda0a8$export$39f31c639fa15726#getYearsInEra","$82c358003bdda0a8$export$39f31c639fa15726#getEras","$82c358003bdda0a8$export$39f31c639fa15726#balanceDate","$82c358003bdda0a8$export$39f31c639fa15726#constructor"],"mappings":"AAA;ACqB;ICC;KDoC;IEC;KFiB;IGC;KHI;IIC;KJI;IKC;KLI;IMC,gBN;IOC;KPE;CDC"},"hasCjsExports":false},"type":"js/module"}]}