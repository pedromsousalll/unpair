{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"a\", {\n    enumerable: true,\n    get: function () {\n      return reverseTransformCache;\n    }\n  });\n  Object.defineProperty(exports, \"i\", {\n    enumerable: true,\n    get: function () {\n      return instanceOfAny;\n    }\n  });\n  Object.defineProperty(exports, \"r\", {\n    enumerable: true,\n    get: function () {\n      return replaceTraps;\n    }\n  });\n  Object.defineProperty(exports, \"u\", {\n    enumerable: true,\n    get: function () {\n      return unwrap;\n    }\n  });\n  Object.defineProperty(exports, \"w\", {\n    enumerable: true,\n    get: function () {\n      return wrap;\n    }\n  });\n  const instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\n  let idbProxyableTypes;\n  let cursorAdvanceMethods;\n  // This is a function to prevent it throwing up in node environments.\n  function getIdbProxyableTypes() {\n    return idbProxyableTypes || (idbProxyableTypes = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);\n  }\n  // This is a function to prevent it throwing up in node environments.\n  function getCursorAdvanceMethods() {\n    return cursorAdvanceMethods || (cursorAdvanceMethods = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey]);\n  }\n  const cursorRequestMap = new WeakMap();\n  const transactionDoneMap = new WeakMap();\n  const transactionStoreNamesMap = new WeakMap();\n  const transformCache = new WeakMap();\n  const reverseTransformCache = new WeakMap();\n  function promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n      const unlisten = () => {\n        request.removeEventListener('success', success);\n        request.removeEventListener('error', error);\n      };\n      const success = () => {\n        resolve(wrap(request.result));\n        unlisten();\n      };\n      const error = () => {\n        reject(request.error);\n        unlisten();\n      };\n      request.addEventListener('success', success);\n      request.addEventListener('error', error);\n    });\n    promise.then(value => {\n      // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n      // (see wrapFunction).\n      if (value instanceof IDBCursor) {\n        cursorRequestMap.set(value, request);\n      }\n      // Catching to avoid \"Uncaught Promise exceptions\"\n    }).catch(() => {});\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n  }\n  function cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx)) return;\n    const done = new Promise((resolve, reject) => {\n      const unlisten = () => {\n        tx.removeEventListener('complete', complete);\n        tx.removeEventListener('error', error);\n        tx.removeEventListener('abort', error);\n      };\n      const complete = () => {\n        resolve();\n        unlisten();\n      };\n      const error = () => {\n        reject(tx.error || new DOMException('AbortError', 'AbortError'));\n        unlisten();\n      };\n      tx.addEventListener('complete', complete);\n      tx.addEventListener('error', error);\n      tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n  }\n  let idbProxyTraps = {\n    get(target, prop, receiver) {\n      if (target instanceof IDBTransaction) {\n        // Special handling for transaction.done.\n        if (prop === 'done') return transactionDoneMap.get(target);\n        // Polyfill for objectStoreNames because of Edge.\n        if (prop === 'objectStoreNames') {\n          return target.objectStoreNames || transactionStoreNamesMap.get(target);\n        }\n        // Make tx.store return the only store in the transaction, or undefined if there are many.\n        if (prop === 'store') {\n          return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);\n        }\n      }\n      // Else transform whatever we get back.\n      return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n      target[prop] = value;\n      return true;\n    },\n    has(target, prop) {\n      if (target instanceof IDBTransaction && (prop === 'done' || prop === 'store')) {\n        return true;\n      }\n      return prop in target;\n    }\n  };\n  function replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n  }\n  function wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction && !('objectStoreNames' in IDBTransaction.prototype)) {\n      return function (storeNames, ...args) {\n        const tx = func.call(unwrap(this), storeNames, ...args);\n        transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n        return wrap(tx);\n      };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n      return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        func.apply(unwrap(this), args);\n        return wrap(cursorRequestMap.get(this));\n      };\n    }\n    return function (...args) {\n      // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n      // the original object.\n      return wrap(func.apply(unwrap(this), args));\n    };\n  }\n  function transformCachableValue(value) {\n    if (typeof value === 'function') return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction) cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes())) return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n  }\n  function wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest) return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value)) return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n      transformCache.set(value, newValue);\n      reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n  }\n  const unwrap = value => reverseTransformCache.get(value);\n});","lineCount":194,"map":[[7,2,185,0,"Object"],[7,8,185,0],[7,9,185,0,"defineProperty"],[7,23,185,0],[7,24,185,0,"exports"],[7,31,185,0],[8,4,185,0,"enumerable"],[8,14,185,0],[9,4,185,0,"get"],[9,7,185,0],[9,18,185,0,"get"],[9,19,185,0],[10,6,185,0],[10,13,185,9,"reverseTransformCache"],[10,34,185,30],[11,4,185,30],[12,2,185,30],[13,2,185,0,"Object"],[13,8,185,0],[13,9,185,0,"defineProperty"],[13,23,185,0],[13,24,185,0,"exports"],[13,31,185,0],[14,4,185,0,"enumerable"],[14,14,185,0],[15,4,185,0,"get"],[15,7,185,0],[15,18,185,0,"get"],[15,19,185,0],[16,6,185,0],[16,13,185,37,"instanceOfAny"],[16,26,185,50],[17,4,185,50],[18,2,185,50],[19,2,185,0,"Object"],[19,8,185,0],[19,9,185,0,"defineProperty"],[19,23,185,0],[19,24,185,0,"exports"],[19,31,185,0],[20,4,185,0,"enumerable"],[20,14,185,0],[21,4,185,0,"get"],[21,7,185,0],[21,18,185,0,"get"],[21,19,185,0],[22,6,185,0],[22,13,185,57,"replaceTraps"],[22,25,185,69],[23,4,185,69],[24,2,185,69],[25,2,185,0,"Object"],[25,8,185,0],[25,9,185,0,"defineProperty"],[25,23,185,0],[25,24,185,0,"exports"],[25,31,185,0],[26,4,185,0,"enumerable"],[26,14,185,0],[27,4,185,0,"get"],[27,7,185,0],[27,18,185,0,"get"],[27,19,185,0],[28,6,185,0],[28,13,185,76,"unwrap"],[28,19,185,82],[29,4,185,82],[30,2,185,82],[31,2,185,0,"Object"],[31,8,185,0],[31,9,185,0,"defineProperty"],[31,23,185,0],[31,24,185,0,"exports"],[31,31,185,0],[32,4,185,0,"enumerable"],[32,14,185,0],[33,4,185,0,"get"],[33,7,185,0],[33,18,185,0,"get"],[33,19,185,0],[34,6,185,0],[34,13,185,89,"wrap"],[34,17,185,93],[35,4,185,93],[36,2,185,93],[37,2,1,0],[37,8,1,6,"instanceOfAny"],[37,21,1,19],[37,24,1,22,"instanceOfAny"],[37,25,1,23,"object"],[37,31,1,29],[37,33,1,31,"constructors"],[37,45,1,43],[37,50,1,48,"constructors"],[37,62,1,60],[37,63,1,61,"some"],[37,67,1,65],[37,68,1,67,"c"],[37,69,1,68],[37,73,1,73,"object"],[37,79,1,79],[37,91,1,91,"c"],[37,92,1,92],[37,93,1,93],[38,2,3,0],[38,6,3,4,"idbProxyableTypes"],[38,23,3,21],[39,2,4,0],[39,6,4,4,"cursorAdvanceMethods"],[39,26,4,24],[40,2,5,0],[41,2,6,0],[41,11,6,9,"getIdbProxyableTypes"],[41,31,6,29,"getIdbProxyableTypes"],[41,32,6,29],[41,34,6,32],[42,4,7,4],[42,11,7,12,"idbProxyableTypes"],[42,28,7,29],[42,33,8,9,"idbProxyableTypes"],[42,50,8,26],[42,53,8,29],[42,54,9,12,"IDBDatabase"],[42,65,9,23],[42,67,10,12,"IDBObjectStore"],[42,81,10,26],[42,83,11,12,"IDBIndex"],[42,91,11,20],[42,93,12,12,"IDBCursor"],[42,102,12,21],[42,104,13,12,"IDBTransaction"],[42,118,13,26],[42,119,14,9],[42,120,14,10],[43,2,15,0],[44,2,16,0],[45,2,17,0],[45,11,17,9,"getCursorAdvanceMethods"],[45,34,17,32,"getCursorAdvanceMethods"],[45,35,17,32],[45,37,17,35],[46,4,18,4],[46,11,18,12,"cursorAdvanceMethods"],[46,31,18,32],[46,36,19,9,"cursorAdvanceMethods"],[46,56,19,29],[46,59,19,32],[46,60,20,12,"IDBCursor"],[46,69,20,21],[46,70,20,22,"prototype"],[46,79,20,31],[46,80,20,32,"advance"],[46,87,20,39],[46,89,21,12,"IDBCursor"],[46,98,21,21],[46,99,21,22,"prototype"],[46,108,21,31],[46,109,21,32,"continue"],[46,117,21,40],[46,119,22,12,"IDBCursor"],[46,128,22,21],[46,129,22,22,"prototype"],[46,138,22,31],[46,139,22,32,"continuePrimaryKey"],[46,157,22,50],[46,158,23,9],[46,159,23,10],[47,2,24,0],[48,2,25,0],[48,8,25,6,"cursorRequestMap"],[48,24,25,22],[48,27,25,25],[48,31,25,29,"WeakMap"],[48,38,25,36],[48,39,25,37],[48,40,25,38],[49,2,26,0],[49,8,26,6,"transactionDoneMap"],[49,26,26,24],[49,29,26,27],[49,33,26,31,"WeakMap"],[49,40,26,38],[49,41,26,39],[49,42,26,40],[50,2,27,0],[50,8,27,6,"transactionStoreNamesMap"],[50,32,27,30],[50,35,27,33],[50,39,27,37,"WeakMap"],[50,46,27,44],[50,47,27,45],[50,48,27,46],[51,2,28,0],[51,8,28,6,"transformCache"],[51,22,28,20],[51,25,28,23],[51,29,28,27,"WeakMap"],[51,36,28,34],[51,37,28,35],[51,38,28,36],[52,2,29,0],[52,8,29,6,"reverseTransformCache"],[52,29,29,27],[52,32,29,30],[52,36,29,34,"WeakMap"],[52,43,29,41],[52,44,29,42],[52,45,29,43],[53,2,30,0],[53,11,30,9,"promisifyRequest"],[53,27,30,25,"promisifyRequest"],[53,28,30,26,"request"],[53,35,30,33],[53,37,30,35],[54,4,31,4],[54,10,31,10,"promise"],[54,17,31,17],[54,20,31,20],[54,24,31,24,"Promise"],[54,31,31,31],[54,32,31,32],[54,33,31,33,"resolve"],[54,40,31,40],[54,42,31,42,"reject"],[54,48,31,48],[54,53,31,53],[55,6,32,8],[55,12,32,14,"unlisten"],[55,20,32,22],[55,23,32,25,"unlisten"],[55,24,32,25],[55,29,32,31],[56,8,33,12,"request"],[56,15,33,19],[56,16,33,20,"removeEventListener"],[56,35,33,39],[56,36,33,40],[56,45,33,49],[56,47,33,51,"success"],[56,54,33,58],[56,55,33,59],[57,8,34,12,"request"],[57,15,34,19],[57,16,34,20,"removeEventListener"],[57,35,34,39],[57,36,34,40],[57,43,34,47],[57,45,34,49,"error"],[57,50,34,54],[57,51,34,55],[58,6,35,8],[58,7,35,9],[59,6,36,8],[59,12,36,14,"success"],[59,19,36,21],[59,22,36,24,"success"],[59,23,36,24],[59,28,36,30],[60,8,37,12,"resolve"],[60,15,37,19],[60,16,37,20,"wrap"],[60,20,37,24],[60,21,37,25,"request"],[60,28,37,32],[60,29,37,33,"result"],[60,35,37,39],[60,36,37,40],[60,37,37,41],[61,8,38,12,"unlisten"],[61,16,38,20],[61,17,38,21],[61,18,38,22],[62,6,39,8],[62,7,39,9],[63,6,40,8],[63,12,40,14,"error"],[63,17,40,19],[63,20,40,22,"error"],[63,21,40,22],[63,26,40,28],[64,8,41,12,"reject"],[64,14,41,18],[64,15,41,19,"request"],[64,22,41,26],[64,23,41,27,"error"],[64,28,41,32],[64,29,41,33],[65,8,42,12,"unlisten"],[65,16,42,20],[65,17,42,21],[65,18,42,22],[66,6,43,8],[66,7,43,9],[67,6,44,8,"request"],[67,13,44,15],[67,14,44,16,"addEventListener"],[67,30,44,32],[67,31,44,33],[67,40,44,42],[67,42,44,44,"success"],[67,49,44,51],[67,50,44,52],[68,6,45,8,"request"],[68,13,45,15],[68,14,45,16,"addEventListener"],[68,30,45,32],[68,31,45,33],[68,38,45,40],[68,40,45,42,"error"],[68,45,45,47],[68,46,45,48],[69,4,46,4],[69,5,46,5],[69,6,46,6],[70,4,47,4,"promise"],[70,11,47,11],[70,12,48,9,"then"],[70,16,48,13],[70,17,48,15,"value"],[70,22,48,20],[70,26,48,25],[71,6,49,8],[72,6,50,8],[73,6,51,8],[73,10,51,12,"value"],[73,15,51,17],[73,27,51,29,"IDBCursor"],[73,36,51,38],[73,38,51,40],[74,8,52,12,"cursorRequestMap"],[74,24,52,28],[74,25,52,29,"set"],[74,28,52,32],[74,29,52,33,"value"],[74,34,52,38],[74,36,52,40,"request"],[74,43,52,47],[74,44,52,48],[75,6,53,8],[76,6,54,8],[77,4,55,4],[77,5,55,5],[77,6,55,6],[77,7,56,9,"catch"],[77,12,56,14],[77,13,56,15],[77,19,56,21],[77,20,56,23],[77,21,56,24],[77,22,56,25],[78,4,57,4],[79,4,58,4],[80,4,59,4,"reverseTransformCache"],[80,25,59,25],[80,26,59,26,"set"],[80,29,59,29],[80,30,59,30,"promise"],[80,37,59,37],[80,39,59,39,"request"],[80,46,59,46],[80,47,59,47],[81,4,60,4],[81,11,60,11,"promise"],[81,18,60,18],[82,2,61,0],[83,2,62,0],[83,11,62,9,"cacheDonePromiseForTransaction"],[83,41,62,39,"cacheDonePromiseForTransaction"],[83,42,62,40,"tx"],[83,44,62,42],[83,46,62,44],[84,4,63,4],[85,4,64,4],[85,8,64,8,"transactionDoneMap"],[85,26,64,26],[85,27,64,27,"has"],[85,30,64,30],[85,31,64,31,"tx"],[85,33,64,33],[85,34,64,34],[85,36,65,8],[86,4,66,4],[86,10,66,10,"done"],[86,14,66,14],[86,17,66,17],[86,21,66,21,"Promise"],[86,28,66,28],[86,29,66,29],[86,30,66,30,"resolve"],[86,37,66,37],[86,39,66,39,"reject"],[86,45,66,45],[86,50,66,50],[87,6,67,8],[87,12,67,14,"unlisten"],[87,20,67,22],[87,23,67,25,"unlisten"],[87,24,67,25],[87,29,67,31],[88,8,68,12,"tx"],[88,10,68,14],[88,11,68,15,"removeEventListener"],[88,30,68,34],[88,31,68,35],[88,41,68,45],[88,43,68,47,"complete"],[88,51,68,55],[88,52,68,56],[89,8,69,12,"tx"],[89,10,69,14],[89,11,69,15,"removeEventListener"],[89,30,69,34],[89,31,69,35],[89,38,69,42],[89,40,69,44,"error"],[89,45,69,49],[89,46,69,50],[90,8,70,12,"tx"],[90,10,70,14],[90,11,70,15,"removeEventListener"],[90,30,70,34],[90,31,70,35],[90,38,70,42],[90,40,70,44,"error"],[90,45,70,49],[90,46,70,50],[91,6,71,8],[91,7,71,9],[92,6,72,8],[92,12,72,14,"complete"],[92,20,72,22],[92,23,72,25,"complete"],[92,24,72,25],[92,29,72,31],[93,8,73,12,"resolve"],[93,15,73,19],[93,16,73,20],[93,17,73,21],[94,8,74,12,"unlisten"],[94,16,74,20],[94,17,74,21],[94,18,74,22],[95,6,75,8],[95,7,75,9],[96,6,76,8],[96,12,76,14,"error"],[96,17,76,19],[96,20,76,22,"error"],[96,21,76,22],[96,26,76,28],[97,8,77,12,"reject"],[97,14,77,18],[97,15,77,19,"tx"],[97,17,77,21],[97,18,77,22,"error"],[97,23,77,27],[97,27,77,31],[97,31,77,35,"DOMException"],[97,43,77,47],[97,44,77,48],[97,56,77,60],[97,58,77,62],[97,70,77,74],[97,71,77,75],[97,72,77,76],[98,8,78,12,"unlisten"],[98,16,78,20],[98,17,78,21],[98,18,78,22],[99,6,79,8],[99,7,79,9],[100,6,80,8,"tx"],[100,8,80,10],[100,9,80,11,"addEventListener"],[100,25,80,27],[100,26,80,28],[100,36,80,38],[100,38,80,40,"complete"],[100,46,80,48],[100,47,80,49],[101,6,81,8,"tx"],[101,8,81,10],[101,9,81,11,"addEventListener"],[101,25,81,27],[101,26,81,28],[101,33,81,35],[101,35,81,37,"error"],[101,40,81,42],[101,41,81,43],[102,6,82,8,"tx"],[102,8,82,10],[102,9,82,11,"addEventListener"],[102,25,82,27],[102,26,82,28],[102,33,82,35],[102,35,82,37,"error"],[102,40,82,42],[102,41,82,43],[103,4,83,4],[103,5,83,5],[103,6,83,6],[104,4,84,4],[105,4,85,4,"transactionDoneMap"],[105,22,85,22],[105,23,85,23,"set"],[105,26,85,26],[105,27,85,27,"tx"],[105,29,85,29],[105,31,85,31,"done"],[105,35,85,35],[105,36,85,36],[106,2,86,0],[107,2,87,0],[107,6,87,4,"idbProxyTraps"],[107,19,87,17],[107,22,87,20],[108,4,88,4,"get"],[108,7,88,7,"get"],[108,8,88,8,"target"],[108,14,88,14],[108,16,88,16,"prop"],[108,20,88,20],[108,22,88,22,"receiver"],[108,30,88,30],[108,32,88,32],[109,6,89,8],[109,10,89,12,"target"],[109,16,89,18],[109,28,89,30,"IDBTransaction"],[109,42,89,44],[109,44,89,46],[110,8,90,12],[111,8,91,12],[111,12,91,16,"prop"],[111,16,91,20],[111,21,91,25],[111,27,91,31],[111,29,92,16],[111,36,92,23,"transactionDoneMap"],[111,54,92,41],[111,55,92,42,"get"],[111,58,92,45],[111,59,92,46,"target"],[111,65,92,52],[111,66,92,53],[112,8,93,12],[113,8,94,12],[113,12,94,16,"prop"],[113,16,94,20],[113,21,94,25],[113,39,94,43],[113,41,94,45],[114,10,95,16],[114,17,95,23,"target"],[114,23,95,29],[114,24,95,30,"objectStoreNames"],[114,40,95,46],[114,44,95,50,"transactionStoreNamesMap"],[114,68,95,74],[114,69,95,75,"get"],[114,72,95,78],[114,73,95,79,"target"],[114,79,95,85],[114,80,95,86],[115,8,96,12],[116,8,97,12],[117,8,98,12],[117,12,98,16,"prop"],[117,16,98,20],[117,21,98,25],[117,28,98,32],[117,30,98,34],[118,10,99,16],[118,17,99,23,"receiver"],[118,25,99,31],[118,26,99,32,"objectStoreNames"],[118,42,99,48],[118,43,99,49],[118,44,99,50],[118,45,99,51],[118,48,100,22,"undefined"],[118,57,100,31],[118,60,101,22,"receiver"],[118,68,101,30],[118,69,101,31,"objectStore"],[118,80,101,42],[118,81,101,43,"receiver"],[118,89,101,51],[118,90,101,52,"objectStoreNames"],[118,106,101,68],[118,107,101,69],[118,108,101,70],[118,109,101,71],[118,110,101,72],[119,8,102,12],[120,6,103,8],[121,6,104,8],[122,6,105,8],[122,13,105,15,"wrap"],[122,17,105,19],[122,18,105,20,"target"],[122,24,105,26],[122,25,105,27,"prop"],[122,29,105,31],[122,30,105,32],[122,31,105,33],[123,4,106,4],[123,5,106,5],[124,4,107,4,"set"],[124,7,107,7,"set"],[124,8,107,8,"target"],[124,14,107,14],[124,16,107,16,"prop"],[124,20,107,20],[124,22,107,22,"value"],[124,27,107,27],[124,29,107,29],[125,6,108,8,"target"],[125,12,108,14],[125,13,108,15,"prop"],[125,17,108,19],[125,18,108,20],[125,21,108,23,"value"],[125,26,108,28],[126,6,109,8],[126,13,109,15],[126,17,109,19],[127,4,110,4],[127,5,110,5],[128,4,111,4,"has"],[128,7,111,7,"has"],[128,8,111,8,"target"],[128,14,111,14],[128,16,111,16,"prop"],[128,20,111,20],[128,22,111,22],[129,6,112,8],[129,10,112,12,"target"],[129,16,112,18],[129,28,112,30,"IDBTransaction"],[129,42,112,44],[129,47,113,13,"prop"],[129,51,113,17],[129,56,113,22],[129,62,113,28],[129,66,113,32,"prop"],[129,70,113,36],[129,75,113,41],[129,82,113,48],[129,83,113,49],[129,85,113,51],[130,8,114,12],[130,15,114,19],[130,19,114,23],[131,6,115,8],[132,6,116,8],[132,13,116,15,"prop"],[132,17,116,19],[132,21,116,23,"target"],[132,27,116,29],[133,4,117,4],[134,2,118,0],[134,3,118,1],[135,2,119,0],[135,11,119,9,"replaceTraps"],[135,23,119,21,"replaceTraps"],[135,24,119,22,"callback"],[135,32,119,30],[135,34,119,32],[136,4,120,4,"idbProxyTraps"],[136,17,120,17],[136,20,120,20,"callback"],[136,28,120,28],[136,29,120,29,"idbProxyTraps"],[136,42,120,42],[136,43,120,43],[137,2,121,0],[138,2,122,0],[138,11,122,9,"wrapFunction"],[138,23,122,21,"wrapFunction"],[138,24,122,22,"func"],[138,28,122,26],[138,30,122,28],[139,4,123,4],[140,4,124,4],[141,4,125,4],[142,4,126,4],[142,8,126,8,"func"],[142,12,126,12],[142,17,126,17,"IDBDatabase"],[142,28,126,28],[142,29,126,29,"prototype"],[142,38,126,38],[142,39,126,39,"transaction"],[142,50,126,50],[142,54,127,8],[142,56,127,10],[142,74,127,28],[142,78,127,32,"IDBTransaction"],[142,92,127,46],[142,93,127,47,"prototype"],[142,102,127,56],[142,103,127,57],[142,105,127,59],[143,6,128,8],[143,13,128,15],[143,23,128,25,"storeNames"],[143,33,128,35],[143,35,128,37],[143,38,128,40,"args"],[143,42,128,44],[143,44,128,46],[144,8,129,12],[144,14,129,18,"tx"],[144,16,129,20],[144,19,129,23,"func"],[144,23,129,27],[144,24,129,28,"call"],[144,28,129,32],[144,29,129,33,"unwrap"],[144,35,129,39],[144,36,129,40],[144,40,129,44],[144,41,129,45],[144,43,129,47,"storeNames"],[144,53,129,57],[144,55,129,59],[144,58,129,62,"args"],[144,62,129,66],[144,63,129,67],[145,8,130,12,"transactionStoreNamesMap"],[145,32,130,36],[145,33,130,37,"set"],[145,36,130,40],[145,37,130,41,"tx"],[145,39,130,43],[145,41,130,45,"storeNames"],[145,51,130,55],[145,52,130,56,"sort"],[145,56,130,60],[145,59,130,63,"storeNames"],[145,69,130,73],[145,70,130,74,"sort"],[145,74,130,78],[145,75,130,79],[145,76,130,80],[145,79,130,83],[145,80,130,84,"storeNames"],[145,90,130,94],[145,91,130,95],[145,92,130,96],[146,8,131,12],[146,15,131,19,"wrap"],[146,19,131,23],[146,20,131,24,"tx"],[146,22,131,26],[146,23,131,27],[147,6,132,8],[147,7,132,9],[148,4,133,4],[149,4,134,4],[150,4,135,4],[151,4,136,4],[152,4,137,4],[153,4,138,4],[154,4,139,4],[154,8,139,8,"getCursorAdvanceMethods"],[154,31,139,31],[154,32,139,32],[154,33,139,33],[154,34,139,34,"includes"],[154,42,139,42],[154,43,139,43,"func"],[154,47,139,47],[154,48,139,48],[154,50,139,50],[155,6,140,8],[155,13,140,15],[155,23,140,25],[155,26,140,28,"args"],[155,30,140,32],[155,32,140,34],[156,8,141,12],[157,8,142,12],[158,8,143,12,"func"],[158,12,143,16],[158,13,143,17,"apply"],[158,18,143,22],[158,19,143,23,"unwrap"],[158,25,143,29],[158,26,143,30],[158,30,143,34],[158,31,143,35],[158,33,143,37,"args"],[158,37,143,41],[158,38,143,42],[159,8,144,12],[159,15,144,19,"wrap"],[159,19,144,23],[159,20,144,24,"cursorRequestMap"],[159,36,144,40],[159,37,144,41,"get"],[159,40,144,44],[159,41,144,45],[159,45,144,49],[159,46,144,50],[159,47,144,51],[160,6,145,8],[160,7,145,9],[161,4,146,4],[162,4,147,4],[162,11,147,11],[162,21,147,21],[162,24,147,24,"args"],[162,28,147,28],[162,30,147,30],[163,6,148,8],[164,6,149,8],[165,6,150,8],[165,13,150,15,"wrap"],[165,17,150,19],[165,18,150,20,"func"],[165,22,150,24],[165,23,150,25,"apply"],[165,28,150,30],[165,29,150,31,"unwrap"],[165,35,150,37],[165,36,150,38],[165,40,150,42],[165,41,150,43],[165,43,150,45,"args"],[165,47,150,49],[165,48,150,50],[165,49,150,51],[166,4,151,4],[166,5,151,5],[167,2,152,0],[168,2,153,0],[168,11,153,9,"transformCachableValue"],[168,33,153,31,"transformCachableValue"],[168,34,153,32,"value"],[168,39,153,37],[168,41,153,39],[169,4,154,4],[169,8,154,8],[169,15,154,15,"value"],[169,20,154,20],[169,25,154,25],[169,35,154,35],[169,37,155,8],[169,44,155,15,"wrapFunction"],[169,56,155,27],[169,57,155,28,"value"],[169,62,155,33],[169,63,155,34],[170,4,156,4],[171,4,157,4],[172,4,158,4],[172,8,158,8,"value"],[172,13,158,13],[172,25,158,25,"IDBTransaction"],[172,39,158,39],[172,41,159,8,"cacheDonePromiseForTransaction"],[172,71,159,38],[172,72,159,39,"value"],[172,77,159,44],[172,78,159,45],[173,4,160,4],[173,8,160,8,"instanceOfAny"],[173,21,160,21],[173,22,160,22,"value"],[173,27,160,27],[173,29,160,29,"getIdbProxyableTypes"],[173,49,160,49],[173,50,160,50],[173,51,160,51],[173,52,160,52],[173,54,161,8],[173,61,161,15],[173,65,161,19,"Proxy"],[173,70,161,24],[173,71,161,25,"value"],[173,76,161,30],[173,78,161,32,"idbProxyTraps"],[173,91,161,45],[173,92,161,46],[174,4,162,4],[175,4,163,4],[175,11,163,11,"value"],[175,16,163,16],[176,2,164,0],[177,2,165,0],[177,11,165,9,"wrap"],[177,15,165,13,"wrap"],[177,16,165,14,"value"],[177,21,165,19],[177,23,165,21],[178,4,166,4],[179,4,167,4],[180,4,168,4],[180,8,168,8,"value"],[180,13,168,13],[180,25,168,25,"IDBRequest"],[180,35,168,35],[180,37,169,8],[180,44,169,15,"promisifyRequest"],[180,60,169,31],[180,61,169,32,"value"],[180,66,169,37],[180,67,169,38],[181,4,170,4],[182,4,171,4],[183,4,172,4],[183,8,172,8,"transformCache"],[183,22,172,22],[183,23,172,23,"has"],[183,26,172,26],[183,27,172,27,"value"],[183,32,172,32],[183,33,172,33],[183,35,173,8],[183,42,173,15,"transformCache"],[183,56,173,29],[183,57,173,30,"get"],[183,60,173,33],[183,61,173,34,"value"],[183,66,173,39],[183,67,173,40],[184,4,174,4],[184,10,174,10,"newValue"],[184,18,174,18],[184,21,174,21,"transformCachableValue"],[184,43,174,43],[184,44,174,44,"value"],[184,49,174,49],[184,50,174,50],[185,4,175,4],[186,4,176,4],[187,4,177,4],[187,8,177,8,"newValue"],[187,16,177,16],[187,21,177,21,"value"],[187,26,177,26],[187,28,177,28],[188,6,178,8,"transformCache"],[188,20,178,22],[188,21,178,23,"set"],[188,24,178,26],[188,25,178,27,"value"],[188,30,178,32],[188,32,178,34,"newValue"],[188,40,178,42],[188,41,178,43],[189,6,179,8,"reverseTransformCache"],[189,27,179,29],[189,28,179,30,"set"],[189,31,179,33],[189,32,179,34,"newValue"],[189,40,179,42],[189,42,179,44,"value"],[189,47,179,49],[189,48,179,50],[190,4,180,4],[191,4,181,4],[191,11,181,11,"newValue"],[191,19,181,19],[192,2,182,0],[193,2,183,0],[193,8,183,6,"unwrap"],[193,14,183,12],[193,17,183,16,"value"],[193,22,183,21],[193,26,183,26,"reverseTransformCache"],[193,47,183,47],[193,48,183,48,"get"],[193,51,183,51],[193,52,183,52,"value"],[193,57,183,57],[193,58,183,58],[194,0,183,59],[194,3]],"functionMap":{"names":["<global>","instanceOfAny","constructors.some$argument_0","getIdbProxyableTypes","getCursorAdvanceMethods","promisifyRequest","Promise$argument_0","unlisten","success","error","promise.then$argument_0","promise.then._catch$argument_0","cacheDonePromiseForTransaction","complete","idbProxyTraps.get","idbProxyTraps.set","idbProxyTraps.has","replaceTraps","wrapFunction","<anonymous>","transformCachableValue","wrap","unwrap"],"mappings":"AAA,sBC,4CC,0BD,CD;AGK;CHS;AIE;CJO;AKM;gCCC;yBCC;SDG;wBEC;SFG;sBGC;SHG;KDG;cKE;KLO;eMC,SN;CLK;AYC;6BNI;yBCC;SDI;yBOC;SPG;sBGC;SHG;KMI;CZG;IcE;KdkB;IeC;KfG;IgBC;KhBM;AiBE;CjBE;AkBC;eCM;SDI;eCQ;SDK;WCE;KDI;ClBC;AoBC;CpBW;AqBC;CrBiB;esBC,2CtB"},"hasCjsExports":false},"type":"js/module"}]}