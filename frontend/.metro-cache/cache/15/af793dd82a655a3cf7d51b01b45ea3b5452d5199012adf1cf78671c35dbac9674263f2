{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function $parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n      get: v,\n      set: s,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  $parcel$export(module.exports, \"clamp\", () => $ac8e4d4816275668$export$7d15b64cf5a3a4c4);\n  $parcel$export(module.exports, \"snapValueToStep\", () => $ac8e4d4816275668$export$cb6e0bb50bc19463);\n  $parcel$export(module.exports, \"toFixedNumber\", () => $ac8e4d4816275668$export$b6268554fba451f);\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */ /**\n      * Takes a value and forces it to the closest min/max if it's outside. Also forces it to the closest valid step.\n      */\n  function $ac8e4d4816275668$export$7d15b64cf5a3a4c4(value, min = -Infinity, max = Infinity) {\n    let newValue = Math.min(Math.max(value, min), max);\n    return newValue;\n  }\n  function $ac8e4d4816275668$export$e1a7b8e69ef6c52f(value, step) {\n    let roundedValue = value;\n    let precision = 0;\n    let stepString = step.toString();\n    // Handle negative exponents in exponential notation (e.g., \"1e-7\" â†’ precision 8)\n    let eIndex = stepString.toLowerCase().indexOf('e-');\n    if (eIndex > 0) precision = Math.abs(Math.floor(Math.log10(Math.abs(step)))) + eIndex;else {\n      let pointIndex = stepString.indexOf('.');\n      if (pointIndex >= 0) precision = stepString.length - pointIndex;\n    }\n    if (precision > 0) {\n      let pow = Math.pow(10, precision);\n      roundedValue = Math.round(roundedValue * pow) / pow;\n    }\n    return roundedValue;\n  }\n  function $ac8e4d4816275668$export$cb6e0bb50bc19463(value, min, max, step) {\n    min = Number(min);\n    max = Number(max);\n    let remainder = (value - (isNaN(min) ? 0 : min)) % step;\n    let snappedValue = $ac8e4d4816275668$export$e1a7b8e69ef6c52f(Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder, step);\n    if (!isNaN(min)) {\n      if (snappedValue < min) snappedValue = min;else if (!isNaN(max) && snappedValue > max) snappedValue = min + Math.floor($ac8e4d4816275668$export$e1a7b8e69ef6c52f((max - min) / step, step)) * step;\n    } else if (!isNaN(max) && snappedValue > max) snappedValue = Math.floor($ac8e4d4816275668$export$e1a7b8e69ef6c52f(max / step, step)) * step;\n    // correct floating point behavior by rounding to step precision\n    snappedValue = $ac8e4d4816275668$export$e1a7b8e69ef6c52f(snappedValue, step);\n    return snappedValue;\n  }\n  function $ac8e4d4816275668$export$b6268554fba451f(value, digits, base = 10) {\n    const pow = Math.pow(base, digits);\n    return Math.round(value * pow) / pow;\n  }\n});","lineCount":62,"map":[[2,2,2,0],[2,11,2,9,"$parcel$export"],[2,25,2,23,"$parcel$export"],[2,26,2,24,"e"],[2,27,2,25],[2,29,2,27,"n"],[2,30,2,28],[2,32,2,30,"v"],[2,33,2,31],[2,35,2,33,"s"],[2,36,2,34],[2,38,2,36],[3,4,3,2,"Object"],[3,10,3,8],[3,11,3,9,"defineProperty"],[3,25,3,23],[3,26,3,24,"e"],[3,27,3,25],[3,29,3,27,"n"],[3,30,3,28],[3,32,3,30],[4,6,3,31,"get"],[4,9,3,34],[4,11,3,36,"v"],[4,12,3,37],[5,6,3,39,"set"],[5,9,3,42],[5,11,3,44,"s"],[5,12,3,45],[6,6,3,47,"enumerable"],[6,16,3,57],[6,18,3,59],[6,22,3,63],[7,6,3,65,"configurable"],[7,18,3,77],[7,20,3,79],[8,4,3,83],[8,5,3,84],[8,6,3,85],[9,2,4,0],[10,2,6,0,"$parcel$export"],[10,16,6,14],[10,17,6,15,"module"],[10,23,6,21],[10,24,6,22,"exports"],[10,31,6,29],[10,33,6,31],[10,40,6,38],[10,42,6,40],[10,48,6,46,"$ac8e4d4816275668$export$7d15b64cf5a3a4c4"],[10,89,6,87],[10,90,6,88],[11,2,7,0,"$parcel$export"],[11,16,7,14],[11,17,7,15,"module"],[11,23,7,21],[11,24,7,22,"exports"],[11,31,7,29],[11,33,7,31],[11,50,7,48],[11,52,7,50],[11,58,7,56,"$ac8e4d4816275668$export$cb6e0bb50bc19463"],[11,99,7,97],[11,100,7,98],[12,2,8,0,"$parcel$export"],[12,16,8,14],[12,17,8,15,"module"],[12,23,8,21],[12,24,8,22,"exports"],[12,31,8,29],[12,33,8,31],[12,48,8,46],[12,50,8,48],[12,56,8,54,"$ac8e4d4816275668$export$b6268554fba451f"],[12,96,8,94],[12,97,8,95],[13,2,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[23,5,9,0],[23,6,19,4],[24,0,20,0],[25,0,21,0],[26,2,21,4],[26,11,21,13,"$ac8e4d4816275668$export$7d15b64cf5a3a4c4"],[26,52,21,54,"$ac8e4d4816275668$export$7d15b64cf5a3a4c4"],[26,53,21,55,"value"],[26,58,21,60],[26,60,21,62,"min"],[26,63,21,65],[26,66,21,68],[26,67,21,69,"Infinity"],[26,75,21,77],[26,77,21,79,"max"],[26,80,21,82],[26,83,21,85,"Infinity"],[26,91,21,93],[26,93,21,95],[27,4,22,4],[27,8,22,8,"newValue"],[27,16,22,16],[27,19,22,19,"Math"],[27,23,22,23],[27,24,22,24,"min"],[27,27,22,27],[27,28,22,28,"Math"],[27,32,22,32],[27,33,22,33,"max"],[27,36,22,36],[27,37,22,37,"value"],[27,42,22,42],[27,44,22,44,"min"],[27,47,22,47],[27,48,22,48],[27,50,22,50,"max"],[27,53,22,53],[27,54,22,54],[28,4,23,4],[28,11,23,11,"newValue"],[28,19,23,19],[29,2,24,0],[30,2,25,0],[30,11,25,9,"$ac8e4d4816275668$export$e1a7b8e69ef6c52f"],[30,52,25,50,"$ac8e4d4816275668$export$e1a7b8e69ef6c52f"],[30,53,25,51,"value"],[30,58,25,56],[30,60,25,58,"step"],[30,64,25,62],[30,66,25,64],[31,4,26,4],[31,8,26,8,"roundedValue"],[31,20,26,20],[31,23,26,23,"value"],[31,28,26,28],[32,4,27,4],[32,8,27,8,"precision"],[32,17,27,17],[32,20,27,20],[32,21,27,21],[33,4,28,4],[33,8,28,8,"stepString"],[33,18,28,18],[33,21,28,21,"step"],[33,25,28,25],[33,26,28,26,"toString"],[33,34,28,34],[33,35,28,35],[33,36,28,36],[34,4,29,4],[35,4,30,4],[35,8,30,8,"eIndex"],[35,14,30,14],[35,17,30,17,"stepString"],[35,27,30,27],[35,28,30,28,"toLowerCase"],[35,39,30,39],[35,40,30,40],[35,41,30,41],[35,42,30,42,"indexOf"],[35,49,30,49],[35,50,30,50],[35,54,30,54],[35,55,30,55],[36,4,31,4],[36,8,31,8,"eIndex"],[36,14,31,14],[36,17,31,17],[36,18,31,18],[36,20,31,20,"precision"],[36,29,31,29],[36,32,31,32,"Math"],[36,36,31,36],[36,37,31,37,"abs"],[36,40,31,40],[36,41,31,41,"Math"],[36,45,31,45],[36,46,31,46,"floor"],[36,51,31,51],[36,52,31,52,"Math"],[36,56,31,56],[36,57,31,57,"log10"],[36,62,31,62],[36,63,31,63,"Math"],[36,67,31,67],[36,68,31,68,"abs"],[36,71,31,71],[36,72,31,72,"step"],[36,76,31,76],[36,77,31,77],[36,78,31,78],[36,79,31,79],[36,80,31,80],[36,83,31,83,"eIndex"],[36,89,31,89],[36,90,31,90],[36,95,32,9],[37,6,33,8],[37,10,33,12,"pointIndex"],[37,20,33,22],[37,23,33,25,"stepString"],[37,33,33,35],[37,34,33,36,"indexOf"],[37,41,33,43],[37,42,33,44],[37,45,33,47],[37,46,33,48],[38,6,34,8],[38,10,34,12,"pointIndex"],[38,20,34,22],[38,24,34,26],[38,25,34,27],[38,27,34,29,"precision"],[38,36,34,38],[38,39,34,41,"stepString"],[38,49,34,51],[38,50,34,52,"length"],[38,56,34,58],[38,59,34,61,"pointIndex"],[38,69,34,71],[39,4,35,4],[40,4,36,4],[40,8,36,8,"precision"],[40,17,36,17],[40,20,36,20],[40,21,36,21],[40,23,36,23],[41,6,37,8],[41,10,37,12,"pow"],[41,13,37,15],[41,16,37,18,"Math"],[41,20,37,22],[41,21,37,23,"pow"],[41,24,37,26],[41,25,37,27],[41,27,37,29],[41,29,37,31,"precision"],[41,38,37,40],[41,39,37,41],[42,6,38,8,"roundedValue"],[42,18,38,20],[42,21,38,23,"Math"],[42,25,38,27],[42,26,38,28,"round"],[42,31,38,33],[42,32,38,34,"roundedValue"],[42,44,38,46],[42,47,38,49,"pow"],[42,50,38,52],[42,51,38,53],[42,54,38,56,"pow"],[42,57,38,59],[43,4,39,4],[44,4,40,4],[44,11,40,11,"roundedValue"],[44,23,40,23],[45,2,41,0],[46,2,42,0],[46,11,42,9,"$ac8e4d4816275668$export$cb6e0bb50bc19463"],[46,52,42,50,"$ac8e4d4816275668$export$cb6e0bb50bc19463"],[46,53,42,51,"value"],[46,58,42,56],[46,60,42,58,"min"],[46,63,42,61],[46,65,42,63,"max"],[46,68,42,66],[46,70,42,68,"step"],[46,74,42,72],[46,76,42,74],[47,4,43,4,"min"],[47,7,43,7],[47,10,43,10,"Number"],[47,16,43,16],[47,17,43,17,"min"],[47,20,43,20],[47,21,43,21],[48,4,44,4,"max"],[48,7,44,7],[48,10,44,10,"Number"],[48,16,44,16],[48,17,44,17,"max"],[48,20,44,20],[48,21,44,21],[49,4,45,4],[49,8,45,8,"remainder"],[49,17,45,17],[49,20,45,20],[49,21,45,21,"value"],[49,26,45,26],[49,30,45,30,"isNaN"],[49,35,45,35],[49,36,45,36,"min"],[49,39,45,39],[49,40,45,40],[49,43,45,43],[49,44,45,44],[49,47,45,47,"min"],[49,50,45,50],[49,51,45,51],[49,55,45,55,"step"],[49,59,45,59],[50,4,46,4],[50,8,46,8,"snappedValue"],[50,20,46,20],[50,23,46,23,"$ac8e4d4816275668$export$e1a7b8e69ef6c52f"],[50,64,46,64],[50,65,46,65,"Math"],[50,69,46,69],[50,70,46,70,"abs"],[50,73,46,73],[50,74,46,74,"remainder"],[50,83,46,83],[50,84,46,84],[50,87,46,87],[50,88,46,88],[50,92,46,92,"step"],[50,96,46,96],[50,99,46,99,"value"],[50,104,46,104],[50,107,46,107,"Math"],[50,111,46,111],[50,112,46,112,"sign"],[50,116,46,116],[50,117,46,117,"remainder"],[50,126,46,126],[50,127,46,127],[50,131,46,131,"step"],[50,135,46,135],[50,138,46,138,"Math"],[50,142,46,142],[50,143,46,143,"abs"],[50,146,46,146],[50,147,46,147,"remainder"],[50,156,46,156],[50,157,46,157],[50,158,46,158],[50,161,46,161,"value"],[50,166,46,166],[50,169,46,169,"remainder"],[50,178,46,178],[50,180,46,180,"step"],[50,184,46,184],[50,185,46,185],[51,4,47,4],[51,8,47,8],[51,9,47,9,"isNaN"],[51,14,47,14],[51,15,47,15,"min"],[51,18,47,18],[51,19,47,19],[51,21,47,21],[52,6,48,8],[52,10,48,12,"snappedValue"],[52,22,48,24],[52,25,48,27,"min"],[52,28,48,30],[52,30,48,32,"snappedValue"],[52,42,48,44],[52,45,48,47,"min"],[52,48,48,50],[52,49,48,51],[52,54,49,13],[52,58,49,17],[52,59,49,18,"isNaN"],[52,64,49,23],[52,65,49,24,"max"],[52,68,49,27],[52,69,49,28],[52,73,49,32,"snappedValue"],[52,85,49,44],[52,88,49,47,"max"],[52,91,49,50],[52,93,49,52,"snappedValue"],[52,105,49,64],[52,108,49,67,"min"],[52,111,49,70],[52,114,49,73,"Math"],[52,118,49,77],[52,119,49,78,"floor"],[52,124,49,83],[52,125,49,84,"$ac8e4d4816275668$export$e1a7b8e69ef6c52f"],[52,166,49,125],[52,167,49,126],[52,168,49,127,"max"],[52,171,49,130],[52,174,49,133,"min"],[52,177,49,136],[52,181,49,140,"step"],[52,185,49,144],[52,187,49,146,"step"],[52,191,49,150],[52,192,49,151],[52,193,49,152],[52,196,49,155,"step"],[52,200,49,159],[53,4,50,4],[53,5,50,5],[53,11,50,11],[53,15,50,15],[53,16,50,16,"isNaN"],[53,21,50,21],[53,22,50,22,"max"],[53,25,50,25],[53,26,50,26],[53,30,50,30,"snappedValue"],[53,42,50,42],[53,45,50,45,"max"],[53,48,50,48],[53,50,50,50,"snappedValue"],[53,62,50,62],[53,65,50,65,"Math"],[53,69,50,69],[53,70,50,70,"floor"],[53,75,50,75],[53,76,50,76,"$ac8e4d4816275668$export$e1a7b8e69ef6c52f"],[53,117,50,117],[53,118,50,118,"max"],[53,121,50,121],[53,124,50,124,"step"],[53,128,50,128],[53,130,50,130,"step"],[53,134,50,134],[53,135,50,135],[53,136,50,136],[53,139,50,139,"step"],[53,143,50,143],[54,4,51,4],[55,4,52,4,"snappedValue"],[55,16,52,16],[55,19,52,19,"$ac8e4d4816275668$export$e1a7b8e69ef6c52f"],[55,60,52,60],[55,61,52,61,"snappedValue"],[55,73,52,73],[55,75,52,75,"step"],[55,79,52,79],[55,80,52,80],[56,4,53,4],[56,11,53,11,"snappedValue"],[56,23,53,23],[57,2,54,0],[58,2,55,0],[58,11,55,9,"$ac8e4d4816275668$export$b6268554fba451f"],[58,51,55,49,"$ac8e4d4816275668$export$b6268554fba451f"],[58,52,55,50,"value"],[58,57,55,55],[58,59,55,57,"digits"],[58,65,55,63],[58,67,55,65,"base"],[58,71,55,69],[58,74,55,72],[58,76,55,74],[58,78,55,76],[59,4,56,4],[59,10,56,10,"pow"],[59,13,56,13],[59,16,56,16,"Math"],[59,20,56,20],[59,21,56,21,"pow"],[59,24,56,24],[59,25,56,25,"base"],[59,29,56,29],[59,31,56,31,"digits"],[59,37,56,37],[59,38,56,38],[60,4,57,4],[60,11,57,11,"Math"],[60,15,57,15],[60,16,57,16,"round"],[60,21,57,21],[60,22,57,22,"value"],[60,27,57,27],[60,30,57,30,"pow"],[60,33,57,33],[60,34,57,34],[60,37,57,37,"pow"],[60,40,57,40],[61,2,58,0],[62,0,58,1],[62,3]],"functionMap":{"names":["<global>","$parcel$export","$parcel$export$argument_2","$ac8e4d4816275668$export$7d15b64cf5a3a4c4","$ac8e4d4816275668$export$e1a7b8e69ef6c52f","$ac8e4d4816275668$export$cb6e0bb50bc19463","$ac8e4d4816275668$export$b6268554fba451f"],"mappings":"AAA;ACC;CDE;wCEE,+CF;kDEC,+CF;gDEC,8CF;IGa;CHG;AIC;CJgB;AKC;CLY;AMC;CNG"},"hasCjsExports":false},"type":"js/module"}]}