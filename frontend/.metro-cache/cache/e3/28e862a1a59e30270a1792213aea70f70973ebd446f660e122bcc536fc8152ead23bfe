{"dependencies":[{"name":"./TableUtils.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":215,"index":215}}],"key":"h2oAMEGl39vL8zhXswi9t7/d2oI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"TableColumnLayout\", {\n    enumerable: true,\n    get: function () {\n      return $a9e7ae544a4e41dd$export$7ff77a162970b30e;\n    }\n  });\n  var _TableUtilsMjs = require(_dependencyMap[0], \"./TableUtils.mjs\");\n  /*\n   * Copyright 2022 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */\n  class $a9e7ae544a4e41dd$export$7ff77a162970b30e {\n    /** Takes an array of columns and splits it into 2 maps of columns with controlled and columns with uncontrolled widths. */splitColumnsIntoControlledAndUncontrolled(columns) {\n      return columns.reduce((acc, col) => {\n        if (col.props.width != null) acc[0].set(col.key, col);else acc[1].set(col.key, col);\n        return acc;\n      }, [new Map(), new Map()]);\n    }\n    /** Takes uncontrolled and controlled widths and joins them into a single Map. */\n    recombineColumns(columns, uncontrolledWidths, uncontrolledColumns, controlledColumns) {\n      return new Map(columns.map(col => {\n        if (uncontrolledColumns.has(col.key)) return [col.key, uncontrolledWidths.get(col.key)];else return [col.key, controlledColumns.get(col.key).props.width];\n      }));\n    }\n    /** Used to make an initial Map of the uncontrolled widths based on default widths. */\n    getInitialUncontrolledWidths(uncontrolledColumns) {\n      return new Map(Array.from(uncontrolledColumns).map(([key, col]) => {\n        var _this_getDefaultWidth, _this;\n        var _col_props_defaultWidth, _ref;\n        return [key, (_ref = (_col_props_defaultWidth = col.props.defaultWidth) !== null && _col_props_defaultWidth !== void 0 ? _col_props_defaultWidth : (_this_getDefaultWidth = (_this = this).getDefaultWidth) === null || _this_getDefaultWidth === void 0 ? void 0 : _this_getDefaultWidth.call(_this, col)) !== null && _ref !== void 0 ? _ref : '1fr'];\n      }));\n    }\n    getColumnWidth(key) {\n      var _this_columnWidths_get;\n      return (_this_columnWidths_get = this.columnWidths.get(key)) !== null && _this_columnWidths_get !== void 0 ? _this_columnWidths_get : 0;\n    }\n    getColumnMinWidth(key) {\n      var _this_columnMinWidths_get;\n      return (_this_columnMinWidths_get = this.columnMinWidths.get(key)) !== null && _this_columnMinWidths_get !== void 0 ? _this_columnMinWidths_get : 0;\n    }\n    getColumnMaxWidth(key) {\n      var _this_columnMaxWidths_get;\n      return (_this_columnMaxWidths_get = this.columnMaxWidths.get(key)) !== null && _this_columnMaxWidths_get !== void 0 ? _this_columnMaxWidths_get : 0;\n    }\n    resizeColumnWidth(collection, uncontrolledWidths, col, width) {\n      let prevColumnWidths = this.columnWidths;\n      let freeze = true;\n      let newWidths = new Map();\n      width = Math.max(this.getColumnMinWidth(col), Math.min(this.getColumnMaxWidth(col), Math.floor(width)));\n      collection.columns.forEach(column => {\n        var _prevColumnWidths_get, _column_props_width;\n        if (column.key === col) {\n          newWidths.set(column.key, width);\n          freeze = false;\n        } else if (freeze)\n          // freeze columns to the left to their previous pixel value\n          newWidths.set(column.key, (_prevColumnWidths_get = prevColumnWidths.get(column.key)) !== null && _prevColumnWidths_get !== void 0 ? _prevColumnWidths_get : 0);else newWidths.set(column.key, (_column_props_width = column.props.width) !== null && _column_props_width !== void 0 ? _column_props_width : uncontrolledWidths.get(column.key));\n      });\n      return newWidths;\n    }\n    buildColumnWidths(tableWidth, collection, widths) {\n      this.columnWidths = new Map();\n      this.columnMinWidths = new Map();\n      this.columnMaxWidths = new Map();\n      // initial layout or table/window resizing\n      let columnWidths = (0, _TableUtilsMjs.calculateColumnSizes)(tableWidth, collection.columns.map(col => Object.assign({}, col.props, {\n        key: col.key\n      })), widths, i => this.getDefaultWidth(collection.columns[i]), i => this.getDefaultMinWidth(collection.columns[i]));\n      // columns going in will be the same order as the columns coming out\n      columnWidths.forEach((width, index) => {\n        let key = collection.columns[index].key;\n        let column = collection.columns[index];\n        this.columnWidths.set(key, width);\n        var _column_props_minWidth;\n        this.columnMinWidths.set(key, (0, _TableUtilsMjs.getMinWidth)((_column_props_minWidth = column.props.minWidth) !== null && _column_props_minWidth !== void 0 ? _column_props_minWidth : this.getDefaultMinWidth(column), tableWidth));\n        this.columnMaxWidths.set(key, (0, _TableUtilsMjs.getMaxWidth)(column.props.maxWidth, tableWidth));\n      });\n      return this.columnWidths;\n    }\n    constructor(options) {\n      this.columnWidths = new Map();\n      this.columnMinWidths = new Map();\n      this.columnMaxWidths = new Map();\n      var _options_getDefaultWidth;\n      this.getDefaultWidth = (_options_getDefaultWidth = options === null || options === void 0 ? void 0 : options.getDefaultWidth) !== null && _options_getDefaultWidth !== void 0 ? _options_getDefaultWidth : () => '1fr';\n      var _options_getDefaultMinWidth;\n      this.getDefaultMinWidth = (_options_getDefaultMinWidth = options === null || options === void 0 ? void 0 : options.getDefaultMinWidth) !== null && _options_getDefaultMinWidth !== void 0 ? _options_getDefaultMinWidth : () => 75;\n    }\n  }\n});","lineCount":103,"map":[[7,2,107,0,"Object"],[7,8,107,0],[7,9,107,0,"defineProperty"],[7,23,107,0],[7,24,107,0,"exports"],[7,31,107,0],[8,4,107,0,"enumerable"],[8,14,107,0],[9,4,107,0,"get"],[9,7,107,0],[9,18,107,0,"get"],[9,19,107,0],[10,6,107,0],[10,13,107,8,"$a9e7ae544a4e41dd$export$7ff77a162970b30e"],[10,54,107,49],[11,4,107,49],[12,2,107,49],[13,2,1,0],[13,6,1,0,"_TableUtilsMjs"],[13,20,1,0],[13,23,1,0,"require"],[13,30,1,0],[13,31,1,0,"_dependencyMap"],[13,45,1,0],[14,2,3,0],[15,0,4,0],[16,0,5,0],[17,0,6,0],[18,0,7,0],[19,0,8,0],[20,0,9,0],[21,0,10,0],[22,0,11,0],[23,0,12,0],[24,0,13,0],[25,2,14,0],[25,8,14,6,"$a9e7ae544a4e41dd$export$7ff77a162970b30e"],[25,49,14,47],[25,50,14,48],[26,4,15,4],[26,127,15,128,"splitColumnsIntoControlledAndUncontrolled"],[26,168,15,169,"splitColumnsIntoControlledAndUncontrolled"],[26,169,15,170,"columns"],[26,176,15,177],[26,178,15,179],[27,6,16,8],[27,13,16,15,"columns"],[27,20,16,22],[27,21,16,23,"reduce"],[27,27,16,29],[27,28,16,30],[27,29,16,31,"acc"],[27,32,16,34],[27,34,16,36,"col"],[27,37,16,39],[27,42,16,42],[28,8,17,12],[28,12,17,16,"col"],[28,15,17,19],[28,16,17,20,"props"],[28,21,17,25],[28,22,17,26,"width"],[28,27,17,31],[28,31,17,35],[28,35,17,39],[28,37,17,41,"acc"],[28,40,17,44],[28,41,17,45],[28,42,17,46],[28,43,17,47],[28,44,17,48,"set"],[28,47,17,51],[28,48,17,52,"col"],[28,51,17,55],[28,52,17,56,"key"],[28,55,17,59],[28,57,17,61,"col"],[28,60,17,64],[28,61,17,65],[28,62,17,66],[28,67,18,17,"acc"],[28,70,18,20],[28,71,18,21],[28,72,18,22],[28,73,18,23],[28,74,18,24,"set"],[28,77,18,27],[28,78,18,28,"col"],[28,81,18,31],[28,82,18,32,"key"],[28,85,18,35],[28,87,18,37,"col"],[28,90,18,40],[28,91,18,41],[29,8,19,12],[29,15,19,19,"acc"],[29,18,19,22],[30,6,20,8],[30,7,20,9],[30,9,20,11],[30,10,21,12],[30,14,21,16,"Map"],[30,17,21,19],[30,18,21,20],[30,19,21,21],[30,21,22,12],[30,25,22,16,"Map"],[30,28,22,19],[30,29,22,20],[30,30,22,21],[30,31,23,9],[30,32,23,10],[31,4,24,4],[32,4,25,4],[33,4,25,86,"recombineColumns"],[33,20,25,102,"recombineColumns"],[33,21,25,103,"columns"],[33,28,25,110],[33,30,25,112,"uncontrolledWidths"],[33,48,25,130],[33,50,25,132,"uncontrolledColumns"],[33,69,25,151],[33,71,25,153,"controlledColumns"],[33,88,25,170],[33,90,25,172],[34,6,26,8],[34,13,26,15],[34,17,26,19,"Map"],[34,20,26,22],[34,21,26,23,"columns"],[34,28,26,30],[34,29,26,31,"map"],[34,32,26,34],[34,33,26,36,"col"],[34,36,26,39],[34,40,26,42],[35,8,27,12],[35,12,27,16,"uncontrolledColumns"],[35,31,27,35],[35,32,27,36,"has"],[35,35,27,39],[35,36,27,40,"col"],[35,39,27,43],[35,40,27,44,"key"],[35,43,27,47],[35,44,27,48],[35,46,27,50],[35,53,27,57],[35,54,28,16,"col"],[35,57,28,19],[35,58,28,20,"key"],[35,61,28,23],[35,63,29,16,"uncontrolledWidths"],[35,81,29,34],[35,82,29,35,"get"],[35,85,29,38],[35,86,29,39,"col"],[35,89,29,42],[35,90,29,43,"key"],[35,93,29,46],[35,94,29,47],[35,95,30,13],[35,96,30,14],[35,101,31,17],[35,108,31,24],[35,109,32,16,"col"],[35,112,32,19],[35,113,32,20,"key"],[35,116,32,23],[35,118,33,16,"controlledColumns"],[35,135,33,33],[35,136,33,34,"get"],[35,139,33,37],[35,140,33,38,"col"],[35,143,33,41],[35,144,33,42,"key"],[35,147,33,45],[35,148,33,46],[35,149,33,47,"props"],[35,154,33,52],[35,155,33,53,"width"],[35,160,33,58],[35,161,34,13],[36,6,35,8],[36,7,35,9],[36,8,35,10],[36,9,35,11],[37,4,36,4],[38,4,37,4],[39,4,37,91,"getInitialUncontrolledWidths"],[39,32,37,119,"getInitialUncontrolledWidths"],[39,33,37,120,"uncontrolledColumns"],[39,52,37,139],[39,54,37,141],[40,6,38,8],[40,13,38,15],[40,17,38,19,"Map"],[40,20,38,22],[40,21,38,23,"Array"],[40,26,38,28],[40,27,38,29,"from"],[40,31,38,33],[40,32,38,34,"uncontrolledColumns"],[40,51,38,53],[40,52,38,54],[40,53,38,55,"map"],[40,56,38,58],[40,57,38,59],[40,58,38,60],[40,59,38,61,"key"],[40,62,38,64],[40,64,38,66,"col"],[40,67,38,69],[40,68,38,70],[40,73,38,73],[41,8,39,12],[41,12,39,16,"_this_getDefaultWidth"],[41,33,39,37],[41,35,39,39,"_this"],[41,40,39,44],[42,8,40,12],[42,12,40,16,"_col_props_defaultWidth"],[42,35,40,39],[42,37,40,41,"_ref"],[42,41,40,45],[43,8,41,12],[43,15,41,19],[43,16,42,16,"key"],[43,19,42,19],[43,21,43,16],[43,22,43,17,"_ref"],[43,26,43,21],[43,29,43,24],[43,30,43,25,"_col_props_defaultWidth"],[43,53,43,48],[43,56,43,51,"col"],[43,59,43,54],[43,60,43,55,"props"],[43,65,43,60],[43,66,43,61,"defaultWidth"],[43,78,43,73],[43,84,43,79],[43,88,43,83],[43,92,43,87,"_col_props_defaultWidth"],[43,115,43,110],[43,120,43,115],[43,125,43,120],[43,126,43,121],[43,129,43,124,"_col_props_defaultWidth"],[43,152,43,147],[43,155,43,150],[43,156,43,151,"_this_getDefaultWidth"],[43,177,43,172],[43,180,43,175],[43,181,43,176,"_this"],[43,186,43,181],[43,189,43,184],[43,193,43,188],[43,195,43,190,"getDefaultWidth"],[43,210,43,205],[43,216,43,211],[43,220,43,215],[43,224,43,219,"_this_getDefaultWidth"],[43,245,43,240],[43,250,43,245],[43,255,43,250],[43,256,43,251],[43,259,43,254],[43,264,43,259],[43,265,43,260],[43,268,43,263,"_this_getDefaultWidth"],[43,289,43,284],[43,290,43,285,"call"],[43,294,43,289],[43,295,43,290,"_this"],[43,300,43,295],[43,302,43,297,"col"],[43,305,43,300],[43,306,43,301],[43,312,43,307],[43,316,43,311],[43,320,43,315,"_ref"],[43,324,43,319],[43,329,43,324],[43,334,43,329],[43,335,43,330],[43,338,43,333,"_ref"],[43,342,43,337],[43,345,43,340],[43,350,43,345],[43,351,44,13],[44,6,45,8],[44,7,45,9],[44,8,45,10],[44,9,45,11],[45,4,46,4],[46,4,47,4,"getColumnWidth"],[46,18,47,18,"getColumnWidth"],[46,19,47,19,"key"],[46,22,47,22],[46,24,47,24],[47,6,48,8],[47,10,48,12,"_this_columnWidths_get"],[47,32,48,34],[48,6,49,8],[48,13,49,15],[48,14,49,16,"_this_columnWidths_get"],[48,36,49,38],[48,39,49,41],[48,43,49,45],[48,44,49,46,"columnWidths"],[48,56,49,58],[48,57,49,59,"get"],[48,60,49,62],[48,61,49,63,"key"],[48,64,49,66],[48,65,49,67],[48,71,49,73],[48,75,49,77],[48,79,49,81,"_this_columnWidths_get"],[48,101,49,103],[48,106,49,108],[48,111,49,113],[48,112,49,114],[48,115,49,117,"_this_columnWidths_get"],[48,137,49,139],[48,140,49,142],[48,141,49,143],[49,4,50,4],[50,4,51,4,"getColumnMinWidth"],[50,21,51,21,"getColumnMinWidth"],[50,22,51,22,"key"],[50,25,51,25],[50,27,51,27],[51,6,52,8],[51,10,52,12,"_this_columnMinWidths_get"],[51,35,52,37],[52,6,53,8],[52,13,53,15],[52,14,53,16,"_this_columnMinWidths_get"],[52,39,53,41],[52,42,53,44],[52,46,53,48],[52,47,53,49,"columnMinWidths"],[52,62,53,64],[52,63,53,65,"get"],[52,66,53,68],[52,67,53,69,"key"],[52,70,53,72],[52,71,53,73],[52,77,53,79],[52,81,53,83],[52,85,53,87,"_this_columnMinWidths_get"],[52,110,53,112],[52,115,53,117],[52,120,53,122],[52,121,53,123],[52,124,53,126,"_this_columnMinWidths_get"],[52,149,53,151],[52,152,53,154],[52,153,53,155],[53,4,54,4],[54,4,55,4,"getColumnMaxWidth"],[54,21,55,21,"getColumnMaxWidth"],[54,22,55,22,"key"],[54,25,55,25],[54,27,55,27],[55,6,56,8],[55,10,56,12,"_this_columnMaxWidths_get"],[55,35,56,37],[56,6,57,8],[56,13,57,15],[56,14,57,16,"_this_columnMaxWidths_get"],[56,39,57,41],[56,42,57,44],[56,46,57,48],[56,47,57,49,"columnMaxWidths"],[56,62,57,64],[56,63,57,65,"get"],[56,66,57,68],[56,67,57,69,"key"],[56,70,57,72],[56,71,57,73],[56,77,57,79],[56,81,57,83],[56,85,57,87,"_this_columnMaxWidths_get"],[56,110,57,112],[56,115,57,117],[56,120,57,122],[56,121,57,123],[56,124,57,126,"_this_columnMaxWidths_get"],[56,149,57,151],[56,152,57,154],[56,153,57,155],[57,4,58,4],[58,4,59,4,"resizeColumnWidth"],[58,21,59,21,"resizeColumnWidth"],[58,22,59,22,"collection"],[58,32,59,32],[58,34,59,34,"uncontrolledWidths"],[58,52,59,52],[58,54,59,54,"col"],[58,57,59,57],[58,59,59,59,"width"],[58,64,59,64],[58,66,59,66],[59,6,60,8],[59,10,60,12,"prevColumnWidths"],[59,26,60,28],[59,29,60,31],[59,33,60,35],[59,34,60,36,"columnWidths"],[59,46,60,48],[60,6,61,8],[60,10,61,12,"freeze"],[60,16,61,18],[60,19,61,21],[60,23,61,25],[61,6,62,8],[61,10,62,12,"newWidths"],[61,19,62,21],[61,22,62,24],[61,26,62,28,"Map"],[61,29,62,31],[61,30,62,32],[61,31,62,33],[62,6,63,8,"width"],[62,11,63,13],[62,14,63,16,"Math"],[62,18,63,20],[62,19,63,21,"max"],[62,22,63,24],[62,23,63,25],[62,27,63,29],[62,28,63,30,"getColumnMinWidth"],[62,45,63,47],[62,46,63,48,"col"],[62,49,63,51],[62,50,63,52],[62,52,63,54,"Math"],[62,56,63,58],[62,57,63,59,"min"],[62,60,63,62],[62,61,63,63],[62,65,63,67],[62,66,63,68,"getColumnMaxWidth"],[62,83,63,85],[62,84,63,86,"col"],[62,87,63,89],[62,88,63,90],[62,90,63,92,"Math"],[62,94,63,96],[62,95,63,97,"floor"],[62,100,63,102],[62,101,63,103,"width"],[62,106,63,108],[62,107,63,109],[62,108,63,110],[62,109,63,111],[63,6,64,8,"collection"],[63,16,64,18],[63,17,64,19,"columns"],[63,24,64,26],[63,25,64,27,"forEach"],[63,32,64,34],[63,33,64,36,"column"],[63,39,64,42],[63,43,64,45],[64,8,65,12],[64,12,65,16,"_prevColumnWidths_get"],[64,33,65,37],[64,35,65,39,"_column_props_width"],[64,54,65,58],[65,8,66,12],[65,12,66,16,"column"],[65,18,66,22],[65,19,66,23,"key"],[65,22,66,26],[65,27,66,31,"col"],[65,30,66,34],[65,32,66,36],[66,10,67,16,"newWidths"],[66,19,67,25],[66,20,67,26,"set"],[66,23,67,29],[66,24,67,30,"column"],[66,30,67,36],[66,31,67,37,"key"],[66,34,67,40],[66,36,67,42,"width"],[66,41,67,47],[66,42,67,48],[67,10,68,16,"freeze"],[67,16,68,22],[67,19,68,25],[67,24,68,30],[68,8,69,12],[68,9,69,13],[68,15,69,19],[68,19,69,23,"freeze"],[68,25,69,29],[69,10,69,31],[70,10,70,12,"newWidths"],[70,19,70,21],[70,20,70,22,"set"],[70,23,70,25],[70,24,70,26,"column"],[70,30,70,32],[70,31,70,33,"key"],[70,34,70,36],[70,36,70,38],[70,37,70,39,"_prevColumnWidths_get"],[70,58,70,60],[70,61,70,63,"prevColumnWidths"],[70,77,70,79],[70,78,70,80,"get"],[70,81,70,83],[70,82,70,84,"column"],[70,88,70,90],[70,89,70,91,"key"],[70,92,70,94],[70,93,70,95],[70,99,70,101],[70,103,70,105],[70,107,70,109,"_prevColumnWidths_get"],[70,128,70,130],[70,133,70,135],[70,138,70,140],[70,139,70,141],[70,142,70,144,"_prevColumnWidths_get"],[70,163,70,165],[70,166,70,168],[70,167,70,169],[70,168,70,170],[70,169,70,171],[70,174,71,17,"newWidths"],[70,183,71,26],[70,184,71,27,"set"],[70,187,71,30],[70,188,71,31,"column"],[70,194,71,37],[70,195,71,38,"key"],[70,198,71,41],[70,200,71,43],[70,201,71,44,"_column_props_width"],[70,220,71,63],[70,223,71,66,"column"],[70,229,71,72],[70,230,71,73,"props"],[70,235,71,78],[70,236,71,79,"width"],[70,241,71,84],[70,247,71,90],[70,251,71,94],[70,255,71,98,"_column_props_width"],[70,274,71,117],[70,279,71,122],[70,284,71,127],[70,285,71,128],[70,288,71,131,"_column_props_width"],[70,307,71,150],[70,310,71,153,"uncontrolledWidths"],[70,328,71,171],[70,329,71,172,"get"],[70,332,71,175],[70,333,71,176,"column"],[70,339,71,182],[70,340,71,183,"key"],[70,343,71,186],[70,344,71,187],[70,345,71,188],[71,6,72,8],[71,7,72,9],[71,8,72,10],[72,6,73,8],[72,13,73,15,"newWidths"],[72,22,73,24],[73,4,74,4],[74,4,75,4,"buildColumnWidths"],[74,21,75,21,"buildColumnWidths"],[74,22,75,22,"tableWidth"],[74,32,75,32],[74,34,75,34,"collection"],[74,44,75,44],[74,46,75,46,"widths"],[74,52,75,52],[74,54,75,54],[75,6,76,8],[75,10,76,12],[75,11,76,13,"columnWidths"],[75,23,76,25],[75,26,76,28],[75,30,76,32,"Map"],[75,33,76,35],[75,34,76,36],[75,35,76,37],[76,6,77,8],[76,10,77,12],[76,11,77,13,"columnMinWidths"],[76,26,77,28],[76,29,77,31],[76,33,77,35,"Map"],[76,36,77,38],[76,37,77,39],[76,38,77,40],[77,6,78,8],[77,10,78,12],[77,11,78,13,"columnMaxWidths"],[77,26,78,28],[77,29,78,31],[77,33,78,35,"Map"],[77,36,78,38],[77,37,78,39],[77,38,78,40],[78,6,79,8],[79,6,80,8],[79,10,80,12,"columnWidths"],[79,22,80,24],[79,25,80,27],[79,26,80,28],[79,27,80,29],[79,29,80,31,"$6818b1c4fc67028d$export$55d50dc687385491"],[79,43,80,72],[79,44,80,72,"calculateColumnSizes"],[79,64,80,72],[79,66,80,74,"tableWidth"],[79,76,80,84],[79,78,80,86,"collection"],[79,88,80,96],[79,89,80,97,"columns"],[79,96,80,104],[79,97,80,105,"map"],[79,100,80,108],[79,101,80,110,"col"],[79,104,80,113],[79,108,80,113,"Object"],[79,114,80,113],[79,115,80,113,"assign"],[79,121,80,113],[79,126,81,19,"col"],[79,129,81,22],[79,130,81,23,"props"],[79,135,81,28],[80,8,82,16,"key"],[80,11,82,19],[80,13,82,21,"col"],[80,16,82,24],[80,17,82,25,"key"],[81,6,82,28],[81,8,83,14],[81,9,83,15],[81,11,83,17,"widths"],[81,17,83,23],[81,19,83,26,"i"],[81,20,83,27],[81,24,83,30],[81,28,83,34],[81,29,83,35,"getDefaultWidth"],[81,44,83,50],[81,45,83,51,"collection"],[81,55,83,61],[81,56,83,62,"columns"],[81,63,83,69],[81,64,83,70,"i"],[81,65,83,71],[81,66,83,72],[81,67,83,73],[81,69,83,76,"i"],[81,70,83,77],[81,74,83,80],[81,78,83,84],[81,79,83,85,"getDefaultMinWidth"],[81,97,83,103],[81,98,83,104,"collection"],[81,108,83,114],[81,109,83,115,"columns"],[81,116,83,122],[81,117,83,123,"i"],[81,118,83,124],[81,119,83,125],[81,120,83,126],[81,121,83,127],[82,6,84,8],[83,6,85,8,"columnWidths"],[83,18,85,20],[83,19,85,21,"forEach"],[83,26,85,28],[83,27,85,29],[83,28,85,30,"width"],[83,33,85,35],[83,35,85,37,"index"],[83,40,85,42],[83,45,85,45],[84,8,86,12],[84,12,86,16,"key"],[84,15,86,19],[84,18,86,22,"collection"],[84,28,86,32],[84,29,86,33,"columns"],[84,36,86,40],[84,37,86,41,"index"],[84,42,86,46],[84,43,86,47],[84,44,86,48,"key"],[84,47,86,51],[85,8,87,12],[85,12,87,16,"column"],[85,18,87,22],[85,21,87,25,"collection"],[85,31,87,35],[85,32,87,36,"columns"],[85,39,87,43],[85,40,87,44,"index"],[85,45,87,49],[85,46,87,50],[86,8,88,12],[86,12,88,16],[86,13,88,17,"columnWidths"],[86,25,88,29],[86,26,88,30,"set"],[86,29,88,33],[86,30,88,34,"key"],[86,33,88,37],[86,35,88,39,"width"],[86,40,88,44],[86,41,88,45],[87,8,89,12],[87,12,89,16,"_column_props_minWidth"],[87,34,89,38],[88,8,90,12],[88,12,90,16],[88,13,90,17,"columnMinWidths"],[88,28,90,32],[88,29,90,33,"set"],[88,32,90,36],[88,33,90,37,"key"],[88,36,90,40],[88,38,90,42],[88,39,90,43],[88,40,90,44],[88,42,90,46,"$6818b1c4fc67028d$export$f556054ce4358701"],[88,56,90,87],[88,57,90,87,"getMinWidth"],[88,68,90,87],[88,70,90,89],[88,71,90,90,"_column_props_minWidth"],[88,93,90,112],[88,96,90,115,"column"],[88,102,90,121],[88,103,90,122,"props"],[88,108,90,127],[88,109,90,128,"minWidth"],[88,117,90,136],[88,123,90,142],[88,127,90,146],[88,131,90,150,"_column_props_minWidth"],[88,153,90,172],[88,158,90,177],[88,163,90,182],[88,164,90,183],[88,167,90,186,"_column_props_minWidth"],[88,189,90,208],[88,192,90,211],[88,196,90,215],[88,197,90,216,"getDefaultMinWidth"],[88,215,90,234],[88,216,90,235,"column"],[88,222,90,241],[88,223,90,242],[88,225,90,244,"tableWidth"],[88,235,90,254],[88,236,90,255],[88,237,90,256],[89,8,91,12],[89,12,91,16],[89,13,91,17,"columnMaxWidths"],[89,28,91,32],[89,29,91,33,"set"],[89,32,91,36],[89,33,91,37,"key"],[89,36,91,40],[89,38,91,42],[89,39,91,43],[89,40,91,44],[89,42,91,46,"$6818b1c4fc67028d$export$59185c62a7544aa0"],[89,56,91,87],[89,57,91,87,"getMaxWidth"],[89,68,91,87],[89,70,91,89,"column"],[89,76,91,95],[89,77,91,96,"props"],[89,82,91,101],[89,83,91,102,"maxWidth"],[89,91,91,110],[89,93,91,112,"tableWidth"],[89,103,91,122],[89,104,91,123],[89,105,91,124],[90,6,92,8],[90,7,92,9],[90,8,92,10],[91,6,93,8],[91,13,93,15],[91,17,93,19],[91,18,93,20,"columnWidths"],[91,30,93,32],[92,4,94,4],[93,4,95,4,"constructor"],[93,15,95,15,"constructor"],[93,16,95,16,"options"],[93,23,95,23],[93,25,95,24],[94,6,96,8],[94,10,96,12],[94,11,96,13,"columnWidths"],[94,23,96,25],[94,26,96,28],[94,30,96,32,"Map"],[94,33,96,35],[94,34,96,36],[94,35,96,37],[95,6,97,8],[95,10,97,12],[95,11,97,13,"columnMinWidths"],[95,26,97,28],[95,29,97,31],[95,33,97,35,"Map"],[95,36,97,38],[95,37,97,39],[95,38,97,40],[96,6,98,8],[96,10,98,12],[96,11,98,13,"columnMaxWidths"],[96,26,98,28],[96,29,98,31],[96,33,98,35,"Map"],[96,36,98,38],[96,37,98,39],[96,38,98,40],[97,6,99,8],[97,10,99,12,"_options_getDefaultWidth"],[97,34,99,36],[98,6,100,8],[98,10,100,12],[98,11,100,13,"getDefaultWidth"],[98,26,100,28],[98,29,100,31],[98,30,100,32,"_options_getDefaultWidth"],[98,54,100,56],[98,57,100,59,"options"],[98,64,100,66],[98,69,100,71],[98,73,100,75],[98,77,100,79,"options"],[98,84,100,86],[98,89,100,91],[98,94,100,96],[98,95,100,97],[98,98,100,100],[98,103,100,105],[98,104,100,106],[98,107,100,109,"options"],[98,114,100,116],[98,115,100,117,"getDefaultWidth"],[98,130,100,132],[98,136,100,138],[98,140,100,142],[98,144,100,146,"_options_getDefaultWidth"],[98,168,100,170],[98,173,100,175],[98,178,100,180],[98,179,100,181],[98,182,100,184,"_options_getDefaultWidth"],[98,206,100,208],[98,209,100,211],[98,215,100,215],[98,220,100,220],[99,6,101,8],[99,10,101,12,"_options_getDefaultMinWidth"],[99,37,101,39],[100,6,102,8],[100,10,102,12],[100,11,102,13,"getDefaultMinWidth"],[100,29,102,31],[100,32,102,34],[100,33,102,35,"_options_getDefaultMinWidth"],[100,60,102,62],[100,63,102,65,"options"],[100,70,102,72],[100,75,102,77],[100,79,102,81],[100,83,102,85,"options"],[100,90,102,92],[100,95,102,97],[100,100,102,102],[100,101,102,103],[100,104,102,106],[100,109,102,111],[100,110,102,112],[100,113,102,115,"options"],[100,120,102,122],[100,121,102,123,"getDefaultMinWidth"],[100,139,102,141],[100,145,102,147],[100,149,102,151],[100,153,102,155,"_options_getDefaultMinWidth"],[100,180,102,182],[100,185,102,187],[100,190,102,192],[100,191,102,193],[100,194,102,196,"_options_getDefaultMinWidth"],[100,221,102,223],[100,224,102,226],[100,230,102,230],[100,232,102,232],[101,4,103,4],[102,2,104,0],[103,0,104,1],[103,3]],"functionMap":{"names":["<global>","$a9e7ae544a4e41dd$export$7ff77a162970b30e","$a9e7ae544a4e41dd$export$7ff77a162970b30e#splitColumnsIntoControlledAndUncontrolled","columns.reduce$argument_0","$a9e7ae544a4e41dd$export$7ff77a162970b30e#recombineColumns","columns.map$argument_0","$a9e7ae544a4e41dd$export$7ff77a162970b30e#getInitialUncontrolledWidths","Array.from.map$argument_0","$a9e7ae544a4e41dd$export$7ff77a162970b30e#getColumnWidth","$a9e7ae544a4e41dd$export$7ff77a162970b30e#getColumnMinWidth","$a9e7ae544a4e41dd$export$7ff77a162970b30e#getColumnMaxWidth","$a9e7ae544a4e41dd$export$7ff77a162970b30e#resizeColumnWidth","collection.columns.forEach$argument_0","$a9e7ae544a4e41dd$export$7ff77a162970b30e#buildColumnWidths","collection.columns.map$argument_0","<anonymous>","columnWidths.forEach$argument_0","$a9e7ae544a4e41dd$export$7ff77a162970b30e#constructor"],"mappings":"AAA;ACa;gICC;8BCC;SDI;KDI;sFGC;mCCC;SDS;KHC;2FKC;2DCC;SDO;KLC;IOC;KPG;IQC;KRG;ISC;KTG;IUC;mCCK;SDQ;KVE;IYC;6GCK;cDG,WE,gDF,EE,mDF;6BGE;SHO;KZE;IgBC;mNFK,SE;kOFE,ME;KhBC;CDC"},"hasCjsExports":false},"type":"js/module"}]}