{"dependencies":[{"name":"./Color.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":144,"index":144}}],"key":"4tp3V9pW9gW7bLe8SMeKz6FZ0vU=","exportNames":["*"],"imports":1}},{"name":"@react-stately/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":145},"end":{"line":2,"column":151,"index":296}}],"key":"UWd/F16JM6opz+K5fhKP3CQOwig=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":297},"end":{"line":3,"column":102,"index":399}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useColorAreaState\", {\n    enumerable: true,\n    get: function () {\n      return $6e14a98a7f67141d$export$6df7f0e2cabc7eef;\n    }\n  });\n  var _ColorMjs = require(_dependencyMap[0], \"./Color.mjs\");\n  var _reactStatelyUtils = require(_dependencyMap[1], \"@react-stately/utils\");\n  var _react = require(_dependencyMap[2], \"react\");\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */\n\n  const $6e14a98a7f67141d$var$DEFAULT_COLOR = (0, _ColorMjs.parseColor)('#ffffff');\n  function $6e14a98a7f67141d$export$6df7f0e2cabc7eef(props) {\n    let {\n      value: value,\n      defaultValue: defaultValue,\n      colorSpace: colorSpace,\n      xChannel: xChannel,\n      yChannel: yChannel,\n      onChange: onChange,\n      onChangeEnd: onChangeEnd\n    } = props;\n    if (!value && !defaultValue) defaultValue = $6e14a98a7f67141d$var$DEFAULT_COLOR;\n    if (value) value = (0, _ColorMjs.normalizeColor)(value);\n    if (defaultValue) defaultValue = (0, _ColorMjs.normalizeColor)(defaultValue);\n    // safe to cast value and defaultValue to Color, one of them will always be defined because if neither are, we assign a default\n    let [colorValue, setColorState] = (0, _reactStatelyUtils.useControlledState)(value, defaultValue, onChange);\n    let [initialValue] = (0, _react.useState)(colorValue);\n    let color = (0, _react.useMemo)(() => colorSpace && colorValue ? colorValue.toFormat(colorSpace) : colorValue, [colorValue, colorSpace]);\n    let valueRef = (0, _react.useRef)(color);\n    let setColor = color => {\n      valueRef.current = color;\n      setColorState(color);\n    };\n    let channels = (0, _react.useMemo)(() => color.getColorSpaceAxes({\n      xChannel: xChannel,\n      yChannel: yChannel\n    }), [color, xChannel, yChannel]);\n    let xChannelRange = color.getChannelRange(channels.xChannel);\n    let yChannelRange = color.getChannelRange(channels.yChannel);\n    let {\n      minValue: minValueX,\n      maxValue: maxValueX,\n      step: stepX,\n      pageSize: pageSizeX\n    } = xChannelRange;\n    let {\n      minValue: minValueY,\n      maxValue: maxValueY,\n      step: stepY,\n      pageSize: pageSizeY\n    } = yChannelRange;\n    let [isDragging, setDragging] = (0, _react.useState)(false);\n    let isDraggingRef = (0, _react.useRef)(false);\n    let xValue = color.getChannelValue(channels.xChannel);\n    let yValue = color.getChannelValue(channels.yChannel);\n    let setXValue = v => {\n      if (v === xValue) return;\n      let newColor = color.withChannelValue(channels.xChannel, v);\n      setColor(newColor);\n    };\n    let setYValue = v => {\n      if (v === yValue) return;\n      let newColor = color.withChannelValue(channels.yChannel, v);\n      setColor(newColor);\n    };\n    return {\n      channels: channels,\n      xChannelStep: stepX,\n      yChannelStep: stepY,\n      xChannelPageStep: pageSizeX,\n      yChannelPageStep: pageSizeY,\n      value: color,\n      defaultValue: value !== undefined ? initialValue : defaultValue,\n      setValue(value) {\n        setColor((0, _ColorMjs.normalizeColor)(value));\n      },\n      xValue: xValue,\n      setXValue: setXValue,\n      yValue: yValue,\n      setYValue: setYValue,\n      setColorFromPoint(x, y) {\n        let newXValue = minValueX + (0, _reactStatelyUtils.clamp)(x, 0, 1) * (maxValueX - minValueX);\n        let newYValue = minValueY + (1 - (0, _reactStatelyUtils.clamp)(y, 0, 1)) * (maxValueY - minValueY);\n        let newColor;\n        if (newXValue !== xValue) {\n          // Round new value to multiple of step, clamp value between min and max\n          newXValue = (0, _reactStatelyUtils.snapValueToStep)(newXValue, minValueX, maxValueX, stepX);\n          newColor = color.withChannelValue(channels.xChannel, newXValue);\n        }\n        if (newYValue !== yValue) {\n          // Round new value to multiple of step, clamp value between min and max\n          newYValue = (0, _reactStatelyUtils.snapValueToStep)(newYValue, minValueY, maxValueY, stepY);\n          newColor = (newColor || color).withChannelValue(channels.yChannel, newYValue);\n        }\n        if (newColor) setColor(newColor);\n      },\n      getThumbPosition() {\n        let x = (xValue - minValueX) / (maxValueX - minValueX);\n        let y = 1 - (yValue - minValueY) / (maxValueY - minValueY);\n        return {\n          x: x,\n          y: y\n        };\n      },\n      incrementX(stepSize = 1) {\n        setXValue(xValue + stepSize > maxValueX ? maxValueX : (0, _reactStatelyUtils.snapValueToStep)(xValue + stepSize, minValueX, maxValueX, stepX));\n      },\n      incrementY(stepSize = 1) {\n        setYValue(yValue + stepSize > maxValueY ? maxValueY : (0, _reactStatelyUtils.snapValueToStep)(yValue + stepSize, minValueY, maxValueY, stepY));\n      },\n      decrementX(stepSize = 1) {\n        setXValue((0, _reactStatelyUtils.snapValueToStep)(xValue - stepSize, minValueX, maxValueX, stepX));\n      },\n      decrementY(stepSize = 1) {\n        setYValue((0, _reactStatelyUtils.snapValueToStep)(yValue - stepSize, minValueY, maxValueY, stepY));\n      },\n      setDragging(isDragging) {\n        let wasDragging = isDraggingRef.current;\n        isDraggingRef.current = isDragging;\n        if (onChangeEnd && !isDragging && wasDragging) onChangeEnd(valueRef.current);\n        setDragging(isDragging);\n      },\n      isDragging: isDragging,\n      getDisplayColor() {\n        return color.withChannelValue('alpha', 1);\n      }\n    };\n  }\n});","lineCount":146,"map":[[7,2,127,0,"Object"],[7,8,127,0],[7,9,127,0,"defineProperty"],[7,23,127,0],[7,24,127,0,"exports"],[7,31,127,0],[8,4,127,0,"enumerable"],[8,14,127,0],[9,4,127,0,"get"],[9,7,127,0],[9,18,127,0,"get"],[9,19,127,0],[10,6,127,0],[10,13,127,8,"$6e14a98a7f67141d$export$6df7f0e2cabc7eef"],[10,54,127,49],[11,4,127,49],[12,2,127,49],[13,2,1,0],[13,6,1,0,"_ColorMjs"],[13,15,1,0],[13,18,1,0,"require"],[13,25,1,0],[13,26,1,0,"_dependencyMap"],[13,40,1,0],[14,2,2,0],[14,6,2,0,"_reactStatelyUtils"],[14,24,2,0],[14,27,2,0,"require"],[14,34,2,0],[14,35,2,0,"_dependencyMap"],[14,49,2,0],[15,2,3,0],[15,6,3,0,"_react"],[15,12,3,0],[15,15,3,0,"require"],[15,22,3,0],[15,23,3,0,"_dependencyMap"],[15,37,3,0],[16,2,5,0],[17,0,6,0],[18,0,7,0],[19,0,8,0],[20,0,9,0],[21,0,10,0],[22,0,11,0],[23,0,12,0],[24,0,13,0],[25,0,14,0],[26,0,15,0],[28,2,18,0],[28,8,18,6,"$6e14a98a7f67141d$var$DEFAULT_COLOR"],[28,43,18,41],[28,46,18,44],[28,47,18,45],[28,48,18,46],[28,50,18,48,"$799cddbef784668f$export$6e865ea70d7724f"],[28,59,18,88],[28,60,18,88,"parseColor"],[28,70,18,88],[28,72,18,90],[28,81,18,99],[28,82,18,100],[29,2,19,0],[29,11,19,9,"$6e14a98a7f67141d$export$6df7f0e2cabc7eef"],[29,52,19,50,"$6e14a98a7f67141d$export$6df7f0e2cabc7eef"],[29,53,19,51,"props"],[29,58,19,56],[29,60,19,58],[30,4,20,4],[30,8,20,8],[31,6,20,10,"value"],[31,11,20,15],[31,13,20,17,"value"],[31,18,20,22],[32,6,20,24,"defaultValue"],[32,18,20,36],[32,20,20,38,"defaultValue"],[32,32,20,50],[33,6,20,52,"colorSpace"],[33,16,20,62],[33,18,20,64,"colorSpace"],[33,28,20,74],[34,6,20,76,"xChannel"],[34,14,20,84],[34,16,20,86,"xChannel"],[34,24,20,94],[35,6,20,96,"yChannel"],[35,14,20,104],[35,16,20,106,"yChannel"],[35,24,20,114],[36,6,20,116,"onChange"],[36,14,20,124],[36,16,20,126,"onChange"],[36,24,20,134],[37,6,20,136,"onChangeEnd"],[37,17,20,147],[37,19,20,149,"onChangeEnd"],[38,4,20,161],[38,5,20,162],[38,8,20,165,"props"],[38,13,20,170],[39,4,21,4],[39,8,21,8],[39,9,21,9,"value"],[39,14,21,14],[39,18,21,18],[39,19,21,19,"defaultValue"],[39,31,21,31],[39,33,21,33,"defaultValue"],[39,45,21,45],[39,48,21,48,"$6e14a98a7f67141d$var$DEFAULT_COLOR"],[39,83,21,83],[40,4,22,4],[40,8,22,8,"value"],[40,13,22,13],[40,15,22,15,"value"],[40,20,22,20],[40,23,22,23],[40,24,22,24],[40,25,22,25],[40,27,22,27,"$799cddbef784668f$export$4cde5df63f53f473"],[40,36,22,68],[40,37,22,68,"normalizeColor"],[40,51,22,68],[40,53,22,70,"value"],[40,58,22,75],[40,59,22,76],[41,4,23,4],[41,8,23,8,"defaultValue"],[41,20,23,20],[41,22,23,22,"defaultValue"],[41,34,23,34],[41,37,23,37],[41,38,23,38],[41,39,23,39],[41,41,23,41,"$799cddbef784668f$export$4cde5df63f53f473"],[41,50,23,82],[41,51,23,82,"normalizeColor"],[41,65,23,82],[41,67,23,84,"defaultValue"],[41,79,23,96],[41,80,23,97],[42,4,24,4],[43,4,25,4],[43,8,25,8],[43,9,25,9,"colorValue"],[43,19,25,19],[43,21,25,21,"setColorState"],[43,34,25,34],[43,35,25,35],[43,38,25,38],[43,39,25,39],[43,40,25,40],[43,42,25,42,"$5ShDH$useControlledState"],[43,60,25,67],[43,61,25,67,"useControlledState"],[43,79,25,67],[43,81,25,69,"value"],[43,86,25,74],[43,88,25,76,"defaultValue"],[43,100,25,88],[43,102,25,90,"onChange"],[43,110,25,98],[43,111,25,99],[44,4,26,4],[44,8,26,8],[44,9,26,9,"initialValue"],[44,21,26,21],[44,22,26,22],[44,25,26,25],[44,26,26,26],[44,27,26,27],[44,29,26,29,"$5ShDH$useState"],[44,35,26,44],[44,36,26,44,"useState"],[44,44,26,44],[44,46,26,46,"colorValue"],[44,56,26,56],[44,57,26,57],[45,4,27,4],[45,8,27,8,"color"],[45,13,27,13],[45,16,27,16],[45,17,27,17],[45,18,27,18],[45,20,27,20,"$5ShDH$useMemo"],[45,26,27,34],[45,27,27,34,"useMemo"],[45,34,27,34],[45,36,27,36],[45,42,27,40,"colorSpace"],[45,52,27,50],[45,56,27,54,"colorValue"],[45,66,27,64],[45,69,27,67,"colorValue"],[45,79,27,77],[45,80,27,78,"toFormat"],[45,88,27,86],[45,89,27,87,"colorSpace"],[45,99,27,97],[45,100,27,98],[45,103,27,101,"colorValue"],[45,113,27,111],[45,115,27,113],[45,116,28,8,"colorValue"],[45,126,28,18],[45,128,29,8,"colorSpace"],[45,138,29,18],[45,139,30,5],[45,140,30,6],[46,4,31,4],[46,8,31,8,"valueRef"],[46,16,31,16],[46,19,31,19],[46,20,31,20],[46,21,31,21],[46,23,31,23,"$5ShDH$useRef"],[46,29,31,36],[46,30,31,36,"useRef"],[46,36,31,36],[46,38,31,38,"color"],[46,43,31,43],[46,44,31,44],[47,4,32,4],[47,8,32,8,"setColor"],[47,16,32,16],[47,19,32,20,"color"],[47,24,32,25],[47,28,32,28],[48,6,33,8,"valueRef"],[48,14,33,16],[48,15,33,17,"current"],[48,22,33,24],[48,25,33,27,"color"],[48,30,33,32],[49,6,34,8,"setColorState"],[49,19,34,21],[49,20,34,22,"color"],[49,25,34,27],[49,26,34,28],[50,4,35,4],[50,5,35,5],[51,4,36,4],[51,8,36,8,"channels"],[51,16,36,16],[51,19,36,19],[51,20,36,20],[51,21,36,21],[51,23,36,23,"$5ShDH$useMemo"],[51,29,36,37],[51,30,36,37,"useMemo"],[51,37,36,37],[51,39,36,39],[51,45,36,43,"color"],[51,50,36,48],[51,51,36,49,"getColorSpaceAxes"],[51,68,36,66],[51,69,36,67],[52,6,37,12,"xChannel"],[52,14,37,20],[52,16,37,22,"xChannel"],[52,24,37,30],[53,6,38,12,"yChannel"],[53,14,38,20],[53,16,38,22,"yChannel"],[54,4,39,8],[54,5,39,9],[54,6,39,10],[54,8,39,12],[54,9,40,8,"color"],[54,14,40,13],[54,16,41,8,"xChannel"],[54,24,41,16],[54,26,42,8,"yChannel"],[54,34,42,16],[54,35,43,5],[54,36,43,6],[55,4,44,4],[55,8,44,8,"xChannelRange"],[55,21,44,21],[55,24,44,24,"color"],[55,29,44,29],[55,30,44,30,"getChannelRange"],[55,45,44,45],[55,46,44,46,"channels"],[55,54,44,54],[55,55,44,55,"xChannel"],[55,63,44,63],[55,64,44,64],[56,4,45,4],[56,8,45,8,"yChannelRange"],[56,21,45,21],[56,24,45,24,"color"],[56,29,45,29],[56,30,45,30,"getChannelRange"],[56,45,45,45],[56,46,45,46,"channels"],[56,54,45,54],[56,55,45,55,"yChannel"],[56,63,45,63],[56,64,45,64],[57,4,46,4],[57,8,46,8],[58,6,46,10,"minValue"],[58,14,46,18],[58,16,46,20,"minValueX"],[58,25,46,29],[59,6,46,31,"maxValue"],[59,14,46,39],[59,16,46,41,"maxValueX"],[59,25,46,50],[60,6,46,52,"step"],[60,10,46,56],[60,12,46,58,"stepX"],[60,17,46,63],[61,6,46,65,"pageSize"],[61,14,46,73],[61,16,46,75,"pageSizeX"],[62,4,46,85],[62,5,46,86],[62,8,46,89,"xChannelRange"],[62,21,46,102],[63,4,47,4],[63,8,47,8],[64,6,47,10,"minValue"],[64,14,47,18],[64,16,47,20,"minValueY"],[64,25,47,29],[65,6,47,31,"maxValue"],[65,14,47,39],[65,16,47,41,"maxValueY"],[65,25,47,50],[66,6,47,52,"step"],[66,10,47,56],[66,12,47,58,"stepY"],[66,17,47,63],[67,6,47,65,"pageSize"],[67,14,47,73],[67,16,47,75,"pageSizeY"],[68,4,47,85],[68,5,47,86],[68,8,47,89,"yChannelRange"],[68,21,47,102],[69,4,48,4],[69,8,48,8],[69,9,48,9,"isDragging"],[69,19,48,19],[69,21,48,21,"setDragging"],[69,32,48,32],[69,33,48,33],[69,36,48,36],[69,37,48,37],[69,38,48,38],[69,40,48,40,"$5ShDH$useState"],[69,46,48,55],[69,47,48,55,"useState"],[69,55,48,55],[69,57,48,57],[69,62,48,62],[69,63,48,63],[70,4,49,4],[70,8,49,8,"isDraggingRef"],[70,21,49,21],[70,24,49,24],[70,25,49,25],[70,26,49,26],[70,28,49,28,"$5ShDH$useRef"],[70,34,49,41],[70,35,49,41,"useRef"],[70,41,49,41],[70,43,49,43],[70,48,49,48],[70,49,49,49],[71,4,50,4],[71,8,50,8,"xValue"],[71,14,50,14],[71,17,50,17,"color"],[71,22,50,22],[71,23,50,23,"getChannelValue"],[71,38,50,38],[71,39,50,39,"channels"],[71,47,50,47],[71,48,50,48,"xChannel"],[71,56,50,56],[71,57,50,57],[72,4,51,4],[72,8,51,8,"yValue"],[72,14,51,14],[72,17,51,17,"color"],[72,22,51,22],[72,23,51,23,"getChannelValue"],[72,38,51,38],[72,39,51,39,"channels"],[72,47,51,47],[72,48,51,48,"yChannel"],[72,56,51,56],[72,57,51,57],[73,4,52,4],[73,8,52,8,"setXValue"],[73,17,52,17],[73,20,52,21,"v"],[73,21,52,22],[73,25,52,25],[74,6,53,8],[74,10,53,12,"v"],[74,11,53,13],[74,16,53,18,"xValue"],[74,22,53,24],[74,24,53,26],[75,6,54,8],[75,10,54,12,"newColor"],[75,18,54,20],[75,21,54,23,"color"],[75,26,54,28],[75,27,54,29,"withChannelValue"],[75,43,54,45],[75,44,54,46,"channels"],[75,52,54,54],[75,53,54,55,"xChannel"],[75,61,54,63],[75,63,54,65,"v"],[75,64,54,66],[75,65,54,67],[76,6,55,8,"setColor"],[76,14,55,16],[76,15,55,17,"newColor"],[76,23,55,25],[76,24,55,26],[77,4,56,4],[77,5,56,5],[78,4,57,4],[78,8,57,8,"setYValue"],[78,17,57,17],[78,20,57,21,"v"],[78,21,57,22],[78,25,57,25],[79,6,58,8],[79,10,58,12,"v"],[79,11,58,13],[79,16,58,18,"yValue"],[79,22,58,24],[79,24,58,26],[80,6,59,8],[80,10,59,12,"newColor"],[80,18,59,20],[80,21,59,23,"color"],[80,26,59,28],[80,27,59,29,"withChannelValue"],[80,43,59,45],[80,44,59,46,"channels"],[80,52,59,54],[80,53,59,55,"yChannel"],[80,61,59,63],[80,63,59,65,"v"],[80,64,59,66],[80,65,59,67],[81,6,60,8,"setColor"],[81,14,60,16],[81,15,60,17,"newColor"],[81,23,60,25],[81,24,60,26],[82,4,61,4],[82,5,61,5],[83,4,62,4],[83,11,62,11],[84,6,63,8,"channels"],[84,14,63,16],[84,16,63,18,"channels"],[84,24,63,26],[85,6,64,8,"xChannelStep"],[85,18,64,20],[85,20,64,22,"stepX"],[85,25,64,27],[86,6,65,8,"yChannelStep"],[86,18,65,20],[86,20,65,22,"stepY"],[86,25,65,27],[87,6,66,8,"xChannelPageStep"],[87,22,66,24],[87,24,66,26,"pageSizeX"],[87,33,66,35],[88,6,67,8,"yChannelPageStep"],[88,22,67,24],[88,24,67,26,"pageSizeY"],[88,33,67,35],[89,6,68,8,"value"],[89,11,68,13],[89,13,68,15,"color"],[89,18,68,20],[90,6,69,8,"defaultValue"],[90,18,69,20],[90,20,69,22,"value"],[90,25,69,27],[90,30,69,32,"undefined"],[90,39,69,41],[90,42,69,44,"initialValue"],[90,54,69,56],[90,57,69,59,"defaultValue"],[90,69,69,71],[91,6,70,8,"setValue"],[91,14,70,16,"setValue"],[91,15,70,18,"value"],[91,20,70,23],[91,22,70,25],[92,8,71,12,"setColor"],[92,16,71,20],[92,17,71,21],[92,18,71,22],[92,19,71,23],[92,21,71,25,"$799cddbef784668f$export$4cde5df63f53f473"],[92,30,71,66],[92,31,71,66,"normalizeColor"],[92,45,71,66],[92,47,71,68,"value"],[92,52,71,73],[92,53,71,74],[92,54,71,75],[93,6,72,8],[93,7,72,9],[94,6,73,8,"xValue"],[94,12,73,14],[94,14,73,16,"xValue"],[94,20,73,22],[95,6,74,8,"setXValue"],[95,15,74,17],[95,17,74,19,"setXValue"],[95,26,74,28],[96,6,75,8,"yValue"],[96,12,75,14],[96,14,75,16,"yValue"],[96,20,75,22],[97,6,76,8,"setYValue"],[97,15,76,17],[97,17,76,19,"setYValue"],[97,26,76,28],[98,6,77,8,"setColorFromPoint"],[98,23,77,25,"setColorFromPoint"],[98,24,77,27,"x"],[98,25,77,28],[98,27,77,30,"y"],[98,28,77,31],[98,30,77,33],[99,8,78,12],[99,12,78,16,"newXValue"],[99,21,78,25],[99,24,78,28,"minValueX"],[99,33,78,37],[99,36,78,40],[99,37,78,41],[99,38,78,42],[99,40,78,44,"$5ShDH$clamp"],[99,58,78,56],[99,59,78,56,"clamp"],[99,64,78,56],[99,66,78,58,"x"],[99,67,78,59],[99,69,78,61],[99,70,78,62],[99,72,78,64],[99,73,78,65],[99,74,78,66],[99,78,78,70,"maxValueX"],[99,87,78,79],[99,90,78,82,"minValueX"],[99,99,78,91],[99,100,78,92],[100,8,79,12],[100,12,79,16,"newYValue"],[100,21,79,25],[100,24,79,28,"minValueY"],[100,33,79,37],[100,36,79,40],[100,37,79,41],[100,38,79,42],[100,41,79,45],[100,42,79,46],[100,43,79,47],[100,45,79,49,"$5ShDH$clamp"],[100,63,79,61],[100,64,79,61,"clamp"],[100,69,79,61],[100,71,79,63,"y"],[100,72,79,64],[100,74,79,66],[100,75,79,67],[100,77,79,69],[100,78,79,70],[100,79,79,71],[100,84,79,76,"maxValueY"],[100,93,79,85],[100,96,79,88,"minValueY"],[100,105,79,97],[100,106,79,98],[101,8,80,12],[101,12,80,16,"newColor"],[101,20,80,24],[102,8,81,12],[102,12,81,16,"newXValue"],[102,21,81,25],[102,26,81,30,"xValue"],[102,32,81,36],[102,34,81,38],[103,10,82,16],[104,10,83,16,"newXValue"],[104,19,83,25],[104,22,83,28],[104,23,83,29],[104,24,83,30],[104,26,83,32,"$5ShDH$snapValueToStep"],[104,44,83,54],[104,45,83,54,"snapValueToStep"],[104,60,83,54],[104,62,83,56,"newXValue"],[104,71,83,65],[104,73,83,67,"minValueX"],[104,82,83,76],[104,84,83,78,"maxValueX"],[104,93,83,87],[104,95,83,89,"stepX"],[104,100,83,94],[104,101,83,95],[105,10,84,16,"newColor"],[105,18,84,24],[105,21,84,27,"color"],[105,26,84,32],[105,27,84,33,"withChannelValue"],[105,43,84,49],[105,44,84,50,"channels"],[105,52,84,58],[105,53,84,59,"xChannel"],[105,61,84,67],[105,63,84,69,"newXValue"],[105,72,84,78],[105,73,84,79],[106,8,85,12],[107,8,86,12],[107,12,86,16,"newYValue"],[107,21,86,25],[107,26,86,30,"yValue"],[107,32,86,36],[107,34,86,38],[108,10,87,16],[109,10,88,16,"newYValue"],[109,19,88,25],[109,22,88,28],[109,23,88,29],[109,24,88,30],[109,26,88,32,"$5ShDH$snapValueToStep"],[109,44,88,54],[109,45,88,54,"snapValueToStep"],[109,60,88,54],[109,62,88,56,"newYValue"],[109,71,88,65],[109,73,88,67,"minValueY"],[109,82,88,76],[109,84,88,78,"maxValueY"],[109,93,88,87],[109,95,88,89,"stepY"],[109,100,88,94],[109,101,88,95],[110,10,89,16,"newColor"],[110,18,89,24],[110,21,89,27],[110,22,89,28,"newColor"],[110,30,89,36],[110,34,89,40,"color"],[110,39,89,45],[110,41,89,47,"withChannelValue"],[110,57,89,63],[110,58,89,64,"channels"],[110,66,89,72],[110,67,89,73,"yChannel"],[110,75,89,81],[110,77,89,83,"newYValue"],[110,86,89,92],[110,87,89,93],[111,8,90,12],[112,8,91,12],[112,12,91,16,"newColor"],[112,20,91,24],[112,22,91,26,"setColor"],[112,30,91,34],[112,31,91,35,"newColor"],[112,39,91,43],[112,40,91,44],[113,6,92,8],[113,7,92,9],[114,6,93,8,"getThumbPosition"],[114,22,93,24,"getThumbPosition"],[114,23,93,24],[114,25,93,28],[115,8,94,12],[115,12,94,16,"x"],[115,13,94,17],[115,16,94,20],[115,17,94,21,"xValue"],[115,23,94,27],[115,26,94,30,"minValueX"],[115,35,94,39],[115,40,94,44,"maxValueX"],[115,49,94,53],[115,52,94,56,"minValueX"],[115,61,94,65],[115,62,94,66],[116,8,95,12],[116,12,95,16,"y"],[116,13,95,17],[116,16,95,20],[116,17,95,21],[116,20,95,24],[116,21,95,25,"yValue"],[116,27,95,31],[116,30,95,34,"minValueY"],[116,39,95,43],[116,44,95,48,"maxValueY"],[116,53,95,57],[116,56,95,60,"minValueY"],[116,65,95,69],[116,66,95,70],[117,8,96,12],[117,15,96,19],[118,10,97,16,"x"],[118,11,97,17],[118,13,97,19,"x"],[118,14,97,20],[119,10,98,16,"y"],[119,11,98,17],[119,13,98,19,"y"],[120,8,99,12],[120,9,99,13],[121,6,100,8],[121,7,100,9],[122,6,101,8,"incrementX"],[122,16,101,18,"incrementX"],[122,17,101,20,"stepSize"],[122,25,101,28],[122,28,101,31],[122,29,101,32],[122,31,101,34],[123,8,102,12,"setXValue"],[123,17,102,21],[123,18,102,22,"xValue"],[123,24,102,28],[123,27,102,31,"stepSize"],[123,35,102,39],[123,38,102,42,"maxValueX"],[123,47,102,51],[123,50,102,54,"maxValueX"],[123,59,102,63],[123,62,102,66],[123,63,102,67],[123,64,102,68],[123,66,102,70,"$5ShDH$snapValueToStep"],[123,84,102,92],[123,85,102,92,"snapValueToStep"],[123,100,102,92],[123,102,102,94,"xValue"],[123,108,102,100],[123,111,102,103,"stepSize"],[123,119,102,111],[123,121,102,113,"minValueX"],[123,130,102,122],[123,132,102,124,"maxValueX"],[123,141,102,133],[123,143,102,135,"stepX"],[123,148,102,140],[123,149,102,141],[123,150,102,142],[124,6,103,8],[124,7,103,9],[125,6,104,8,"incrementY"],[125,16,104,18,"incrementY"],[125,17,104,20,"stepSize"],[125,25,104,28],[125,28,104,31],[125,29,104,32],[125,31,104,34],[126,8,105,12,"setYValue"],[126,17,105,21],[126,18,105,22,"yValue"],[126,24,105,28],[126,27,105,31,"stepSize"],[126,35,105,39],[126,38,105,42,"maxValueY"],[126,47,105,51],[126,50,105,54,"maxValueY"],[126,59,105,63],[126,62,105,66],[126,63,105,67],[126,64,105,68],[126,66,105,70,"$5ShDH$snapValueToStep"],[126,84,105,92],[126,85,105,92,"snapValueToStep"],[126,100,105,92],[126,102,105,94,"yValue"],[126,108,105,100],[126,111,105,103,"stepSize"],[126,119,105,111],[126,121,105,113,"minValueY"],[126,130,105,122],[126,132,105,124,"maxValueY"],[126,141,105,133],[126,143,105,135,"stepY"],[126,148,105,140],[126,149,105,141],[126,150,105,142],[127,6,106,8],[127,7,106,9],[128,6,107,8,"decrementX"],[128,16,107,18,"decrementX"],[128,17,107,20,"stepSize"],[128,25,107,28],[128,28,107,31],[128,29,107,32],[128,31,107,34],[129,8,108,12,"setXValue"],[129,17,108,21],[129,18,108,22],[129,19,108,23],[129,20,108,24],[129,22,108,26,"$5ShDH$snapValueToStep"],[129,40,108,48],[129,41,108,48,"snapValueToStep"],[129,56,108,48],[129,58,108,50,"xValue"],[129,64,108,56],[129,67,108,59,"stepSize"],[129,75,108,67],[129,77,108,69,"minValueX"],[129,86,108,78],[129,88,108,80,"maxValueX"],[129,97,108,89],[129,99,108,91,"stepX"],[129,104,108,96],[129,105,108,97],[129,106,108,98],[130,6,109,8],[130,7,109,9],[131,6,110,8,"decrementY"],[131,16,110,18,"decrementY"],[131,17,110,20,"stepSize"],[131,25,110,28],[131,28,110,31],[131,29,110,32],[131,31,110,34],[132,8,111,12,"setYValue"],[132,17,111,21],[132,18,111,22],[132,19,111,23],[132,20,111,24],[132,22,111,26,"$5ShDH$snapValueToStep"],[132,40,111,48],[132,41,111,48,"snapValueToStep"],[132,56,111,48],[132,58,111,50,"yValue"],[132,64,111,56],[132,67,111,59,"stepSize"],[132,75,111,67],[132,77,111,69,"minValueY"],[132,86,111,78],[132,88,111,80,"maxValueY"],[132,97,111,89],[132,99,111,91,"stepY"],[132,104,111,96],[132,105,111,97],[132,106,111,98],[133,6,112,8],[133,7,112,9],[134,6,113,8,"setDragging"],[134,17,113,19,"setDragging"],[134,18,113,21,"isDragging"],[134,28,113,31],[134,30,113,33],[135,8,114,12],[135,12,114,16,"wasDragging"],[135,23,114,27],[135,26,114,30,"isDraggingRef"],[135,39,114,43],[135,40,114,44,"current"],[135,47,114,51],[136,8,115,12,"isDraggingRef"],[136,21,115,25],[136,22,115,26,"current"],[136,29,115,33],[136,32,115,36,"isDragging"],[136,42,115,46],[137,8,116,12],[137,12,116,16,"onChangeEnd"],[137,23,116,27],[137,27,116,31],[137,28,116,32,"isDragging"],[137,38,116,42],[137,42,116,46,"wasDragging"],[137,53,116,57],[137,55,116,59,"onChangeEnd"],[137,66,116,70],[137,67,116,71,"valueRef"],[137,75,116,79],[137,76,116,80,"current"],[137,83,116,87],[137,84,116,88],[138,8,117,12,"setDragging"],[138,19,117,23],[138,20,117,24,"isDragging"],[138,30,117,34],[138,31,117,35],[139,6,118,8],[139,7,118,9],[140,6,119,8,"isDragging"],[140,16,119,18],[140,18,119,20,"isDragging"],[140,28,119,30],[141,6,120,8,"getDisplayColor"],[141,21,120,23,"getDisplayColor"],[141,22,120,23],[141,24,120,27],[142,8,121,12],[142,15,121,19,"color"],[142,20,121,24],[142,21,121,25,"withChannelValue"],[142,37,121,41],[142,38,121,42],[142,45,121,49],[142,47,121,51],[142,48,121,52],[142,49,121,53],[143,6,122,8],[144,4,123,4],[144,5,123,5],[145,2,124,0],[146,0,124,1],[146,3]],"functionMap":{"names":["<global>","$6e14a98a7f67141d$export$6df7f0e2cabc7eef","<anonymous>","setColor","setXValue","setYValue","setValue","setColorFromPoint","getThumbPosition","incrementX","incrementY","decrementX","decrementY","setDragging","getDisplayColor"],"mappings":"AAA;ACkB;oCCQ,2ED;mBEK;KFG;uCCC;UDG;oBGa;KHI;oBIC;KJI;QKS;SLE;QMK;SNe;QOC;SPO;QQC;SRE;QSC;STE;QUC;SVE;QWC;SXE;QYC;SZK;QaE;SbE;CDE"},"hasCjsExports":false},"type":"js/module"}]}