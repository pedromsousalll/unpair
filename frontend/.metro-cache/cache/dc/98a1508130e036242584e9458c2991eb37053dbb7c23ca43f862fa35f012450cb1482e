{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":19,"index":19},"end":{"line":1,"column":35,"index":35}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var $ecn6s$react = require(_dependencyMap[0], \"react\");\n  function $parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n      get: v,\n      set: s,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  $parcel$export(module.exports, \"useControlledState\", () => $8d8fdfab47455712$export$40bfa8c7b0832715);\n  /*\n   * Copyright 2020 Adobe. All rights reserved.\n   * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License. You may obtain a copy\n   * of the License at http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n   * OF ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   */\n  function $8d8fdfab47455712$export$40bfa8c7b0832715(value, defaultValue, onChange) {\n    let [stateValue, setStateValue] = (0, $ecn6s$react.useState)(value || defaultValue);\n    let isControlledRef = (0, $ecn6s$react.useRef)(value !== undefined);\n    let isControlled = value !== undefined;\n    (0, $ecn6s$react.useEffect)(() => {\n      let wasControlled = isControlledRef.current;\n      if (wasControlled !== isControlled && process.env.NODE_ENV !== 'production') console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n      isControlledRef.current = isControlled;\n    }, [isControlled]);\n    let currentValue = isControlled ? value : stateValue;\n    let setValue = (0, $ecn6s$react.useCallback)((value, ...args) => {\n      let onChangeCaller = (value, ...onChangeArgs) => {\n        if (onChange) {\n          if (!Object.is(currentValue, value)) onChange(value, ...onChangeArgs);\n        }\n        if (!isControlled)\n          // If uncontrolled, mutate the currentValue local variable so that\n          // calling setState multiple times with the same value only emits onChange once.\n          // We do not use a ref for this because we specifically _do_ want the value to\n          // reset every render, and assigning to a ref in render breaks aborted suspended renders.\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          currentValue = value;\n      };\n      if (typeof value === 'function') {\n        if (process.env.NODE_ENV !== 'production') console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n        // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n        // when someone using useControlledState calls setControlledState(myFunc)\n        // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n        // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n        // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n        let updateFunction = (oldValue, ...functionArgs) => {\n          let interceptedValue = value(isControlled ? currentValue : oldValue, ...functionArgs);\n          onChangeCaller(interceptedValue, ...args);\n          if (!isControlled) return interceptedValue;\n          return oldValue;\n        };\n        setStateValue(updateFunction);\n      } else {\n        if (!isControlled) setStateValue(value);\n        onChangeCaller(value, ...args);\n      }\n    }, [isControlled, currentValue, onChange]);\n    return [currentValue, setValue];\n  }\n});","lineCount":67,"map":[[2,2,1,0],[2,6,1,4,"$ecn6s$react"],[2,18,1,16],[2,21,1,19,"require"],[2,28,1,26],[2,29,1,26,"_dependencyMap"],[2,43,1,26],[2,55,1,34],[2,56,1,35],[3,2,4,0],[3,11,4,9,"$parcel$export"],[3,25,4,23,"$parcel$export"],[3,26,4,24,"e"],[3,27,4,25],[3,29,4,27,"n"],[3,30,4,28],[3,32,4,30,"v"],[3,33,4,31],[3,35,4,33,"s"],[3,36,4,34],[3,38,4,36],[4,4,5,2,"Object"],[4,10,5,8],[4,11,5,9,"defineProperty"],[4,25,5,23],[4,26,5,24,"e"],[4,27,5,25],[4,29,5,27,"n"],[4,30,5,28],[4,32,5,30],[5,6,5,31,"get"],[5,9,5,34],[5,11,5,36,"v"],[5,12,5,37],[6,6,5,39,"set"],[6,9,5,42],[6,11,5,44,"s"],[6,12,5,45],[7,6,5,47,"enumerable"],[7,16,5,57],[7,18,5,59],[7,22,5,63],[8,6,5,65,"configurable"],[8,18,5,77],[8,20,5,79],[9,4,5,83],[9,5,5,84],[9,6,5,85],[10,2,6,0],[11,2,8,0,"$parcel$export"],[11,16,8,14],[11,17,8,15,"module"],[11,23,8,21],[11,24,8,22,"exports"],[11,31,8,29],[11,33,8,31],[11,53,8,51],[11,55,8,53],[11,61,8,59,"$8d8fdfab47455712$export$40bfa8c7b0832715"],[11,102,8,100],[11,103,8,101],[12,2,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,0,19,0],[23,2,20,0],[23,11,20,9,"$8d8fdfab47455712$export$40bfa8c7b0832715"],[23,52,20,50,"$8d8fdfab47455712$export$40bfa8c7b0832715"],[23,53,20,51,"value"],[23,58,20,56],[23,60,20,58,"defaultValue"],[23,72,20,70],[23,74,20,72,"onChange"],[23,82,20,80],[23,84,20,82],[24,4,21,4],[24,8,21,8],[24,9,21,9,"stateValue"],[24,19,21,19],[24,21,21,21,"setStateValue"],[24,34,21,34],[24,35,21,35],[24,38,21,38],[24,39,21,39],[24,40,21,40],[24,42,21,42,"$ecn6s$react"],[24,54,21,54],[24,55,21,55,"useState"],[24,63,21,63],[24,65,21,65,"value"],[24,70,21,70],[24,74,21,74,"defaultValue"],[24,86,21,86],[24,87,21,87],[25,4,22,4],[25,8,22,8,"isControlledRef"],[25,23,22,23],[25,26,22,26],[25,27,22,27],[25,28,22,28],[25,30,22,30,"$ecn6s$react"],[25,42,22,42],[25,43,22,43,"useRef"],[25,49,22,49],[25,51,22,51,"value"],[25,56,22,56],[25,61,22,61,"undefined"],[25,70,22,70],[25,71,22,71],[26,4,23,4],[26,8,23,8,"isControlled"],[26,20,23,20],[26,23,23,23,"value"],[26,28,23,28],[26,33,23,33,"undefined"],[26,42,23,42],[27,4,24,4],[27,5,24,5],[27,6,24,6],[27,8,24,8,"$ecn6s$react"],[27,20,24,20],[27,21,24,21,"useEffect"],[27,30,24,30],[27,32,24,32],[27,38,24,36],[28,6,25,8],[28,10,25,12,"wasControlled"],[28,23,25,25],[28,26,25,28,"isControlledRef"],[28,41,25,43],[28,42,25,44,"current"],[28,49,25,51],[29,6,26,8],[29,10,26,12,"wasControlled"],[29,23,26,25],[29,28,26,30,"isControlled"],[29,40,26,42],[29,44,26,46,"process"],[29,51,26,53],[29,52,26,54,"env"],[29,55,26,57],[29,56,26,58,"NODE_ENV"],[29,64,26,66],[29,69,26,71],[29,81,26,83],[29,83,26,85,"console"],[29,90,26,92],[29,91,26,93,"warn"],[29,95,26,97],[29,96,26,98],[29,130,26,132,"wasControlled"],[29,143,26,145],[29,146,26,148],[29,158,26,160],[29,161,26,163],[29,175,26,177],[29,182,26,184,"isControlled"],[29,194,26,196],[29,197,26,199],[29,209,26,211],[29,212,26,214],[29,226,26,228],[29,229,26,231],[29,230,26,232],[30,6,27,8,"isControlledRef"],[30,21,27,23],[30,22,27,24,"current"],[30,29,27,31],[30,32,27,34,"isControlled"],[30,44,27,46],[31,4,28,4],[31,5,28,5],[31,7,28,7],[31,8,29,8,"isControlled"],[31,20,29,20],[31,21,30,5],[31,22,30,6],[32,4,31,4],[32,8,31,8,"currentValue"],[32,20,31,20],[32,23,31,23,"isControlled"],[32,35,31,35],[32,38,31,38,"value"],[32,43,31,43],[32,46,31,46,"stateValue"],[32,56,31,56],[33,4,32,4],[33,8,32,8,"setValue"],[33,16,32,16],[33,19,32,19],[33,20,32,20],[33,21,32,21],[33,23,32,23,"$ecn6s$react"],[33,35,32,35],[33,36,32,36,"useCallback"],[33,47,32,47],[33,49,32,49],[33,50,32,50,"value"],[33,55,32,55],[33,57,32,57],[33,60,32,60,"args"],[33,64,32,64],[33,69,32,67],[34,6,33,8],[34,10,33,12,"onChangeCaller"],[34,24,33,26],[34,27,33,29,"onChangeCaller"],[34,28,33,30,"value"],[34,33,33,35],[34,35,33,37],[34,38,33,40,"onChangeArgs"],[34,50,33,52],[34,55,33,55],[35,8,34,12],[35,12,34,16,"onChange"],[35,20,34,24],[35,22,34,26],[36,10,35,16],[36,14,35,20],[36,15,35,21,"Object"],[36,21,35,27],[36,22,35,28,"is"],[36,24,35,30],[36,25,35,31,"currentValue"],[36,37,35,43],[36,39,35,45,"value"],[36,44,35,50],[36,45,35,51],[36,47,35,53,"onChange"],[36,55,35,61],[36,56,35,62,"value"],[36,61,35,67],[36,63,35,69],[36,66,35,72,"onChangeArgs"],[36,78,35,84],[36,79,35,85],[37,8,36,12],[38,8,37,12],[38,12,37,16],[38,13,37,17,"isControlled"],[38,25,37,29],[39,10,37,31],[40,10,38,12],[41,10,39,12],[42,10,40,12],[43,10,41,12],[44,10,42,12,"currentValue"],[44,22,42,24],[44,25,42,27,"value"],[44,30,42,32],[45,6,43,8],[45,7,43,9],[46,6,44,8],[46,10,44,12],[46,17,44,19,"value"],[46,22,44,24],[46,27,44,29],[46,37,44,39],[46,39,44,41],[47,8,45,12],[47,12,45,16,"process"],[47,19,45,23],[47,20,45,24,"env"],[47,23,45,27],[47,24,45,28,"NODE_ENV"],[47,32,45,36],[47,37,45,41],[47,49,45,53],[47,51,45,55,"console"],[47,58,45,62],[47,59,45,63,"warn"],[47,63,45,67],[47,64,45,68],[47,187,45,191],[47,188,45,192],[48,8,46,12],[49,8,47,12],[50,8,48,12],[51,8,49,12],[52,8,50,12],[53,8,51,12],[53,12,51,16,"updateFunction"],[53,26,51,30],[53,29,51,33,"updateFunction"],[53,30,51,34,"oldValue"],[53,38,51,42],[53,40,51,44],[53,43,51,47,"functionArgs"],[53,55,51,59],[53,60,51,62],[54,10,52,16],[54,14,52,20,"interceptedValue"],[54,30,52,36],[54,33,52,39,"value"],[54,38,52,44],[54,39,52,45,"isControlled"],[54,51,52,57],[54,54,52,60,"currentValue"],[54,66,52,72],[54,69,52,75,"oldValue"],[54,77,52,83],[54,79,52,85],[54,82,52,88,"functionArgs"],[54,94,52,100],[54,95,52,101],[55,10,53,16,"onChangeCaller"],[55,24,53,30],[55,25,53,31,"interceptedValue"],[55,41,53,47],[55,43,53,49],[55,46,53,52,"args"],[55,50,53,56],[55,51,53,57],[56,10,54,16],[56,14,54,20],[56,15,54,21,"isControlled"],[56,27,54,33],[56,29,54,35],[56,36,54,42,"interceptedValue"],[56,52,54,58],[57,10,55,16],[57,17,55,23,"oldValue"],[57,25,55,31],[58,8,56,12],[58,9,56,13],[59,8,57,12,"setStateValue"],[59,21,57,25],[59,22,57,26,"updateFunction"],[59,36,57,40],[59,37,57,41],[60,6,58,8],[60,7,58,9],[60,13,58,15],[61,8,59,12],[61,12,59,16],[61,13,59,17,"isControlled"],[61,25,59,29],[61,27,59,31,"setStateValue"],[61,40,59,44],[61,41,59,45,"value"],[61,46,59,50],[61,47,59,51],[62,8,60,12,"onChangeCaller"],[62,22,60,26],[62,23,60,27,"value"],[62,28,60,32],[62,30,60,34],[62,33,60,37,"args"],[62,37,60,41],[62,38,60,42],[63,6,61,8],[64,4,62,4],[64,5,62,5],[64,7,62,7],[64,8,63,8,"isControlled"],[64,20,63,20],[64,22,64,8,"currentValue"],[64,34,64,20],[64,36,65,8,"onChange"],[64,44,65,16],[64,45,66,5],[64,46,66,6],[65,4,67,4],[65,11,67,11],[65,12,68,8,"currentValue"],[65,24,68,20],[65,26,69,8,"setValue"],[65,34,69,16],[65,35,70,5],[66,2,71,0],[67,0,71,1],[67,3]],"functionMap":{"names":["<global>","$parcel$export","$parcel$export$argument_2","$8d8fdfab47455712$export$40bfa8c7b0832715","<anonymous>","onChangeCaller","updateFunction"],"mappings":"AAA;ACG;CDE;qDEE,+CF;AGY;gCCI;KDI;iDCI;6BCC;SDU;iCEQ;aFK;KDM;CHS"},"hasCjsExports":false},"type":"js/module"}]}