import React, { useState, useEffect } from 'react';\nimport { ScrollView, StyleSheet, Alert, Linking } from 'react-native';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Heading,\n  Text,\n  Image,\n  Avatar,\n  AvatarFallbackText,\n  Button,\n  ButtonText,\n  Spinner,\n  Badge,\n  BadgeText,\n} from '@gluestack-ui/themed';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '../../config/firebase';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useTheme } from '../../contexts/ThemeContext';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useLocalSearchParams, useRouter } from 'expo-router';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface Sneaker {\n  id: string;\n  userId: string;\n  userName?: string;\n  userEmail?: string;\n  foot: 'left' | 'right';\n  model: string;\n  brand: string;\n  size: string;\n  condition: string;\n  imageUrl: string;\n  createdAt: any;\n}\n\nexport default function ProductDetailScreen() {\n  const { id } = useLocalSearchParams();\n  const [sneaker, setSneaker] = useState<Sneaker | null>(null);\n  const [loading, setLoading] = useState(true);\n  const { user } = useAuth();\n  const { colors } = useTheme();\n  const router = useRouter();\n\n  useEffect(() => {\n    loadSneaker();\n  }, [id]);\n\n  const loadSneaker = async () => {\n    try {\n      const sneakerDoc = await getDoc(doc(db, 'sneakers', id as string));\n      if (sneakerDoc.exists()) {\n        const data = sneakerDoc.data();\n        \n        let userName = 'Unknown';\n        let userEmail = '';\n        try {\n          const userDoc = await getDoc(doc(db, 'users', data.userId));\n          if (userDoc.exists()) {\n            userEmail = userDoc.data().email;\n            userName = userEmail?.split('@')[0] || 'Unknown';\n          }\n        } catch (err) {\n          console.log('Error fetching user:', err);\n        }\n\n        setSneaker({\n          id: sneakerDoc.id,\n          ...data,\n          userName,\n          userEmail,\n        } as Sneaker);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading sneaker:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleContact = () => {\n    if (!sneaker?.userEmail) {\n      Alert.alert('Oops!', 'Cannot contact seller');\n      return;\n    }\n\n    Alert.alert(\n      'Hit up the seller! \ud83d\udcac',\n      `Slide into ${sneaker.userName}'s DMs?`,\n      [\n        { text: 'Nah', style: 'cancel' },\n        {\n          text: 'Yeah!',\n          onPress: () => {\n            const subject = `UNPAIR: Interested in your ${sneaker.brand} ${sneaker.model}`;\n            const body = `Hey! I'm interested in your ${sneaker.foot} foot ${sneaker.brand} ${sneaker.model} (Size ${sneaker.size}).\\n\\nLet's talk!`;\n            Linking.openURL(`mailto:${sneaker.userEmail}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`);\n          },\n        },\n      ]\n    );\n  };\n\n  if (loading) {\n    return (\n      <Box flex={1} justifyContent=\"center\" alignItems=\"center\" backgroundColor={colors.background}>\n        <Spinner size=\"large\" color={colors.primary} />\n      </Box>\n    );\n  }\n\n  if (!sneaker) {\n    return (\n      <SafeAreaView style={[styles.container, { backgroundColor: colors.background }]} edges={['top']}>\n        <Box flex={1} justifyContent=\"center\" alignItems=\"center\" padding=\"$4\">\n          <Text fontSize=\"$xl\" marginBottom=\"$2\">\ud83d\ude15</Text>\n          <Text size=\"lg\" color={colors.textSecondary}>Sneaker not found</Text>\n          <Button marginTop=\"$4\" onPress={() => router.back()}>\n            <ButtonText>Go Back</ButtonText>\n          </Button>\n        </Box>\n      </SafeAreaView>\n    );\n  }\n\n  const isOwnListing = user?.uid === sneaker.userId;\n\n  return (\n    <SafeAreaView style={[styles.container, { backgroundColor: colors.background }]} edges={['top']}>\n      <ScrollView>\n        <Box position=\"relative\">\n          <Image\n            source={{ uri: sneaker.imageUrl }}\n            alt={sneaker.model}\n            width=\"100%\"\n            height={400}\n          />\n          <HStack\n            position=\"absolute\"\n            top={16}\n            left={16}\n            right={16}\n            justifyContent=\"space-between\"\n          >\n            <Button\n              size=\"sm\"\n              onPress={() => router.back()}\n              backgroundColor=\"rgba(0,0,0,0.5)\"\n              borderRadius=\"$full\"\n            >\n              <Ionicons name=\"arrow-back\" size={20} color=\"#FFFFFF\" />\n            </Button>\n          </HStack>\n        </Box>\n\n        <Box padding=\"$4\">\n          <VStack space=\"md\">\n            <HStack justifyContent=\"space-between\" alignItems=\"flex-start\">\n              <VStack flex={1} space=\"xs\">\n                <Heading size=\"2xl\" color={colors.text}>\n                  {sneaker.model}\n                </Heading>\n                <Text size=\"lg\" color={colors.textSecondary}>\n                  {sneaker.brand}\n                </Text>\n              </VStack>\n              <Badge\n                size=\"lg\"\n                variant=\"solid\"\n                backgroundColor={sneaker.foot === 'left' ? colors.primary : colors.secondary}\n                borderRadius=\"$lg\"\n              >\n                <BadgeText>\n                  {sneaker.foot === 'left' ? '\ud83d\udc48 LEFT' : '\ud83d\udc49 RIGHT'}\n                </BadgeText>\n              </Badge>\n            </HStack>\n\n            <HStack space=\"lg\" flexWrap=\"wrap\">\n              <VStack space=\"xs\">\n                <Text size=\"sm\" color={colors.textSecondary}>\n                  Size\n                </Text>\n                <Text fontSize=\"$xl\" fontWeight=\"$bold\" color={colors.text}>\n                  {sneaker.size}\n                </Text>\n              </VStack>\n              <VStack space=\"xs\">\n                <Text size=\"sm\" color={colors.textSecondary}>\n                  Condition\n                </Text>\n                <Text fontSize=\"$lg\" fontWeight=\"$semibold\" color={colors.text}>\n                  {sneaker.condition}\n                </Text>\n              </VStack>\n            </HStack>\n\n            <Box\n              padding=\"$4\"\n              backgroundColor={colors.surface}\n              borderRadius=\"$lg\"\n              marginTop=\"$4\"\n            >\n              <HStack space=\"md\" alignItems=\"center\">\n                <Avatar size=\"md\">\n                  <AvatarFallbackText>{sneaker.userName || 'U'}</AvatarFallbackText>\n                </Avatar>\n                <VStack flex={1}>\n                  <Text fontWeight=\"$bold\" color={colors.text}>\n                    {sneaker.userName}\n                  </Text>\n                  <Text size=\"sm\" color={colors.textSecondary}>\n                    Seller\n                  </Text>\n                </VStack>\n                {!isOwnListing && (\n                  <Button size=\"sm\" onPress={handleContact}>\n                    <Ionicons name=\"chatbubble\" size={16} color=\"#FFFFFF\" />\n                    <ButtonText marginLeft=\"$2\">Chat</ButtonText>\n                  </Button>\n                )}\n              </HStack>\n            </Box>\n\n            {isOwnListing && (\n              <Box\n                padding=\"$3\"\n                backgroundColor={colors.surface}\n                borderRadius=\"$lg\"\n                marginTop=\"$2\"\n              >\n                <Text size=\"sm\" color={colors.textSecondary} textAlign=\"center\">\n                  This is your listing \ud83d\ude0e\n                </Text>\n              </Box>\n            )}\n\n            {!isOwnListing && (\n              <Button\n                size=\"lg\"\n                marginTop=\"$4\"\n                onPress={handleContact}\n              >\n                <ButtonText>Message Seller \ud83d\udcac</ButtonText>\n              </Button>\n            )}\n          </VStack>\n        </Box>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});